id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:196,Modifiability,variab,variables,196,"////////////////////////////////////////////////////////////////////////////////; /// A faster version of RooDataHist::weight that assumes the passed arguments; /// are aligned with the histogram variables.; /// \param[in] bin Coordinates for which the weight should be calculated.; /// Has to be aligned with the internal histogram variables.; /// \param[in] intOrder Interpolation order, i.e. how many neighbouring bins are; /// used for the interpolation. If zero, the bare weight for; /// the bin enclosing the coordinatesis returned.; /// \param[in] correctForBinSize Enable the inverse bin volume correction factor.; /// \param[in] cdfBoundaries Enable the special boundary condition for a cdf:; /// underflow bins are assumed to have weight zero and; /// overflow bins have weight one. Otherwise, the; /// histogram is mirrored at the boundaries for the; /// interpolation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:333,Modifiability,variab,variables,333,"////////////////////////////////////////////////////////////////////////////////; /// A faster version of RooDataHist::weight that assumes the passed arguments; /// are aligned with the histogram variables.; /// \param[in] bin Coordinates for which the weight should be calculated.; /// Has to be aligned with the internal histogram variables.; /// \param[in] intOrder Interpolation order, i.e. how many neighbouring bins are; /// used for the interpolation. If zero, the bare weight for; /// the bin enclosing the coordinatesis returned.; /// \param[in] correctForBinSize Enable the inverse bin volume correction factor.; /// \param[in] cdfBoundaries Enable the special boundary condition for a cdf:; /// underflow bins are assumed to have weight zero and; /// overflow bins have weight one. Otherwise, the; /// histogram is mirrored at the boundaries for the; /// interpolation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:271,Modifiability,variab,variables,271,"////////////////////////////////////////////////////////////////////////////////; /// Return the weight at given coordinates with interpolation.; /// \param[in] bin Coordinates for which the weight should be calculated.; /// Has to be aligned with the internal histogram variables.; /// \param[in] intOrder Interpolation order, i.e. how many neighbouring bins are; /// used for the interpolation.; /// \param[in] correctForBinSize Enable the inverse bin volume correction factor.; /// \param[in] cdfBoundaries Enable the special boundary condition for a cdf:; /// underflow bins are assumed to have weight zero and; /// overflow bins have weight one. Otherwise, the; /// histogram is mirrored at the boundaries for the; /// interpolation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:32,Safety,avoid,avoid,32,"// Use a class-member buffer to avoid repeated heap allocations.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:108,Availability,error,errors,108,"////////////////////////////////////////////////////////////////////////////////; /// Return the asymmetric errors on the current weight.; /// \see weightError(ErrorType) const for symmetric error.; /// \param[out] lo Low error.; /// \param[out] hi High error.; /// \param[in] etype Type of error to compute. May throw if not supported.; /// Supported errors are; /// - `Poisson` Default. Asymmetric Poisson errors (68% CL).; /// - `SumW2` The square root of the sum of weights. (Symmetric).; /// - `None` Return zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:160,Availability,Error,ErrorType,160,"////////////////////////////////////////////////////////////////////////////////; /// Return the asymmetric errors on the current weight.; /// \see weightError(ErrorType) const for symmetric error.; /// \param[out] lo Low error.; /// \param[out] hi High error.; /// \param[in] etype Type of error to compute. May throw if not supported.; /// Supported errors are; /// - `Poisson` Default. Asymmetric Poisson errors (68% CL).; /// - `SumW2` The square root of the sum of weights. (Symmetric).; /// - `None` Return zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:191,Availability,error,error,191,"////////////////////////////////////////////////////////////////////////////////; /// Return the asymmetric errors on the current weight.; /// \see weightError(ErrorType) const for symmetric error.; /// \param[out] lo Low error.; /// \param[out] hi High error.; /// \param[in] etype Type of error to compute. May throw if not supported.; /// Supported errors are; /// - `Poisson` Default. Asymmetric Poisson errors (68% CL).; /// - `SumW2` The square root of the sum of weights. (Symmetric).; /// - `None` Return zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:222,Availability,error,error,222,"////////////////////////////////////////////////////////////////////////////////; /// Return the asymmetric errors on the current weight.; /// \see weightError(ErrorType) const for symmetric error.; /// \param[out] lo Low error.; /// \param[out] hi High error.; /// \param[in] etype Type of error to compute. May throw if not supported.; /// Supported errors are; /// - `Poisson` Default. Asymmetric Poisson errors (68% CL).; /// - `SumW2` The square root of the sum of weights. (Symmetric).; /// - `None` Return zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:254,Availability,error,error,254,"////////////////////////////////////////////////////////////////////////////////; /// Return the asymmetric errors on the current weight.; /// \see weightError(ErrorType) const for symmetric error.; /// \param[out] lo Low error.; /// \param[out] hi High error.; /// \param[in] etype Type of error to compute. May throw if not supported.; /// Supported errors are; /// - `Poisson` Default. Asymmetric Poisson errors (68% CL).; /// - `SumW2` The square root of the sum of weights. (Symmetric).; /// - `None` Return zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:291,Availability,error,error,291,"////////////////////////////////////////////////////////////////////////////////; /// Return the asymmetric errors on the current weight.; /// \see weightError(ErrorType) const for symmetric error.; /// \param[out] lo Low error.; /// \param[out] hi High error.; /// \param[in] etype Type of error to compute. May throw if not supported.; /// Supported errors are; /// - `Poisson` Default. Asymmetric Poisson errors (68% CL).; /// - `SumW2` The square root of the sum of weights. (Symmetric).; /// - `None` Return zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:352,Availability,error,errors,352,"////////////////////////////////////////////////////////////////////////////////; /// Return the asymmetric errors on the current weight.; /// \see weightError(ErrorType) const for symmetric error.; /// \param[out] lo Low error.; /// \param[out] hi High error.; /// \param[in] etype Type of error to compute. May throw if not supported.; /// Supported errors are; /// - `Poisson` Default. Asymmetric Poisson errors (68% CL).; /// - `SumW2` The square root of the sum of weights. (Symmetric).; /// - `None` Return zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:408,Availability,error,errors,408,"////////////////////////////////////////////////////////////////////////////////; /// Return the asymmetric errors on the current weight.; /// \see weightError(ErrorType) const for symmetric error.; /// \param[out] lo Low error.; /// \param[out] hi High error.; /// \param[in] etype Type of error to compute. May throw if not supported.; /// Supported errors are; /// - `Poisson` Default. Asymmetric Poisson errors (68% CL).; /// - `SumW2` The square root of the sum of weights. (Symmetric).; /// - `None` Return zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:30,Availability,error,errors,30,"// We didn't track asymmetric errors so far, so now we need to allocate",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:63,Energy Efficiency,allocate,allocate,63,"// We didn't track asymmetric errors so far, so now we need to allocate",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:21,Availability,error,errors,21,"// Calculate poisson errors",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:18,Modifiability,variab,variable,18,"// wve adjust for variable bin sizes; ////////////////////////////////////////////////////////////////////////////////; /// Perform boundary safe 'intOrder'-th interpolation of weights in dimension 'dim'; /// at current value 'xval'; /// \param[in] iDim Index of the histogram dimension along which to interpolate.; /// \param[in] xval Value of histogram variable at dimension `iDim` for which; /// we want to interpolate the histogram weight.; /// \param[in] centralIdx Index of the bin that the point at which we; /// interpolate the histogram weight falls into; /// (can be obtained with `RooDataHist::calcTreeIndex`).; /// \param[in] intOrder Interpolation order, i.e. how many neighbouring bins are; /// used for the interpolation.; /// \param[in] correctForBinSize Enable the inverse bin volume correction factor.; /// \param[in] cdfBoundaries Enable the special boundary condition for a cdf:; /// underflow bins are assumed to have weight zero and; /// overflow bins have weight one. Otherwise, the; /// histogram is mirrored at the boundaries for the; /// interpolation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:355,Modifiability,variab,variable,355,"// wve adjust for variable bin sizes; ////////////////////////////////////////////////////////////////////////////////; /// Perform boundary safe 'intOrder'-th interpolation of weights in dimension 'dim'; /// at current value 'xval'; /// \param[in] iDim Index of the histogram dimension along which to interpolate.; /// \param[in] xval Value of histogram variable at dimension `iDim` for which; /// we want to interpolate the histogram weight.; /// \param[in] centralIdx Index of the bin that the point at which we; /// interpolate the histogram weight falls into; /// (can be obtained with `RooDataHist::calcTreeIndex`).; /// \param[in] intOrder Interpolation order, i.e. how many neighbouring bins are; /// used for the interpolation.; /// \param[in] correctForBinSize Enable the inverse bin volume correction factor.; /// \param[in] cdfBoundaries Enable the special boundary condition for a cdf:; /// underflow bins are assumed to have weight zero and; /// overflow bins have weight one. Otherwise, the; /// histogram is mirrored at the boundaries for the; /// interpolation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:124,Performance,Perform,Perform,124,"// wve adjust for variable bin sizes; ////////////////////////////////////////////////////////////////////////////////; /// Perform boundary safe 'intOrder'-th interpolation of weights in dimension 'dim'; /// at current value 'xval'; /// \param[in] iDim Index of the histogram dimension along which to interpolate.; /// \param[in] xval Value of histogram variable at dimension `iDim` for which; /// we want to interpolate the histogram weight.; /// \param[in] centralIdx Index of the bin that the point at which we; /// interpolate the histogram weight falls into; /// (can be obtained with `RooDataHist::calcTreeIndex`).; /// \param[in] intOrder Interpolation order, i.e. how many neighbouring bins are; /// used for the interpolation.; /// \param[in] correctForBinSize Enable the inverse bin volume correction factor.; /// \param[in] cdfBoundaries Enable the special boundary condition for a cdf:; /// underflow bins are assumed to have weight zero and; /// overflow bins have weight one. Otherwise, the; /// histogram is mirrored at the boundaries for the; /// interpolation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:141,Safety,safe,safe,141,"// wve adjust for variable bin sizes; ////////////////////////////////////////////////////////////////////////////////; /// Perform boundary safe 'intOrder'-th interpolation of weights in dimension 'dim'; /// at current value 'xval'; /// \param[in] iDim Index of the histogram dimension along which to interpolate.; /// \param[in] xval Value of histogram variable at dimension `iDim` for which; /// we want to interpolate the histogram weight.; /// \param[in] centralIdx Index of the bin that the point at which we; /// interpolate the histogram weight falls into; /// (can be obtained with `RooDataHist::calcTreeIndex`).; /// \param[in] intOrder Interpolation order, i.e. how many neighbouring bins are; /// used for the interpolation.; /// \param[in] correctForBinSize Enable the inverse bin volume correction factor.; /// \param[in] cdfBoundaries Enable the special boundary condition for a cdf:; /// underflow bins are assumed to have weight zero and; /// overflow bins have weight one. Otherwise, the; /// histogram is mirrored at the boundaries for the; /// interpolation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:32,Safety,avoid,avoid,32,"// Use a class-member buffer to avoid repeated heap allocations.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:428,Energy Efficiency,allocate,allocated,428,"////////////////////////////////////////////////////////////////////////////////; /// Increment the bin content of the bin enclosing the given coordinates.; ///; /// \param[in] row Coordinates of the bin.; /// \param[in] wgt Increment by this weight.; /// \param[in] sumw2 Optionally, track the sum of squared weights. If a value > 0 or; /// a weight != 1. is passed for the first time, a vector for the squared weights will be allocated.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:225,Availability,error,error,225,"////////////////////////////////////////////////////////////////////////////////; /// Set a bin content.; /// \param[in] row Coordinates of the bin to be set.; /// \param[in] wgt New bin content.; /// \param[in] wgtErrLo Low error of the bin content.; /// \param[in] wgtErrHi High error of the bin content.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:281,Availability,error,error,281,"////////////////////////////////////////////////////////////////////////////////; /// Set a bin content.; /// \param[in] row Coordinates of the bin to be set.; /// \param[in] wgt New bin content.; /// \param[in] wgtErrLo Low error of the bin content.; /// \param[in] wgtErrHi High error of the bin content.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:306,Availability,Error,Error,306,"////////////////////////////////////////////////////////////////////////////////; /// Set bin content of bin that was last loaded with get(std::size_t).; /// \param[in] binNumber Optional bin number to set. If empty, currently active bin is set.; /// \param[in] wgt New bin content.; /// \param[in] wgtErr Error of the new bin content. If the weight need not have an error, use 0. or a negative number.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:367,Availability,error,error,367,"////////////////////////////////////////////////////////////////////////////////; /// Set bin content of bin that was last loaded with get(std::size_t).; /// \param[in] binNumber Optional bin number to set. If empty, currently active bin is set.; /// \param[in] wgt New bin content.; /// \param[in] wgtErr Error of the new bin content. If the weight need not have an error, use 0. or a negative number.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:123,Performance,load,loaded,123,"////////////////////////////////////////////////////////////////////////////////; /// Set bin content of bin that was last loaded with get(std::size_t).; /// \param[in] binNumber Optional bin number to set. If empty, currently active bin is set.; /// \param[in] wgt New bin content.; /// \param[in] wgtErr Error of the new bin content. If the weight need not have an error, use 0. or a negative number.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:222,Availability,error,error,222,"////////////////////////////////////////////////////////////////////////////////; /// Set bin content of bin that was last loaded with get(std::size_t).; /// \param[in] wgt New bin content.; /// \param[in] wgtErr Optional error of the bin content.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:123,Performance,load,loaded,123,"////////////////////////////////////////////////////////////////////////////////; /// Set bin content of bin that was last loaded with get(std::size_t).; /// \param[in] wgt New bin content.; /// \param[in] wgtErr Optional error of the bin content.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:231,Availability,error,error,231,"////////////////////////////////////////////////////////////////////////////////; /// Set a bin content.; /// \param[in] row Coordinates to compute the bin from.; /// \param[in] wgt New bin content.; /// \param[in] wgtErr Optional error of the bin content.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:261,Modifiability,variab,variable,261,"////////////////////////////////////////////////////////////////////////////////; /// Add all data points contained in 'dset' to this data set with given weight.; /// Optional cut string expression selects the data points to be added and can; /// reference any variable contained in this data set",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:23,Performance,cache,cached,23,"// Check if result was cached",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:19,Performance,cache,cache,19,"// Store result in cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:13,Availability,mask,mask,13,"// Calculate mask and reference plot bins for non-iterating variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:60,Modifiability,variab,variables,60,"// Calculate mask and reference plot bins for non-iterating variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:39,Availability,mask,masked,39,"// Loop over entire data set, skipping masked entries",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:13,Availability,mask,mask,13,"// Calculate mask and reference plot bins for non-iterating variables,; // and get ranges for iterating variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:60,Modifiability,variab,variables,60,"// Calculate mask and reference plot bins for non-iterating variables,; // and get ranges for iterating variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:104,Modifiability,variab,variables,104,"// Calculate mask and reference plot bins for non-iterating variables,; // and get ranges for iterating variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:39,Availability,mask,masked,39,"// Loop over entire data set, skipping masked entries",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:18,Modifiability,variab,variable,18,"// If the current variable is not in the sumSet, it should not be considered for the bin volume",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:105,Performance,cache,cache,105,"////////////////////////////////////////////////////////////////////////////////; /// Fill the transient cache with partial bin volumes with up-to-date; /// values for the partial volume specified by observables 'dimSet'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:147,Security,hash,hash,147,"// The code bitset has all bits set to one whose position corresponds to arguments in dimSet.; // It is used as the key for the bin volume caching hash map.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:34,Performance,cache,cache,34,"// Recalculate partial bin volume cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load bin `binNumber`, and return an argset with the coordinates of the bin centre.; /// \note The argset is owned by this data hist, and this function has a side effect, because; /// it alters the currently active bin.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:3,Deployability,Update,Update,3,"// Update to current position",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:234,Deployability,install,installed,234,"// Legacy dataset conversion happens here. Legacy RooDataHist inherits from RooTreeData; // which in turn inherits from RooAbsData. Manually stream RooTreeData contents on; // file here and convert it into a RooTreeDataStore which is installed in the; // new-style RooAbsData base class; // --- This is the contents of the streamer code of RooTreeData version 2 ---",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:62,Modifiability,inherit,inherits,62,"// Legacy dataset conversion happens here. Legacy RooDataHist inherits from RooTreeData; // which in turn inherits from RooAbsData. Manually stream RooTreeData contents on; // file here and convert it into a RooTreeDataStore which is installed in the; // new-style RooAbsData base class; // --- This is the contents of the streamer code of RooTreeData version 2 ---",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:106,Modifiability,inherit,inherits,106,"// Legacy dataset conversion happens here. Legacy RooDataHist inherits from RooTreeData; // which in turn inherits from RooAbsData. Manually stream RooTreeData contents on; // file here and convert it into a RooTreeDataStore which is installed in the; // new-style RooAbsData base class; // --- This is the contents of the streamer code of RooTreeData version 2 ---",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:158,Performance,cache,cacheValidEntries,158,"////////////////////////////////////////////////////////////////////////////////; /// Return event weights of all events in range [first, first+len).; /// If cacheValidEntries() has been called, out-of-range events will have a weight of 0.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:143,Modifiability,variab,variable,143,"////////////////////////////////////////////////////////////////////////////////; /// Return reference to VarInfo struct with cached histogram variable; /// information that is frequently used for histogram weights retrieval.; ///; /// If the `_varInfo` struct was not initialized yet, it will be initialized in; /// this function.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:126,Performance,cache,cached,126,"////////////////////////////////////////////////////////////////////////////////; /// Return reference to VarInfo struct with cached histogram variable; /// information that is frequently used for histogram weights retrieval.; ///; /// If the `_varInfo` struct was not initialized yet, it will be initialized in; /// this function.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:19,Modifiability,variab,variables,19,"// assert that the variables are either real values or categories",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:3,Testability,assert,assert,3,"// assert that the variables are either real values or categories",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataProjBinding.cxx:778,Energy Efficiency,adapt,adaptor,778,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooDataProjBinding.cxx; \class RooDataProjBinding; \ingroup Roofitcore. adaptor that projects a real function via summation of states; provided in a dataset. The real function must be attached to the; dataset before creating this binding object. If the dataset only contains category variables, the summation is optimized; performing a weighted sum over the states of a RooSuperCategory that is; constructed from all the categories in the dataset. **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataProjBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataProjBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataProjBinding.cxx:778,Modifiability,adapt,adaptor,778,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooDataProjBinding.cxx; \class RooDataProjBinding; \ingroup Roofitcore. adaptor that projects a real function via summation of states; provided in a dataset. The real function must be attached to the; dataset before creating this binding object. If the dataset only contains category variables, the summation is optimized; performing a weighted sum over the states of a RooSuperCategory that is; constructed from all the categories in the dataset. **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataProjBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataProjBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataProjBinding.cxx:990,Modifiability,variab,variables,990,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooDataProjBinding.cxx; \class RooDataProjBinding; \ingroup Roofitcore. adaptor that projects a real function via summation of states; provided in a dataset. The real function must be attached to the; dataset before creating this binding object. If the dataset only contains category variables, the summation is optimized; performing a weighted sum over the states of a RooSuperCategory that is; constructed from all the categories in the dataset. **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataProjBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataProjBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataProjBinding.cxx:1018,Performance,optimiz,optimized,1018,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooDataProjBinding.cxx; \class RooDataProjBinding; \ingroup Roofitcore. adaptor that projects a real function via summation of states; provided in a dataset. The real function must be attached to the; dataset before creating this binding object. If the dataset only contains category variables, the summation is optimized; performing a weighted sum over the states of a RooSuperCategory that is; constructed from all the categories in the dataset. **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataProjBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataProjBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataProjBinding.cxx:1029,Performance,perform,performing,1029,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooDataProjBinding.cxx; \class RooDataProjBinding; \ingroup Roofitcore. adaptor that projects a real function via summation of states; provided in a dataset. The real function must be attached to the; dataset before creating this binding object. If the dataset only contains category variables, the summation is optimized; performing a weighted sum over the states of a RooSuperCategory that is; constructed from all the categories in the dataset. **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataProjBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataProjBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataProjBinding.cxx:152,Modifiability,variab,variables,152,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of a data weighted average function binding with; /// variables 'vars' for function 'real' and dataset 'data' with; /// weights.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataProjBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataProjBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:1971,Energy Efficiency,reduce,reduces,1971,"Set saves every event, it allows for fits with highest precision. With a large; amount of data, however, it could be beneficial to represent them in binned form,; i.e., RooDataHist. Binning the data will incur a loss of information, though.; RooDataHist on the other hand may suffer from the curse of dimensionality if a high-dimensional; problem with a lot of bins on each axis is tackled. ### Inspecting a dataset; Inspect a dataset using Print() with the ""verbose"" option:; ```; dataset->Print(""V"");; dataset->get(0)->Print(""V"");; dataset->get(1)->Print(""V"");; ...; ```. ### Plotting data.; See RooAbsData::plotOn(). ### Storage strategy; There are two storage backends:; - RooVectorDataStore (default): std::vectors in memory. They are fast, but they; cannot be serialised if the dataset exceeds a size of 1 Gb; - RooTreeDataStore: Uses a TTree, which can be file backed if a file is opened; before creating the dataset. This significantly reduces the memory pressure, as the; baskets of the tree can be written to a file, and only the basket that's currently; being read stays in RAM.; - Enable tree-backed storage similar to this:; ```; TFile outputFile(""filename.root"", ""RECREATE"");; RooAbsData::setDefaultStorageType(RooAbsData::Tree);; RooDataSet mydata(...);; ```; - Or convert an existing memory-backed data storage:; ```; RooDataSet mydata(...);. TFile outputFile(""filename.root"", ""RECREATE"");; mydata.convertToTreeStore();; ```. For the inverse conversion, see `RooAbsData::convertToVectorStore()`. ### Creating a dataset using RDataFrame; \see RooAbsDataHelper, rf408_RDataFrameToRooFit.C. ### Uniquely identifying RooDataSet objects. \warning Before v6.28, it was ensured that no RooDataSet objects on the heap; were located at an address that had already been used for a RooDataSet before.; With v6.28, this is not guaranteed anymore. Hence, if your code uses pointer; comparisons to uniquely identify RooDataSet instances, please consider using; the new `RooAbsData::uniqueId()`. **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:106,Availability,error,errors,106,"// Gather all imported weighted datasets to infer the weight variable name; // and whether we need weight errors",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:61,Modifiability,variab,variable,61,"// Gather all imported weighted datasets to infer the weight variable name; // and whether we need weight errors",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:43,Availability,error,errors,43,"// Figure out if the weight needs to store errors",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:21,Modifiability,variab,variable,21,"// Even if no weight variable is specified, we want to have one if we are; // importing weighted datasets",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:65,Modifiability,variab,variable,65,"// If the imported data is a RooDataSet, we take over its weight variable name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:29,Modifiability,variab,variable,29,"// to get the default weight variable name; // Don't break here! The next imported data might be a RooDataSet,; // and in that case we want to take over its weight name instead of; // using the default one.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:17,Modifiability,variab,variable,17,"// If the weight variable is required but is not in the set, create and add; // it on the fly",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:15,Availability,error,error,15,"// Combine the error set figured out by finalizeVars and the ones passed by the user",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:22,Modifiability,variab,variable,22,"// Instantiate weight variable here such that we can pass it to StoreError()",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:35,Availability,error,errors,35,"// We have to explicitly store the errors that are implied by the sum of weights squared.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:2560,Availability,error,error,2560,"ce of the imported histogram.; /// <tr><td> Import(const char*, RooAbsData&); /// <td> Import a RooDataSet or RooDataHist to be associated with the given state name of the index category; /// specified in Index(). If the given state name is not yet defined in the index; /// category it will be added on the fly. The import command can be specified multiple times.; /// <tr><td> Link(const char*, RooDataSet&) <td> Link contents of supplied RooDataSet to this dataset for given index category state name.; /// In this mode, no data is copied and the linked dataset must be remain live for the duration; /// of this dataset. Note that link is active for both reading and writing, so modifications; /// to the aggregate dataset will also modify its components. Link() and Import() are mutually exclusive.; /// <tr><td> OwnLinked() <td> Take ownership of all linked datasets; /// <tr><td> Import(std::map<string,RooAbsData*>&) <td> As above, but allows specification of many imports in a single operation; /// <tr><td> Link(std::map<string,RooDataSet*>&) <td> As above, but allows specification of many links in a single operation; /// <tr><td> Cut(const char*) <br>; /// Cut(RooFormulaVar&); /// <td> Apply the given cut specification when importing data; /// <tr><td> CutRange(const char*) <td> Only accept events in the observable range with the given name; /// <tr><td> WeightVar(const char*) <br>; /// WeightVar(const RooAbsArg&); /// <td> Interpret the given variable as event weight rather than as observable; /// <tr><td> StoreError(const RooArgSet&) <td> Store symmetric error along with value for given subset of observables; /// <tr><td> StoreAsymError(const RooArgSet&) <td> Store asymmetric error along with value for given subset of observables; /// <tr><td> `GlobalObservables(const RooArgSet&)` <td> Define the set of global observables to be stored in this RooDataSet.; /// A snapshot of the passed RooArgSet is stored, meaning the values wont't change unexpectedly.; /// </table>; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:2684,Availability,error,error,2684,"ce of the imported histogram.; /// <tr><td> Import(const char*, RooAbsData&); /// <td> Import a RooDataSet or RooDataHist to be associated with the given state name of the index category; /// specified in Index(). If the given state name is not yet defined in the index; /// category it will be added on the fly. The import command can be specified multiple times.; /// <tr><td> Link(const char*, RooDataSet&) <td> Link contents of supplied RooDataSet to this dataset for given index category state name.; /// In this mode, no data is copied and the linked dataset must be remain live for the duration; /// of this dataset. Note that link is active for both reading and writing, so modifications; /// to the aggregate dataset will also modify its components. Link() and Import() are mutually exclusive.; /// <tr><td> OwnLinked() <td> Take ownership of all linked datasets; /// <tr><td> Import(std::map<string,RooAbsData*>&) <td> As above, but allows specification of many imports in a single operation; /// <tr><td> Link(std::map<string,RooDataSet*>&) <td> As above, but allows specification of many links in a single operation; /// <tr><td> Cut(const char*) <br>; /// Cut(RooFormulaVar&); /// <td> Apply the given cut specification when importing data; /// <tr><td> CutRange(const char*) <td> Only accept events in the observable range with the given name; /// <tr><td> WeightVar(const char*) <br>; /// WeightVar(const RooAbsArg&); /// <td> Interpret the given variable as event weight rather than as observable; /// <tr><td> StoreError(const RooArgSet&) <td> Store symmetric error along with value for given subset of observables; /// <tr><td> StoreAsymError(const RooArgSet&) <td> Store asymmetric error along with value for given subset of observables; /// <tr><td> `GlobalObservables(const RooArgSet&)` <td> Define the set of global observables to be stored in this RooDataSet.; /// A snapshot of the passed RooArgSet is stored, meaning the values wont't change unexpectedly.; /// </table>; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:2445,Modifiability,variab,variable,2445,"ce of the imported histogram.; /// <tr><td> Import(const char*, RooAbsData&); /// <td> Import a RooDataSet or RooDataHist to be associated with the given state name of the index category; /// specified in Index(). If the given state name is not yet defined in the index; /// category it will be added on the fly. The import command can be specified multiple times.; /// <tr><td> Link(const char*, RooDataSet&) <td> Link contents of supplied RooDataSet to this dataset for given index category state name.; /// In this mode, no data is copied and the linked dataset must be remain live for the duration; /// of this dataset. Note that link is active for both reading and writing, so modifications; /// to the aggregate dataset will also modify its components. Link() and Import() are mutually exclusive.; /// <tr><td> OwnLinked() <td> Take ownership of all linked datasets; /// <tr><td> Import(std::map<string,RooAbsData*>&) <td> As above, but allows specification of many imports in a single operation; /// <tr><td> Link(std::map<string,RooDataSet*>&) <td> As above, but allows specification of many links in a single operation; /// <tr><td> Cut(const char*) <br>; /// Cut(RooFormulaVar&); /// <td> Apply the given cut specification when importing data; /// <tr><td> CutRange(const char*) <td> Only accept events in the observable range with the given name; /// <tr><td> WeightVar(const char*) <br>; /// WeightVar(const RooAbsArg&); /// <td> Interpret the given variable as event weight rather than as observable; /// <tr><td> StoreError(const RooArgSet&) <td> Store symmetric error along with value for given subset of observables; /// <tr><td> StoreAsymError(const RooArgSet&) <td> Store asymmetric error along with value for given subset of observables; /// <tr><td> `GlobalObservables(const RooArgSet&)` <td> Define the set of global observables to be stored in this RooDataSet.; /// A snapshot of the passed RooArgSet is stored, meaning the values wont't change unexpectedly.; /// </table>; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:10,Deployability,configurat,configuration,10,"// Define configuration for this method",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:10,Modifiability,config,configuration,10,"// Define configuration for this method",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:25,Modifiability,variab,variable,25,"// Lookup name of weight variable if it was specified by object reference",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:46,Modifiability,variab,variable,46,"// Initialize RooDataSet with optional weight variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:46,Modifiability,variab,variable,46,"// Initialize RooDataSet with optional weight variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:776,Energy Efficiency,reduce,reduce,776,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of a data set from (part of) an existing data; /// set. The dimensions of the data set are defined by the 'vars'; /// RooArgSet, which can be identical to 'dset' dimensions, or a; /// subset thereof. The 'cuts' string is an optional RooFormula; /// expression and can be used to select the subset of the data; /// points in 'dset' to be copied. The cut expression can refer to; /// any variable in the source dataset. For cuts involving variables; /// other than those contained in the source data set, such as; /// intermediate formula objects, use the equivalent constructor; /// accepting RooFormulaVar reference as cut specification.; ///; /// For most uses the RooAbsData::reduce() wrapper function, which; /// uses this constructor, is the most convenient way to create a; /// subset of an existing data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:785,Integrability,wrap,wrapper,785,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of a data set from (part of) an existing data; /// set. The dimensions of the data set are defined by the 'vars'; /// RooArgSet, which can be identical to 'dset' dimensions, or a; /// subset thereof. The 'cuts' string is an optional RooFormula; /// expression and can be used to select the subset of the data; /// points in 'dset' to be copied. The cut expression can refer to; /// any variable in the source dataset. For cuts involving variables; /// other than those contained in the source data set, such as; /// intermediate formula objects, use the equivalent constructor; /// accepting RooFormulaVar reference as cut specification.; ///; /// For most uses the RooAbsData::reduce() wrapper function, which; /// uses this constructor, is the most convenient way to create a; /// subset of an existing data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:484,Modifiability,variab,variable,484,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of a data set from (part of) an existing data; /// set. The dimensions of the data set are defined by the 'vars'; /// RooArgSet, which can be identical to 'dset' dimensions, or a; /// subset thereof. The 'cuts' string is an optional RooFormula; /// expression and can be used to select the subset of the data; /// points in 'dset' to be copied. The cut expression can refer to; /// any variable in the source dataset. For cuts involving variables; /// other than those contained in the source data set, such as; /// intermediate formula objects, use the equivalent constructor; /// accepting RooFormulaVar reference as cut specification.; ///; /// For most uses the RooAbsData::reduce() wrapper function, which; /// uses this constructor, is the most convenient way to create a; /// subset of an existing data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:535,Modifiability,variab,variables,535,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of a data set from (part of) an existing data; /// set. The dimensions of the data set are defined by the 'vars'; /// RooArgSet, which can be identical to 'dset' dimensions, or a; /// subset thereof. The 'cuts' string is an optional RooFormula; /// expression and can be used to select the subset of the data; /// points in 'dset' to be copied. The cut expression can refer to; /// any variable in the source dataset. For cuts involving variables; /// other than those contained in the source data set, such as; /// intermediate formula objects, use the equivalent constructor; /// accepting RooFormulaVar reference as cut specification.; ///; /// For most uses the RooAbsData::reduce() wrapper function, which; /// uses this constructor, is the most convenient way to create a; /// subset of an existing data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:660,Energy Efficiency,reduce,reduce,660,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of a data set from (part of) an existing data; /// set. The dimensions of the data set are defined by the 'vars'; /// RooArgSet, which can be identical to 'dset' dimensions, or a; /// subset thereof. The 'cutVar' formula variable is used to select; /// the subset of data points to be copied. For subsets without; /// selection on the data points, or involving cuts operating; /// exclusively and directly on the data set dimensions, the; /// equivalent constructor with a string based cut expression is; /// recommended.; ///; /// For most uses the RooAbsData::reduce() wrapper function, which; /// uses this constructor, is the most convenient way to create a; /// subset of an existing data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:669,Integrability,wrap,wrapper,669,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of a data set from (part of) an existing data; /// set. The dimensions of the data set are defined by the 'vars'; /// RooArgSet, which can be identical to 'dset' dimensions, or a; /// subset thereof. The 'cutVar' formula variable is used to select; /// the subset of data points to be copied. For subsets without; /// selection on the data points, or involving cuts operating; /// exclusively and directly on the data set dimensions, the; /// equivalent constructor with a string based cut expression is; /// recommended.; ///; /// For most uses the RooAbsData::reduce() wrapper function, which; /// uses this constructor, is the most convenient way to create a; /// subset of an existing data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:319,Modifiability,variab,variable,319,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of a data set from (part of) an existing data; /// set. The dimensions of the data set are defined by the 'vars'; /// RooArgSet, which can be identical to 'dset' dimensions, or a; /// subset thereof. The 'cutVar' formula variable is used to select; /// the subset of data points to be copied. For subsets without; /// selection on the data points, or involving cuts operating; /// exclusively and directly on the data set dimensions, the; /// equivalent constructor with a string based cut expression is; /// recommended.; ///; /// For most uses the RooAbsData::reduce() wrapper function, which; /// uses this constructor, is the most convenient way to create a; /// subset of an existing data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:155,Modifiability,variab,variables,155,"////////////////////////////////////////////////////////////////////////////////; /// Return an empty clone of this dataset. If vars is not null, only the variables in vars; /// are added to the definition of the empty clone",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:65,Availability,avail,available,65,"// We should take the variables from the original dataset if; // available, such that we can query the ""StoreError"" and; // ""StoreAsymError"" attributes.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:22,Modifiability,variab,variables,22,"// We should take the variables from the original dataset if; // available, such that we can query the ""StoreError"" and; // ""StoreAsymError"" attributes.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:113,Availability,error,error,113,"// We also need to add the weight variable of the original dataset if; // it's not added yet, again to query the error attributes correctly.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:34,Modifiability,variab,variable,34,"// We also need to add the weight variable of the original dataset if; // it's not added yet, again to query the error attributes correctly.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:158,Energy Efficiency,reduce,reduce,158,"////////////////////////////////////////////////////////////////////////////////; /// Implementation of RooAbsData virtual method that drives the RooAbsData::reduce() methods",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:174,Availability,error,errors,174,"////////////////////////////////////////////////////////////////////////////////; /// Return squared event weight of the current event. If this RooDataSet has no; /// weight errors set, this will be the same as `weight() * weight()`, like; /// expected for an unbinned dataset. When weight errors are set, it is assumed; /// that the RooDataSet represents a weighted binned dataset and; /// weightSquared() is the corresponding sum of weight squares for the bin.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:290,Availability,error,errors,290,"////////////////////////////////////////////////////////////////////////////////; /// Return squared event weight of the current event. If this RooDataSet has no; /// weight errors set, this will be the same as `weight() * weight()`, like; /// expected for an unbinned dataset. When weight errors are set, it is assumed; /// that the RooDataSet represents a weighted binned dataset and; /// weightSquared() is the corresponding sum of weight squares for the bin.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:147,Availability,Error,ErrorType,147,"////////////////////////////////////////////////////////////////////////////////; /// \copydoc RooAbsData::weightError(double&,double&,RooAbsData::ErrorType) const; /// \param etype error type",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:182,Availability,error,error,182,"////////////////////////////////////////////////////////////////////////////////; /// \copydoc RooAbsData::weightError(double&,double&,RooAbsData::ErrorType) const; /// \param etype error type",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:119,Availability,Error,ErrorType,119,"////////////////////////////////////////////////////////////////////////////////; /// \copydoc RooAbsData::weightError(ErrorType); /// \param etype error type",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:148,Availability,error,error,148,"////////////////////////////////////////////////////////////////////////////////; /// \copydoc RooAbsData::weightError(ErrorType); /// \param etype error type",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:541,Availability,error,error,541,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// Any variables present in 'data' but not in the dataset will be silently ignored.; /// \param[in] data Data point.; /// \param[in] wgt Event weight. Defaults to 1. The current value of the weight variable is; /// ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] wgtError Optional weight error.; /// \note This requires including the weight variable in the set of `StoreError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:183,Modifiability,variab,variables,183,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// Any variables present in 'data' but not in the dataset will be silently ignored.; /// \param[in] data Data point.; /// \param[in] wgt Event weight. Defaults to 1. The current value of the weight variable is; /// ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] wgtError Optional weight error.; /// \note This requires including the weight variable in the set of `StoreError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:374,Modifiability,variab,variable,374,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// Any variables present in 'data' but not in the dataset will be silently ignored.; /// \param[in] data Data point.; /// \param[in] wgt Event weight. Defaults to 1. The current value of the weight variable is; /// ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] wgtError Optional weight error.; /// \note This requires including the weight variable in the set of `StoreError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:440,Modifiability,variab,variable,440,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// Any variables present in 'data' but not in the dataset will be silently ignored.; /// \param[in] data Data point.; /// \param[in] wgt Event weight. Defaults to 1. The current value of the weight variable is; /// ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] wgtError Optional weight error.; /// \note This requires including the weight variable in the set of `StoreError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:594,Modifiability,variab,variable,594,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// Any variables present in 'data' but not in the dataset will be silently ignored.; /// \param[in] data Data point.; /// \param[in] wgt Event weight. Defaults to 1. The current value of the weight variable is; /// ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] wgtError Optional weight error.; /// \note This requires including the weight variable in the set of `StoreError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:630,Modifiability,variab,variables,630,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// Any variables present in 'data' but not in the dataset will be silently ignored.; /// \param[in] data Data point.; /// \param[in] wgt Event weight. Defaults to 1. The current value of the weight variable is; /// ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] wgtError Optional weight error.; /// \note This requires including the weight variable in the set of `StoreError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:31,Availability,error,errors,31,"//Exception for standard wgt^2 errors, which need not be stored.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:535,Availability,error,error,535,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// Any variables present in 'data' but not in the dataset will be silently ignored.; /// \param[in] indata Data point.; /// \param[in] inweight Event weight. The current value of the weight variable is ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] weightErrorLo Asymmetric weight error.; /// \param[in] weightErrorHi Asymmetric weight error.; /// \note This requires including the weight variable in the set of `StoreAsymError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:590,Availability,error,error,590,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// Any variables present in 'data' but not in the dataset will be silently ignored.; /// \param[in] indata Data point.; /// \param[in] inweight Event weight. The current value of the weight variable is ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] weightErrorLo Asymmetric weight error.; /// \param[in] weightErrorHi Asymmetric weight error.; /// \note This requires including the weight variable in the set of `StoreAsymError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:183,Modifiability,variab,variables,183,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// Any variables present in 'data' but not in the dataset will be silently ignored.; /// \param[in] indata Data point.; /// \param[in] inweight Event weight. The current value of the weight variable is ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] weightErrorLo Asymmetric weight error.; /// \param[in] weightErrorHi Asymmetric weight error.; /// \note This requires including the weight variable in the set of `StoreAsymError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:366,Modifiability,variab,variable,366,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// Any variables present in 'data' but not in the dataset will be silently ignored.; /// \param[in] indata Data point.; /// \param[in] inweight Event weight. The current value of the weight variable is ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] weightErrorLo Asymmetric weight error.; /// \param[in] weightErrorHi Asymmetric weight error.; /// \note This requires including the weight variable in the set of `StoreAsymError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:427,Modifiability,variab,variable,427,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// Any variables present in 'data' but not in the dataset will be silently ignored.; /// \param[in] indata Data point.; /// \param[in] inweight Event weight. The current value of the weight variable is ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] weightErrorLo Asymmetric weight error.; /// \param[in] weightErrorHi Asymmetric weight error.; /// \note This requires including the weight variable in the set of `StoreAsymError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:643,Modifiability,variab,variable,643,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// Any variables present in 'data' but not in the dataset will be silently ignored.; /// \param[in] indata Data point.; /// \param[in] inweight Event weight. The current value of the weight variable is ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] weightErrorLo Asymmetric weight error.; /// \param[in] weightErrorHi Asymmetric weight error.; /// \note This requires including the weight variable in the set of `StoreAsymError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:683,Modifiability,variab,variables,683,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// Any variables present in 'data' but not in the dataset will be silently ignored.; /// \param[in] indata Data point.; /// \param[in] inweight Event weight. The current value of the weight variable is ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] weightErrorLo Asymmetric weight error.; /// \param[in] weightErrorHi Asymmetric weight error.; /// \note This requires including the weight variable in the set of `StoreAsymError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:692,Availability,error,error,692,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// \attention The order and type of the input variables are **assumed** to be the same as; /// for the RooArgSet returned by RooDataSet::get(). Input values will just be written; /// into the internal data columns by ordinal position.; /// \param[in] data Data point.; /// \param[in] wgt Event weight. Defaults to 1. The current value of the weight variable is; /// ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] wgtError Optional weight error.; /// \note This requires including the weight variable in the set of `StoreError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:222,Modifiability,variab,variables,222,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// \attention The order and type of the input variables are **assumed** to be the same as; /// for the RooArgSet returned by RooDataSet::get(). Input values will just be written; /// into the internal data columns by ordinal position.; /// \param[in] data Data point.; /// \param[in] wgt Event weight. Defaults to 1. The current value of the weight variable is; /// ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] wgtError Optional weight error.; /// \note This requires including the weight variable in the set of `StoreError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:525,Modifiability,variab,variable,525,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// \attention The order and type of the input variables are **assumed** to be the same as; /// for the RooArgSet returned by RooDataSet::get(). Input values will just be written; /// into the internal data columns by ordinal position.; /// \param[in] data Data point.; /// \param[in] wgt Event weight. Defaults to 1. The current value of the weight variable is; /// ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] wgtError Optional weight error.; /// \note This requires including the weight variable in the set of `StoreError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:591,Modifiability,variab,variable,591,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// \attention The order and type of the input variables are **assumed** to be the same as; /// for the RooArgSet returned by RooDataSet::get(). Input values will just be written; /// into the internal data columns by ordinal position.; /// \param[in] data Data point.; /// \param[in] wgt Event weight. Defaults to 1. The current value of the weight variable is; /// ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] wgtError Optional weight error.; /// \note This requires including the weight variable in the set of `StoreError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:745,Modifiability,variab,variable,745,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// \attention The order and type of the input variables are **assumed** to be the same as; /// for the RooArgSet returned by RooDataSet::get(). Input values will just be written; /// into the internal data columns by ordinal position.; /// \param[in] data Data point.; /// \param[in] wgt Event weight. Defaults to 1. The current value of the weight variable is; /// ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] wgtError Optional weight error.; /// \note This requires including the weight variable in the set of `StoreError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:781,Modifiability,variab,variables,781,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// \attention The order and type of the input variables are **assumed** to be the same as; /// for the RooArgSet returned by RooDataSet::get(). Input values will just be written; /// into the internal data columns by ordinal position.; /// \param[in] data Data point.; /// \param[in] wgt Event weight. Defaults to 1. The current value of the weight variable is; /// ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] wgtError Optional weight error.; /// \note This requires including the weight variable in the set of `StoreError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:32,Availability,error,error,32,"//Exception for standard weight error, which need not be stored",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:3,Safety,Sanity check,Sanity checks,3,"// Sanity checks: data sets must have the same size",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:3,Modifiability,Extend,Extend,3,"// Extend vars with elements of other dataset",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:291,Integrability,depend,depends,291,"////////////////////////////////////////////////////////////////////////////////; /// Add a column with the values of the given (function) argument; /// to this dataset. The function value is calculated for each; /// event using the observable values of each event in case the; /// function depends on variables with names that are identical; /// to the observable names in the dataset",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:302,Modifiability,variab,variables,302,"////////////////////////////////////////////////////////////////////////////////; /// Add a column with the values of the given (function) argument; /// to this dataset. The function value is calculated for each; /// event using the observable values of each event in case the; /// function depends on variables with names that are identical; /// to the observable names in the dataset",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:299,Integrability,depend,depends,299,"////////////////////////////////////////////////////////////////////////////////; /// Add a column with the values of the given list of (function); /// argument to this dataset. Each function value is calculated for; /// each event using the observable values of the event in case the; /// function depends on variables with names that are identical to; /// the observable names in the dataset",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:310,Modifiability,variab,variables,310,"////////////////////////////////////////////////////////////////////////////////; /// Add a column with the values of the given list of (function); /// argument to this dataset. Each function value is calculated for; /// each event using the observable values of the event in case the; /// function depends on variables with names that are identical to; /// the observable names in the dataset",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:300,Availability,error,errors,300,"////////////////////////////////////////////////////////////////////////////////; /// Special plot method for 'X-Y' datasets used in \f$ \chi^2 \f$ fitting.; /// For general plotting, see RooAbsData::plotOn().; ///; /// These datasets; /// have one observable (X) and have weights (Y) and associated errors.; /// <table>; /// <tr><th> Contents options <th> Effect; /// <tr><td> YVar(RooRealVar& var) <td> Designate specified observable as 'y' variable; /// If not specified, the event weight will be the y variable; /// <tr><th> Histogram drawing options <th> Effect; /// <tr><td> DrawOption(const char* opt) <td> Select ROOT draw option for resulting TGraph object; /// <tr><td> LineStyle(Int_t style) <td> Select line style by ROOT line style code, default is solid; /// <tr><td> LineColor(Int_t color) <td> Select line color by ROOT color code, default is black; /// <tr><td> LineWidth(Int_t width) <td> Select line with in pixels, default is 3; /// <tr><td> MarkerStyle(Int_t style) <td> Select the ROOT marker style, default is 21; /// <tr><td> MarkerColor(Int_t color) <td> Select the ROOT marker color, default is black; /// <tr><td> MarkerSize(double size) <td> Select the ROOT marker size; /// <tr><td> Rescale(double factor) <td> Apply global rescaling factor to histogram; /// <tr><th> Misc. other options <th> Effect; /// <tr><td> Name(const chat* name) <td> Give curve specified name in frame. Useful if curve is to be referenced later; /// <tr><td> Invisible(bool flag) <td> Add curve to frame, but do not display. Useful in combination AddTo(); /// </table>",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:443,Modifiability,variab,variable,443,"////////////////////////////////////////////////////////////////////////////////; /// Special plot method for 'X-Y' datasets used in \f$ \chi^2 \f$ fitting.; /// For general plotting, see RooAbsData::plotOn().; ///; /// These datasets; /// have one observable (X) and have weights (Y) and associated errors.; /// <table>; /// <tr><th> Contents options <th> Effect; /// <tr><td> YVar(RooRealVar& var) <td> Designate specified observable as 'y' variable; /// If not specified, the event weight will be the y variable; /// <tr><th> Histogram drawing options <th> Effect; /// <tr><td> DrawOption(const char* opt) <td> Select ROOT draw option for resulting TGraph object; /// <tr><td> LineStyle(Int_t style) <td> Select line style by ROOT line style code, default is solid; /// <tr><td> LineColor(Int_t color) <td> Select line color by ROOT color code, default is black; /// <tr><td> LineWidth(Int_t width) <td> Select line with in pixels, default is 3; /// <tr><td> MarkerStyle(Int_t style) <td> Select the ROOT marker style, default is 21; /// <tr><td> MarkerColor(Int_t color) <td> Select the ROOT marker color, default is black; /// <tr><td> MarkerSize(double size) <td> Select the ROOT marker size; /// <tr><td> Rescale(double factor) <td> Apply global rescaling factor to histogram; /// <tr><th> Misc. other options <th> Effect; /// <tr><td> Name(const chat* name) <td> Give curve specified name in frame. Useful if curve is to be referenced later; /// <tr><td> Invisible(bool flag) <td> Add curve to frame, but do not display. Useful in combination AddTo(); /// </table>",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:506,Modifiability,variab,variable,506,"////////////////////////////////////////////////////////////////////////////////; /// Special plot method for 'X-Y' datasets used in \f$ \chi^2 \f$ fitting.; /// For general plotting, see RooAbsData::plotOn().; ///; /// These datasets; /// have one observable (X) and have weights (Y) and associated errors.; /// <table>; /// <tr><th> Contents options <th> Effect; /// <tr><td> YVar(RooRealVar& var) <td> Designate specified observable as 'y' variable; /// If not specified, the event weight will be the y variable; /// <tr><th> Histogram drawing options <th> Effect; /// <tr><td> DrawOption(const char* opt) <td> Select ROOT draw option for resulting TGraph object; /// <tr><td> LineStyle(Int_t style) <td> Select line style by ROOT line style code, default is solid; /// <tr><td> LineColor(Int_t color) <td> Select line color by ROOT color code, default is black; /// <tr><td> LineWidth(Int_t width) <td> Select line with in pixels, default is 3; /// <tr><td> MarkerStyle(Int_t style) <td> Select the ROOT marker style, default is 21; /// <tr><td> MarkerColor(Int_t color) <td> Select the ROOT marker color, default is black; /// <tr><td> MarkerSize(double size) <td> Select the ROOT marker size; /// <tr><td> Rescale(double factor) <td> Apply global rescaling factor to histogram; /// <tr><th> Misc. other options <th> Effect; /// <tr><td> Name(const chat* name) <td> Give curve specified name in frame. Useful if curve is to be referenced later; /// <tr><td> Invisible(bool flag) <td> Add curve to frame, but do not display. Useful in combination AddTo(); /// </table>",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:15,Modifiability,variab,variable,15,"// Determine Y variable (default is weight, if present)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:3,Safety,Sanity check,Sanity check,3,"// Sanity check. XY plotting only applies to weighted datasets if no YVar is specified",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:711,Integrability,message,message,711,"////////////////////////////////////////////////////////////////////////////////; /// Read given list of ascii files, and construct a data set, using the given; /// ArgList as structure definition.; /// \param fileList Multiple file names, comma separated. Each; /// file is optionally prefixed with 'commonPath' if such a path is; /// provided; ///; /// \param varList Specify the dimensions of the dataset to be built.; /// This list describes the order in which these dimensions appear in the; /// ascii files to be read.; /// Each line in the ascii file should contain N white-space separated; /// tokens, with N the number of args in `varList`. Any text beyond; /// N tokens will be ignored with a warning message.; /// (NB: This is the default output of RooArgList::writeToStream()); ///; /// \param verbOpt `Q` be quiet, `D` debug mode (verbose); ///; /// \param commonPath All filenames in `fileList` will be prefixed with this optional path.; ///; /// \param indexCatName Interpret the data as belonging to category `indexCatName`.; /// When multiple files are read, a RooCategory arg in `varList` can; /// optionally be designated to hold information about the source file; /// of each data point. This feature is enabled by giving the name; /// of the (already existing) category variable in `indexCatName`.; ///; /// \attention If the value of any of the variables on a given line exceeds the; /// fit range associated with that dimension, the entire line will be; /// ignored. A warning message is printed in each case, unless the; /// `Q` verbose option is given. The number of events read and skipped; /// is always summarized at the end.; ///; /// If no further information is given a label name 'fileNNN' will; /// be assigned to each event, where NNN is the sequential number of; /// the source file in `fileList`.; ///; /// Alternatively, it is possible to override the default label names; /// of the index category by specifying them in the fileList string:; /// When instead of `",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:1500,Integrability,message,message,1500,"n the; /// ascii files to be read.; /// Each line in the ascii file should contain N white-space separated; /// tokens, with N the number of args in `varList`. Any text beyond; /// N tokens will be ignored with a warning message.; /// (NB: This is the default output of RooArgList::writeToStream()); ///; /// \param verbOpt `Q` be quiet, `D` debug mode (verbose); ///; /// \param commonPath All filenames in `fileList` will be prefixed with this optional path.; ///; /// \param indexCatName Interpret the data as belonging to category `indexCatName`.; /// When multiple files are read, a RooCategory arg in `varList` can; /// optionally be designated to hold information about the source file; /// of each data point. This feature is enabled by giving the name; /// of the (already existing) category variable in `indexCatName`.; ///; /// \attention If the value of any of the variables on a given line exceeds the; /// fit range associated with that dimension, the entire line will be; /// ignored. A warning message is printed in each case, unless the; /// `Q` verbose option is given. The number of events read and skipped; /// is always summarized at the end.; ///; /// If no further information is given a label name 'fileNNN' will; /// be assigned to each event, where NNN is the sequential number of; /// the source file in `fileList`.; ///; /// Alternatively, it is possible to override the default label names; /// of the index category by specifying them in the fileList string:; /// When instead of `file1.txt,file2.txt` the string; /// `file1.txt:FOO,file2.txt:BAR` is specified, a state named ""FOO""; /// is assigned to the index category for each event originating from; /// file1.txt. The labels FOO,BAR may be predefined in the index; /// category via defineType(), but don't have to be.; ///; /// Finally, one can also assign the same label to multiple files,; /// either by specifying `file1.txt:FOO,file2,txt:FOO,file3.txt:BAR`; /// or `file1.txt,file2.txt:FOO,file3.txt:BAR`.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:1291,Modifiability,variab,variable,1291," /// file is optionally prefixed with 'commonPath' if such a path is; /// provided; ///; /// \param varList Specify the dimensions of the dataset to be built.; /// This list describes the order in which these dimensions appear in the; /// ascii files to be read.; /// Each line in the ascii file should contain N white-space separated; /// tokens, with N the number of args in `varList`. Any text beyond; /// N tokens will be ignored with a warning message.; /// (NB: This is the default output of RooArgList::writeToStream()); ///; /// \param verbOpt `Q` be quiet, `D` debug mode (verbose); ///; /// \param commonPath All filenames in `fileList` will be prefixed with this optional path.; ///; /// \param indexCatName Interpret the data as belonging to category `indexCatName`.; /// When multiple files are read, a RooCategory arg in `varList` can; /// optionally be designated to hold information about the source file; /// of each data point. This feature is enabled by giving the name; /// of the (already existing) category variable in `indexCatName`.; ///; /// \attention If the value of any of the variables on a given line exceeds the; /// fit range associated with that dimension, the entire line will be; /// ignored. A warning message is printed in each case, unless the; /// `Q` verbose option is given. The number of events read and skipped; /// is always summarized at the end.; ///; /// If no further information is given a label name 'fileNNN' will; /// be assigned to each event, where NNN is the sequential number of; /// the source file in `fileList`.; ///; /// Alternatively, it is possible to override the default label names; /// of the index category by specifying them in the fileList string:; /// When instead of `file1.txt,file2.txt` the string; /// `file1.txt:FOO,file2.txt:BAR` is specified, a state named ""FOO""; /// is assigned to the index category for each event originating from; /// file1.txt. The labels FOO,BAR may be predefined in the index; /// category via define",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:1367,Modifiability,variab,variables,1367,"aset to be built.; /// This list describes the order in which these dimensions appear in the; /// ascii files to be read.; /// Each line in the ascii file should contain N white-space separated; /// tokens, with N the number of args in `varList`. Any text beyond; /// N tokens will be ignored with a warning message.; /// (NB: This is the default output of RooArgList::writeToStream()); ///; /// \param verbOpt `Q` be quiet, `D` debug mode (verbose); ///; /// \param commonPath All filenames in `fileList` will be prefixed with this optional path.; ///; /// \param indexCatName Interpret the data as belonging to category `indexCatName`.; /// When multiple files are read, a RooCategory arg in `varList` can; /// optionally be designated to hold information about the source file; /// of each data point. This feature is enabled by giving the name; /// of the (already existing) category variable in `indexCatName`.; ///; /// \attention If the value of any of the variables on a given line exceeds the; /// fit range associated with that dimension, the entire line will be; /// ignored. A warning message is printed in each case, unless the; /// `Q` verbose option is given. The number of events read and skipped; /// is always summarized at the end.; ///; /// If no further information is given a label name 'fileNNN' will; /// be assigned to each event, where NNN is the sequential number of; /// the source file in `fileList`.; ///; /// Alternatively, it is possible to override the default label names; /// of the index category by specifying them in the fileList string:; /// When instead of `file1.txt,file2.txt` the string; /// `file1.txt:FOO,file2.txt:BAR` is specified, a state named ""FOO""; /// is assigned to the index category for each event originating from; /// file1.txt. The labels FOO,BAR may be predefined in the index; /// category via defineType(), but don't have to be.; ///; /// Finally, one can also assign the same label to multiple files,; /// either by specifying `file1.txt:F",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:24,Modifiability,variab,variables,24,"// Make working copy of variables list",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:37,Modifiability,variab,variable,37,"// Append blinding state category to variable list if not already there",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:3,Modifiability,Config,Configure,3,"// Configure blinding state category",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:16,Availability,error,error,16,"// Stop on read error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:206,Modifiability,variab,variables,206,"////////////////////////////////////////////////////////////////////////////////; /// Print info about this dataset to the specified output stream.; ///; /// Standard: number of entries; /// Shape: list of variables we define & were generated with",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:233,Deployability,install,installed,233,"// Legacy dataset conversion happens here. Legacy RooDataSet inherits from RooTreeData; // which in turn inherits from RooAbsData. Manually stream RooTreeData contents on; // file here and convert it into a RooTreeDataStore which is installed in the; // new-style RooAbsData base class; // --- This is the contents of the streamer code of RooTreeData version 1 ---",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:61,Modifiability,inherit,inherits,61,"// Legacy dataset conversion happens here. Legacy RooDataSet inherits from RooTreeData; // which in turn inherits from RooAbsData. Manually stream RooTreeData contents on; // file here and convert it into a RooTreeDataStore which is installed in the; // new-style RooAbsData base class; // --- This is the contents of the streamer code of RooTreeData version 1 ---",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:105,Modifiability,inherit,inherits,105,"// Legacy dataset conversion happens here. Legacy RooDataSet inherits from RooTreeData; // which in turn inherits from RooAbsData. Manually stream RooTreeData contents on; // file here and convert it into a RooTreeDataStore which is installed in the; // new-style RooAbsData base class; // --- This is the contents of the streamer code of RooTreeData version 1 ---",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:16,Testability,test,test,16,"// Compile-time test if we can still use TStrings for the constructors of; // RooDataClasses, either for both name and title or for only one of them.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDataSet.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDirItem.cxx:872,Modifiability,inherit,inherit,872,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooDirItem.cxx; \class RooDirItem; \ingroup Roofitcore. Utility base class for \ref Roofitmain objects that are to be attached; to ROOT directories. Concrete classes inherit the appendToDir and removeToDir; methods that can be used to safely attach and detach one self from a TDirectory.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDirItem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDirItem.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDirItem.cxx:941,Safety,safe,safely,941,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooDirItem.cxx; \class RooDirItem; \ingroup Roofitcore. Utility base class for \ref Roofitmain objects that are to be attached; to ROOT directories. Concrete classes inherit the appendToDir and removeToDir; methods that can be used to safely attach and detach one self from a TDirectory.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDirItem.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDirItem.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx:1047,Testability,log,log,1047,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooDLLSignificanceMCSModule.cxx; \class RooDLLSignificanceMCSModule; \ingroup Roofitcore. Add-on module to RooMCStudy that; calculates the significance of a signal by comparing the likelihood of; a fit fit with a given parameter floating with a fit with that given; parameter fixed to a nominal value (usually zero). The difference in; the -log(L) of those two fits can be interpreted as the probability; that a statistical background fluctation may result in a signal as large; or larger than the signal observed. This interpretation is contingent; on underlying normal sampling distributions and a MC study is a good way; to test that assumption.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx:1333,Testability,test,test,1333,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooDLLSignificanceMCSModule.cxx; \class RooDLLSignificanceMCSModule; \ingroup Roofitcore. Add-on module to RooMCStudy that; calculates the significance of a signal by comparing the likelihood of; a fit fit with a given parameter floating with a fit with that given; parameter fixed to a nominal value (usually zero). The difference in; the -log(L) of those two fits can be interpreted as the probability; that a statistical background fluctation may result in a signal as large; or larger than the signal observed. This interpretation is contingent; on underlying normal sampling distributions and a MC study is a good way; to test that assumption.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx:13,Modifiability,variab,variable,13,"// Construct variable that holds -log(L) fit with null hypothesis for given parameter",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx:34,Testability,log,log,34,"// Construct variable that holds -log(L) fit with null hypothesis for given parameter",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx:13,Modifiability,variab,variable,13,"// Construct variable that holds -log(L) fit with null hypothesis for given parameter",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx:34,Testability,log,log,34,"// Construct variable that holds -log(L) fit with null hypothesis for given parameter",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx:13,Modifiability,variab,variable,13,"// Construct variable that holds significance corresponding to delta(-log(L)) w.r.t to null hypothesis for given parameter",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx:70,Testability,log,log,70,"// Construct variable that holds significance corresponding to delta(-log(L)) w.r.t to null hypothesis for given parameter",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx:134,Testability,log,log,134,"////////////////////////////////////////////////////////////////////////////////; /// Return auxiliary dataset with results of delta(-log(L)); /// calculations of this module so that it is merged with; /// RooMCStudy::fitParDataSet() by RooMCStudy",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEffGenContext.cxx:153,Performance,perform,perform,153,"////////////////////////////////////////////////////////////////////////////////; /// Generate one event. Generate an event from the p.d.f and; /// then perform an accept/reject sampling based on the efficiency; /// function",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooEffGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEffGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEffGenContext.cxx:104,Integrability,interface,interface,104,"////////////////////////////////////////////////////////////////////////////////; /// Detailed printing interface",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooEffGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEffGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEfficiency.cxx:1131,Integrability,depend,dependents,1131,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooEfficiency.cxx; \class RooEfficiency; \ingroup Roofitcore. A PDF helper class to fit efficiencies parameterized; by a supplied function F. Given a dataset with a category C that determines if a given; event is accepted or rejected for the efficiency to be measured,; this class evaluates as F if C is 'accept' and as (1-F) if; C is 'reject'. Values of F below 0 and above 1 are clipped.; F may have an arbitrary number of dependents and parameters; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooEfficiency.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEfficiency.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEfficiency.cxx:807,Modifiability,parameteriz,parameterized,807,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooEfficiency.cxx; \class RooEfficiency; \ingroup Roofitcore. A PDF helper class to fit efficiencies parameterized; by a supplied function F. Given a dataset with a category C that determines if a given; event is accepted or rejected for the efficiency to be measured,; this class evaluates as F if C is 'accept' and as (1-F) if; C is 'reject'. Values of F below 0 and above 1 are clipped.; F may have an arbitrary number of dependents and parameters; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooEfficiency.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEfficiency.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEffProd.cxx:911,Energy Efficiency,efficient,efficient,911,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF; * GR, Gerhard Raven, NIKHEF/VU *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /////////////////////////////////////////////////////////////////////////////////////; /// \class RooEffProd; /// The class RooEffProd implements the product of a PDF with an efficiency function.; /// The normalization integral of the product is calculated numerically, but the; /// event generation is handled by a specialized generator context that implements; /// the event generation in a more efficient for cases where the PDF has an internal; /// generator that is smarter than accept reject.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooEffProd.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEffProd.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEffProd.cxx:181,Energy Efficiency,efficient,efficient,181,"////////////////////////////////////////////////////////////////////////////////; /// Return specialized generator context for RooEffProds that implements generation; /// in a more efficient way than can be done for generic correlated products",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooEffProd.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEffProd.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEllipse.cxx:819,Availability,error,error,819,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooEllipse.cxx; \class RooEllipse; \ingroup Roofitcore. Two-dimensional ellipse that can be used to represent an error contour.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooEllipse.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEllipse.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEllipse.cxx:210,Availability,error,errors,210,"////////////////////////////////////////////////////////////////////////////////; /// Create a 2-dimensional ellipse centered at (x1,x2) that represents the confidence; /// level contour for a measurement with errors (s1,s2) and correlation coefficient rho.; /// The resulting curve is defined as the unique ellipse that passes through these points:; ///; /// (x1+rho*s1,x2+s2) , (x1-rho*s1,x2-s2) , (x1+s1,x2+rho*s2) , (x1-s1,x2-rho*s2); ///; /// and is described by the implicit equation:; ///; /// x*x 2*rho*x*y y*y; /// ----- - --------- + ----- = 1 - rho*rho; /// s1*s1 s1*s2 s2*s2; ///; /// The input parameters s1,s2 must be > 0 and also |rho| <= 1.; /// The degenerate case |rho|=1 corresponds to a straight line and; /// is handled as a special case.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooEllipse.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEllipse.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx:800,Availability,error,error,800,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooErrorVar.cxx; \class RooErrorVar; \ingroup Roofitcore. Auxiliary class that represents the error; of a RooRealVar as a separate object. The main reason of; existence of this class is to facilitate the reuse of existing; techniques to perform calculations that involve a RooRealVars; error, such as calculating the pull value.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooErrorVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx:992,Availability,error,error,992,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooErrorVar.cxx; \class RooErrorVar; \ingroup Roofitcore. Auxiliary class that represents the error; of a RooRealVar as a separate object. The main reason of; existence of this class is to facilitate the reuse of existing; techniques to perform calculations that involve a RooRealVars; error, such as calculating the pull value.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooErrorVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx:943,Performance,perform,perform,943,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooErrorVar.cxx; \class RooErrorVar; \ingroup Roofitcore. Auxiliary class that represents the error; of a RooRealVar as a separate object. The main reason of; existence of this class is to facilitate the reuse of existing; techniques to perform calculations that involve a RooRealVars; error, such as calculating the pull value.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooErrorVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx:132,Availability,error,error,132,"////////////////////////////////////////////////////////////////////////////////; /// Construct an lvalue variable representing the error of RooRealVar input",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooErrorVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx:106,Modifiability,variab,variable,106,"////////////////////////////////////////////////////////////////////////////////; /// Construct an lvalue variable representing the error of RooRealVar input",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooErrorVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx:105,Availability,error,error,105,"////////////////////////////////////////////////////////////////////////////////; /// Return value, i.e. error on input variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooErrorVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx:120,Modifiability,variab,variable,120,"////////////////////////////////////////////////////////////////////////////////; /// Return value, i.e. error on input variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooErrorVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx:116,Modifiability,variab,variable,116,"////////////////////////////////////////////////////////////////////////////////; /// Store given binning with this variable under the given name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooErrorVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx:111,Performance,cache,cache,111,"////////////////////////////////////////////////////////////////////////////////; /// Force the internal value cache to be up to date",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooErrorVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEvaluatorWrapper.cxx:413,Integrability,Wrap,Wraps,413,"/// \cond ROOFIT_INTERNAL; /*; * Project: RooFit; * Authors:; * Jonas Rembser, CERN 2023; *; * Copyright (c) 2023, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \internal; \file RooEvaluatorWrapper.cxx; \class RooEvaluatorWrapper; \ingroup Roofitcore. Wraps a RooFit::Evaluator that evaluates a RooAbsReal back into a RooAbsReal.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooEvaluatorWrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEvaluatorWrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEvaluatorWrapper.cxx:20,Modifiability,variab,variables,20,"// Exclude the data variables from the parameters which are not global observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooEvaluatorWrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEvaluatorWrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx:350,Integrability,depend,dependent,350,"////////////////////////////////////////////////////////////////////////////////; /// Register object associated with given name and given associated parameters with given values in cache.; /// The cache will take _ownership_of_object_ and is indexed under the given name (which does not; /// need to be the name of cacheObject and with given set of dependent parameters with validity for the; /// current values of those parameters. It can be retrieved later by callin retrieveObject()",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExpensiveObjectCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx:182,Performance,cache,cache,182,"////////////////////////////////////////////////////////////////////////////////; /// Register object associated with given name and given associated parameters with given values in cache.; /// The cache will take _ownership_of_object_ and is indexed under the given name (which does not; /// need to be the name of cacheObject and with given set of dependent parameters with validity for the; /// current values of those parameters. It can be retrieved later by callin retrieveObject()",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExpensiveObjectCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx:198,Performance,cache,cache,198,"////////////////////////////////////////////////////////////////////////////////; /// Register object associated with given name and given associated parameters with given values in cache.; /// The cache will take _ownership_of_object_ and is indexed under the given name (which does not; /// need to be the name of cacheObject and with given set of dependent parameters with validity for the; /// current values of those parameters. It can be retrieved later by callin retrieveObject()",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExpensiveObjectCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx:316,Performance,cache,cacheObject,316,"////////////////////////////////////////////////////////////////////////////////; /// Register object associated with given name and given associated parameters with given values in cache.; /// The cache will take _ownership_of_object_ and is indexed under the given name (which does not; /// need to be the name of cacheObject and with given set of dependent parameters with validity for the; /// current values of those parameters. It can be retrieved later by callin retrieveObject()",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExpensiveObjectCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx:3,Deployability,Install,Install,3,"// Install new object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExpensiveObjectCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx:107,Performance,cache,cache,107,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve object from cache that was registered under given name with given parameters, _if_; /// current parameter values match those that were stored in the registry for this object.; /// The return object is owned by the cache instance.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExpensiveObjectCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx:309,Performance,cache,cache,309,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve object from cache that was registered under given name with given parameters, _if_; /// current parameter values match those that were stored in the registry for this object.; /// The return object is owned by the cache instance.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExpensiveObjectCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx:9,Performance,cache,cache,9,"// If no cache element found, return 0 ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExpensiveObjectCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx:113,Performance,cache,cache,113,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve payload object of cache element with given unique ID",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExpensiveObjectCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx:92,Performance,cache,cache,92,"////////////////////////////////////////////////////////////////////////////////; /// Clear cache element with given unique ID; /// Retrieve payload object of cache element with given unique ID",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExpensiveObjectCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx:159,Performance,cache,cache,159,"////////////////////////////////////////////////////////////////////////////////; /// Clear cache element with given unique ID; /// Retrieve payload object of cache element with given unique ID",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExpensiveObjectCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear cache element with given unique ID; /// Retrieve payload object of cache element with given unique ID",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExpensiveObjectCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx:114,Performance,cache,cache,114,"////////////////////////////////////////////////////////////////////////////////; /// Place new payload object in cache element with given unique ID. Cache; /// will take ownership of provided object!",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExpensiveObjectCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx:150,Performance,Cache,Cache,150,"////////////////////////////////////////////////////////////////////////////////; /// Place new payload object in cache element with given unique ID. Cache; /// will take ownership of provided object!",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExpensiveObjectCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx:96,Performance,cache,cache,96,"////////////////////////////////////////////////////////////////////////////////; /// Clear all cache elements",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExpensiveObjectCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear all cache elements",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExpensiveObjectCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedBinding.cxx:32,Modifiability,VARIAB,VARIABLE,32,"// ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendedBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedTerm.cxx:834,Modifiability,extend,extended,834,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Name: $:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooExtendedTerm.cxx; \class RooExtendedTerm; \ingroup Roofitcore. A p.d.f with no observables that only introduces; an extended ML term for a given number of expected events term when an extended ML; is constructed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendedTerm.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedTerm.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedTerm.cxx:902,Modifiability,extend,extended,902,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Name: $:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooExtendedTerm.cxx; \class RooExtendedTerm; \ingroup Roofitcore. A p.d.f with no observables that only introduces; an extended ML term for a given number of expected events term when an extended ML; is constructed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendedTerm.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedTerm.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedTerm.cxx:102,Modifiability,Extend,ExtendedTerm,102,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. An ExtendedTerm has no observables, it only introduces an extended; /// ML term with the given number of expected events when an extended ML is constructed; /// from this p.d.f.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendedTerm.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedTerm.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedTerm.cxx:157,Modifiability,extend,extended,157,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. An ExtendedTerm has no observables, it only introduces an extended; /// ML term with the given number of expected events when an extended ML is constructed; /// from this p.d.f.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendedTerm.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedTerm.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedTerm.cxx:228,Modifiability,extend,extended,228,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. An ExtendedTerm has no observables, it only introduces an extended; /// ML term with the given number of expected events when an extended ML is constructed; /// from this p.d.f.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendedTerm.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedTerm.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedTerm.cxx:147,Modifiability,variab,variable,147,"////////////////////////////////////////////////////////////////////////////////; /// Return number of expected events from associated event count variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendedTerm.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedTerm.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:1458,Deployability,integrat,integration,1458,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooExtendPdf; RooExtendPdf is a wrapper around an existing PDF that adds a; parameteric extended likelihood term to the PDF, optionally divided by a; fractional term from a partial normalization of the PDF:; \f[; n_\mathrm{Expected} = N \quad \text{or} \quad n_\mathrm{Expected} = N / \mathrm{frac}; \f]; where \f$ N \f$ is supplied as a RooAbsReal to RooExtendPdf.; The fractional term is defined as; \f[; \mathrm{frac} = \frac{\int_\mathrm{cutRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}{; \int_\mathrm{normRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}; \f]. where \f$ x \f$ is the set of dependents involved in the selection region and \f$ y \f$; is the set of remaining dependents. \f$ \mathrm{cutRegion}[x] \f$ is a limited integration range that is contained in; the nominal integration range \f$ \mathrm{normRegion}[x] \f$.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:1510,Deployability,integrat,integration,1510,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooExtendPdf; RooExtendPdf is a wrapper around an existing PDF that adds a; parameteric extended likelihood term to the PDF, optionally divided by a; fractional term from a partial normalization of the PDF:; \f[; n_\mathrm{Expected} = N \quad \text{or} \quad n_\mathrm{Expected} = N / \mathrm{frac}; \f]; where \f$ N \f$ is supplied as a RooAbsReal to RooExtendPdf.; The fractional term is defined as; \f[; \mathrm{frac} = \frac{\int_\mathrm{cutRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}{; \int_\mathrm{normRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}; \f]. where \f$ x \f$ is the set of dependents involved in the selection region and \f$ y \f$; is the set of remaining dependents. \f$ \mathrm{cutRegion}[x] \f$ is a limited integration range that is contained in; the nominal integration range \f$ \mathrm{normRegion}[x] \f$.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:738,Integrability,wrap,wrapper,738,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooExtendPdf; RooExtendPdf is a wrapper around an existing PDF that adds a; parameteric extended likelihood term to the PDF, optionally divided by a; fractional term from a partial normalization of the PDF:; \f[; n_\mathrm{Expected} = N \quad \text{or} \quad n_\mathrm{Expected} = N / \mathrm{frac}; \f]; where \f$ N \f$ is supplied as a RooAbsReal to RooExtendPdf.; The fractional term is defined as; \f[; \mathrm{frac} = \frac{\int_\mathrm{cutRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}{; \int_\mathrm{normRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}; \f]. where \f$ x \f$ is the set of dependents involved in the selection region and \f$ y \f$; is the set of remaining dependents. \f$ \mathrm{cutRegion}[x] \f$ is a limited integration range that is contained in; the nominal integration range \f$ \mathrm{normRegion}[x] \f$.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:1320,Integrability,depend,dependents,1320,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooExtendPdf; RooExtendPdf is a wrapper around an existing PDF that adds a; parameteric extended likelihood term to the PDF, optionally divided by a; fractional term from a partial normalization of the PDF:; \f[; n_\mathrm{Expected} = N \quad \text{or} \quad n_\mathrm{Expected} = N / \mathrm{frac}; \f]; where \f$ N \f$ is supplied as a RooAbsReal to RooExtendPdf.; The fractional term is defined as; \f[; \mathrm{frac} = \frac{\int_\mathrm{cutRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}{; \int_\mathrm{normRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}; \f]. where \f$ x \f$ is the set of dependents involved in the selection region and \f$ y \f$; is the set of remaining dependents. \f$ \mathrm{cutRegion}[x] \f$ is a limited integration range that is contained in; the nominal integration range \f$ \mathrm{normRegion}[x] \f$.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:1403,Integrability,depend,dependents,1403,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooExtendPdf; RooExtendPdf is a wrapper around an existing PDF that adds a; parameteric extended likelihood term to the PDF, optionally divided by a; fractional term from a partial normalization of the PDF:; \f[; n_\mathrm{Expected} = N \quad \text{or} \quad n_\mathrm{Expected} = N / \mathrm{frac}; \f]; where \f$ N \f$ is supplied as a RooAbsReal to RooExtendPdf.; The fractional term is defined as; \f[; \mathrm{frac} = \frac{\int_\mathrm{cutRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}{; \int_\mathrm{normRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}; \f]. where \f$ x \f$ is the set of dependents involved in the selection region and \f$ y \f$; is the set of remaining dependents. \f$ \mathrm{cutRegion}[x] \f$ is a limited integration range that is contained in; the nominal integration range \f$ \mathrm{normRegion}[x] \f$.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:1458,Integrability,integrat,integration,1458,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooExtendPdf; RooExtendPdf is a wrapper around an existing PDF that adds a; parameteric extended likelihood term to the PDF, optionally divided by a; fractional term from a partial normalization of the PDF:; \f[; n_\mathrm{Expected} = N \quad \text{or} \quad n_\mathrm{Expected} = N / \mathrm{frac}; \f]; where \f$ N \f$ is supplied as a RooAbsReal to RooExtendPdf.; The fractional term is defined as; \f[; \mathrm{frac} = \frac{\int_\mathrm{cutRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}{; \int_\mathrm{normRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}; \f]. where \f$ x \f$ is the set of dependents involved in the selection region and \f$ y \f$; is the set of remaining dependents. \f$ \mathrm{cutRegion}[x] \f$ is a limited integration range that is contained in; the nominal integration range \f$ \mathrm{normRegion}[x] \f$.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:1510,Integrability,integrat,integration,1510,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooExtendPdf; RooExtendPdf is a wrapper around an existing PDF that adds a; parameteric extended likelihood term to the PDF, optionally divided by a; fractional term from a partial normalization of the PDF:; \f[; n_\mathrm{Expected} = N \quad \text{or} \quad n_\mathrm{Expected} = N / \mathrm{frac}; \f]; where \f$ N \f$ is supplied as a RooAbsReal to RooExtendPdf.; The fractional term is defined as; \f[; \mathrm{frac} = \frac{\int_\mathrm{cutRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}{; \int_\mathrm{normRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}; \f]. where \f$ x \f$ is the set of dependents involved in the selection region and \f$ y \f$; is the set of remaining dependents. \f$ \mathrm{cutRegion}[x] \f$ is a limited integration range that is contained in; the nominal integration range \f$ \mathrm{normRegion}[x] \f$.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:794,Modifiability,extend,extended,794,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooExtendPdf; RooExtendPdf is a wrapper around an existing PDF that adds a; parameteric extended likelihood term to the PDF, optionally divided by a; fractional term from a partial normalization of the PDF:; \f[; n_\mathrm{Expected} = N \quad \text{or} \quad n_\mathrm{Expected} = N / \mathrm{frac}; \f]; where \f$ N \f$ is supplied as a RooAbsReal to RooExtendPdf.; The fractional term is defined as; \f[; \mathrm{frac} = \frac{\int_\mathrm{cutRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}{; \int_\mathrm{normRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}; \f]. where \f$ x \f$ is the set of dependents involved in the selection region and \f$ y \f$; is the set of remaining dependents. \f$ \mathrm{cutRegion}[x] \f$ is a limited integration range that is contained in; the nominal integration range \f$ \mathrm{normRegion}[x] \f$.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:21,Modifiability,Extend,ExtendPdf,21,"/// Constructor. The ExtendPdf behaves identical to the supplied input pdf,; /// but adds an extended likelihood term. expectedEvents() will return; /// `norm` if `rangeName` remains empty. If `rangeName` is not empty,; /// `norm` will refer to this range, and expectedEvents will return the; /// total number of events over the full range of the observables.; /// \param[in] name Name of the pdf; /// \param[in] title Title of the pdf (for plotting); /// \param[in] pdf The pdf to be extended; /// \param[in] norm Expected number of events; /// \param[in] rangeName If given, the number of events denoted by `norm` is interpreted as; /// the number of events in this range only",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:93,Modifiability,extend,extended,93,"/// Constructor. The ExtendPdf behaves identical to the supplied input pdf,; /// but adds an extended likelihood term. expectedEvents() will return; /// `norm` if `rangeName` remains empty. If `rangeName` is not empty,; /// `norm` will refer to this range, and expectedEvents will return the; /// total number of events over the full range of the observables.; /// \param[in] name Name of the pdf; /// \param[in] title Title of the pdf (for plotting); /// \param[in] pdf The pdf to be extended; /// \param[in] norm Expected number of events; /// \param[in] rangeName If given, the number of events denoted by `norm` is interpreted as; /// the number of events in this range only",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:485,Modifiability,extend,extended,485,"/// Constructor. The ExtendPdf behaves identical to the supplied input pdf,; /// but adds an extended likelihood term. expectedEvents() will return; /// `norm` if `rangeName` remains empty. If `rangeName` is not empty,; /// `norm` will refer to this range, and expectedEvents will return the; /// total number of events over the full range of the observables.; /// \param[in] name Name of the pdf; /// \param[in] title Title of the pdf (for plotting); /// \param[in] pdf The pdf to be extended; /// \param[in] norm Expected number of events; /// \param[in] rangeName If given, the number of events denoted by `norm` is interpreted as; /// the number of events in this range only",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:570,Deployability,integrat,integration,570,"/// Return the number of expected events over the full range of all variables.; /// `norm`, the variable set as normalisation constant in the constructor,; /// will yield the number of events in the range set in the constructor. That is, the function returns; /// \f[; /// N = \mathrm{norm} \; \cdot \; \frac{\int_{(x_F,y_F)} \mathrm{pdf}(x,y) }{\int_{(x_C,y_F)} \mathrm{pdf}(x,y)}; /// \f]; /// Where \f$ x \f$ is the set of dependents with a restricted range (defined by `rangeName` in the constructor),; /// and \f$ y \f$ are the other dependents. \f$ x_C \f$ is the integration; /// of \f$ x \f$ over the restricted range, and \f$ x_F \f$ is the integration of; /// \f$ x \f$ over the full range. `norm` is the number of events given as parameter to the constructor.; ///; /// If the nested PDF can be extended, \f$ N \f$ is further scaled by its expected number of events.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:650,Deployability,integrat,integration,650,"/// Return the number of expected events over the full range of all variables.; /// `norm`, the variable set as normalisation constant in the constructor,; /// will yield the number of events in the range set in the constructor. That is, the function returns; /// \f[; /// N = \mathrm{norm} \; \cdot \; \frac{\int_{(x_F,y_F)} \mathrm{pdf}(x,y) }{\int_{(x_C,y_F)} \mathrm{pdf}(x,y)}; /// \f]; /// Where \f$ x \f$ is the set of dependents with a restricted range (defined by `rangeName` in the constructor),; /// and \f$ y \f$ are the other dependents. \f$ x_C \f$ is the integration; /// of \f$ x \f$ over the restricted range, and \f$ x_F \f$ is the integration of; /// \f$ x \f$ over the full range. `norm` is the number of events given as parameter to the constructor.; ///; /// If the nested PDF can be extended, \f$ N \f$ is further scaled by its expected number of events.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:426,Integrability,depend,dependents,426,"/// Return the number of expected events over the full range of all variables.; /// `norm`, the variable set as normalisation constant in the constructor,; /// will yield the number of events in the range set in the constructor. That is, the function returns; /// \f[; /// N = \mathrm{norm} \; \cdot \; \frac{\int_{(x_F,y_F)} \mathrm{pdf}(x,y) }{\int_{(x_C,y_F)} \mathrm{pdf}(x,y)}; /// \f]; /// Where \f$ x \f$ is the set of dependents with a restricted range (defined by `rangeName` in the constructor),; /// and \f$ y \f$ are the other dependents. \f$ x_C \f$ is the integration; /// of \f$ x \f$ over the restricted range, and \f$ x_F \f$ is the integration of; /// \f$ x \f$ over the full range. `norm` is the number of events given as parameter to the constructor.; ///; /// If the nested PDF can be extended, \f$ N \f$ is further scaled by its expected number of events.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:539,Integrability,depend,dependents,539,"/// Return the number of expected events over the full range of all variables.; /// `norm`, the variable set as normalisation constant in the constructor,; /// will yield the number of events in the range set in the constructor. That is, the function returns; /// \f[; /// N = \mathrm{norm} \; \cdot \; \frac{\int_{(x_F,y_F)} \mathrm{pdf}(x,y) }{\int_{(x_C,y_F)} \mathrm{pdf}(x,y)}; /// \f]; /// Where \f$ x \f$ is the set of dependents with a restricted range (defined by `rangeName` in the constructor),; /// and \f$ y \f$ are the other dependents. \f$ x_C \f$ is the integration; /// of \f$ x \f$ over the restricted range, and \f$ x_F \f$ is the integration of; /// \f$ x \f$ over the full range. `norm` is the number of events given as parameter to the constructor.; ///; /// If the nested PDF can be extended, \f$ N \f$ is further scaled by its expected number of events.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:570,Integrability,integrat,integration,570,"/// Return the number of expected events over the full range of all variables.; /// `norm`, the variable set as normalisation constant in the constructor,; /// will yield the number of events in the range set in the constructor. That is, the function returns; /// \f[; /// N = \mathrm{norm} \; \cdot \; \frac{\int_{(x_F,y_F)} \mathrm{pdf}(x,y) }{\int_{(x_C,y_F)} \mathrm{pdf}(x,y)}; /// \f]; /// Where \f$ x \f$ is the set of dependents with a restricted range (defined by `rangeName` in the constructor),; /// and \f$ y \f$ are the other dependents. \f$ x_C \f$ is the integration; /// of \f$ x \f$ over the restricted range, and \f$ x_F \f$ is the integration of; /// \f$ x \f$ over the full range. `norm` is the number of events given as parameter to the constructor.; ///; /// If the nested PDF can be extended, \f$ N \f$ is further scaled by its expected number of events.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:650,Integrability,integrat,integration,650,"/// Return the number of expected events over the full range of all variables.; /// `norm`, the variable set as normalisation constant in the constructor,; /// will yield the number of events in the range set in the constructor. That is, the function returns; /// \f[; /// N = \mathrm{norm} \; \cdot \; \frac{\int_{(x_F,y_F)} \mathrm{pdf}(x,y) }{\int_{(x_C,y_F)} \mathrm{pdf}(x,y)}; /// \f]; /// Where \f$ x \f$ is the set of dependents with a restricted range (defined by `rangeName` in the constructor),; /// and \f$ y \f$ are the other dependents. \f$ x_C \f$ is the integration; /// of \f$ x \f$ over the restricted range, and \f$ x_F \f$ is the integration of; /// \f$ x \f$ over the full range. `norm` is the number of events given as parameter to the constructor.; ///; /// If the nested PDF can be extended, \f$ N \f$ is further scaled by its expected number of events.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:68,Modifiability,variab,variables,68,"/// Return the number of expected events over the full range of all variables.; /// `norm`, the variable set as normalisation constant in the constructor,; /// will yield the number of events in the range set in the constructor. That is, the function returns; /// \f[; /// N = \mathrm{norm} \; \cdot \; \frac{\int_{(x_F,y_F)} \mathrm{pdf}(x,y) }{\int_{(x_C,y_F)} \mathrm{pdf}(x,y)}; /// \f]; /// Where \f$ x \f$ is the set of dependents with a restricted range (defined by `rangeName` in the constructor),; /// and \f$ y \f$ are the other dependents. \f$ x_C \f$ is the integration; /// of \f$ x \f$ over the restricted range, and \f$ x_F \f$ is the integration of; /// \f$ x \f$ over the full range. `norm` is the number of events given as parameter to the constructor.; ///; /// If the nested PDF can be extended, \f$ N \f$ is further scaled by its expected number of events.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:96,Modifiability,variab,variable,96,"/// Return the number of expected events over the full range of all variables.; /// `norm`, the variable set as normalisation constant in the constructor,; /// will yield the number of events in the range set in the constructor. That is, the function returns; /// \f[; /// N = \mathrm{norm} \; \cdot \; \frac{\int_{(x_F,y_F)} \mathrm{pdf}(x,y) }{\int_{(x_C,y_F)} \mathrm{pdf}(x,y)}; /// \f]; /// Where \f$ x \f$ is the set of dependents with a restricted range (defined by `rangeName` in the constructor),; /// and \f$ y \f$ are the other dependents. \f$ x_C \f$ is the integration; /// of \f$ x \f$ over the restricted range, and \f$ x_F \f$ is the integration of; /// \f$ x \f$ over the full range. `norm` is the number of events given as parameter to the constructor.; ///; /// If the nested PDF can be extended, \f$ N \f$ is further scaled by its expected number of events.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:806,Modifiability,extend,extended,806,"/// Return the number of expected events over the full range of all variables.; /// `norm`, the variable set as normalisation constant in the constructor,; /// will yield the number of events in the range set in the constructor. That is, the function returns; /// \f[; /// N = \mathrm{norm} \; \cdot \; \frac{\int_{(x_F,y_F)} \mathrm{pdf}(x,y) }{\int_{(x_C,y_F)} \mathrm{pdf}(x,y)}; /// \f]; /// Where \f$ x \f$ is the set of dependents with a restricted range (defined by `rangeName` in the constructor),; /// and \f$ y \f$ are the other dependents. \f$ x_C \f$ is the integration; /// of \f$ x \f$ over the restricted range, and \f$ x_F \f$ is the integration of; /// \f$ x \f$ over the full range. `norm` is the number of events given as parameter to the constructor.; ///; /// If the nested PDF can be extended, \f$ N \f$ is further scaled by its expected number of events.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooExtendPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:3,Testability,Test,Test,3,"// Test statistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:3,Deployability,Integrat,Integration,3,"// Integration and derivation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:3,Integrability,Integrat,Integration,3,"// Integration and derivation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:104,Integrability,interface,interface,104,"////////////////////////////////////////////////////////////////////////////////; /// Low-level factory interface for creating a RooRealVar with a given range and initial value",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:18,Modifiability,variab,variable,18,"// First check if variable already exists",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:10,Modifiability,variab,variable,10,"// Create variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:104,Integrability,interface,interface,104,"////////////////////////////////////////////////////////////////////////////////; /// Low-level factory interface for creating a RooCategory with a given list of state names. The State name list; /// can be of the form `name1,name2,name3` or of the form `name1=id1,name2=id2,name3=id3`",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:10,Modifiability,variab,variable,10,"// Create variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:104,Integrability,interface,interface,104,"////////////////////////////////////////////////////////////////////////////////; /// Low-level factory interface for creating a RooAbsPdf of a given class with a given list of input variables; /// The variable list varList should be of the form ""a,b,c"" where the interpretation of the argument is; /// dependent on the pdf. Set and List arguments can be passed by substituting a single argument with; /// the form (a,b,c), i.e. one can set varList to ""x,(a0,a1,a2)"" to pass a RooAbsReal and a RooArgSet as arguments.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:303,Integrability,depend,dependent,303,"////////////////////////////////////////////////////////////////////////////////; /// Low-level factory interface for creating a RooAbsPdf of a given class with a given list of input variables; /// The variable list varList should be of the form ""a,b,c"" where the interpretation of the argument is; /// dependent on the pdf. Set and List arguments can be passed by substituting a single argument with; /// the form (a,b,c), i.e. one can set varList to ""x,(a0,a1,a2)"" to pass a RooAbsReal and a RooArgSet as arguments.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:183,Modifiability,variab,variables,183,"////////////////////////////////////////////////////////////////////////////////; /// Low-level factory interface for creating a RooAbsPdf of a given class with a given list of input variables; /// The variable list varList should be of the form ""a,b,c"" where the interpretation of the argument is; /// dependent on the pdf. Set and List arguments can be passed by substituting a single argument with; /// the form (a,b,c), i.e. one can set varList to ""x,(a0,a1,a2)"" to pass a RooAbsReal and a RooArgSet as arguments.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:202,Modifiability,variab,variable,202,"////////////////////////////////////////////////////////////////////////////////; /// Low-level factory interface for creating a RooAbsPdf of a given class with a given list of input variables; /// The variable list varList should be of the form ""a,b,c"" where the interpretation of the argument is; /// dependent on the pdf. Set and List arguments can be passed by substituting a single argument with; /// the form (a,b,c), i.e. one can set varList to ""x,(a0,a1,a2)"" to pass a RooAbsReal and a RooArgSet as arguments.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:20,Modifiability,inherit,inherits,20,"// Check that class inherits from RooAbsPdf",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:12,Integrability,interface,interface,12,"// Try CINT interface",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:3,Deployability,Install,Install,3,"// Install argument in static data member to be accessed below through static CINT interface functions",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:83,Integrability,interface,interface,83,"// Install argument in static data member to be accessed below through static CINT interface functions",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:48,Security,access,accessed,48,"// Install argument in static data member to be accessed below through static CINT interface functions",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:52,Availability,error,error,52,"// Call CINT to perform constructor call. Catch any error thrown by argument conversion method",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:16,Performance,perform,perform,16,"// Call CINT to perform constructor call. Catch any error thrown by argument conversion method",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:4174,Integrability,interface,interfaced,4174,"D::name(pdf1|x,pdf2]` <td> Create product of conditional pdf `pdf1` given `x` and `pdf2`; /// <tr><td> `prod::name(a,b,c]` <td> Create production function with value `a*b*c`; /// <tr><td> `SIMUL::name(cat,a=pdf1,b=pdf2]` <td> Create simultaneous pdf index category `cat`. Make `pdf1` to state `a`, `pdf2` to state `b`; /// <tr><td> `EXPR::name(<expr>,var,...]` <td> Create a generic pdf that interprets the given expression; /// <tr><td> `expr::name(<expr>,var,...]` <td> Create a generic function that interprets the given expression; /// <tr><td> `taylorexpand::name(func,{var1,var2,...},val,order,eps1,eps2]` <td> Create a taylor expansion of func w.r.t. `{var1,var2,..}` around `val` up to `order`; /// <tr><td> `lagrangianmorph::name(""$fileName('infile.root'),$observableName(obs),$couplings({var1[-10,10],var2[-10,10]}),$folders({'sample1,sample2,sample3'}),$NewPhysics(var1=1,var2=0)""]` <td> Create a RooLagrangianMorphFunc function for the observable obs as a function of `var1`, `var2` based on input templates stored in the folders in the file; /// </table>; ///; /// The functionality of high-level object creation tools like RooSimWSTool, RooCustomizer and RooClassFactory; /// is also interfaced through meta-types in the factory.; /// <table>; /// <tr><th> Interface to %RooSimWSTool <th>; /// <tr><td> `SIMCLONE::name( modelPdf, $ParamSplit(...), $ParamSplitConstrained(...), $Restrict(...) ]`; /// <td> Clone-and-customize modelPdf according to ParamSplit and ParamSplitConstrained(); /// specifications and return a RooSimultaneous pdf of all built clones; ///; /// <tr><td> `MSIMCLONE::name( masterIndex, $AddPdf(mstate1, modelPdf1, $ParamSplit(...)), $AddPdf(mstate2,modelPdf2),...) ]`; /// <td> Clone-and-customize multiple models (modelPdf1,modelPdf2) according to ParamSplit and; /// ParamSplitConstrained() specifications and return a RooSimultaneous pdf of all built clones,; /// using the specified master index to map prototype pdfs to master states; /// <tr><th> Interface t",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:4247,Integrability,Interface,Interface,4247,"df2` to state `b`; /// <tr><td> `EXPR::name(<expr>,var,...]` <td> Create a generic pdf that interprets the given expression; /// <tr><td> `expr::name(<expr>,var,...]` <td> Create a generic function that interprets the given expression; /// <tr><td> `taylorexpand::name(func,{var1,var2,...},val,order,eps1,eps2]` <td> Create a taylor expansion of func w.r.t. `{var1,var2,..}` around `val` up to `order`; /// <tr><td> `lagrangianmorph::name(""$fileName('infile.root'),$observableName(obs),$couplings({var1[-10,10],var2[-10,10]}),$folders({'sample1,sample2,sample3'}),$NewPhysics(var1=1,var2=0)""]` <td> Create a RooLagrangianMorphFunc function for the observable obs as a function of `var1`, `var2` based on input templates stored in the folders in the file; /// </table>; ///; /// The functionality of high-level object creation tools like RooSimWSTool, RooCustomizer and RooClassFactory; /// is also interfaced through meta-types in the factory.; /// <table>; /// <tr><th> Interface to %RooSimWSTool <th>; /// <tr><td> `SIMCLONE::name( modelPdf, $ParamSplit(...), $ParamSplitConstrained(...), $Restrict(...) ]`; /// <td> Clone-and-customize modelPdf according to ParamSplit and ParamSplitConstrained(); /// specifications and return a RooSimultaneous pdf of all built clones; ///; /// <tr><td> `MSIMCLONE::name( masterIndex, $AddPdf(mstate1, modelPdf1, $ParamSplit(...)), $AddPdf(mstate2,modelPdf2),...) ]`; /// <td> Clone-and-customize multiple models (modelPdf1,modelPdf2) according to ParamSplit and; /// ParamSplitConstrained() specifications and return a RooSimultaneous pdf of all built clones,; /// using the specified master index to map prototype pdfs to master states; /// <tr><th> Interface to %RooCustomizer <th>; /// <tr><td> `EDIT::name( orig, substNode=origNode), ... ]` <td> Create a clone of input object orig, with the specified replacements operations executed; /// <tr><td> `EDIT::name( orig, origNode=$REMOVE(), ... ]` <td> Create clone of input removing term origNode from all PRO",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:4966,Integrability,Interface,Interface,4966,")""]` <td> Create a RooLagrangianMorphFunc function for the observable obs as a function of `var1`, `var2` based on input templates stored in the folders in the file; /// </table>; ///; /// The functionality of high-level object creation tools like RooSimWSTool, RooCustomizer and RooClassFactory; /// is also interfaced through meta-types in the factory.; /// <table>; /// <tr><th> Interface to %RooSimWSTool <th>; /// <tr><td> `SIMCLONE::name( modelPdf, $ParamSplit(...), $ParamSplitConstrained(...), $Restrict(...) ]`; /// <td> Clone-and-customize modelPdf according to ParamSplit and ParamSplitConstrained(); /// specifications and return a RooSimultaneous pdf of all built clones; ///; /// <tr><td> `MSIMCLONE::name( masterIndex, $AddPdf(mstate1, modelPdf1, $ParamSplit(...)), $AddPdf(mstate2,modelPdf2),...) ]`; /// <td> Clone-and-customize multiple models (modelPdf1,modelPdf2) according to ParamSplit and; /// ParamSplitConstrained() specifications and return a RooSimultaneous pdf of all built clones,; /// using the specified master index to map prototype pdfs to master states; /// <tr><th> Interface to %RooCustomizer <th>; /// <tr><td> `EDIT::name( orig, substNode=origNode), ... ]` <td> Create a clone of input object orig, with the specified replacements operations executed; /// <tr><td> `EDIT::name( orig, origNode=$REMOVE(), ... ]` <td> Create clone of input removing term origNode from all PROD() terms that contained it; /// <tr><td> `EDIT::name( orig, origNode=$REMOVE(prodname,...), ... ]` <td> As above, but restrict removal of origNode to PROD term(s) prodname,...; ///; ///; /// <tr><th> Interface to %RooClassFactory <th>; /// <tr><td> `CEXPR::name(<expr>,var,...]` <td> Create a custom compiled pdf that evaluates the given expression; /// <tr><td> `cexpr::name(<expr>,var,...]` <td> Create a custom compiled function that evaluates the given expression; ///; ///; /// <tr><td> `$MetaType(...)` <td> Meta argument that does not result in construction of an object but is use",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:5477,Integrability,Interface,Interface,5477," /// <table>; /// <tr><th> Interface to %RooSimWSTool <th>; /// <tr><td> `SIMCLONE::name( modelPdf, $ParamSplit(...), $ParamSplitConstrained(...), $Restrict(...) ]`; /// <td> Clone-and-customize modelPdf according to ParamSplit and ParamSplitConstrained(); /// specifications and return a RooSimultaneous pdf of all built clones; ///; /// <tr><td> `MSIMCLONE::name( masterIndex, $AddPdf(mstate1, modelPdf1, $ParamSplit(...)), $AddPdf(mstate2,modelPdf2),...) ]`; /// <td> Clone-and-customize multiple models (modelPdf1,modelPdf2) according to ParamSplit and; /// ParamSplitConstrained() specifications and return a RooSimultaneous pdf of all built clones,; /// using the specified master index to map prototype pdfs to master states; /// <tr><th> Interface to %RooCustomizer <th>; /// <tr><td> `EDIT::name( orig, substNode=origNode), ... ]` <td> Create a clone of input object orig, with the specified replacements operations executed; /// <tr><td> `EDIT::name( orig, origNode=$REMOVE(), ... ]` <td> Create clone of input removing term origNode from all PROD() terms that contained it; /// <tr><td> `EDIT::name( orig, origNode=$REMOVE(prodname,...), ... ]` <td> As above, but restrict removal of origNode to PROD term(s) prodname,...; ///; ///; /// <tr><th> Interface to %RooClassFactory <th>; /// <tr><td> `CEXPR::name(<expr>,var,...]` <td> Create a custom compiled pdf that evaluates the given expression; /// <tr><td> `cexpr::name(<expr>,var,...]` <td> Create a custom compiled function that evaluates the given expression; ///; ///; /// <tr><td> `$MetaType(...)` <td> Meta argument that does not result in construction of an object but is used logically organize; /// input arguments in certain operator pdf constructions. The defined meta arguments are context dependent.; /// The only meta argument that is defined globally is `$Alias(typeName,aliasName)` to; /// define aliases for type names. For the definition of meta arguments in operator pdfs; /// see the definitions below.; /// </table>",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:5985,Integrability,depend,dependent,5985," /// <table>; /// <tr><th> Interface to %RooSimWSTool <th>; /// <tr><td> `SIMCLONE::name( modelPdf, $ParamSplit(...), $ParamSplitConstrained(...), $Restrict(...) ]`; /// <td> Clone-and-customize modelPdf according to ParamSplit and ParamSplitConstrained(); /// specifications and return a RooSimultaneous pdf of all built clones; ///; /// <tr><td> `MSIMCLONE::name( masterIndex, $AddPdf(mstate1, modelPdf1, $ParamSplit(...)), $AddPdf(mstate2,modelPdf2),...) ]`; /// <td> Clone-and-customize multiple models (modelPdf1,modelPdf2) according to ParamSplit and; /// ParamSplitConstrained() specifications and return a RooSimultaneous pdf of all built clones,; /// using the specified master index to map prototype pdfs to master states; /// <tr><th> Interface to %RooCustomizer <th>; /// <tr><td> `EDIT::name( orig, substNode=origNode), ... ]` <td> Create a clone of input object orig, with the specified replacements operations executed; /// <tr><td> `EDIT::name( orig, origNode=$REMOVE(), ... ]` <td> Create clone of input removing term origNode from all PROD() terms that contained it; /// <tr><td> `EDIT::name( orig, origNode=$REMOVE(prodname,...), ... ]` <td> As above, but restrict removal of origNode to PROD term(s) prodname,...; ///; ///; /// <tr><th> Interface to %RooClassFactory <th>; /// <tr><td> `CEXPR::name(<expr>,var,...]` <td> Create a custom compiled pdf that evaluates the given expression; /// <tr><td> `cexpr::name(<expr>,var,...]` <td> Create a custom compiled function that evaluates the given expression; ///; ///; /// <tr><td> `$MetaType(...)` <td> Meta argument that does not result in construction of an object but is used logically organize; /// input arguments in certain operator pdf constructions. The defined meta arguments are context dependent.; /// The only meta argument that is defined globally is `$Alias(typeName,aliasName)` to; /// define aliases for type names. For the definition of meta arguments in operator pdfs; /// see the definitions below.; /// </table>",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:177,Modifiability,variab,variables,177,"////////////////////////////////////////////////////////////////////////////////; /// Create a RooFit object from the given expression.; ///; /// <table>; /// <tr><th> Creating variables <th>; /// <tr><td> `x[-10,10]` <td> Create variable x with given range and put it in workspace; /// <tr><td> `x[3,-10,10]` <td> Create variable x with given range and initial value and put it in workspace; /// <tr><td> `x[3]` <td> Create variable x with given constant value; /// <tr><td> `<numeric literal>` <td> Numeric literal expressions (0.5, -3 etc..) are converted to a RooConst(<numeric literal>); /// wherever a RooAbsReal or RooAbsArg argument is expected; /// <tr><th> Creating categories <th>; /// <tr><td> `c[lep,kao,nt1,nt2]` <td> Create category c with given state names; /// <tr><td> `tag[B0=1,B0bar=-1]` <td> Create category tag with given state names and index assignments; /// <tr><th> Creating functions and pdfs <th>; /// <tr><td> `MyPdf::g(x,m,s)` <td> Create pdf or function of type MyPdf with name g with argument x,m,s; /// Interpretation and number of arguments are mapped to the constructor arguments of the class; /// (after the name and title).; /// <tr><td> `MyPdf(x,m,s)` <td> As above, but with an implicitly defined (unique) object name; /// <tr><th> Creating sets and lists (to be used as inputs above) <th>; /// <tr><td> `{a,b,c}` <td> Create RooArgSet or RooArgList (as determined by context) from given contents; /// </table>; ///; ///; /// Objects that are not created, are assumed to exist in the workspace; /// Object creation expressions as shown above can be nested, e.g. one can do; /// ```; /// RooGaussian::g(x[-10,10],m[0],3); /// ```; /// to create a pdf and its variables in one go. This nesting can be applied recursively e.g.; /// ```; /// SUM::model( f[0.5,0,1] * RooGaussian::g( x[-10,10], m[0], 3] ),; /// RooChebychev::c( x, {a0[0.1],a1[0.2],a2[-0.3]} )); /// ```; /// creates the sum of a Gaussian and a Chebychev and all its variables.; ///; ///; /// A separ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:230,Modifiability,variab,variable,230,"////////////////////////////////////////////////////////////////////////////////; /// Create a RooFit object from the given expression.; ///; /// <table>; /// <tr><th> Creating variables <th>; /// <tr><td> `x[-10,10]` <td> Create variable x with given range and put it in workspace; /// <tr><td> `x[3,-10,10]` <td> Create variable x with given range and initial value and put it in workspace; /// <tr><td> `x[3]` <td> Create variable x with given constant value; /// <tr><td> `<numeric literal>` <td> Numeric literal expressions (0.5, -3 etc..) are converted to a RooConst(<numeric literal>); /// wherever a RooAbsReal or RooAbsArg argument is expected; /// <tr><th> Creating categories <th>; /// <tr><td> `c[lep,kao,nt1,nt2]` <td> Create category c with given state names; /// <tr><td> `tag[B0=1,B0bar=-1]` <td> Create category tag with given state names and index assignments; /// <tr><th> Creating functions and pdfs <th>; /// <tr><td> `MyPdf::g(x,m,s)` <td> Create pdf or function of type MyPdf with name g with argument x,m,s; /// Interpretation and number of arguments are mapped to the constructor arguments of the class; /// (after the name and title).; /// <tr><td> `MyPdf(x,m,s)` <td> As above, but with an implicitly defined (unique) object name; /// <tr><th> Creating sets and lists (to be used as inputs above) <th>; /// <tr><td> `{a,b,c}` <td> Create RooArgSet or RooArgList (as determined by context) from given contents; /// </table>; ///; ///; /// Objects that are not created, are assumed to exist in the workspace; /// Object creation expressions as shown above can be nested, e.g. one can do; /// ```; /// RooGaussian::g(x[-10,10],m[0],3); /// ```; /// to create a pdf and its variables in one go. This nesting can be applied recursively e.g.; /// ```; /// SUM::model( f[0.5,0,1] * RooGaussian::g( x[-10,10], m[0], 3] ),; /// RooChebychev::c( x, {a0[0.1],a1[0.2],a2[-0.3]} )); /// ```; /// creates the sum of a Gaussian and a Chebychev and all its variables.; ///; ///; /// A separ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:322,Modifiability,variab,variable,322,"////////////////////////////////////////////////////////////////////////////////; /// Create a RooFit object from the given expression.; ///; /// <table>; /// <tr><th> Creating variables <th>; /// <tr><td> `x[-10,10]` <td> Create variable x with given range and put it in workspace; /// <tr><td> `x[3,-10,10]` <td> Create variable x with given range and initial value and put it in workspace; /// <tr><td> `x[3]` <td> Create variable x with given constant value; /// <tr><td> `<numeric literal>` <td> Numeric literal expressions (0.5, -3 etc..) are converted to a RooConst(<numeric literal>); /// wherever a RooAbsReal or RooAbsArg argument is expected; /// <tr><th> Creating categories <th>; /// <tr><td> `c[lep,kao,nt1,nt2]` <td> Create category c with given state names; /// <tr><td> `tag[B0=1,B0bar=-1]` <td> Create category tag with given state names and index assignments; /// <tr><th> Creating functions and pdfs <th>; /// <tr><td> `MyPdf::g(x,m,s)` <td> Create pdf or function of type MyPdf with name g with argument x,m,s; /// Interpretation and number of arguments are mapped to the constructor arguments of the class; /// (after the name and title).; /// <tr><td> `MyPdf(x,m,s)` <td> As above, but with an implicitly defined (unique) object name; /// <tr><th> Creating sets and lists (to be used as inputs above) <th>; /// <tr><td> `{a,b,c}` <td> Create RooArgSet or RooArgList (as determined by context) from given contents; /// </table>; ///; ///; /// Objects that are not created, are assumed to exist in the workspace; /// Object creation expressions as shown above can be nested, e.g. one can do; /// ```; /// RooGaussian::g(x[-10,10],m[0],3); /// ```; /// to create a pdf and its variables in one go. This nesting can be applied recursively e.g.; /// ```; /// SUM::model( f[0.5,0,1] * RooGaussian::g( x[-10,10], m[0], 3] ),; /// RooChebychev::c( x, {a0[0.1],a1[0.2],a2[-0.3]} )); /// ```; /// creates the sum of a Gaussian and a Chebychev and all its variables.; ///; ///; /// A separ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:425,Modifiability,variab,variable,425,"////////////////////////////////////////////////////////////////////////////////; /// Create a RooFit object from the given expression.; ///; /// <table>; /// <tr><th> Creating variables <th>; /// <tr><td> `x[-10,10]` <td> Create variable x with given range and put it in workspace; /// <tr><td> `x[3,-10,10]` <td> Create variable x with given range and initial value and put it in workspace; /// <tr><td> `x[3]` <td> Create variable x with given constant value; /// <tr><td> `<numeric literal>` <td> Numeric literal expressions (0.5, -3 etc..) are converted to a RooConst(<numeric literal>); /// wherever a RooAbsReal or RooAbsArg argument is expected; /// <tr><th> Creating categories <th>; /// <tr><td> `c[lep,kao,nt1,nt2]` <td> Create category c with given state names; /// <tr><td> `tag[B0=1,B0bar=-1]` <td> Create category tag with given state names and index assignments; /// <tr><th> Creating functions and pdfs <th>; /// <tr><td> `MyPdf::g(x,m,s)` <td> Create pdf or function of type MyPdf with name g with argument x,m,s; /// Interpretation and number of arguments are mapped to the constructor arguments of the class; /// (after the name and title).; /// <tr><td> `MyPdf(x,m,s)` <td> As above, but with an implicitly defined (unique) object name; /// <tr><th> Creating sets and lists (to be used as inputs above) <th>; /// <tr><td> `{a,b,c}` <td> Create RooArgSet or RooArgList (as determined by context) from given contents; /// </table>; ///; ///; /// Objects that are not created, are assumed to exist in the workspace; /// Object creation expressions as shown above can be nested, e.g. one can do; /// ```; /// RooGaussian::g(x[-10,10],m[0],3); /// ```; /// to create a pdf and its variables in one go. This nesting can be applied recursively e.g.; /// ```; /// SUM::model( f[0.5,0,1] * RooGaussian::g( x[-10,10], m[0], 3] ),; /// RooChebychev::c( x, {a0[0.1],a1[0.2],a2[-0.3]} )); /// ```; /// creates the sum of a Gaussian and a Chebychev and all its variables.; ///; ///; /// A separ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:1697,Modifiability,variab,variables,1697,"<tr><th> Creating categories <th>; /// <tr><td> `c[lep,kao,nt1,nt2]` <td> Create category c with given state names; /// <tr><td> `tag[B0=1,B0bar=-1]` <td> Create category tag with given state names and index assignments; /// <tr><th> Creating functions and pdfs <th>; /// <tr><td> `MyPdf::g(x,m,s)` <td> Create pdf or function of type MyPdf with name g with argument x,m,s; /// Interpretation and number of arguments are mapped to the constructor arguments of the class; /// (after the name and title).; /// <tr><td> `MyPdf(x,m,s)` <td> As above, but with an implicitly defined (unique) object name; /// <tr><th> Creating sets and lists (to be used as inputs above) <th>; /// <tr><td> `{a,b,c}` <td> Create RooArgSet or RooArgList (as determined by context) from given contents; /// </table>; ///; ///; /// Objects that are not created, are assumed to exist in the workspace; /// Object creation expressions as shown above can be nested, e.g. one can do; /// ```; /// RooGaussian::g(x[-10,10],m[0],3); /// ```; /// to create a pdf and its variables in one go. This nesting can be applied recursively e.g.; /// ```; /// SUM::model( f[0.5,0,1] * RooGaussian::g( x[-10,10], m[0], 3] ),; /// RooChebychev::c( x, {a0[0.1],a1[0.2],a2[-0.3]} )); /// ```; /// creates the sum of a Gaussian and a Chebychev and all its variables.; ///; ///; /// A separate series of operator meta-type exists to simplify the construction of composite expressions; /// meta-types in all capitals (SUM) create pdfs, meta types in lower case (sum) create; /// functions.; ///; /// <table>; /// <tr><th> Expression <th> Effect; /// <tr><td> `SUM::name(f1*pdf1,f2*pdf2,pdf3]` <td> Create sum pdf name with value `f1*pdf1+f2*pdf2+(1-f1-f2)*pdf3`; /// <tr><td> `RSUM::name(f1*pdf1,f2*pdf2,pdf3]` <td> Create recursive sum pdf name with value `f1*pdf1 + (1-f1)(f2*pdf2 + (1-f2)pdf3)`; /// <tr><td> `ASUM::name(f1*amp1,f2*amp2,amp3]` <td> Create sum pdf name with value `f1*amp1+f2*amp2+(1-f1-f2)*amp3` where `amplX` are amplitudes of t",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:1968,Modifiability,variab,variables,1968,"><td> `MyPdf::g(x,m,s)` <td> Create pdf or function of type MyPdf with name g with argument x,m,s; /// Interpretation and number of arguments are mapped to the constructor arguments of the class; /// (after the name and title).; /// <tr><td> `MyPdf(x,m,s)` <td> As above, but with an implicitly defined (unique) object name; /// <tr><th> Creating sets and lists (to be used as inputs above) <th>; /// <tr><td> `{a,b,c}` <td> Create RooArgSet or RooArgList (as determined by context) from given contents; /// </table>; ///; ///; /// Objects that are not created, are assumed to exist in the workspace; /// Object creation expressions as shown above can be nested, e.g. one can do; /// ```; /// RooGaussian::g(x[-10,10],m[0],3); /// ```; /// to create a pdf and its variables in one go. This nesting can be applied recursively e.g.; /// ```; /// SUM::model( f[0.5,0,1] * RooGaussian::g( x[-10,10], m[0], 3] ),; /// RooChebychev::c( x, {a0[0.1],a1[0.2],a2[-0.3]} )); /// ```; /// creates the sum of a Gaussian and a Chebychev and all its variables.; ///; ///; /// A separate series of operator meta-type exists to simplify the construction of composite expressions; /// meta-types in all capitals (SUM) create pdfs, meta types in lower case (sum) create; /// functions.; ///; /// <table>; /// <tr><th> Expression <th> Effect; /// <tr><td> `SUM::name(f1*pdf1,f2*pdf2,pdf3]` <td> Create sum pdf name with value `f1*pdf1+f2*pdf2+(1-f1-f2)*pdf3`; /// <tr><td> `RSUM::name(f1*pdf1,f2*pdf2,pdf3]` <td> Create recursive sum pdf name with value `f1*pdf1 + (1-f1)(f2*pdf2 + (1-f2)pdf3)`; /// <tr><td> `ASUM::name(f1*amp1,f2*amp2,amp3]` <td> Create sum pdf name with value `f1*amp1+f2*amp2+(1-f1-f2)*amp3` where `amplX` are amplitudes of type RooAbsReal; /// <tr><td> `sum::name(a1,a2,a3]` <td> Create sum function with value `a1+a2+a3`; /// <tr><td> `sum::name(a1*b1,a2*b2,a3*b 3]` <td> Create sum function with value `a1*b1+a2*b2+a3*b3`; /// <tr><td> `PROD::name(pdf1,pdf2]` <td> Create product of pdf with `name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:3763,Modifiability,coupling,couplings,3763,"D::name(pdf1|x,pdf2]` <td> Create product of conditional pdf `pdf1` given `x` and `pdf2`; /// <tr><td> `prod::name(a,b,c]` <td> Create production function with value `a*b*c`; /// <tr><td> `SIMUL::name(cat,a=pdf1,b=pdf2]` <td> Create simultaneous pdf index category `cat`. Make `pdf1` to state `a`, `pdf2` to state `b`; /// <tr><td> `EXPR::name(<expr>,var,...]` <td> Create a generic pdf that interprets the given expression; /// <tr><td> `expr::name(<expr>,var,...]` <td> Create a generic function that interprets the given expression; /// <tr><td> `taylorexpand::name(func,{var1,var2,...},val,order,eps1,eps2]` <td> Create a taylor expansion of func w.r.t. `{var1,var2,..}` around `val` up to `order`; /// <tr><td> `lagrangianmorph::name(""$fileName('infile.root'),$observableName(obs),$couplings({var1[-10,10],var2[-10,10]}),$folders({'sample1,sample2,sample3'}),$NewPhysics(var1=1,var2=0)""]` <td> Create a RooLagrangianMorphFunc function for the observable obs as a function of `var1`, `var2` based on input templates stored in the folders in the file; /// </table>; ///; /// The functionality of high-level object creation tools like RooSimWSTool, RooCustomizer and RooClassFactory; /// is also interfaced through meta-types in the factory.; /// <table>; /// <tr><th> Interface to %RooSimWSTool <th>; /// <tr><td> `SIMCLONE::name( modelPdf, $ParamSplit(...), $ParamSplitConstrained(...), $Restrict(...) ]`; /// <td> Clone-and-customize modelPdf according to ParamSplit and ParamSplitConstrained(); /// specifications and return a RooSimultaneous pdf of all built clones; ///; /// <tr><td> `MSIMCLONE::name( masterIndex, $AddPdf(mstate1, modelPdf1, $ParamSplit(...)), $AddPdf(mstate2,modelPdf2),...) ]`; /// <td> Clone-and-customize multiple models (modelPdf1,modelPdf2) according to ParamSplit and; /// ParamSplitConstrained() specifications and return a RooSimultaneous pdf of all built clones,; /// using the specified master index to map prototype pdfs to master states; /// <tr><th> Interface t",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:5867,Testability,log,logically,5867," /// <table>; /// <tr><th> Interface to %RooSimWSTool <th>; /// <tr><td> `SIMCLONE::name( modelPdf, $ParamSplit(...), $ParamSplitConstrained(...), $Restrict(...) ]`; /// <td> Clone-and-customize modelPdf according to ParamSplit and ParamSplitConstrained(); /// specifications and return a RooSimultaneous pdf of all built clones; ///; /// <tr><td> `MSIMCLONE::name( masterIndex, $AddPdf(mstate1, modelPdf1, $ParamSplit(...)), $AddPdf(mstate2,modelPdf2),...) ]`; /// <td> Clone-and-customize multiple models (modelPdf1,modelPdf2) according to ParamSplit and; /// ParamSplitConstrained() specifications and return a RooSimultaneous pdf of all built clones,; /// using the specified master index to map prototype pdfs to master states; /// <tr><th> Interface to %RooCustomizer <th>; /// <tr><td> `EDIT::name( orig, substNode=origNode), ... ]` <td> Create a clone of input object orig, with the specified replacements operations executed; /// <tr><td> `EDIT::name( orig, origNode=$REMOVE(), ... ]` <td> Create clone of input removing term origNode from all PROD() terms that contained it; /// <tr><td> `EDIT::name( orig, origNode=$REMOVE(prodname,...), ... ]` <td> As above, but restrict removal of origNode to PROD term(s) prodname,...; ///; ///; /// <tr><th> Interface to %RooClassFactory <th>; /// <tr><td> `CEXPR::name(<expr>,var,...]` <td> Create a custom compiled pdf that evaluates the given expression; /// <tr><td> `cexpr::name(<expr>,var,...]` <td> Create a custom compiled function that evaluates the given expression; ///; ///; /// <tr><td> `$MetaType(...)` <td> Meta argument that does not result in construction of an object but is used logically organize; /// input arguments in certain operator pdf constructions. The defined meta arguments are context dependent.; /// The only meta argument that is defined globally is `$Alias(typeName,aliasName)` to; /// define aliases for type names. For the definition of meta arguments in operator pdfs; /// see the definitions below.; /// </table>",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:2044,Usability,simpl,simplify,2044," the constructor arguments of the class; /// (after the name and title).; /// <tr><td> `MyPdf(x,m,s)` <td> As above, but with an implicitly defined (unique) object name; /// <tr><th> Creating sets and lists (to be used as inputs above) <th>; /// <tr><td> `{a,b,c}` <td> Create RooArgSet or RooArgList (as determined by context) from given contents; /// </table>; ///; ///; /// Objects that are not created, are assumed to exist in the workspace; /// Object creation expressions as shown above can be nested, e.g. one can do; /// ```; /// RooGaussian::g(x[-10,10],m[0],3); /// ```; /// to create a pdf and its variables in one go. This nesting can be applied recursively e.g.; /// ```; /// SUM::model( f[0.5,0,1] * RooGaussian::g( x[-10,10], m[0], 3] ),; /// RooChebychev::c( x, {a0[0.1],a1[0.2],a2[-0.3]} )); /// ```; /// creates the sum of a Gaussian and a Chebychev and all its variables.; ///; ///; /// A separate series of operator meta-type exists to simplify the construction of composite expressions; /// meta-types in all capitals (SUM) create pdfs, meta types in lower case (sum) create; /// functions.; ///; /// <table>; /// <tr><th> Expression <th> Effect; /// <tr><td> `SUM::name(f1*pdf1,f2*pdf2,pdf3]` <td> Create sum pdf name with value `f1*pdf1+f2*pdf2+(1-f1-f2)*pdf3`; /// <tr><td> `RSUM::name(f1*pdf1,f2*pdf2,pdf3]` <td> Create recursive sum pdf name with value `f1*pdf1 + (1-f1)(f2*pdf2 + (1-f2)pdf3)`; /// <tr><td> `ASUM::name(f1*amp1,f2*amp2,amp3]` <td> Create sum pdf name with value `f1*amp1+f2*amp2+(1-f1-f2)*amp3` where `amplX` are amplitudes of type RooAbsReal; /// <tr><td> `sum::name(a1,a2,a3]` <td> Create sum function with value `a1+a2+a3`; /// <tr><td> `sum::name(a1*b1,a2*b2,a3*b 3]` <td> Create sum function with value `a1*b1+a2*b2+a3*b3`; /// <tr><td> `PROD::name(pdf1,pdf2]` <td> Create product of pdf with `name` with given input pdfs; /// <tr><td> `PROD::name(pdf1|x,pdf2]` <td> Create product of conditional pdf `pdf1` given `x` and `pdf2`; /// <tr><td> `prod::nam",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:70,Performance,perform,perform,70,"// cout << ""RooFactoryWSTool::process() "" << expr << endl ;; // First perform basic syntax check",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:3,Energy Efficiency,Allocate,Allocate,3,"// Allocate work buffer",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:9,Availability,error,error,9,"// Clear error count and start a transaction in the workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:3,Usability,Clear,Clear,3,"// Clear error count and start a transaction in the workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:20,Availability,error,errors,20,"// If there were no errors commit the transaction, cancel it otherwise",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:180,Energy Efficiency,reduce,reduced,180,"////////////////////////////////////////////////////////////////////////////////; /// Process a single high-level expression or list of; /// expressions. The returned string a the reduced expression where; /// all inline object creations have been executed and substituted; /// with the name of the created object; ///; /// - e.g. `RooGaussian::g(x,m,s)` --> `g`; /// - e.g. `{x(-10,10),s}` --> `{x,s}`",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:3,Energy Efficiency,Allocate,Allocate,3,"// Allocate and fill work buffer",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:152,Energy Efficiency,reduce,reduced,152,"////////////////////////////////////////////////////////////////////////////////; /// Process a single high-level expression. The returned string a the reduced; /// expression where all inline object creations have been executed and substituted; /// with the name of the created object; ///; /// - e.g. `RooGaussian::g(x,m,s)` --> `g`; /// - e.g. `x[-10,10]` --> `x`",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:3,Energy Efficiency,Allocate,Allocate,3,"// Allocate and fill work buffer",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:10,Modifiability,variab,variable,10,"// Create variable argument",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:10,Energy Efficiency,reduce,reduced,10,"// Return reduced token with suffix",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:153,Energy Efficiency,reduce,reduced,153,"////////////////////////////////////////////////////////////////////////////////; /// Process a list of high-level expression. The returned string a the reduced; /// expression list where all inline object creations have been executed and substituted; /// with the name of the created object; ///; /// - E.g. `{x(-10,10),s}` --> `{x,s}`",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:3,Energy Efficiency,Allocate,Allocate,3,"// Allocate and fill work buffer",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:47,Energy Efficiency,reduce,reduced,47,"// Process each argument in list and construct reduced; // expression to be returned",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:211,Modifiability,variab,variable,211,"////////////////////////////////////////////////////////////////////////////////; /// Glue function between high-level syntax and low-level factory call to createVariable:; /// Process a parsed call to create a variable named `func`; ///; /// If initial token is non-numeric, a RooCategory will be created, and the args are interpreted; /// as either state names or `name=id` assignments. Otherwise a RooRealvar is created and the; /// arg list is interpreted as follows:; /// - If list has two args, these are interpreted as `xmin,xmax`; /// - If list has three args, these are interpreted as `xinit,xmin,xmax`; /// - If list has one arg, this is interpreted as `xinit` and the variable is set as constant",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:679,Modifiability,variab,variable,679,"////////////////////////////////////////////////////////////////////////////////; /// Glue function between high-level syntax and low-level factory call to createVariable:; /// Process a parsed call to create a variable named `func`; ///; /// If initial token is non-numeric, a RooCategory will be created, and the args are interpreted; /// as either state names or `name=id` assignments. Otherwise a RooRealvar is created and the; /// arg list is interpreted as follows:; /// - If list has two args, these are interpreted as `xmin,xmax`; /// - If list has three args, these are interpreted as `xinit,xmin,xmax`; /// - If list has one arg, this is interpreted as `xinit` and the variable is set as constant",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:33,Modifiability,variab,variable,33,"// One argument, create constant variable with given value",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:25,Modifiability,variab,variable,25,"// Two arguments, create variable with given range",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:27,Modifiability,variab,variable,27,"// Three arguments, create variable with given initial value and range",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:385,Energy Efficiency,reduce,reduced,385,"////////////////////////////////////////////////////////////////////////////////; /// Glue function between high-level syntax and low-level factory call to createArg:; /// Process a parsed call to create a pdf named `func`; ///; /// The func arg is interpreted as ClassName::ObjectName and the arglist is passed; /// verbatim to createArg. The received arglist is expected to be fully reduced (i.e.; /// all inline object creations must have been compiled)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:3,Energy Efficiency,Allocate,Allocate,3,"// Allocate and fill work buffer",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:86,Energy Efficiency,Allocate,Allocate,86,"////////////////////////////////////////////////////////////////////////////////; /// Allocate and fill work buffer",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:173,Availability,error,errors,173,"////////////////////////////////////////////////////////////////////////////////; /// Perform basic syntax on given factory expression. If function returns; /// true syntax errors are found.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform basic syntax on given factory expression. If function returns; /// true syntax errors are found.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// CINT constructor interface, return constructor string argument `#idx` as RooAbsArg reference found in workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// CINT constructor interface, return constructor string argument `#idx` as RooAbsReal reference found in workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// CINT constructor interface, return constructor string argument `#idx` as RooAbsRealLValue reference found in workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:37,Availability,error,error,37,"// If arg is a numeric string, throw error as lvalue is required",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// CINT constructor interface, return constructor string argument `#idx` as RooRealVar reference found in workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// CINT constructor interface, return constructor string argument `#idx` as RooAbsPdf reference found in workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// CINT constructor interface, return constructor string argument `#idx` as RooResolutionModel reference found in workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// CINT constructor interface, return constructor string argument `#idx` as RooAbsCategory reference found in workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// CINT constructor interface, return constructor string argument `#idx` as RooAbsCategoryLValue reference found in workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// CINT constructor interface, return constructor string argument `#idx` as RooCategory reference found in workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// CINT constructor interface, return constructor string argument `#idx` as RooArgSet of objects found in workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// CINT constructor interface, return constructor string argument `#idx` as RooArgList of objects found in workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// CINT constructor interface, return constructor string argument `#idx` as RooAbsData object found in workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// CINT constructor interface, return constructor string argument `#idx` as RooDataHist object found in workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// CINT constructor interface, return constructor string argument `#idx` as RooDataSet object found in workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// CINT constructor interface, return constructor string argument `#idx` as const char*",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// CINT constructor interface, return constructor string argument `#idx` as Int_t",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// CINT constructor interface, return constructor string argument `#idx` as double",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:2,Modifiability,extend,extended,2,/*extended=*/,MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:2,Modifiability,extend,extended,2,/*extended=*/,MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFactoryWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:4635,Availability,down,download,4635,"improve the result if coarse binnings are chosen. These can be; /// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure --prefix=/home/myself/fftw' followed by 'make install'.; /// Substitute /home/myself/fftw with a directory of your choice. This; /// procedure will install FFTW in the location designated by you; ///; /// 4) Start from a source installation of ROOT.; /// Look up and set the proper paths for R",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:1215,Deployability,install,installation,1215," *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooFFTConvPdf; /// \ingroup Roofitcore; ///; /// This class implements a generic one-dimensional numeric convolution of two PDFs,; /// and can convolve any two RooAbsPdfs. The class exploits the convolution theorem; /// \f[; /// f(x) * g(x) \rightarrow F(k_i) \cdot G(k_i); /// \f]; /// to calculate the convolution by calculating a Real->Complex FFT of both input PDFs,; /// multiplying the complex coefficients and performing the reverse Complex->Real FFT; /// to get the result in the input space. This class uses the ROOT FFT interface to; /// the (free) FFTW3 package (www.fftw.org), and requires that your ROOT installation is; /// compiled with the `fftw3=ON` (default). Instructions for manually installing fftw below.; ///; /// Note that the performance in terms of speed and stability of RooFFTConvPdf is; /// vastly superior to that of RooNumConvPdf.; ///; /// An important feature of FFT convolutions is that the observable is assumed to be; /// cyclical. This is correct for cyclical observables such as angles,; /// but does not hold in general. For non-cyclical variables, wrap-around artifacts may be; /// encountered, *e.g.* if the PDF is zero at xMin and non-zero at xMax. A rising tail may appear at xMin.; /// This is inevitable when using FFTs. A distribution with 3 bins therefore looks like:; /// ```; /// ... 0 1 2 0 1 2 0 1 2 ...; /// ```; ///; /// Therefore, if bins 0 and 2 are not equal, the FFT sees a cyclical function with a step at the 2|0 boundary, which causes; /// artifacts in Fourier space.; ///; /// The spillover or discontinuity can be reduced or eliminated by; /// introducing a buffer zon",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:1302,Deployability,install,installing,1302,"ithout modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooFFTConvPdf; /// \ingroup Roofitcore; ///; /// This class implements a generic one-dimensional numeric convolution of two PDFs,; /// and can convolve any two RooAbsPdfs. The class exploits the convolution theorem; /// \f[; /// f(x) * g(x) \rightarrow F(k_i) \cdot G(k_i); /// \f]; /// to calculate the convolution by calculating a Real->Complex FFT of both input PDFs,; /// multiplying the complex coefficients and performing the reverse Complex->Real FFT; /// to get the result in the input space. This class uses the ROOT FFT interface to; /// the (free) FFTW3 package (www.fftw.org), and requires that your ROOT installation is; /// compiled with the `fftw3=ON` (default). Instructions for manually installing fftw below.; ///; /// Note that the performance in terms of speed and stability of RooFFTConvPdf is; /// vastly superior to that of RooNumConvPdf.; ///; /// An important feature of FFT convolutions is that the observable is assumed to be; /// cyclical. This is correct for cyclical observables such as angles,; /// but does not hold in general. For non-cyclical variables, wrap-around artifacts may be; /// encountered, *e.g.* if the PDF is zero at xMin and non-zero at xMax. A rising tail may appear at xMin.; /// This is inevitable when using FFTs. A distribution with 3 bins therefore looks like:; /// ```; /// ... 0 1 2 0 1 2 0 1 2 ...; /// ```; ///; /// Therefore, if bins 0 and 2 are not equal, the FFT sees a cyclical function with a step at the 2|0 boundary, which causes; /// artifacts in Fourier space.; ///; /// The spillover or discontinuity can be reduced or eliminated by; /// introducing a buffer zone in the FFT calculation. If this feature is activated (on by default),;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:3353,Deployability,update,updated,3353,"r the FFT calculation is extended in both directions,; /// and padded with the lowest/highest bin.; /// Example:; /// ```; /// original: -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5; /// add buffer zones: U U -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5 O O; /// rotate: 0 +1 +2 +3 +4 +5 O O U U -5 -4 -3 -2 -1; /// ```; /// The buffer bins are stripped away when the FFT output values; /// are transferred back to the p.d.f cache. The default buffer size is 10% of the; /// observable domain size, and can be changed with the `setBufferFraction()` member function.; ///; /// The RooFFTConvPdf uses caching inherited from a RooAbsCachedPdf. If it is; /// evaluated for a particular value of x, the FFT and convolution is calculated; /// for all bins in the observable space for the given choice of parameters,; /// which are also stored in the cache. Subsequent evaluations for different values of the convolution observable and; /// identical parameters will be retrieved from the cache. If one or more; /// of the parameters change, the cache will be updated, *i.e.*, a new FFT runs.; ///; /// The sampling density of the FFT is controlled by the binning of the; /// the convolution observable, which can be changed using RooRealVar::setBins(N).; /// For good results, N should be large (>=1000). Additional interpolation; /// between the bins may improve the result if coarse binnings are chosen. These can be; /// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// ----",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:4241,Deployability,Install,Installing,4241,"e will be updated, *i.e.*, a new FFT runs.; ///; /// The sampling density of the FFT is controlled by the binning of the; /// the convolution observable, which can be changed using RooRealVar::setBins(N).; /// For good results, N should be large (>=1000). Additional interpolation; /// between the bins may improve the result if coarse binnings are chosen. These can be; /// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:4410,Deployability,install,install,4410,"e will be updated, *i.e.*, a new FFT runs.; ///; /// The sampling density of the FFT is controlled by the binning of the; /// the convolution observable, which can be changed using RooRealVar::setBins(N).; /// For good results, N should be large (>=1000). Additional interpolation; /// between the bins may improve the result if coarse binnings are chosen. These can be; /// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:4497,Deployability,Install,Install,4497,"can be changed using RooRealVar::setBins(N).; /// For good results, N should be large (>=1000). Additional interpolation; /// between the bins may improve the result if coarse binnings are chosen. These can be; /// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure --prefix=/home/myself/fftw' followed by 'make install'.; /// Substitute /home/myself/fftw with a directory of your choice. This; /// procedure wi",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:4763,Deployability,install,installation,4763,"/// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure --prefix=/home/myself/fftw' followed by 'make install'.; /// Substitute /home/myself/fftw with a directory of your choice. This; /// procedure will install FFTW in the location designated by you; ///; /// 4) Start from a source installation of ROOT.; /// Look up and set the proper paths for ROOT to discover FFTW. See https://root.cern/building-root; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:4905,Deployability,install,install,4905,"/// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure --prefix=/home/myself/fftw' followed by 'make install'.; /// Substitute /home/myself/fftw with a directory of your choice. This; /// procedure will install FFTW in the location designated by you; ///; /// 4) Start from a source installation of ROOT.; /// Look up and set the proper paths for ROOT to discover FFTW. See https://root.cern/building-root; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:4930,Deployability,install,install,4930,"/// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure --prefix=/home/myself/fftw' followed by 'make install'.; /// Substitute /home/myself/fftw with a directory of your choice. This; /// procedure will install FFTW in the location designated by you; ///; /// 4) Start from a source installation of ROOT.; /// Look up and set the proper paths for ROOT to discover FFTW. See https://root.cern/building-root; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:5005,Deployability,install,installation,5005,"/// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure --prefix=/home/myself/fftw' followed by 'make install'.; /// Substitute /home/myself/fftw with a directory of your choice. This; /// procedure will install FFTW in the location designated by you; ///; /// 4) Start from a source installation of ROOT.; /// Look up and set the proper paths for ROOT to discover FFTW. See https://root.cern/building-root; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:5161,Deployability,install,installation,5161,"/// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure --prefix=/home/myself/fftw' followed by 'make install'.; /// Substitute /home/myself/fftw with a directory of your choice. This; /// procedure will install FFTW in the location designated by you; ///; /// 4) Start from a source installation of ROOT.; /// Look up and set the proper paths for ROOT to discover FFTW. See https://root.cern/building-root; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:5210,Deployability,install,install,5210,"/// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure --prefix=/home/myself/fftw' followed by 'make install'.; /// Substitute /home/myself/fftw with a directory of your choice. This; /// procedure will install FFTW in the location designated by you; ///; /// 4) Start from a source installation of ROOT.; /// Look up and set the proper paths for ROOT to discover FFTW. See https://root.cern/building-root; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:5404,Deployability,install,install,5404,"/// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure --prefix=/home/myself/fftw' followed by 'make install'.; /// Substitute /home/myself/fftw with a directory of your choice. This; /// procedure will install FFTW in the location designated by you; ///; /// 4) Start from a source installation of ROOT.; /// Look up and set the proper paths for ROOT to discover FFTW. See https://root.cern/building-root; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:5506,Deployability,install,install,5506,"/// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure --prefix=/home/myself/fftw' followed by 'make install'.; /// Substitute /home/myself/fftw with a directory of your choice. This; /// procedure will install FFTW in the location designated by you; ///; /// 4) Start from a source installation of ROOT.; /// Look up and set the proper paths for ROOT to discover FFTW. See https://root.cern/building-root; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:5586,Deployability,install,installation,5586,"/// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure --prefix=/home/myself/fftw' followed by 'make install'.; /// Substitute /home/myself/fftw with a directory of your choice. This; /// procedure will install FFTW in the location designated by you; ///; /// 4) Start from a source installation of ROOT.; /// Look up and set the proper paths for ROOT to discover FFTW. See https://root.cern/building-root; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:2174,Energy Efficiency,reduce,reduced,2174,"d requires that your ROOT installation is; /// compiled with the `fftw3=ON` (default). Instructions for manually installing fftw below.; ///; /// Note that the performance in terms of speed and stability of RooFFTConvPdf is; /// vastly superior to that of RooNumConvPdf.; ///; /// An important feature of FFT convolutions is that the observable is assumed to be; /// cyclical. This is correct for cyclical observables such as angles,; /// but does not hold in general. For non-cyclical variables, wrap-around artifacts may be; /// encountered, *e.g.* if the PDF is zero at xMin and non-zero at xMax. A rising tail may appear at xMin.; /// This is inevitable when using FFTs. A distribution with 3 bins therefore looks like:; /// ```; /// ... 0 1 2 0 1 2 0 1 2 ...; /// ```; ///; /// Therefore, if bins 0 and 2 are not equal, the FFT sees a cyclical function with a step at the 2|0 boundary, which causes; /// artifacts in Fourier space.; ///; /// The spillover or discontinuity can be reduced or eliminated by; /// introducing a buffer zone in the FFT calculation. If this feature is activated (on by default),; /// the sampling array for the FFT calculation is extended in both directions,; /// and padded with the lowest/highest bin.; /// Example:; /// ```; /// original: -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5; /// add buffer zones: U U -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5 O O; /// rotate: 0 +1 +2 +3 +4 +5 O O U U -5 -4 -3 -2 -1; /// ```; /// The buffer bins are stripped away when the FFT output values; /// are transferred back to the p.d.f cache. The default buffer size is 10% of the; /// observable domain size, and can be changed with the `setBufferFraction()` member function.; ///; /// The RooFFTConvPdf uses caching inherited from a RooAbsCachedPdf. If it is; /// evaluated for a particular value of x, the FFT and convolution is calculated; /// for all bins in the observable space for the given choice of parameters,; /// which are also stored in the cache. Subsequent evaluations for different v",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:3932,Energy Efficiency,monitor,monitoring,3932,"f. If it is; /// evaluated for a particular value of x, the FFT and convolution is calculated; /// for all bins in the observable space for the given choice of parameters,; /// which are also stored in the cache. Subsequent evaluations for different values of the convolution observable and; /// identical parameters will be retrieved from the cache. If one or more; /// of the parameters change, the cache will be updated, *i.e.*, a new FFT runs.; ///; /// The sampling density of the FFT is controlled by the binning of the; /// the convolution observable, which can be changed using RooRealVar::setBins(N).; /// For good results, N should be large (>=1000). Additional interpolation; /// between the bins may improve the result if coarse binnings are chosen. These can be; /// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:1128,Integrability,interface,interface,1128,"nts of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooFFTConvPdf; /// \ingroup Roofitcore; ///; /// This class implements a generic one-dimensional numeric convolution of two PDFs,; /// and can convolve any two RooAbsPdfs. The class exploits the convolution theorem; /// \f[; /// f(x) * g(x) \rightarrow F(k_i) \cdot G(k_i); /// \f]; /// to calculate the convolution by calculating a Real->Complex FFT of both input PDFs,; /// multiplying the complex coefficients and performing the reverse Complex->Real FFT; /// to get the result in the input space. This class uses the ROOT FFT interface to; /// the (free) FFTW3 package (www.fftw.org), and requires that your ROOT installation is; /// compiled with the `fftw3=ON` (default). Instructions for manually installing fftw below.; ///; /// Note that the performance in terms of speed and stability of RooFFTConvPdf is; /// vastly superior to that of RooNumConvPdf.; ///; /// An important feature of FFT convolutions is that the observable is assumed to be; /// cyclical. This is correct for cyclical observables such as angles,; /// but does not hold in general. For non-cyclical variables, wrap-around artifacts may be; /// encountered, *e.g.* if the PDF is zero at xMin and non-zero at xMax. A rising tail may appear at xMin.; /// This is inevitable when using FFTs. A distribution with 3 bins therefore looks like:; /// ```; /// ... 0 1 2 0 1 2 0 1 2 ...; /// ```; ///; /// Therefore, if bins 0 and 2 are not equal, the FFT sees a cyclical function with a step at the 2|0 boundary, which causes; /// artifacts in Fourier space.; ///; /// T",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:1686,Integrability,wrap,wrap-around,1686,"umeric convolution of two PDFs,; /// and can convolve any two RooAbsPdfs. The class exploits the convolution theorem; /// \f[; /// f(x) * g(x) \rightarrow F(k_i) \cdot G(k_i); /// \f]; /// to calculate the convolution by calculating a Real->Complex FFT of both input PDFs,; /// multiplying the complex coefficients and performing the reverse Complex->Real FFT; /// to get the result in the input space. This class uses the ROOT FFT interface to; /// the (free) FFTW3 package (www.fftw.org), and requires that your ROOT installation is; /// compiled with the `fftw3=ON` (default). Instructions for manually installing fftw below.; ///; /// Note that the performance in terms of speed and stability of RooFFTConvPdf is; /// vastly superior to that of RooNumConvPdf.; ///; /// An important feature of FFT convolutions is that the observable is assumed to be; /// cyclical. This is correct for cyclical observables such as angles,; /// but does not hold in general. For non-cyclical variables, wrap-around artifacts may be; /// encountered, *e.g.* if the PDF is zero at xMin and non-zero at xMax. A rising tail may appear at xMin.; /// This is inevitable when using FFTs. A distribution with 3 bins therefore looks like:; /// ```; /// ... 0 1 2 0 1 2 0 1 2 ...; /// ```; ///; /// Therefore, if bins 0 and 2 are not equal, the FFT sees a cyclical function with a step at the 2|0 boundary, which causes; /// artifacts in Fourier space.; ///; /// The spillover or discontinuity can be reduced or eliminated by; /// introducing a buffer zone in the FFT calculation. If this feature is activated (on by default),; /// the sampling array for the FFT calculation is extended in both directions,; /// and padded with the lowest/highest bin.; /// Example:; /// ```; /// original: -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5; /// add buffer zones: U U -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5 O O; /// rotate: 0 +1 +2 +3 +4 +5 O O U U -5 -4 -3 -2 -1; /// ```; /// The buffer bins are stripped away when the FFT output values; /// are tr",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:3952,Integrability,message,message,3952,"f. If it is; /// evaluated for a particular value of x, the FFT and convolution is calculated; /// for all bins in the observable space for the given choice of parameters,; /// which are also stored in the cache. Subsequent evaluations for different values of the convolution observable and; /// identical parameters will be retrieved from the cache. If one or more; /// of the parameters change, the cache will be updated, *i.e.*, a new FFT runs.; ///; /// The sampling density of the FFT is controlled by the binning of the; /// the convolution observable, which can be changed using RooRealVar::setBins(N).; /// For good results, N should be large (>=1000). Additional interpolation; /// between the bins may improve the result if coarse binnings are chosen. These can be; /// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:4124,Integrability,message,message,4124,"arameters,; /// which are also stored in the cache. Subsequent evaluations for different values of the convolution observable and; /// identical parameters will be retrieved from the cache. If one or more; /// of the parameters change, the cache will be updated, *i.e.*, a new FFT runs.; ///; /// The sampling density of the FFT is controlled by the binning of the; /// the convolution observable, which can be changed using RooRealVar::setBins(N).; /// For good results, N should be large (>=1000). Additional interpolation; /// between the bins may improve the result if coarse binnings are chosen. These can be; /// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:1675,Modifiability,variab,variables,1675,"umeric convolution of two PDFs,; /// and can convolve any two RooAbsPdfs. The class exploits the convolution theorem; /// \f[; /// f(x) * g(x) \rightarrow F(k_i) \cdot G(k_i); /// \f]; /// to calculate the convolution by calculating a Real->Complex FFT of both input PDFs,; /// multiplying the complex coefficients and performing the reverse Complex->Real FFT; /// to get the result in the input space. This class uses the ROOT FFT interface to; /// the (free) FFTW3 package (www.fftw.org), and requires that your ROOT installation is; /// compiled with the `fftw3=ON` (default). Instructions for manually installing fftw below.; ///; /// Note that the performance in terms of speed and stability of RooFFTConvPdf is; /// vastly superior to that of RooNumConvPdf.; ///; /// An important feature of FFT convolutions is that the observable is assumed to be; /// cyclical. This is correct for cyclical observables such as angles,; /// but does not hold in general. For non-cyclical variables, wrap-around artifacts may be; /// encountered, *e.g.* if the PDF is zero at xMin and non-zero at xMax. A rising tail may appear at xMin.; /// This is inevitable when using FFTs. A distribution with 3 bins therefore looks like:; /// ```; /// ... 0 1 2 0 1 2 0 1 2 ...; /// ```; ///; /// Therefore, if bins 0 and 2 are not equal, the FFT sees a cyclical function with a step at the 2|0 boundary, which causes; /// artifacts in Fourier space.; ///; /// The spillover or discontinuity can be reduced or eliminated by; /// introducing a buffer zone in the FFT calculation. If this feature is activated (on by default),; /// the sampling array for the FFT calculation is extended in both directions,; /// and padded with the lowest/highest bin.; /// Example:; /// ```; /// original: -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5; /// add buffer zones: U U -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5 O O; /// rotate: 0 +1 +2 +3 +4 +5 O O U U -5 -4 -3 -2 -1; /// ```; /// The buffer bins are stripped away when the FFT output values; /// are tr",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:2351,Modifiability,extend,extended,2351,"e that the performance in terms of speed and stability of RooFFTConvPdf is; /// vastly superior to that of RooNumConvPdf.; ///; /// An important feature of FFT convolutions is that the observable is assumed to be; /// cyclical. This is correct for cyclical observables such as angles,; /// but does not hold in general. For non-cyclical variables, wrap-around artifacts may be; /// encountered, *e.g.* if the PDF is zero at xMin and non-zero at xMax. A rising tail may appear at xMin.; /// This is inevitable when using FFTs. A distribution with 3 bins therefore looks like:; /// ```; /// ... 0 1 2 0 1 2 0 1 2 ...; /// ```; ///; /// Therefore, if bins 0 and 2 are not equal, the FFT sees a cyclical function with a step at the 2|0 boundary, which causes; /// artifacts in Fourier space.; ///; /// The spillover or discontinuity can be reduced or eliminated by; /// introducing a buffer zone in the FFT calculation. If this feature is activated (on by default),; /// the sampling array for the FFT calculation is extended in both directions,; /// and padded with the lowest/highest bin.; /// Example:; /// ```; /// original: -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5; /// add buffer zones: U U -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5 O O; /// rotate: 0 +1 +2 +3 +4 +5 O O U U -5 -4 -3 -2 -1; /// ```; /// The buffer bins are stripped away when the FFT output values; /// are transferred back to the p.d.f cache. The default buffer size is 10% of the; /// observable domain size, and can be changed with the `setBufferFraction()` member function.; ///; /// The RooFFTConvPdf uses caching inherited from a RooAbsCachedPdf. If it is; /// evaluated for a particular value of x, the FFT and convolution is calculated; /// for all bins in the observable space for the given choice of parameters,; /// which are also stored in the cache. Subsequent evaluations for different values of the convolution observable and; /// identical parameters will be retrieved from the cache. If one or more; /// of the parameters change, the ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:2907,Modifiability,inherit,inherited,2907,"ooks like:; /// ```; /// ... 0 1 2 0 1 2 0 1 2 ...; /// ```; ///; /// Therefore, if bins 0 and 2 are not equal, the FFT sees a cyclical function with a step at the 2|0 boundary, which causes; /// artifacts in Fourier space.; ///; /// The spillover or discontinuity can be reduced or eliminated by; /// introducing a buffer zone in the FFT calculation. If this feature is activated (on by default),; /// the sampling array for the FFT calculation is extended in both directions,; /// and padded with the lowest/highest bin.; /// Example:; /// ```; /// original: -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5; /// add buffer zones: U U -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5 O O; /// rotate: 0 +1 +2 +3 +4 +5 O O U U -5 -4 -3 -2 -1; /// ```; /// The buffer bins are stripped away when the FFT output values; /// are transferred back to the p.d.f cache. The default buffer size is 10% of the; /// observable domain size, and can be changed with the `setBufferFraction()` member function.; ///; /// The RooFFTConvPdf uses caching inherited from a RooAbsCachedPdf. If it is; /// evaluated for a particular value of x, the FFT and convolution is calculated; /// for all bins in the observable space for the given choice of parameters,; /// which are also stored in the cache. Subsequent evaluations for different values of the convolution observable and; /// identical parameters will be retrieved from the cache. If one or more; /// of the parameters change, the cache will be updated, *i.e.*, a new FFT runs.; ///; /// The sampling density of the FFT is controlled by the binning of the; /// the convolution observable, which can be changed using RooRealVar::setBins(N).; /// For good results, N should be large (>=1000). Additional interpolation; /// between the bins may improve the result if coarse binnings are chosen. These can be; /// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:4876,Modifiability,config,configure,4876,"/// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure --prefix=/home/myself/fftw' followed by 'make install'.; /// Substitute /home/myself/fftw with a directory of your choice. This; /// procedure will install FFTW in the location designated by you; ///; /// 4) Start from a source installation of ROOT.; /// Look up and set the proper paths for ROOT to discover FFTW. See https://root.cern/building-root; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:5348,Modifiability,config,configure,5348,"/// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure --prefix=/home/myself/fftw' followed by 'make install'.; /// Substitute /home/myself/fftw with a directory of your choice. This; /// procedure will install FFTW in the location designated by you; ///; /// 4) Start from a source installation of ROOT.; /// Look up and set the proper paths for ROOT to discover FFTW. See https://root.cern/building-root; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:1015,Performance,perform,performing,1015,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooFFTConvPdf; /// \ingroup Roofitcore; ///; /// This class implements a generic one-dimensional numeric convolution of two PDFs,; /// and can convolve any two RooAbsPdfs. The class exploits the convolution theorem; /// \f[; /// f(x) * g(x) \rightarrow F(k_i) \cdot G(k_i); /// \f]; /// to calculate the convolution by calculating a Real->Complex FFT of both input PDFs,; /// multiplying the complex coefficients and performing the reverse Complex->Real FFT; /// to get the result in the input space. This class uses the ROOT FFT interface to; /// the (free) FFTW3 package (www.fftw.org), and requires that your ROOT installation is; /// compiled with the `fftw3=ON` (default). Instructions for manually installing fftw below.; ///; /// Note that the performance in terms of speed and stability of RooFFTConvPdf is; /// vastly superior to that of RooNumConvPdf.; ///; /// An important feature of FFT convolutions is that the observable is assumed to be; /// cyclical. This is correct for cyclical observables such as angles,; /// but does not hold in general. For non-cyclical variables, wrap-around artifacts may be; /// encountered, *e.g.* if the PDF is zero at xMin and non-zero at xMax. A rising tail may appear at xMin.; /// This is inevitable when using FFTs. A distribution with 3 bins therefore looks like:; /// ```; /// ... 0 1 2 0 1 2 0 1 2 ...; /// ```; ///; /// Therefore, if bins 0 and 2 ar",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:1349,Performance,perform,performance,1349,"fit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooFFTConvPdf; /// \ingroup Roofitcore; ///; /// This class implements a generic one-dimensional numeric convolution of two PDFs,; /// and can convolve any two RooAbsPdfs. The class exploits the convolution theorem; /// \f[; /// f(x) * g(x) \rightarrow F(k_i) \cdot G(k_i); /// \f]; /// to calculate the convolution by calculating a Real->Complex FFT of both input PDFs,; /// multiplying the complex coefficients and performing the reverse Complex->Real FFT; /// to get the result in the input space. This class uses the ROOT FFT interface to; /// the (free) FFTW3 package (www.fftw.org), and requires that your ROOT installation is; /// compiled with the `fftw3=ON` (default). Instructions for manually installing fftw below.; ///; /// Note that the performance in terms of speed and stability of RooFFTConvPdf is; /// vastly superior to that of RooNumConvPdf.; ///; /// An important feature of FFT convolutions is that the observable is assumed to be; /// cyclical. This is correct for cyclical observables such as angles,; /// but does not hold in general. For non-cyclical variables, wrap-around artifacts may be; /// encountered, *e.g.* if the PDF is zero at xMin and non-zero at xMax. A rising tail may appear at xMin.; /// This is inevitable when using FFTs. A distribution with 3 bins therefore looks like:; /// ```; /// ... 0 1 2 0 1 2 0 1 2 ...; /// ```; ///; /// Therefore, if bins 0 and 2 are not equal, the FFT sees a cyclical function with a step at the 2|0 boundary, which causes; /// artifacts in Fourier space.; ///; /// The spillover or discontinuity can be reduced or eliminated by; /// introducing a buffer zone in the FFT calculation. If this feature is activated (on by default),; /// the sampling array for the FFT calculation is extended in both directions,; /// and pad",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:2725,Performance,cache,cache,2725,"ered, *e.g.* if the PDF is zero at xMin and non-zero at xMax. A rising tail may appear at xMin.; /// This is inevitable when using FFTs. A distribution with 3 bins therefore looks like:; /// ```; /// ... 0 1 2 0 1 2 0 1 2 ...; /// ```; ///; /// Therefore, if bins 0 and 2 are not equal, the FFT sees a cyclical function with a step at the 2|0 boundary, which causes; /// artifacts in Fourier space.; ///; /// The spillover or discontinuity can be reduced or eliminated by; /// introducing a buffer zone in the FFT calculation. If this feature is activated (on by default),; /// the sampling array for the FFT calculation is extended in both directions,; /// and padded with the lowest/highest bin.; /// Example:; /// ```; /// original: -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5; /// add buffer zones: U U -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5 O O; /// rotate: 0 +1 +2 +3 +4 +5 O O U U -5 -4 -3 -2 -1; /// ```; /// The buffer bins are stripped away when the FFT output values; /// are transferred back to the p.d.f cache. The default buffer size is 10% of the; /// observable domain size, and can be changed with the `setBufferFraction()` member function.; ///; /// The RooFFTConvPdf uses caching inherited from a RooAbsCachedPdf. If it is; /// evaluated for a particular value of x, the FFT and convolution is calculated; /// for all bins in the observable space for the given choice of parameters,; /// which are also stored in the cache. Subsequent evaluations for different values of the convolution observable and; /// identical parameters will be retrieved from the cache. If one or more; /// of the parameters change, the cache will be updated, *i.e.*, a new FFT runs.; ///; /// The sampling density of the FFT is controlled by the binning of the; /// the convolution observable, which can be changed using RooRealVar::setBins(N).; /// For good results, N should be large (>=1000). Additional interpolation; /// between the bins may improve the result if coarse binnings are chosen. These can be; /// activated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:3144,Performance,cache,cache,3144,"n with a step at the 2|0 boundary, which causes; /// artifacts in Fourier space.; ///; /// The spillover or discontinuity can be reduced or eliminated by; /// introducing a buffer zone in the FFT calculation. If this feature is activated (on by default),; /// the sampling array for the FFT calculation is extended in both directions,; /// and padded with the lowest/highest bin.; /// Example:; /// ```; /// original: -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5; /// add buffer zones: U U -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5 O O; /// rotate: 0 +1 +2 +3 +4 +5 O O U U -5 -4 -3 -2 -1; /// ```; /// The buffer bins are stripped away when the FFT output values; /// are transferred back to the p.d.f cache. The default buffer size is 10% of the; /// observable domain size, and can be changed with the `setBufferFraction()` member function.; ///; /// The RooFFTConvPdf uses caching inherited from a RooAbsCachedPdf. If it is; /// evaluated for a particular value of x, the FFT and convolution is calculated; /// for all bins in the observable space for the given choice of parameters,; /// which are also stored in the cache. Subsequent evaluations for different values of the convolution observable and; /// identical parameters will be retrieved from the cache. If one or more; /// of the parameters change, the cache will be updated, *i.e.*, a new FFT runs.; ///; /// The sampling density of the FFT is controlled by the binning of the; /// the convolution observable, which can be changed using RooRealVar::setBins(N).; /// For good results, N should be large (>=1000). Additional interpolation; /// between the bins may improve the result if coarse binnings are chosen. These can be; /// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService:",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:3282,Performance,cache,cache,3282,"uffer zone in the FFT calculation. If this feature is activated (on by default),; /// the sampling array for the FFT calculation is extended in both directions,; /// and padded with the lowest/highest bin.; /// Example:; /// ```; /// original: -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5; /// add buffer zones: U U -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5 O O; /// rotate: 0 +1 +2 +3 +4 +5 O O U U -5 -4 -3 -2 -1; /// ```; /// The buffer bins are stripped away when the FFT output values; /// are transferred back to the p.d.f cache. The default buffer size is 10% of the; /// observable domain size, and can be changed with the `setBufferFraction()` member function.; ///; /// The RooFFTConvPdf uses caching inherited from a RooAbsCachedPdf. If it is; /// evaluated for a particular value of x, the FFT and convolution is calculated; /// for all bins in the observable space for the given choice of parameters,; /// which are also stored in the cache. Subsequent evaluations for different values of the convolution observable and; /// identical parameters will be retrieved from the cache. If one or more; /// of the parameters change, the cache will be updated, *i.e.*, a new FFT runs.; ///; /// The sampling density of the FFT is controlled by the binning of the; /// the convolution observable, which can be changed using RooRealVar::setBins(N).; /// For good results, N should be large (>=1000). Additional interpolation; /// between the bins may improve the result if coarse binnings are chosen. These can be; /// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; /",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:3339,Performance,cache,cache,3339,"r the FFT calculation is extended in both directions,; /// and padded with the lowest/highest bin.; /// Example:; /// ```; /// original: -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5; /// add buffer zones: U U -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5 O O; /// rotate: 0 +1 +2 +3 +4 +5 O O U U -5 -4 -3 -2 -1; /// ```; /// The buffer bins are stripped away when the FFT output values; /// are transferred back to the p.d.f cache. The default buffer size is 10% of the; /// observable domain size, and can be changed with the `setBufferFraction()` member function.; ///; /// The RooFFTConvPdf uses caching inherited from a RooAbsCachedPdf. If it is; /// evaluated for a particular value of x, the FFT and convolution is calculated; /// for all bins in the observable space for the given choice of parameters,; /// which are also stored in the cache. Subsequent evaluations for different values of the convolution observable and; /// identical parameters will be retrieved from the cache. If one or more; /// of the parameters change, the cache will be updated, *i.e.*, a new FFT runs.; ///; /// The sampling density of the FFT is controlled by the binning of the; /// the convolution observable, which can be changed using RooRealVar::setBins(N).; /// For good results, N should be large (>=1000). Additional interpolation; /// between the bins may improve the result if coarse binnings are chosen. These can be; /// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// ----",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:4714,Security,access,access,4714,"/// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure --prefix=/home/myself/fftw' followed by 'make install'.; /// Substitute /home/myself/fftw with a directory of your choice. This; /// procedure will install FFTW in the location designated by you; ///; /// 4) Start from a source installation of ROOT.; /// Look up and set the proper paths for ROOT to discover FFTW. See https://root.cern/building-root; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:5127,Security,access,access,5127,"/// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure --prefix=/home/myself/fftw' followed by 'make install'.; /// Substitute /home/myself/fftw with a directory of your choice. This; /// procedure will install FFTW in the location designated by you; ///; /// 4) Start from a source installation of ROOT.; /// Look up and set the proper paths for ROOT to discover FFTW. See https://root.cern/building-root; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:611,Performance,cache,cache,611,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for numerical (FFT) convolution of PDFs.; /// \param[in] name Name of this PDF; /// \param[in] title Title for plotting this PDF; /// \param[in] convVar Observable to convolve the PDFs in \attention Use a high number of bins (>= 1000) for good accuracy.; /// \param[in] pdf1 First PDF to be convolved; /// \param[in] pdf2 Second PDF to be convolved; /// \param[in] ipOrder Order for interpolation between bins (since FFT is discrete); /// The binning used for the FFT sampling is controlled by the binning named ""cache"" in the convolution observable `convVar`.; /// If such a binning is not set, the same number of bins as for `convVar` will be used.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:213,Modifiability,variab,variable,213,"////////////////////////////////////////////////////////////////////////////////; /// \copydoc RooFFTConvPdf(const char*, const char*, RooRealVar&, RooAbsPdf&, RooAbsPdf&, Int_t); /// \param[in] pdfConvVar If the variable used for convolution is a PDF, itself, pass the PDF here, and pass the convolution variable to; /// `convVar`. See also rf210_angularconv.C in the <a href=""https://root.cern/root/html/tutorials/roofit/index.html."">roofit tutorials</a>",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:305,Modifiability,variab,variable,305,"////////////////////////////////////////////////////////////////////////////////; /// \copydoc RooFFTConvPdf(const char*, const char*, RooRealVar&, RooAbsPdf&, RooAbsPdf&, Int_t); /// \param[in] pdfConvVar If the variable used for convolution is a PDF, itself, pass the PDF here, and pass the convolution variable to; /// `convVar`. See also rf210_angularconv.C in the <a href=""https://root.cern/root/html/tutorials/roofit/index.html."">roofit tutorials</a>",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:117,Performance,cache,cache,117,"////////////////////////////////////////////////////////////////////////////////; /// Return base name component for cache components in this case 'PDF1_CONV_PDF2'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:105,Performance,cache,cache,105,"////////////////////////////////////////////////////////////////////////////////; /// Return specialized cache subclass for FFT calculations",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:3,Deployability,Install,Install,3,"// Install FFT reference range",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:14,Performance,cache,cache,14,"// Remove all cache histogram from fftParams as these; // observable need to remain attached to the histogram",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:74,Modifiability,extend,extended,74,"// Save copy of original histX binning and make alternate binning; // for extended range scanning",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:97,Performance,cache,cache,97,"////////////////////////////////////////////////////////////////////////////////; /// Suffix for cache histogram (added in addition to suffix for cache name)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:146,Performance,cache,cache,146,"////////////////////////////////////////////////////////////////////////////////; /// Suffix for cache histogram (added in addition to suffix for cache name)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:133,Performance,cache,cache,133,"////////////////////////////////////////////////////////////////////////////////; /// Returns all RooAbsArg objects contained in the cache element",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:111,Performance,cache,cache,111,"////////////////////////////////////////////////////////////////////////////////; /// Fill the contents of the cache the FFT convolution output",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:79,Performance,cache,cache,79,"// Determine if there other observables than the convolution observable in the cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:69,Availability,avail,available,69,"// Handle cases where there are other cache slices; // Iterator over available slice positions and fill each; // Determine number of bins for each slice position observable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:38,Performance,cache,cache,38,"// Handle cases where there are other cache slices; // Iterator over available slice positions and fill each; // Determine number of bins for each slice position observable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:102,Performance,cache,cachePdf,102,"////////////////////////////////////////////////////////////////////////////////; /// Fill a slice of cachePdf with the output of the FFT convolution calculation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:139,Energy Efficiency,reduce,reduce,139,"// Sample array of input points from both pdfs; // Note that returned arrays have optional buffers zones below and above range ends; // to reduce cyclical effects and have been cyclically rotated so that bin containing; // zero value is at position zero. Example:; //; // original: -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5; // add buffer zones: U U -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5 O O; // rotate: 0 +1 +2 +3 +4 +5 O O U U -5 -4 -3 -2 -1; //; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:40,Integrability,interface,interface,40,"// If ROOT was NOT built with the fftw3 interface, we try to include fftw3.h; // with the interpreter and run the concolution in the interpreter.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:36,Integrability,interface,interface,36,"// If ROOT was built with the fftw3 interface, we can use it as a TVirtualFFT; // plugin. The advantage here is that nothing can go wrong if fftw3.h wahs; // not istalled by the user separately.; // Retrieve previously defined FFT transformation plans",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:82,Modifiability,plugin,plugin,82,"// If ROOT was built with the fftw3 interface, we can use it as a TVirtualFFT; // plugin. The advantage here is that nothing can go wrong if fftw3.h wahs; // not istalled by the user separately.; // Retrieve previously defined FFT transformation plans",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:23,Performance,cache,cache,23,"// Store FFT result in cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:51,Safety,avoid,avoid,51,"// Calculate number of buffer bins on each size to avoid cyclical flow",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:3,Energy Efficiency,Allocate,Allocate,3,"// Allocate array of sampling size plus optional buffer zones",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:61,Performance,cache,cache,61,"// Set position of non-convolution observable to that of the cache slice that were are processing now",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:17,Modifiability,extend,extended,17,"// Sample entire extended range (N2 samples)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:115,Performance,cache,cached,115,"////////////////////////////////////////////////////////////////////////////////; /// Return the observables to be cached given the normalization set nset.; ///; /// If the cache observable is in nset then this is; /// - the convolution observable plus; /// - any member of nset that is either a RooCategory,; /// - or was previously specified through setCacheObservables().; ///; /// In case the cache observable is *not* in nset, then it is; /// - the convolution observable plus; /// - all member of nset that are observables of this p.d.f.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:173,Performance,cache,cache,173,"////////////////////////////////////////////////////////////////////////////////; /// Return the observables to be cached given the normalization set nset.; ///; /// If the cache observable is in nset then this is; /// - the convolution observable plus; /// - any member of nset that is either a RooCategory,; /// - or was previously specified through setCacheObservables().; ///; /// In case the cache observable is *not* in nset, then it is; /// - the convolution observable plus; /// - all member of nset that are observables of this p.d.f.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:397,Performance,cache,cache,397,"////////////////////////////////////////////////////////////////////////////////; /// Return the observables to be cached given the normalization set nset.; ///; /// If the cache observable is in nset then this is; /// - the convolution observable plus; /// - any member of nset that is either a RooCategory,; /// - or was previously specified through setCacheObservables().; ///; /// In case the cache observable is *not* in nset, then it is; /// - the convolution observable plus; /// - all member of nset that are observables of this p.d.f.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:6,Performance,cache,cacheObs,6,"// If cacheObs was filled, cache only observables in there",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:27,Performance,cache,cache,27,"// If cacheObs was filled, cache only observables in there",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:127,Integrability,depend,depends,127,"////////////////////////////////////////////////////////////////////////////////; /// Return the parameters on which the cache depends given normalization; /// set nset. For this p.d.f these are the parameters of the input p.d.f.; /// but never the convolution variable, in case it is not part of nset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:261,Modifiability,variab,variable,261,"////////////////////////////////////////////////////////////////////////////////; /// Return the parameters on which the cache depends given normalization; /// set nset. For this p.d.f these are the parameters of the input p.d.f.; /// but never the convolution variable, in case it is not part of nset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:121,Performance,cache,cache,121,"////////////////////////////////////////////////////////////////////////////////; /// Return the parameters on which the cache depends given normalization; /// set nset. For this p.d.f these are the parameters of the input p.d.f.; /// but never the convolution variable, in case it is not part of nset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:210,Safety,safe,safe,210,"////////////////////////////////////////////////////////////////////////////////; /// Create appropriate generator context for this convolution. If both input p.d.f.s support; /// internal generation, if it is safe to use them and if no observables other than the convolution; /// observable are requested for generation, use the specialized convolution generator context; /// which implements a smearing strategy in the convolution observable. If not return the; /// regular accept/reject generator context",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:34,Integrability,depend,dependents,34,"// Any resolution model with more dependents than the convolution variable; // or pdf or resmodel do not support direct generation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:66,Modifiability,variab,variable,66,"// Any resolution model with more dependents than the convolution variable; // or pdf or resmodel do not support direct generation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:50,Integrability,depend,depend,50,"// Sterilize the cache as certain partial results depend on buffer fraction",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:17,Performance,cache,cache,17,"// Sterilize the cache as certain partial results depend on buffer fraction",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:195,Modifiability,Extend,Extend,195,"////////////////////////////////////////////////////////////////////////////////; /// Change strategy to fill the overflow buffer on either side of the convolution observable range.; ///; /// - `Extend` means is that the input p.d.f convolution observable range is widened to include the buffer range; /// - `Flat` means that the buffer is filled with the p.d.f. value at the boundary of the observable range; /// - `Mirror` means that the buffer is filled with a mirror image of the p.d.f. around the convolution observable boundary; ///; /// The default strategy is extend. If one of the input p.d.f.s is a RooAddPdf, it is configured so that the interpretation; /// range of the fraction coefficients is kept at the nominal convolutions observable range (instead of interpreting coefficients; /// in the widened range including the buffer).",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:568,Modifiability,extend,extend,568,"////////////////////////////////////////////////////////////////////////////////; /// Change strategy to fill the overflow buffer on either side of the convolution observable range.; ///; /// - `Extend` means is that the input p.d.f convolution observable range is widened to include the buffer range; /// - `Flat` means that the buffer is filled with the p.d.f. value at the boundary of the observable range; /// - `Mirror` means that the buffer is filled with a mirror image of the p.d.f. around the convolution observable boundary; ///; /// The default strategy is extend. If one of the input p.d.f.s is a RooAddPdf, it is configured so that the interpretation; /// range of the fraction coefficients is kept at the nominal convolutions observable range (instead of interpreting coefficients; /// in the widened range including the buffer).",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:626,Modifiability,config,configured,626,"////////////////////////////////////////////////////////////////////////////////; /// Change strategy to fill the overflow buffer on either side of the convolution observable range.; ///; /// - `Extend` means is that the input p.d.f convolution observable range is widened to include the buffer range; /// - `Flat` means that the buffer is filled with the p.d.f. value at the boundary of the observable range; /// - `Mirror` means that the buffer is filled with a mirror image of the p.d.f. around the convolution observable boundary; ///; /// The default strategy is extend. If one of the input p.d.f.s is a RooAddPdf, it is configured so that the interpretation; /// range of the fraction coefficients is kept at the nominal convolutions observable range (instead of interpreting coefficients; /// in the widened range including the buffer).",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:146,Usability,intuit,intuitively,146,"////////////////////////////////////////////////////////////////////////////////; /// Customized printing of arguments of a RooNumConvPdf to more intuitively reflect the contents of the; /// product operator construction",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFFTConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitImplHelpers.cxx:3,Performance,cache,cache,3,"// cache the range limits in a flat vector",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitImplHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitImplHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitImplHelpers.cxx:3,Usability,Simpl,Simplest,3,"// Simplest case: top-level of component is a RooRealSumPdf",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitImplHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitImplHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitImplHelpers.cxx:86,Safety,avoid,avoid,86,"// Get the set of nodes in the computation graph. Do the detour via; // RooArgList to avoid deduplication done after adding each element.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitImplHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitImplHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitImplHelpers.cxx:392,Modifiability,variab,variables,392,"// namespace; /// Implementation of RooAbsCollection::snapshot() with some extra parameters.; /// to be used in other RooHelpers functions.; /// param[in] input The input collection.; /// param[in] output The output collection.; /// param[in] deepCopy If the whole computation graph should be cloned recursively.; /// param[in] observables If this is not a nullptr, only the fundamental; /// variables that are in observables are deep cloned.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitImplHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitImplHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitImplHelpers.cxx:16,Deployability,release,release,16,"// We better to release the ownership before removing the ""head"". Otherwise,; // ""head"" might also be deleted as the clonedNodes collection owns it.; // (Actually this does not happen because even an owning collection doesn't; // delete the element when removed by pointer lookup, but it's better not to; // rely on this unexpected fact).",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitImplHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitImplHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitImplHelpers.cxx:49,Deployability,release,release,49,"// Remove the head node from the cloneSet; // To release it from the set ownership",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitImplHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitImplHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitImplHelpers.cxx:40,Modifiability,variab,variable,40,"/// Transform a string into a valid C++ variable name by replacing forbidden; /// characters with underscores.; /// @param in The input string.; /// @return A new string valid variable name.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitImplHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitImplHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitImplHelpers.cxx:176,Modifiability,variab,variable,176,"/// Transform a string into a valid C++ variable name by replacing forbidden; /// characters with underscores.; /// @param in The input string.; /// @return A new string valid variable name.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitImplHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitImplHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:1018,Availability,error,error,1018,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooFitResult; /// RooFitResult is a container class to hold the input and output; /// of a PDF fit to a dataset. It contains:; ///; /// * Values of all constant parameters; /// * Initial and final values of floating parameters with error; /// * Correlation matrix and global correlation coefficients; /// * NLL and EDM at minimum; ///; /// No references to the fitted PDF and dataset are stored; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:256,Availability,error,error,256,"////////////////////////////////////////////////////////////////////////////////; /// Add objects to a 2D plot that represent the fit results for the; /// two named parameters. The input frame with the objects added is; /// returned, or zero in case of an error. Which objects are added; /// are determined by the options string which should be a concatenation; /// of the following (not case sensitive):; ///; /// * M - a marker at the best fit result; /// * E - an error ellipse calculated at 1-sigma using the error matrix at the minimum; /// * 1 - the 1-sigma error bar for parameter 1; /// * 2 - the 1-sigma error bar for parameter 2; /// * B - the bounding box for the error ellipse; /// * H - a line and horizontal axis for reading off the correlation coefficient; /// * V - a line and vertical axis for reading off the correlation coefficient; /// * A - draw axes for reading off the correlation coefficients with the H or V options; ///; /// You can change the attributes of objects in the returned RooPlot using the; /// various `RooPlot::getAttXxx(name)` member functions, e.g.; /// ```; /// plot->getAttLine(""contour"")->SetLineStyle(kDashed);; /// ```; /// Use `plot->Print()` for a list of all objects and their names (unfortunately most; /// of the ROOT builtin graphics objects like TLine are unnamed). Drag the left mouse; /// button along the labels of either axis button to interactively zoom in a plot.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:467,Availability,error,error,467,"////////////////////////////////////////////////////////////////////////////////; /// Add objects to a 2D plot that represent the fit results for the; /// two named parameters. The input frame with the objects added is; /// returned, or zero in case of an error. Which objects are added; /// are determined by the options string which should be a concatenation; /// of the following (not case sensitive):; ///; /// * M - a marker at the best fit result; /// * E - an error ellipse calculated at 1-sigma using the error matrix at the minimum; /// * 1 - the 1-sigma error bar for parameter 1; /// * 2 - the 1-sigma error bar for parameter 2; /// * B - the bounding box for the error ellipse; /// * H - a line and horizontal axis for reading off the correlation coefficient; /// * V - a line and vertical axis for reading off the correlation coefficient; /// * A - draw axes for reading off the correlation coefficients with the H or V options; ///; /// You can change the attributes of objects in the returned RooPlot using the; /// various `RooPlot::getAttXxx(name)` member functions, e.g.; /// ```; /// plot->getAttLine(""contour"")->SetLineStyle(kDashed);; /// ```; /// Use `plot->Print()` for a list of all objects and their names (unfortunately most; /// of the ROOT builtin graphics objects like TLine are unnamed). Drag the left mouse; /// button along the labels of either axis button to interactively zoom in a plot.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:513,Availability,error,error,513,"////////////////////////////////////////////////////////////////////////////////; /// Add objects to a 2D plot that represent the fit results for the; /// two named parameters. The input frame with the objects added is; /// returned, or zero in case of an error. Which objects are added; /// are determined by the options string which should be a concatenation; /// of the following (not case sensitive):; ///; /// * M - a marker at the best fit result; /// * E - an error ellipse calculated at 1-sigma using the error matrix at the minimum; /// * 1 - the 1-sigma error bar for parameter 1; /// * 2 - the 1-sigma error bar for parameter 2; /// * B - the bounding box for the error ellipse; /// * H - a line and horizontal axis for reading off the correlation coefficient; /// * V - a line and vertical axis for reading off the correlation coefficient; /// * A - draw axes for reading off the correlation coefficients with the H or V options; ///; /// You can change the attributes of objects in the returned RooPlot using the; /// various `RooPlot::getAttXxx(name)` member functions, e.g.; /// ```; /// plot->getAttLine(""contour"")->SetLineStyle(kDashed);; /// ```; /// Use `plot->Print()` for a list of all objects and their names (unfortunately most; /// of the ROOT builtin graphics objects like TLine are unnamed). Drag the left mouse; /// button along the labels of either axis button to interactively zoom in a plot.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:564,Availability,error,error,564,"////////////////////////////////////////////////////////////////////////////////; /// Add objects to a 2D plot that represent the fit results for the; /// two named parameters. The input frame with the objects added is; /// returned, or zero in case of an error. Which objects are added; /// are determined by the options string which should be a concatenation; /// of the following (not case sensitive):; ///; /// * M - a marker at the best fit result; /// * E - an error ellipse calculated at 1-sigma using the error matrix at the minimum; /// * 1 - the 1-sigma error bar for parameter 1; /// * 2 - the 1-sigma error bar for parameter 2; /// * B - the bounding box for the error ellipse; /// * H - a line and horizontal axis for reading off the correlation coefficient; /// * V - a line and vertical axis for reading off the correlation coefficient; /// * A - draw axes for reading off the correlation coefficients with the H or V options; ///; /// You can change the attributes of objects in the returned RooPlot using the; /// various `RooPlot::getAttXxx(name)` member functions, e.g.; /// ```; /// plot->getAttLine(""contour"")->SetLineStyle(kDashed);; /// ```; /// Use `plot->Print()` for a list of all objects and their names (unfortunately most; /// of the ROOT builtin graphics objects like TLine are unnamed). Drag the left mouse; /// button along the labels of either axis button to interactively zoom in a plot.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:613,Availability,error,error,613,"////////////////////////////////////////////////////////////////////////////////; /// Add objects to a 2D plot that represent the fit results for the; /// two named parameters. The input frame with the objects added is; /// returned, or zero in case of an error. Which objects are added; /// are determined by the options string which should be a concatenation; /// of the following (not case sensitive):; ///; /// * M - a marker at the best fit result; /// * E - an error ellipse calculated at 1-sigma using the error matrix at the minimum; /// * 1 - the 1-sigma error bar for parameter 1; /// * 2 - the 1-sigma error bar for parameter 2; /// * B - the bounding box for the error ellipse; /// * H - a line and horizontal axis for reading off the correlation coefficient; /// * V - a line and vertical axis for reading off the correlation coefficient; /// * A - draw axes for reading off the correlation coefficients with the H or V options; ///; /// You can change the attributes of objects in the returned RooPlot using the; /// various `RooPlot::getAttXxx(name)` member functions, e.g.; /// ```; /// plot->getAttLine(""contour"")->SetLineStyle(kDashed);; /// ```; /// Use `plot->Print()` for a list of all objects and their names (unfortunately most; /// of the ROOT builtin graphics objects like TLine are unnamed). Drag the left mouse; /// button along the labels of either axis button to interactively zoom in a plot.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:675,Availability,error,error,675,"////////////////////////////////////////////////////////////////////////////////; /// Add objects to a 2D plot that represent the fit results for the; /// two named parameters. The input frame with the objects added is; /// returned, or zero in case of an error. Which objects are added; /// are determined by the options string which should be a concatenation; /// of the following (not case sensitive):; ///; /// * M - a marker at the best fit result; /// * E - an error ellipse calculated at 1-sigma using the error matrix at the minimum; /// * 1 - the 1-sigma error bar for parameter 1; /// * 2 - the 1-sigma error bar for parameter 2; /// * B - the bounding box for the error ellipse; /// * H - a line and horizontal axis for reading off the correlation coefficient; /// * V - a line and vertical axis for reading off the correlation coefficient; /// * A - draw axes for reading off the correlation coefficients with the H or V options; ///; /// You can change the attributes of objects in the returned RooPlot using the; /// various `RooPlot::getAttXxx(name)` member functions, e.g.; /// ```; /// plot->getAttLine(""contour"")->SetLineStyle(kDashed);; /// ```; /// Use `plot->Print()` for a list of all objects and their names (unfortunately most; /// of the ROOT builtin graphics objects like TLine are unnamed). Drag the left mouse; /// button along the labels of either axis button to interactively zoom in a plot.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:55,Modifiability,variab,variables,55,"// lookup the 2x2 covariance matrix elements for these variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:17,Availability,error,error,17,"// add a 1-sigma error ellipse, if requested",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:11,Availability,error,error,11,"// add the error bar for parameter 1, if requested",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:36,Modifiability,variab,variables,36,"// create a vector of unit Gaussian variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:32,Availability,error,errors,32,"// Has any parameter asymmetric errors?",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:3,Safety,Sanity check,Sanity check,3,"// Sanity check",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:86,Safety,Sanity check,Sanity check,86,"////////////////////////////////////////////////////////////////////////////////; /// Sanity check",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:3,Safety,Sanity check,Sanity check,3,"// Sanity check",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:160,Availability,toler,tolerances,160,"// namespace; ////////////////////////////////////////////////////////////////////////////////; /// Return true if this fit result is identical to other within tolerances, ignoring the correlation matrix.; /// \param[in] other Fit result to test against.; /// \param[in] tol **Relative** tolerance for parameters and NLL.; /// \param[in] tolErr **Relative** tolerance for parameter errors.; /// \param[in] verbose If this function will log to the standard output when comparisons fail.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:288,Availability,toler,tolerance,288,"// namespace; ////////////////////////////////////////////////////////////////////////////////; /// Return true if this fit result is identical to other within tolerances, ignoring the correlation matrix.; /// \param[in] other Fit result to test against.; /// \param[in] tol **Relative** tolerance for parameters and NLL.; /// \param[in] tolErr **Relative** tolerance for parameter errors.; /// \param[in] verbose If this function will log to the standard output when comparisons fail.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:338,Availability,tolEr,tolErr,338,"// namespace; ////////////////////////////////////////////////////////////////////////////////; /// Return true if this fit result is identical to other within tolerances, ignoring the correlation matrix.; /// \param[in] other Fit result to test against.; /// \param[in] tol **Relative** tolerance for parameters and NLL.; /// \param[in] tolErr **Relative** tolerance for parameter errors.; /// \param[in] verbose If this function will log to the standard output when comparisons fail.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:358,Availability,toler,tolerance,358,"// namespace; ////////////////////////////////////////////////////////////////////////////////; /// Return true if this fit result is identical to other within tolerances, ignoring the correlation matrix.; /// \param[in] other Fit result to test against.; /// \param[in] tol **Relative** tolerance for parameters and NLL.; /// \param[in] tolErr **Relative** tolerance for parameter errors.; /// \param[in] verbose If this function will log to the standard output when comparisons fail.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:382,Availability,error,errors,382,"// namespace; ////////////////////////////////////////////////////////////////////////////////; /// Return true if this fit result is identical to other within tolerances, ignoring the correlation matrix.; /// \param[in] other Fit result to test against.; /// \param[in] tol **Relative** tolerance for parameters and NLL.; /// \param[in] tolErr **Relative** tolerance for parameter errors.; /// \param[in] verbose If this function will log to the standard output when comparisons fail.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:241,Testability,test,test,241,"// namespace; ////////////////////////////////////////////////////////////////////////////////; /// Return true if this fit result is identical to other within tolerances, ignoring the correlation matrix.; /// \param[in] other Fit result to test against.; /// \param[in] tol **Relative** tolerance for parameters and NLL.; /// \param[in] tolErr **Relative** tolerance for parameter errors.; /// \param[in] verbose If this function will log to the standard output when comparisons fail.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:436,Testability,log,log,436,"// namespace; ////////////////////////////////////////////////////////////////////////////////; /// Return true if this fit result is identical to other within tolerances, ignoring the correlation matrix.; /// \param[in] other Fit result to test against.; /// \param[in] tol **Relative** tolerance for parameters and NLL.; /// \param[in] tolErr **Relative** tolerance for parameter errors.; /// \param[in] verbose If this function will log to the standard output when comparisons fail.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:21,Availability,error,error,21,"// Compare parameter error if it's a RooRealVar",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:146,Availability,toler,tolerances,146,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this fit result is identical to other within tolerances.; /// \param[in] other Fit result to test against.; /// \param[in] tol **Relative** tolerance for parameters and NLL.; /// \param[in] tolCorr **absolute** tolerance for correlation coefficients.; /// \param[in] verbose If this function will log to the standard output when comparisons fail.; ///; /// As the relative tolerance for the parameter errors, the default value of; /// `1e-3` will be used.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:241,Availability,toler,tolerance,241,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this fit result is identical to other within tolerances.; /// \param[in] other Fit result to test against.; /// \param[in] tol **Relative** tolerance for parameters and NLL.; /// \param[in] tolCorr **absolute** tolerance for correlation coefficients.; /// \param[in] verbose If this function will log to the standard output when comparisons fail.; ///; /// As the relative tolerance for the parameter errors, the default value of; /// `1e-3` will be used.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:312,Availability,toler,tolerance,312,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this fit result is identical to other within tolerances.; /// \param[in] other Fit result to test against.; /// \param[in] tol **Relative** tolerance for parameters and NLL.; /// \param[in] tolCorr **absolute** tolerance for correlation coefficients.; /// \param[in] verbose If this function will log to the standard output when comparisons fail.; ///; /// As the relative tolerance for the parameter errors, the default value of; /// `1e-3` will be used.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:474,Availability,toler,tolerance,474,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this fit result is identical to other within tolerances.; /// \param[in] other Fit result to test against.; /// \param[in] tol **Relative** tolerance for parameters and NLL.; /// \param[in] tolCorr **absolute** tolerance for correlation coefficients.; /// \param[in] verbose If this function will log to the standard output when comparisons fail.; ///; /// As the relative tolerance for the parameter errors, the default value of; /// `1e-3` will be used.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:502,Availability,error,errors,502,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this fit result is identical to other within tolerances.; /// \param[in] other Fit result to test against.; /// \param[in] tol **Relative** tolerance for parameters and NLL.; /// \param[in] tolCorr **absolute** tolerance for correlation coefficients.; /// \param[in] verbose If this function will log to the standard output when comparisons fail.; ///; /// As the relative tolerance for the parameter errors, the default value of; /// `1e-3` will be used.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:194,Testability,test,test,194,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this fit result is identical to other within tolerances.; /// \param[in] other Fit result to test against.; /// \param[in] tol **Relative** tolerance for parameters and NLL.; /// \param[in] tolCorr **absolute** tolerance for correlation coefficients.; /// \param[in] verbose If this function will log to the standard output when comparisons fail.; ///; /// As the relative tolerance for the parameter errors, the default value of; /// `1e-3` will be used.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:398,Testability,log,log,398,"////////////////////////////////////////////////////////////////////////////////; /// Return true if this fit result is identical to other within tolerances.; /// \param[in] other Fit result to test against.; /// \param[in] tol **Relative** tolerance for parameters and NLL.; /// \param[in] tolCorr **absolute** tolerance for correlation coefficients.; /// \param[in] verbose If this function will log to the standard output when comparisons fail.; ///; /// As the relative tolerance for the parameter errors, the default value of; /// `1e-3` will be used.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:121,Performance,perform,performed,121,"////////////////////////////////////////////////////////////////////////////////; /// Import the results of the last fit performed by gMinuit, interpreting; /// the fit parameters as the given varList of parameters.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:121,Performance,perform,performed,121,"////////////////////////////////////////////////////////////////////////////////; /// Import the results of the last fit performed by gMinuit, interpreting; /// the fit parameters as the given varList of parameters.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:95,Energy Efficiency,reduce,reduced,95,"////////////////////////////////////////////////////////////////////////////////; /// Return a reduced covariance matrix (Note that Vred _is_ a simple sub-matrix of V,; /// row/columns are ordered to matched the convention given in input argument 'params'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:144,Usability,simpl,simple,144,"////////////////////////////////////////////////////////////////////////////////; /// Return a reduced covariance matrix (Note that Vred _is_ a simple sub-matrix of V,; /// row/columns are ordered to matched the convention given in input argument 'params'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:95,Energy Efficiency,reduce,reduced,95,"////////////////////////////////////////////////////////////////////////////////; /// Return a reduced covariance matrix, which is calculated as; /// \f[; /// V_\mathrm{red} = \bar{V_{22}} = V_{11} - V_{12} \cdot V_{22}^{-1} \cdot V_{21},; /// \f]; /// where \f$ V_{11},V_{12},V_{21},V_{22} \f$ represent a block decomposition of the covariance matrix into observables that; /// are propagated (labeled by index '1') and that are not propagated (labeled by index '2'), and \f$ \bar{V_{22}} \f$; /// is the Shur complement of \f$ V_{22} \f$, calculated as shown above.; ///; /// (Note that \f$ V_\mathrm{red} \f$ is *not* a simple sub-matrix of \f$ V \f$)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:623,Usability,simpl,simple,623,"////////////////////////////////////////////////////////////////////////////////; /// Return a reduced covariance matrix, which is calculated as; /// \f[; /// V_\mathrm{red} = \bar{V_{22}} = V_{11} - V_{12} \cdot V_{22}^{-1} \cdot V_{21},; /// \f]; /// where \f$ V_{11},V_{12},V_{21},V_{22} \f$ represent a block decomposition of the covariance matrix into observables that; /// are propagated (labeled by index '1') and that are not propagated (labeled by index '2'), and \f$ \bar{V_{22}} \f$; /// is the Shur complement of \f$ V_{22} \f$, calculated as shown above.; ///; /// (Note that \f$ V_\mathrm{red} \f$ is *not* a simple sub-matrix of \f$ V \f$)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:86,Modifiability,Config,Configure,86,"////////////////////////////////////////////////////////////////////////////////; /// Configure default contents to be printed",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:86,Modifiability,Config,Configure,86,"////////////////////////////////////////////////////////////////////////////////; /// Configure mapping of Print() arguments to RooPrintable print styles",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFitResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFoamGenerator.cxx:1105,Modifiability,config,config,1105,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooFoamGenerator.cxx; \class RooFoamGenerator; \ingroup Roofitcore. Generic Monte Carlo toy generator that implement; the TFOAM sampling technique on any positively valued function.; The RooFoamGenerator generator is used by the various generator context; classes to take care of generation of observables for which p.d.fs; do not define internal methods. The foam generator reacts to the following config options:; - nCell[123N]D; - nSample; - chatLevel; Access those using:; myPdf->specialGeneratorConfig()->getConfigSection(""RooFoamGenerator"").setRealValue(""nSample"",1e4);. \see rf902_numgenconfig.C; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFoamGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFoamGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFoamGenerator.cxx:1162,Security,Access,Access,1162,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooFoamGenerator.cxx; \class RooFoamGenerator; \ingroup Roofitcore. Generic Monte Carlo toy generator that implement; the TFOAM sampling technique on any positively valued function.; The RooFoamGenerator generator is used by the various generator context; classes to take care of generation of observables for which p.d.fs; do not define internal methods. The foam generator reacts to the following config options:; - nCell[123N]D; - nSample; - chatLevel; Access those using:; myPdf->specialGeneratorConfig()->getConfigSection(""RooFoamGenerator"").setRealValue(""nSample"",1e4);. \see rf902_numgenconfig.C; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFoamGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFoamGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFoamGenerator.cxx:25,Energy Efficiency,adapt,adaptor,25,"// Lightweight interface adaptor that binds a RooAbsPdf to TFOAM.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFoamGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFoamGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFoamGenerator.cxx:15,Integrability,interface,interface,15,"// Lightweight interface adaptor that binds a RooAbsPdf to TFOAM.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFoamGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFoamGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFoamGenerator.cxx:25,Modifiability,adapt,adaptor,25,"// Lightweight interface adaptor that binds a RooAbsPdf to TFOAM.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFoamGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFoamGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFoamGenerator.cxx:128,Performance,cache,cache,128,"////////////////////////////////////////////////////////////////////////////////; /// are we actually generating anything? (the cache always contains at least our function value)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFoamGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFoamGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFoamGenerator.h:45,Integrability,interface,interface,45,"///< Binding of RooAbsReal to TFoam function interface",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFoamGenerator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFoamGenerator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:1247,Modifiability,variab,variable,1247,"$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooFormula.cxx; \class RooFormula; \ingroup Roofitcore. Internally uses ROOT's TFormula to compute user-defined expressions of RooAbsArgs. The string expression can be any valid TFormula expression referring to the; listed servers either by name or by their ordinal list position. These three are; forms equivalent:; ```; RooFormula(""formula"", ""x*y"", RooArgList(x,y)) or; RooFormula(""formula"", ""@0*@1"", RooArgList(x,y)); RooFormula(""formula"", ""x[0]*x[1]"", RooArgList(x,y)); ```; Note that `x[i]` is an expression reserved for TFormula. If a variable with; the name `x` is given, the RooFormula interprets `x` as a variable name,; but `x[i]` as an index in the list of variables. ### Category expressions; State information of RooAbsCategories can be accessed using the '::' operator,; *i.e.*, `tagCat::Kaon` will resolve to the numerical value of; the `Kaon` state of the RooAbsCategory object named `tagCat`. A formula to switch between lepton categories could look like this:; ```; RooFormula(""formulaWithCat"",; ""x * (leptonMulti == leptonMulti::one) + y * (leptonMulti == leptonMulti::two)"",; RooArgList(x, y, leptonMulti));; ```. ### Debugging a formula that won't compile; When the formula is preprocessed, RooFit can print information in the debug stream.; These can be retrieved by activating the RooFit::MsgLevel `RooFit::DEBUG`; and the RooFit::MsgTopic `RooFit::InputArguments`.; Check the tutorial rf506_msgservice.C for details.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:1320,Modifiability,variab,variable,1320,"$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooFormula.cxx; \class RooFormula; \ingroup Roofitcore. Internally uses ROOT's TFormula to compute user-defined expressions of RooAbsArgs. The string expression can be any valid TFormula expression referring to the; listed servers either by name or by their ordinal list position. These three are; forms equivalent:; ```; RooFormula(""formula"", ""x*y"", RooArgList(x,y)) or; RooFormula(""formula"", ""@0*@1"", RooArgList(x,y)); RooFormula(""formula"", ""x[0]*x[1]"", RooArgList(x,y)); ```; Note that `x[i]` is an expression reserved for TFormula. If a variable with; the name `x` is given, the RooFormula interprets `x` as a variable name,; but `x[i]` as an index in the list of variables. ### Category expressions; State information of RooAbsCategories can be accessed using the '::' operator,; *i.e.*, `tagCat::Kaon` will resolve to the numerical value of; the `Kaon` state of the RooAbsCategory object named `tagCat`. A formula to switch between lepton categories could look like this:; ```; RooFormula(""formulaWithCat"",; ""x * (leptonMulti == leptonMulti::one) + y * (leptonMulti == leptonMulti::two)"",; RooArgList(x, y, leptonMulti));; ```. ### Debugging a formula that won't compile; When the formula is preprocessed, RooFit can print information in the debug stream.; These can be retrieved by activating the RooFit::MsgLevel `RooFit::DEBUG`; and the RooFit::MsgTopic `RooFit::InputArguments`.; Check the tutorial rf506_msgservice.C for details.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:1374,Modifiability,variab,variables,1374,"$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooFormula.cxx; \class RooFormula; \ingroup Roofitcore. Internally uses ROOT's TFormula to compute user-defined expressions of RooAbsArgs. The string expression can be any valid TFormula expression referring to the; listed servers either by name or by their ordinal list position. These three are; forms equivalent:; ```; RooFormula(""formula"", ""x*y"", RooArgList(x,y)) or; RooFormula(""formula"", ""@0*@1"", RooArgList(x,y)); RooFormula(""formula"", ""x[0]*x[1]"", RooArgList(x,y)); ```; Note that `x[i]` is an expression reserved for TFormula. If a variable with; the name `x` is given, the RooFormula interprets `x` as a variable name,; but `x[i]` as an index in the list of variables. ### Category expressions; State information of RooAbsCategories can be accessed using the '::' operator,; *i.e.*, `tagCat::Kaon` will resolve to the numerical value of; the `Kaon` state of the RooAbsCategory object named `tagCat`. A formula to switch between lepton categories could look like this:; ```; RooFormula(""formulaWithCat"",; ""x * (leptonMulti == leptonMulti::one) + y * (leptonMulti == leptonMulti::two)"",; RooArgList(x, y, leptonMulti));; ```. ### Debugging a formula that won't compile; When the formula is preprocessed, RooFit can print information in the debug stream.; These can be retrieved by activating the RooFit::MsgLevel `RooFit::DEBUG`; and the RooFit::MsgTopic `RooFit::InputArguments`.; Check the tutorial rf506_msgservice.C for details.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:1456,Security,access,accessed,1456,"$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooFormula.cxx; \class RooFormula; \ingroup Roofitcore. Internally uses ROOT's TFormula to compute user-defined expressions of RooAbsArgs. The string expression can be any valid TFormula expression referring to the; listed servers either by name or by their ordinal list position. These three are; forms equivalent:; ```; RooFormula(""formula"", ""x*y"", RooArgList(x,y)) or; RooFormula(""formula"", ""@0*@1"", RooArgList(x,y)); RooFormula(""formula"", ""x[0]*x[1]"", RooArgList(x,y)); ```; Note that `x[i]` is an expression reserved for TFormula. If a variable with; the name `x` is given, the RooFormula interprets `x` as a variable name,; but `x[i]` as an index in the list of variables. ### Category expressions; State information of RooAbsCategories can be accessed using the '::' operator,; *i.e.*, `tagCat::Kaon` will resolve to the numerical value of; the `Kaon` state of the RooAbsCategory object named `tagCat`. A formula to switch between lepton categories could look like this:; ```; RooFormula(""formulaWithCat"",; ""x * (leptonMulti == leptonMulti::one) + y * (leptonMulti == leptonMulti::two)"",; RooArgList(x, y, leptonMulti));; ```. ### Debugging a formula that won't compile; When the formula is preprocessed, RooFit can print information in the debug stream.; These can be retrieved by activating the RooFit::MsgLevel `RooFit::DEBUG`; and the RooFit::MsgTopic `RooFit::InputArguments`.; Check the tutorial rf506_msgservice.C for details.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:189,Modifiability,variab,variables,189,"////////////////////////////////////////////////////////////////////////////////; /// Find all input arguments which are categories, and save this information in; /// with the names of the variables that are being used to evaluate it.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:15,Modifiability,variab,variable,15,"// The matched variable name has to be surrounded by word boundaries; // std::cout << pos << "" "" << next << std::endl;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:47,Modifiability,variab,variable,47,"// Veto '[' and ']' as next characters. If the variable is called `x`; // or `0`, this might otherwise replace `x[0]`.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:77,Deployability,update,update,77,"// As we replace substrings in the middle of the string, we also have; // to update the word boundary flag vector. Note that we don't care; // the word boundaries in the `x[i]` are correct, as it has already; // been replaced.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:319,Modifiability,variab,variables,319,"////////////////////////////////////////////////////////////////////////////////; /// Construct a new formula.; /// \param[in] name Name of the formula.; /// \param[in] formula Formula to be evaluated. Parameters/observables are identified by name; /// or ordinal position in `varList`.; /// \param[in] varList List of variables to be passed to the formula.; /// \param[in] checkVariables Unused parameter.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:95,Performance,Perform,Performance,95,"// WARNING to developers: people use RooFormula a lot via RooGenericPdf and; // RooFormulaVar! Performance matters here. Avoid non-static std::regex,; // because constructing these can become a bottleneck because of the regex; // compilation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:194,Performance,bottleneck,bottleneck,194,"// WARNING to developers: people use RooFormula a lot via RooGenericPdf and; // RooFormulaVar! Performance matters here. Avoid non-static std::regex,; // because constructing these can become a bottleneck because of the regex; // compilation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:121,Safety,Avoid,Avoid,121,"// WARNING to developers: people use RooFormula a lot via RooGenericPdf and; // RooFormulaVar! Performance matters here. Avoid non-static std::regex,; // because constructing these can become a bottleneck because of the regex; // compilation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:129,Modifiability,variab,variables,129,"////////////////////////////////////////////////////////////////////////////////; /// Analyse internal formula to find out which variables are actually in use.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:204,Modifiability,variab,variables,204,"////////////////////////////////////////////////////////////////////////////////; /// From the internal representation, construct a formula by replacing all index place holders; /// with the names of the variables that are being used to evaluate it.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:260,Availability,error,error,260,"////////////////////////////////////////////////////////////////////////////////; /// Change used variables to those with the same name in given list.; /// \param[in] newDeps New dependents to replace the old ones.; /// \param[in] mustReplaceAll Will yield an error if one dependent does not have a replacement.; /// \param[in] nameChange Passed down to RooAbsArg::findNewServer(const RooAbsCollection&, bool) const.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:346,Availability,down,down,346,"////////////////////////////////////////////////////////////////////////////////; /// Change used variables to those with the same name in given list.; /// \param[in] newDeps New dependents to replace the old ones.; /// \param[in] mustReplaceAll Will yield an error if one dependent does not have a replacement.; /// \param[in] nameChange Passed down to RooAbsArg::findNewServer(const RooAbsCollection&, bool) const.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:179,Integrability,depend,dependents,179,"////////////////////////////////////////////////////////////////////////////////; /// Change used variables to those with the same name in given list.; /// \param[in] newDeps New dependents to replace the old ones.; /// \param[in] mustReplaceAll Will yield an error if one dependent does not have a replacement.; /// \param[in] nameChange Passed down to RooAbsArg::findNewServer(const RooAbsCollection&, bool) const.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:273,Integrability,depend,dependent,273,"////////////////////////////////////////////////////////////////////////////////; /// Change used variables to those with the same name in given list.; /// \param[in] newDeps New dependents to replace the old ones.; /// \param[in] mustReplaceAll Will yield an error if one dependent does not have a replacement.; /// \param[in] nameChange Passed down to RooAbsArg::findNewServer(const RooAbsCollection&, bool) const.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:98,Modifiability,variab,variables,98,"////////////////////////////////////////////////////////////////////////////////; /// Change used variables to those with the same name in given list.; /// \param[in] newDeps New dependents to replace the old ones.; /// \param[in] mustReplaceAll Will yield an error if one dependent does not have a replacement.; /// \param[in] nameChange Passed down to RooAbsArg::findNewServer(const RooAbsCollection&, bool) const.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:139,Modifiability,variab,variables,139,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate the internal TFormula.; ///; /// First, all variables serving this instance are evaluated given the normalisation set,; /// and then the formula is evaluated.; /// \param[in] nset Normalisation set passed to evaluation of arguments serving values.; /// \return The result of the evaluation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:95,Integrability,interface,interface,95,"////////////////////////////////////////////////////////////////////////////////; /// Printing interface",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:119,Integrability,depend,dependents,119,"////////////////////////////////////////////////////////////////////////////////; /// Print arguments of formula, i.e. dependents that are actually used",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:71,Modifiability,variab,variables,71,"// TFormula thinks that we have a multi-dimensional formula, e.g. with variables x,y,z,t.; // We have to check now that this is not the case, as RooFit only uses the syntax x[0], x[1], x[2], ...",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.h:12,Integrability,interface,interface,12,"// Printing interface (human readable)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.h:23,Integrability,depend,dependents,23,"///<! Original list of dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:1877,Modifiability,variab,variable,1877,"dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooFormulaVar; ///; /// A RooFormulaVar is a generic implementation of a real-valued object,; /// which takes a RooArgList of servers and a C++ expression string defining how; /// its value should be calculated from the given list of servers.; /// RooFormulaVar uses a RooFormula object to perform the expression evaluation.; ///; /// If RooAbsPdf objects are supplied to RooFormulaVar as servers, their; /// raw (unnormalized) values will be evaluated. Use RooGenericPdf, which; /// constructs generic PDF functions, to access their properly normalized; /// values.; ///; /// The string expression can be any valid TFormula expression referring to the; /// listed servers either by name or by their ordinal list position. These three are; /// equivalent:; /// ```; /// RooFormulaVar(""gen"", ""x*y"", RooArgList(x,y)) // reference by name; /// RooFormulaVar(""gen"", ""@0*@1"", RooArgList(x,y)) // reference by ordinal with @; /// RooFormulaVar(""gen"", ""x[0]*x[1]"", RooArgList(x,y)) // TFormula-builtin reference by ordinal; /// ```; /// Note that `x[i]` is an expression reserved for TFormula. All variable references; /// are automatically converted to the TFormula-native format. If a variable with; /// the name `x` is given, the RooFormula interprets `x[i]` as a list position,; /// but `x` without brackets as the name of a RooFit object.; ///; /// The last two versions, while slightly less readable, are more versatile because; /// the names of the arguments are not hard coded.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormulaVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:1966,Modifiability,variab,variable,1966,"dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooFormulaVar; ///; /// A RooFormulaVar is a generic implementation of a real-valued object,; /// which takes a RooArgList of servers and a C++ expression string defining how; /// its value should be calculated from the given list of servers.; /// RooFormulaVar uses a RooFormula object to perform the expression evaluation.; ///; /// If RooAbsPdf objects are supplied to RooFormulaVar as servers, their; /// raw (unnormalized) values will be evaluated. Use RooGenericPdf, which; /// constructs generic PDF functions, to access their properly normalized; /// values.; ///; /// The string expression can be any valid TFormula expression referring to the; /// listed servers either by name or by their ordinal list position. These three are; /// equivalent:; /// ```; /// RooFormulaVar(""gen"", ""x*y"", RooArgList(x,y)) // reference by name; /// RooFormulaVar(""gen"", ""@0*@1"", RooArgList(x,y)) // reference by ordinal with @; /// RooFormulaVar(""gen"", ""x[0]*x[1]"", RooArgList(x,y)) // TFormula-builtin reference by ordinal; /// ```; /// Note that `x[i]` is an expression reserved for TFormula. All variable references; /// are automatically converted to the TFormula-native format. If a variable with; /// the name `x` is given, the RooFormula interprets `x[i]` as a list position,; /// but `x` without brackets as the name of a RooFit object.; ///; /// The last two versions, while slightly less readable, are more versatile because; /// the names of the arguments are not hard coded.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormulaVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:1076,Performance,perform,perform,1076,"*********; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooFormulaVar; ///; /// A RooFormulaVar is a generic implementation of a real-valued object,; /// which takes a RooArgList of servers and a C++ expression string defining how; /// its value should be calculated from the given list of servers.; /// RooFormulaVar uses a RooFormula object to perform the expression evaluation.; ///; /// If RooAbsPdf objects are supplied to RooFormulaVar as servers, their; /// raw (unnormalized) values will be evaluated. Use RooGenericPdf, which; /// constructs generic PDF functions, to access their properly normalized; /// values.; ///; /// The string expression can be any valid TFormula expression referring to the; /// listed servers either by name or by their ordinal list position. These three are; /// equivalent:; /// ```; /// RooFormulaVar(""gen"", ""x*y"", RooArgList(x,y)) // reference by name; /// RooFormulaVar(""gen"", ""@0*@1"", RooArgList(x,y)) // reference by ordinal with @; /// RooFormulaVar(""gen"", ""x[0]*x[1]"", RooArgList(x,y)) // TFormula-builtin reference by ordinal; /// ```; /// Note that `x[i]` is an expression reserved for TFormula. All variable references; /// are automatically converted to the TFormula-native format. If a variable with; /// the name `x` is given, the RooFormula interprets `x[i]` as a list position,; /// but",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormulaVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:1307,Security,access,access,1307,"dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooFormulaVar; ///; /// A RooFormulaVar is a generic implementation of a real-valued object,; /// which takes a RooArgList of servers and a C++ expression string defining how; /// its value should be calculated from the given list of servers.; /// RooFormulaVar uses a RooFormula object to perform the expression evaluation.; ///; /// If RooAbsPdf objects are supplied to RooFormulaVar as servers, their; /// raw (unnormalized) values will be evaluated. Use RooGenericPdf, which; /// constructs generic PDF functions, to access their properly normalized; /// values.; ///; /// The string expression can be any valid TFormula expression referring to the; /// listed servers either by name or by their ordinal list position. These three are; /// equivalent:; /// ```; /// RooFormulaVar(""gen"", ""x*y"", RooArgList(x,y)) // reference by name; /// RooFormulaVar(""gen"", ""@0*@1"", RooArgList(x,y)) // reference by ordinal with @; /// RooFormulaVar(""gen"", ""x[0]*x[1]"", RooArgList(x,y)) // TFormula-builtin reference by ordinal; /// ```; /// Note that `x[i]` is an expression reserved for TFormula. All variable references; /// are automatically converted to the TFormula-native format. If a variable with; /// the name `x` is given, the RooFormula interprets `x[i]` as a list position,; /// but `x` without brackets as the name of a RooFit object.; ///; /// The last two versions, while slightly less readable, are more versatile because; /// the names of the arguments are not hard coded.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormulaVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:307,Integrability,depend,dependents,307,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with formula expression and list of input variables.; /// \param[in] name Name of the formula.; /// \param[in] title Title of the formula.; /// \param[in] inFormula Expression to be evaluated.; /// \param[in] dependents Variables that should be passed to the formula.; /// \param[in] checkVariables Check that all variables from `dependents` are used in the expression.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormulaVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:428,Integrability,depend,dependents,428,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with formula expression and list of input variables.; /// \param[in] name Name of the formula.; /// \param[in] title Title of the formula.; /// \param[in] inFormula Expression to be evaluated.; /// \param[in] dependents Variables that should be passed to the formula.; /// \param[in] checkVariables Check that all variables from `dependents` are used in the expression.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormulaVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:140,Modifiability,variab,variables,140,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with formula expression and list of input variables.; /// \param[in] name Name of the formula.; /// \param[in] title Title of the formula.; /// \param[in] inFormula Expression to be evaluated.; /// \param[in] dependents Variables that should be passed to the formula.; /// \param[in] checkVariables Check that all variables from `dependents` are used in the expression.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormulaVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:318,Modifiability,Variab,Variables,318,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with formula expression and list of input variables.; /// \param[in] name Name of the formula.; /// \param[in] title Title of the formula.; /// \param[in] inFormula Expression to be evaluated.; /// \param[in] dependents Variables that should be passed to the formula.; /// \param[in] checkVariables Check that all variables from `dependents` are used in the expression.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormulaVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:412,Modifiability,variab,variables,412,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with formula expression and list of input variables.; /// \param[in] name Name of the formula.; /// \param[in] title Title of the formula.; /// \param[in] inFormula Expression to be evaluated.; /// \param[in] dependents Variables that should be passed to the formula.; /// \param[in] checkVariables Check that all variables from `dependents` are used in the expression.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormulaVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:290,Integrability,depend,dependents,290,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with formula expression, title and list of input variables.; /// \param[in] name Name of the formula.; /// \param[in] title Formula expression. Will also be used as the title.; /// \param[in] dependents Variables that should be passed to the formula.; /// \param[in] checkVariables Check that all variables from `dependents` are used in the expression.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormulaVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:411,Integrability,depend,dependents,411,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with formula expression, title and list of input variables.; /// \param[in] name Name of the formula.; /// \param[in] title Formula expression. Will also be used as the title.; /// \param[in] dependents Variables that should be passed to the formula.; /// \param[in] checkVariables Check that all variables from `dependents` are used in the expression.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormulaVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:147,Modifiability,variab,variables,147,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with formula expression, title and list of input variables.; /// \param[in] name Name of the formula.; /// \param[in] title Formula expression. Will also be used as the title.; /// \param[in] dependents Variables that should be passed to the formula.; /// \param[in] checkVariables Check that all variables from `dependents` are used in the expression.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormulaVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:301,Modifiability,Variab,Variables,301,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with formula expression, title and list of input variables.; /// \param[in] name Name of the formula.; /// \param[in] title Formula expression. Will also be used as the title.; /// \param[in] dependents Variables that should be passed to the formula.; /// \param[in] checkVariables Check that all variables from `dependents` are used in the expression.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormulaVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:395,Modifiability,variab,variables,395,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with formula expression, title and list of input variables.; /// \param[in] name Name of the formula.; /// \param[in] title Formula expression. Will also be used as the title.; /// \param[in] dependents Variables that should be passed to the formula.; /// \param[in] checkVariables Check that all variables from `dependents` are used in the expression.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormulaVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:138,Integrability,interface,interface,138,"////////////////////////////////////////////////////////////////////////////////; /// Add formula expression as meta argument in printing interface",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormulaVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:105,Availability,error,error,105,"////////////////////////////////////////////////////////////////////////////////; /// Return the default error level for MINUIT error analysis; /// If the formula contains one or more RooNLLVars and; /// no RooChi2Vars, return the defaultErrorLevel() of; /// RooNLLVar. If the addition contains one ore more RooChi2Vars; /// and no RooNLLVars, return the defaultErrorLevel() of; /// RooChi2Var. If the addition contains neither or both; /// issue a warning message and return a value of 1",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormulaVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:128,Availability,error,error,128,"////////////////////////////////////////////////////////////////////////////////; /// Return the default error level for MINUIT error analysis; /// If the formula contains one or more RooNLLVars and; /// no RooChi2Vars, return the defaultErrorLevel() of; /// RooNLLVar. If the addition contains one ore more RooChi2Vars; /// and no RooNLLVars, return the defaultErrorLevel() of; /// RooChi2Var. If the addition contains neither or both; /// issue a warning message and return a value of 1",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormulaVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:457,Integrability,message,message,457,"////////////////////////////////////////////////////////////////////////////////; /// Return the default error level for MINUIT error analysis; /// If the formula contains one or more RooNLLVars and; /// no RooChi2Vars, return the defaultErrorLevel() of; /// RooNLLVar. If the addition contains one ore more RooChi2Vars; /// and no RooNLLVars, return the defaultErrorLevel() of; /// RooChi2Var. If the addition contains neither or both; /// issue a warning message and return a value of 1",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFormulaVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFunctor.cxx:784,Energy Efficiency,adapt,adaptor,784,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooFunctor.cxx; \class RooFunctor; \ingroup Roofitcore. Lightweight interface adaptor that exports a RooAbsPdf as a functor.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFunctor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFunctor.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFunctor.cxx:774,Integrability,interface,interface,774,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooFunctor.cxx; \class RooFunctor; \ingroup Roofitcore. Lightweight interface adaptor that exports a RooAbsPdf as a functor.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFunctor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFunctor.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFunctor.cxx:784,Modifiability,adapt,adaptor,784,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooFunctor.cxx; \class RooFunctor; \ingroup Roofitcore. Lightweight interface adaptor that exports a RooAbsPdf as a functor.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFunctor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFunctor.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFunctor.cxx:20,Modifiability,variab,variables,20,"// Make list of all variables to be bound",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFunctor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFunctor.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFunctor.cxx:3,Energy Efficiency,Allocate,Allocate,3,"// Allocate transfer array",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFunctor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFunctor.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFuncWrapper.cxx:3,Performance,Load,Load,3,"// Load the parameters and observables.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFuncWrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFuncWrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFuncWrapper.cxx:12,Performance,load,loading,12,"// for data loading",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFuncWrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFuncWrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFuncWrapper.cxx:9,Deployability,update,update,9,"// First update the result variable of params in the compute graph to in[<position>].",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFuncWrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFuncWrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFuncWrapper.cxx:27,Modifiability,variab,variable,27,"// First update the result variable of params in the compute graph to in[<position>].",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFuncWrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFuncWrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFuncWrapper.cxx:58,Testability,test,test,58,"/// @brief Dumps a macro ""filename.C"" that can be used to test and debug the generated code and gradient.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFuncWrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFuncWrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFuncWrapper.cxx:117,Performance,optimiz,optimize,117,"R""(//auto-generated test macro; #include <RooFit/Detail/MathFuncs.h>; #include <Math/CladDerivator.h>. #pragma cling optimize(2); )""",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFuncWrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFuncWrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFuncWrapper.cxx:20,Testability,test,test,20,"R""(//auto-generated test macro; #include <RooFit/Detail/MathFuncs.h>; #include <Math/CladDerivator.h>. #pragma cling optimize(2); )""",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFuncWrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFuncWrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:1065,Safety,safe,safe,1065,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGenContext.cxx; \class RooGenContext; \ingroup Roofitcore. Implements a universal generator context for all; RooAbsPdf classes that do not have or need a specialized generator; context. This generator context queries the input p.d.f which observables; it can generate internally and delegates generation of those observables; to the p.d.f if it deems that safe. The other observables are generated; use a RooAcceptReject sampling technique.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:157,Modifiability,variab,variables,157,"////////////////////////////////////////////////////////////////////////////////; /// Initialize a new context for generating events with the specified; /// variables, using the specified PDF model. A prototype dataset (if provided); /// is not cloned and still belongs to the caller. The contents and shape; /// of this dataset can be changed between calls to generate() as long as the; /// expected columns to be copied to the generated dataset are present.; /// Any argument supplied in the forceDirect RooArgSet are always offered; /// for internal generation to the p.d.f., even if this is deemed unsafe by; /// the logic of RooGenContext.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:602,Safety,unsafe,unsafe,602,"////////////////////////////////////////////////////////////////////////////////; /// Initialize a new context for generating events with the specified; /// variables, using the specified PDF model. A prototype dataset (if provided); /// is not cloned and still belongs to the caller. The contents and shape; /// of this dataset can be changed between calls to generate() as long as the; /// expected columns to be copied to the generated dataset are present.; /// Any argument supplied in the forceDirect RooArgSet are always offered; /// for internal generation to the p.d.f., even if this is deemed unsafe by; /// the logic of RooGenContext.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:621,Testability,log,logic,621,"////////////////////////////////////////////////////////////////////////////////; /// Initialize a new context for generating events with the specified; /// variables, using the specified PDF model. A prototype dataset (if provided); /// is not cloned and still belongs to the caller. The contents and shape; /// of this dataset can be changed between calls to generate() as long as the; /// expected columns to be copied to the generated dataset are present.; /// Any argument supplied in the forceDirect RooArgSet are always offered; /// for internal generation to the p.d.f., even if this is deemed unsafe by; /// the logic of RooGenContext.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:41,Integrability,depend,depends,41,"// Clone the model and all nodes that it depends on so that this context; // is independent of any existing objects.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:23,Modifiability,variab,variables,23,"// Analyze the list of variables to generate...",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:49,Integrability,depend,dependents,49,"// lookup this argument in the cloned set of PDF dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:18,Integrability,depend,depend,18,"// does the model depend on this variable directly, ie, like ""x"" in; // f(x) or f(x,g(x,y)) or even f(x,x) ?",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:33,Modifiability,variab,variable,33,"// does the model depend on this variable directly, ie, like ""x"" in; // f(x) or f(x,g(x,y)) or even f(x,x) ?",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:18,Integrability,depend,depend,18,"// does the model depend indirectly on this variable through an lvalue chain?; // otherwise, this variable will have to be generated with accept/reject",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:44,Modifiability,variab,variable,44,"// does the model depend indirectly on this variable through an lvalue chain?; // otherwise, this variable will have to be generated with accept/reject",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:98,Modifiability,variab,variable,98,"// does the model depend indirectly on this variable through an lvalue chain?; // otherwise, this variable will have to be generated with accept/reject",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:36,Modifiability,variab,variables,36,"// At this point directVars are all variables that are safe to be generated directly; // otherVars are all variables that are _not_ safe to be generated directly",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:107,Modifiability,variab,variables,107,"// At this point directVars are all variables that are safe to be generated directly; // otherVars are all variables that are _not_ safe to be generated directly",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:55,Safety,safe,safe,55,"// At this point directVars are all variables that are safe to be generated directly; // otherVars are all variables that are _not_ safe to be generated directly",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:132,Safety,safe,safe,132,"// At this point directVars are all variables that are safe to be generated directly; // otherVars are all variables that are _not_ safe to be generated directly",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:10,Integrability,depend,depends,10,"// If PDF depends on prototype data, direct generator cannot use static initialization; // in initGenerator()",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:44,Modifiability,variab,variables,44,"// Can the model generate any of the direct variables itself?",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:8,Modifiability,variab,variables,8,"// Move variables which cannot be generated into the list to be generated with accept/reject",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:3,Deployability,Update,Update,3,"// Update _directVars to only include variables that will actually be directly generated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:38,Modifiability,variab,variables,38,"// Update _directVars to only include variables that will actually be directly generated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:16,Modifiability,variab,variables,16,"// No prototype variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:7,Modifiability,variab,variable,7,"// All variable are generated with accept-reject; // Check if PDF supports maximum finding",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:31,Modifiability,variab,variable,31,"// Generation _with_ prototype variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform one-time initialization of the generator context",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:28,Availability,error,error,28,"// Reset the cloned model's error counters.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:171,Integrability,message,messages,171,"////////////////////////////////////////////////////////////////////////////////; /// Generate one event. The 'remaining' integer is not used other than; /// for printing messages",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:52,Modifiability,variab,variables,52,"// call the accept-reject generator to generate its variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:50,Availability,avail,available,50,"// Use the model's optimized generator, if one is available.; // The generator writes directly into our local 'event' since we attached it above.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:19,Performance,optimiz,optimized,19,"// Use the model's optimized generator, if one is available.; // The generator writes directly into our local 'event' since we attached it above.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:35,Integrability,depend,dependents,35,"// Generate uniform variables (non-dependents)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:20,Modifiability,variab,variables,20,"// Generate uniform variables (non-dependents)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:95,Integrability,interface,interface,95,"////////////////////////////////////////////////////////////////////////////////; /// Printing interface",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx:977,Deployability,integrat,integration,977,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGenericPdf.cxx; \class RooGenericPdf; \ingroup Roofitcore. Implementation of a probability density function; that takes a RooArgList of servers and a C++ expression string defining how; its value should be calculated from the given list of servers.; A fully numerical integration is automatically performed to normalize the given; expression. RooGenericPdf uses a RooFormula object to perform the expression evaluation. The string expression can be any valid TFormula expression referring to the; listed servers either by name or by their ordinal list position. These three are; equivalent:; ```; RooFormulaVar(""gen"", ""x*y"", RooArgList(x,y)) // reference by name; RooFormulaVar(""gen"", ""@0*@1"", RooArgList(x,y)) // reference by ordinal with @; RooFormulaVar(""gen"", ""x[0]*x[1]"", RooArgList(x,y)) // TFormula-builtin reference by ordinal; ```; Note that `x[i]` is an expression reserved for TFormula. All variable references; are automatically converted to the TFormula-native format. If a variable with; the name `x` is given, the RooFormula interprets `x[i]` as a list position,; but `x` without brackets as the name of a RooFit object. The last two versions, while slightly less readable, are more versatile because; the names of the arguments are not hard coded.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenericPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx:977,Integrability,integrat,integration,977,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGenericPdf.cxx; \class RooGenericPdf; \ingroup Roofitcore. Implementation of a probability density function; that takes a RooArgList of servers and a C++ expression string defining how; its value should be calculated from the given list of servers.; A fully numerical integration is automatically performed to normalize the given; expression. RooGenericPdf uses a RooFormula object to perform the expression evaluation. The string expression can be any valid TFormula expression referring to the; listed servers either by name or by their ordinal list position. These three are; equivalent:; ```; RooFormulaVar(""gen"", ""x*y"", RooArgList(x,y)) // reference by name; RooFormulaVar(""gen"", ""@0*@1"", RooArgList(x,y)) // reference by ordinal with @; RooFormulaVar(""gen"", ""x[0]*x[1]"", RooArgList(x,y)) // TFormula-builtin reference by ordinal; ```; Note that `x[i]` is an expression reserved for TFormula. All variable references; are automatically converted to the TFormula-native format. If a variable with; the name `x` is given, the RooFormula interprets `x[i]` as a list position,; but `x` without brackets as the name of a RooFit object. The last two versions, while slightly less readable, are more versatile because; the names of the arguments are not hard coded.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenericPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx:1611,Modifiability,variab,variable,1611,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGenericPdf.cxx; \class RooGenericPdf; \ingroup Roofitcore. Implementation of a probability density function; that takes a RooArgList of servers and a C++ expression string defining how; its value should be calculated from the given list of servers.; A fully numerical integration is automatically performed to normalize the given; expression. RooGenericPdf uses a RooFormula object to perform the expression evaluation. The string expression can be any valid TFormula expression referring to the; listed servers either by name or by their ordinal list position. These three are; equivalent:; ```; RooFormulaVar(""gen"", ""x*y"", RooArgList(x,y)) // reference by name; RooFormulaVar(""gen"", ""@0*@1"", RooArgList(x,y)) // reference by ordinal with @; RooFormulaVar(""gen"", ""x[0]*x[1]"", RooArgList(x,y)) // TFormula-builtin reference by ordinal; ```; Note that `x[i]` is an expression reserved for TFormula. All variable references; are automatically converted to the TFormula-native format. If a variable with; the name `x` is given, the RooFormula interprets `x[i]` as a list position,; but `x` without brackets as the name of a RooFit object. The last two versions, while slightly less readable, are more versatile because; the names of the arguments are not hard coded.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenericPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx:1696,Modifiability,variab,variable,1696,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGenericPdf.cxx; \class RooGenericPdf; \ingroup Roofitcore. Implementation of a probability density function; that takes a RooArgList of servers and a C++ expression string defining how; its value should be calculated from the given list of servers.; A fully numerical integration is automatically performed to normalize the given; expression. RooGenericPdf uses a RooFormula object to perform the expression evaluation. The string expression can be any valid TFormula expression referring to the; listed servers either by name or by their ordinal list position. These three are; equivalent:; ```; RooFormulaVar(""gen"", ""x*y"", RooArgList(x,y)) // reference by name; RooFormulaVar(""gen"", ""@0*@1"", RooArgList(x,y)) // reference by ordinal with @; RooFormulaVar(""gen"", ""x[0]*x[1]"", RooArgList(x,y)) // TFormula-builtin reference by ordinal; ```; Note that `x[i]` is an expression reserved for TFormula. All variable references; are automatically converted to the TFormula-native format. If a variable with; the name `x` is given, the RooFormula interprets `x[i]` as a list position,; but `x` without brackets as the name of a RooFit object. The last two versions, while slightly less readable, are more versatile because; the names of the arguments are not hard coded.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenericPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx:1006,Performance,perform,performed,1006,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGenericPdf.cxx; \class RooGenericPdf; \ingroup Roofitcore. Implementation of a probability density function; that takes a RooArgList of servers and a C++ expression string defining how; its value should be calculated from the given list of servers.; A fully numerical integration is automatically performed to normalize the given; expression. RooGenericPdf uses a RooFormula object to perform the expression evaluation. The string expression can be any valid TFormula expression referring to the; listed servers either by name or by their ordinal list position. These three are; equivalent:; ```; RooFormulaVar(""gen"", ""x*y"", RooArgList(x,y)) // reference by name; RooFormulaVar(""gen"", ""@0*@1"", RooArgList(x,y)) // reference by ordinal with @; RooFormulaVar(""gen"", ""x[0]*x[1]"", RooArgList(x,y)) // TFormula-builtin reference by ordinal; ```; Note that `x[i]` is an expression reserved for TFormula. All variable references; are automatically converted to the TFormula-native format. If a variable with; the name `x` is given, the RooFormula interprets `x[i]` as a list position,; but `x` without brackets as the name of a RooFit object. The last two versions, while slightly less readable, are more versatile because; the names of the arguments are not hard coded.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenericPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx:1094,Performance,perform,perform,1094,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGenericPdf.cxx; \class RooGenericPdf; \ingroup Roofitcore. Implementation of a probability density function; that takes a RooArgList of servers and a C++ expression string defining how; its value should be calculated from the given list of servers.; A fully numerical integration is automatically performed to normalize the given; expression. RooGenericPdf uses a RooFormula object to perform the expression evaluation. The string expression can be any valid TFormula expression referring to the; listed servers either by name or by their ordinal list position. These three are; equivalent:; ```; RooFormulaVar(""gen"", ""x*y"", RooArgList(x,y)) // reference by name; RooFormulaVar(""gen"", ""@0*@1"", RooArgList(x,y)) // reference by ordinal with @; RooFormulaVar(""gen"", ""x[0]*x[1]"", RooArgList(x,y)) // TFormula-builtin reference by ordinal; ```; Note that `x[i]` is an expression reserved for TFormula. All variable references; are automatically converted to the TFormula-native format. If a variable with; the name `x` is given, the RooFormula interprets `x[i]` as a list position,; but `x` without brackets as the name of a RooFit object. The last two versions, while slightly less readable, are more versatile because; the names of the arguments are not hard coded.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenericPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx:140,Modifiability,variab,variables,140,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with formula expression and list of input variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenericPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx:151,Modifiability,variab,variables,151,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with a name, title, formula expression and a list of variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenericPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx:138,Integrability,interface,interface,138,"////////////////////////////////////////////////////////////////////////////////; /// Add formula expression as meta argument in printing interface",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenericPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:1162,Deployability,integrat,integrated,1162,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGenProdProj.cxx; \class RooGenProdProj; \ingroup Roofitcore. RooGenProdProj is an auxiliary class for RooProdPdf that calculates; a general normalised projection of a product of non-factorising PDFs, e.g.; \f[; P_{x,xy} = \frac{\int ( P1 * P2 * \ldots) \mathrm{d}x}{\int ( P1 * P2 * \ldots ) \mathrm{d}x \mathrm{d}y}; \f]. Partial integrals, which factorise and can be calculated, are calculated; analytically. Remaining non-factorising observables are integrated numerically.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:1162,Integrability,integrat,integrated,1162,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGenProdProj.cxx; \class RooGenProdProj; \ingroup Roofitcore. RooGenProdProj is an auxiliary class for RooProdPdf that calculates; a general normalised projection of a product of non-factorising PDFs, e.g.; \f[; P_{x,xy} = \frac{\int ( P1 * P2 * \ldots) \mathrm{d}x}{\int ( P1 * P2 * \ldots ) \mathrm{d}x \mathrm{d}y}; \f]. Partial integrals, which factorise and can be calculated, are calculated; analytically. Remaining non-factorising observables are integrated numerically.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:169,Deployability,integrat,integrated,169,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for a normalization projection of the product of p.d.f.s _prodSet; /// integrated over _intSet in range isetRangeName while normalized over _normSet",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:169,Integrability,integrat,integrated,169,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for a normalization projection of the product of p.d.f.s _prodSet; /// integrated over _intSet in range isetRangeName while normalized over _normSet",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:24,Performance,cache,cache,24,"// Set expensive object cache to that of first item in prodSet",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:309,Deployability,integrat,integrated,309,"////////////////////////////////////////////////////////////////////////////////; /// Utility function to create integral for product over certain observables.; /// \param[in] name Name of integral to be created.; /// \param[in] compSet All components of the product.; /// \param[in] intSet Observables to be integrated.; /// \param[out] saveSet All component objects needed to represent the product integral are added as owned members to saveSet.; /// \note The set owns new components that are created for the integral.; /// \param[in] isetRangeName Integral range.; /// \param[in] doFactorize; ///; /// \return A RooAbsReal object representing the requested integral. The object is owned by `saveSet`.; ///; /// The integration is factorized into components as much as possible and done analytically as far as possible.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:719,Deployability,integrat,integration,719,"////////////////////////////////////////////////////////////////////////////////; /// Utility function to create integral for product over certain observables.; /// \param[in] name Name of integral to be created.; /// \param[in] compSet All components of the product.; /// \param[in] intSet Observables to be integrated.; /// \param[out] saveSet All component objects needed to represent the product integral are added as owned members to saveSet.; /// \note The set owns new components that are created for the integral.; /// \param[in] isetRangeName Integral range.; /// \param[in] doFactorize; ///; /// \return A RooAbsReal object representing the requested integral. The object is owned by `saveSet`.; ///; /// The integration is factorized into components as much as possible and done analytically as far as possible.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:309,Integrability,integrat,integrated,309,"////////////////////////////////////////////////////////////////////////////////; /// Utility function to create integral for product over certain observables.; /// \param[in] name Name of integral to be created.; /// \param[in] compSet All components of the product.; /// \param[in] intSet Observables to be integrated.; /// \param[out] saveSet All component objects needed to represent the product integral are added as owned members to saveSet.; /// \note The set owns new components that are created for the integral.; /// \param[in] isetRangeName Integral range.; /// \param[in] doFactorize; ///; /// \return A RooAbsReal object representing the requested integral. The object is owned by `saveSet`.; ///; /// The integration is factorized into components as much as possible and done analytically as far as possible.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:719,Integrability,integrat,integration,719,"////////////////////////////////////////////////////////////////////////////////; /// Utility function to create integral for product over certain observables.; /// \param[in] name Name of integral to be created.; /// \param[in] compSet All components of the product.; /// \param[in] intSet Observables to be integrated.; /// \param[out] saveSet All component objects needed to represent the product integral are added as owned members to saveSet.; /// \note The set owns new components that are created for the integral.; /// \param[in] isetRangeName Integral range.; /// \param[in] doFactorize; ///; /// \return A RooAbsReal object representing the requested integral. The object is owned by `saveSet`.; ///; /// The integration is factorized into components as much as possible and done analytically as far as possible.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:524,Availability,redundant,redundant,524,"// The idea of the RooGenProdProj is that we divide two integral objects each; // created with this makeIntegral() function to get the normalized integral of; // a product. Therefore, we don't need to normalize the numerater and; // denominator integrals themselves. Doing the normalization would be; // expensive and it would cancel out anyway. However, if we don't specify an; // explicit normalization integral in createIntegral(), the last-used; // normalization set might be used to normalize the pdf, resulting in; // redundant computations.; //; // For this reason, the normalization set of the integrated pdfs is fixed to; // an empty set in this case. Note that in RooFit, a nullptr normalization; // set and an empty normalization set is not equivalent. The former implies; // taking the last-used normalization set, and the latter means explicitly no; // normalization.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:602,Deployability,integrat,integrated,602,"// The idea of the RooGenProdProj is that we divide two integral objects each; // created with this makeIntegral() function to get the normalized integral of; // a product. Therefore, we don't need to normalize the numerater and; // denominator integrals themselves. Doing the normalization would be; // expensive and it would cancel out anyway. However, if we don't specify an; // explicit normalization integral in createIntegral(), the last-used; // normalization set might be used to normalize the pdf, resulting in; // redundant computations.; //; // For this reason, the normalization set of the integrated pdfs is fixed to; // an empty set in this case. Note that in RooFit, a nullptr normalization; // set and an empty normalization set is not equivalent. The former implies; // taking the last-used normalization set, and the latter means explicitly no; // normalization.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:602,Integrability,integrat,integrated,602,"// The idea of the RooGenProdProj is that we divide two integral objects each; // created with this makeIntegral() function to get the normalized integral of; // a product. Therefore, we don't need to normalize the numerater and; // denominator integrals themselves. Doing the normalization would be; // expensive and it would cancel out anyway. However, if we don't specify an; // explicit normalization integral in createIntegral(), the last-used; // normalization set might be used to normalize the pdf, resulting in; // redundant computations.; //; // For this reason, the normalization set of the integrated pdfs is fixed to; // an empty set in this case. Note that in RooFit, a nullptr normalization; // set and an empty normalization set is not equivalent. The former implies; // taking the last-used normalization set, and the latter means explicitly no; // normalization.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:524,Safety,redund,redundant,524,"// The idea of the RooGenProdProj is that we divide two integral objects each; // created with this makeIntegral() function to get the normalized integral of; // a product. Therefore, we don't need to normalize the numerater and; // denominator integrals themselves. Doing the normalization would be; // expensive and it would cancel out anyway. However, if we don't specify an; // explicit normalization integral in createIntegral(), the last-used; // normalization set might be used to normalize the pdf, resulting in; // redundant computations.; //; // For this reason, the normalization set of the integrated pdfs is fixed to; // an empty set in this case. Note that in RooFit, a nullptr normalization; // set and an empty normalization set is not equivalent. The former implies; // taking the last-used normalization set, and the latter means explicitly no; // normalization.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:23,Deployability,integrat,integratable,23,"// Remove analytically integratable observables from numeric integration list",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:61,Deployability,integrat,integration,61,"// Remove analytically integratable observables from numeric integration list",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:23,Integrability,integrat,integratable,23,"// Remove analytically integratable observables from numeric integration list",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:61,Integrability,integrat,integration,61,"// Remove analytically integratable observables from numeric integration list",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:17,Availability,alive,alive,17,"// Keep integral alive until the prodSet is cloned later",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:12,Deployability,integrat,integration,12,"// Analytic integration of factorizable observable not possible, add straight pdf to product",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:12,Integrability,integrat,integration,12,"// Analytic integration of factorizable observable not possible, add straight pdf to product",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:160,Performance,load,loaded,160,"// Create clones of the elements in prodSet. These need to be cloned; // because when caching optimisation lvl 2 is activated, pre-computed; // values are side-loaded into the elements.; // Those pre-cached values already contain normalisation constants, so; // the integral comes out wrongly. Therefore, we create here nodes that; // don't participate in any caching, which are used to compute integrals.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:200,Performance,cache,cached,200,"// Create clones of the elements in prodSet. These need to be cloned; // because when caching optimisation lvl 2 is activated, pre-computed; // values are side-loaded into the elements.; // Those pre-cached values already contain normalisation constants, so; // the integral comes out wrongly. Therefore, we create here nodes that; // don't participate in any caching, which are used to compute integrals.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:48,Deployability,integrat,integration,48,"// Create integral performing remaining numeric integration over (partial) analytic product",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:48,Integrability,integrat,integration,48,"// Create integral performing remaining numeric integration over (partial) analytic product",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:19,Performance,perform,performing,19,"// Create integral performing remaining numeric integration over (partial) analytic product",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:96,Performance,cache,cache,96,"////////////////////////////////////////////////////////////////////////////////; /// Intercept cache mode operation changes and propagate them to the components",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:11,Performance,cache,cache,11,"// WVE use cache manager here!",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGenProdProj.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGlobalFunc.cxx:42,Modifiability,variab,variable,42,"// Passing a nullptr name means no weight variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGlobalFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGlobalFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGlobalFunc.cxx:4,Deployability,Integrat,Integrate,4,"/// Integrate the PDF over bins. Improves accuracy for binned fits. Switch off using `0.` as argument. \see; /// RooAbsPdf::fitTo().",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGlobalFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGlobalFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGlobalFunc.cxx:4,Integrability,Integrat,Integrate,4,"/// Integrate the PDF over bins. Improves accuracy for binned fits. Switch off using `0.` as argument. \see; /// RooAbsPdf::fitTo().",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGlobalFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGlobalFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGlobalFunc.cxx:15,Energy Efficiency,reduce,reduce,15,"// RooAbsData::reduce arguments",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGlobalFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGlobalFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx:888,Deployability,integrat,integration,888,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGrid.cxx; \class RooGrid; \ingroup Roofitcore. Utility class for RooMCIntegrator which; implements an adaptive multi-dimensional Monte Carlo numerical; integration, following the VEGAS algorithm.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGrid.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx:838,Energy Efficiency,adapt,adaptive,838,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGrid.cxx; \class RooGrid; \ingroup Roofitcore. Utility class for RooMCIntegrator which; implements an adaptive multi-dimensional Monte Carlo numerical; integration, following the VEGAS algorithm.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGrid.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx:888,Integrability,integrat,integration,888,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGrid.cxx; \class RooGrid; \ingroup Roofitcore. Utility class for RooMCIntegrator which; implements an adaptive multi-dimensional Monte Carlo numerical; integration, following the VEGAS algorithm.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGrid.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx:838,Modifiability,adapt,adaptive,838,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGrid.cxx; \class RooGrid; \ingroup Roofitcore. Utility class for RooMCIntegrator which; implements an adaptive multi-dimensional Monte Carlo numerical; integration, following the VEGAS algorithm.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGrid.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx:3,Energy Efficiency,allocate,allocate,3,"// allocate workspace memory",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGrid.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx:40,Performance,load,load,40,"// loop over bins in this dimension and load _xin[] with new bin edges",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGrid.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx:3,Deployability,update,update,3,"// update this bin's calculated volume",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGrid.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the specified array of box indices to refer to the next box; /// in the standard traversal order and return true, or else return; /// false if we the indices already refer to the last box.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGrid.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx:278,Modifiability,flexible,flexible,278,"////////////////////////////////////////////////////////////////////////////////; /// Refine the grid using the values that have been accumulated so far.; /// The parameter alpha controls the stiffness of the rebinning and should; /// usually be between 1 (stiffer) and 2 (more flexible). A value of zero; /// prevents any rebinning.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGrid.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.h:12,Integrability,interface,interface,12,"// Printing interface",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGrid.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.h:20,Security,Access,Accessor,20,"// must be even; // Accessor for the j-th normalized grid point along the i-th dimension",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGrid.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.h:8,Deployability,configurat,configuration,8,"///< Is configuration valid",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGrid.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.h:8,Modifiability,config,configuration,8,"///< Is configuration valid",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooGrid.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHelpers.cxx:73,Availability,alive,alive,73,"/// Hijack all messages with given level and topics while this object is alive.; /// \param[in] level Minimum level to hijack. Higher levels also get captured.; /// \param[in] topics Topics to hijack. Use `|` to combine different topics, and cast to `RooFit::MsgTopic` if; /// necessary. \param[in] objectName Only hijack messages from an object with the given name. Defaults to any object.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHelpers.cxx:15,Integrability,message,messages,15,"/// Hijack all messages with given level and topics while this object is alive.; /// \param[in] level Minimum level to hijack. Higher levels also get captured.; /// \param[in] topics Topics to hijack. Use `|` to combine different topics, and cast to `RooFit::MsgTopic` if; /// necessary. \param[in] objectName Only hijack messages from an object with the given name. Defaults to any object.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHelpers.cxx:322,Integrability,message,messages,322,"/// Hijack all messages with given level and topics while this object is alive.; /// \param[in] level Minimum level to hijack. Higher levels also get captured.; /// \param[in] topics Topics to hijack. Use `|` to combine different topics, and cast to `RooFit::MsgTopic` if; /// necessary. \param[in] objectName Only hijack messages from an object with the given name. Defaults to any object.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHelpers.cxx:103,Availability,error,error,103,"/// \param[in] callingClass Class that's calling. Needed to include name and type name of the class in error message.; /// \param[in] pars List of all parameters to be checked.; /// \param[in] min Minimum of allowed range. `min` itself counts as disallowed.; /// \param[in] max Maximum of allowed range. `max` itself counts as disallowed.; /// \param[in] limitsInAllowedRange If true, the limits passed as parameters are part of the allowed range.; /// \param[in] extraMessage Message that should be appended to the warning.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHelpers.cxx:109,Integrability,message,message,109,"/// \param[in] callingClass Class that's calling. Needed to include name and type name of the class in error message.; /// \param[in] pars List of all parameters to be checked.; /// \param[in] min Minimum of allowed range. `min` itself counts as disallowed.; /// \param[in] max Maximum of allowed range. `max` itself counts as disallowed.; /// \param[in] limitsInAllowedRange If true, the limits passed as parameters are part of the allowed range.; /// \param[in] extraMessage Message that should be appended to the warning.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHelpers.cxx:477,Integrability,Message,Message,477,"/// \param[in] callingClass Class that's calling. Needed to include name and type name of the class in error message.; /// \param[in] pars List of all parameters to be checked.; /// \param[in] min Minimum of allowed range. `min` itself counts as disallowed.; /// \param[in] max Maximum of allowed range. `max` itself counts as disallowed.; /// \param[in] limitsInAllowedRange If true, the limits passed as parameters are part of the allowed range.; /// \param[in] extraMessage Message that should be appended to the warning.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:835,Availability,Error,Error,835,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooHist.cxx; \class RooHist; \ingroup Roofitcore. Graphical representation of binned data based on the; TGraphAsymmErrors class. Error bars are calculated using either Poisson; or Binomial statistics. A RooHist is used to represent histograms in; a RooPlot.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:295,Availability,error,error,295,"////////////////////////////////////////////////////////////////////////////////; /// Create an empty histogram that can be filled with the addBin(); /// and addAsymmetryBin() methods. Use the optional parameter to; /// specify the confidence level in units of sigma to use for; /// calculating error bars. The nominal bin width specifies the; /// default used by addBin(), and is used to set the relative; /// normalization of bins with different widths.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:201,Availability,Error,Error,201,"////////////////////////////////////////////////////////////////////////////////; /// Create a histogram from the contents of the specified TH1 object; /// which may have fixed or variable bin widths. Error bars are; /// calculated using Poisson statistics. Prints a warning and rounds; /// any bins with non-integer contents. Use the optional parameter to; /// specify the confidence level in units of sigma to use for; /// calculating error bars. The nominal bin width specifies the; /// default used by addBin(), and is used to set the relative; /// normalization of bins with different widths. If not set, the; /// nominal bin width is calculated as range/nbins.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:437,Availability,error,error,437,"////////////////////////////////////////////////////////////////////////////////; /// Create a histogram from the contents of the specified TH1 object; /// which may have fixed or variable bin widths. Error bars are; /// calculated using Poisson statistics. Prints a warning and rounds; /// any bins with non-integer contents. Use the optional parameter to; /// specify the confidence level in units of sigma to use for; /// calculating error bars. The nominal bin width specifies the; /// default used by addBin(), and is used to set the relative; /// normalization of bins with different widths. If not set, the; /// nominal bin width is calculated as range/nbins.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:180,Modifiability,variab,variable,180,"////////////////////////////////////////////////////////////////////////////////; /// Create a histogram from the contents of the specified TH1 object; /// which may have fixed or variable bin widths. Error bars are; /// calculated using Poisson statistics. Prints a warning and rounds; /// any bins with non-integer contents. Use the optional parameter to; /// specify the confidence level in units of sigma to use for; /// calculating error bars. The nominal bin width specifies the; /// default used by addBin(), and is used to set the relative; /// normalization of bins with different widths. If not set, the; /// nominal bin width is calculated as range/nbins.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:300,Availability,Error,Error,300,"////////////////////////////////////////////////////////////////////////////////; /// Create a histogram from the asymmetry between the specified TH1 objects; /// which may have fixed or variable bin widths, but which must both have; /// the same binning. The asymmetry is calculated as (1-2)/(1+2). Error bars are; /// calculated using Binomial statistics. Prints a warning and rounds; /// any bins with non-integer contents. Use the optional parameter to; /// specify the confidence level in units of sigma to use for; /// calculating error bars. The nominal bin width specifies the; /// default used by addAsymmetryBin(), and is used to set the relative; /// normalization of bins with different widths. If not set, the; /// nominal bin width is calculated as range/nbins.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:537,Availability,error,error,537,"////////////////////////////////////////////////////////////////////////////////; /// Create a histogram from the asymmetry between the specified TH1 objects; /// which may have fixed or variable bin widths, but which must both have; /// the same binning. The asymmetry is calculated as (1-2)/(1+2). Error bars are; /// calculated using Binomial statistics. Prints a warning and rounds; /// any bins with non-integer contents. Use the optional parameter to; /// specify the confidence level in units of sigma to use for; /// calculating error bars. The nominal bin width specifies the; /// default used by addAsymmetryBin(), and is used to set the relative; /// normalization of bins with different widths. If not set, the; /// nominal bin width is calculated as range/nbins.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:187,Modifiability,variab,variable,187,"////////////////////////////////////////////////////////////////////////////////; /// Create a histogram from the asymmetry between the specified TH1 objects; /// which may have fixed or variable bin widths, but which must both have; /// the same binning. The asymmetry is calculated as (1-2)/(1+2). Error bars are; /// calculated using Binomial statistics. Prints a warning and rounds; /// any bins with non-integer contents. Use the optional parameter to; /// specify the confidence level in units of sigma to use for; /// calculating error bars. The nominal bin width specifies the; /// default used by addAsymmetryBin(), and is used to set the relative; /// normalization of bins with different widths. If not set, the; /// nominal bin width is calculated as range/nbins.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:149,Availability,error,errors,149,"////////////////////////////////////////////////////////////////////////////////; /// Create histogram as sum of two existing histograms. If Poisson errors are selected the histograms are; /// added and Poisson confidence intervals are calculated for the summed content. If wgt1 and wgt2 are not; /// 1 in this mode, a warning message is printed. If SumW2 errors are selected the histograms are added; /// and the histograms errors are added in quadrature, taking the weights into account.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:356,Availability,error,errors,356,"////////////////////////////////////////////////////////////////////////////////; /// Create histogram as sum of two existing histograms. If Poisson errors are selected the histograms are; /// added and Poisson confidence intervals are calculated for the summed content. If wgt1 and wgt2 are not; /// 1 in this mode, a warning message is printed. If SumW2 errors are selected the histograms are added; /// and the histograms errors are added in quadrature, taking the weights into account.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:425,Availability,error,errors,425,"////////////////////////////////////////////////////////////////////////////////; /// Create histogram as sum of two existing histograms. If Poisson errors are selected the histograms are; /// added and Poisson confidence intervals are calculated for the summed content. If wgt1 and wgt2 are not; /// 1 in this mode, a warning message is printed. If SumW2 errors are selected the histograms are added; /// and the histograms errors are added in quadrature, taking the weights into account.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:327,Integrability,message,message,327,"////////////////////////////////////////////////////////////////////////////////; /// Create histogram as sum of two existing histograms. If Poisson errors are selected the histograms are; /// added and Poisson confidence intervals are calculated for the summed content. If wgt1 and wgt2 are not; /// 1 in this mode, a warning message is printed. If SumW2 errors are selected the histograms are added; /// and the histograms errors are added in quadrature, taking the weights into account.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:31,Availability,error,errors,31,"// Add histograms with Poisson errors; // Issue warning if weights are not 1",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:29,Availability,error,errors,29,"// Add histograms with SumW2 errors; // Add histograms, calculate combined sum-of-weights error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:90,Availability,error,error,90,"// Add histograms with SumW2 errors; // Add histograms, calculate combined sum-of-weights error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:127,Availability,Error,Errors,127,"////////////////////////////////////////////////////////////////////////////////; /// Create histogram from a pdf or function. Errors are computed based on the fit result provided.; ///; /// This signature is intended for unfolding/deconvolution scenarios,; /// where a pdf is constructed as ""data minus background"" and is thus; /// intended to be displayed as ""data"" (or at least data-like).; /// Usage of this signature is triggered by the draw style ""P"" in RooAbsReal::plotOn.; ///; /// More details.; /// \param[in] f The function to be plotted.; /// \param[in] x The variable on the x-axis; /// \param[in] xErrorFrac Size of the error in x as a fraction of the bin width; /// \param[in] scaleFactor arbitrary scaling of the y-values; /// \param[in] normVars variables over which to normalize; /// \param[in] fr fit result",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:634,Availability,error,error,634,"////////////////////////////////////////////////////////////////////////////////; /// Create histogram from a pdf or function. Errors are computed based on the fit result provided.; ///; /// This signature is intended for unfolding/deconvolution scenarios,; /// where a pdf is constructed as ""data minus background"" and is thus; /// intended to be displayed as ""data"" (or at least data-like).; /// Usage of this signature is triggered by the draw style ""P"" in RooAbsReal::plotOn.; ///; /// More details.; /// \param[in] f The function to be plotted.; /// \param[in] x The variable on the x-axis; /// \param[in] xErrorFrac Size of the error in x as a fraction of the bin width; /// \param[in] scaleFactor arbitrary scaling of the y-values; /// \param[in] normVars variables over which to normalize; /// \param[in] fr fit result",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:572,Modifiability,variab,variable,572,"////////////////////////////////////////////////////////////////////////////////; /// Create histogram from a pdf or function. Errors are computed based on the fit result provided.; ///; /// This signature is intended for unfolding/deconvolution scenarios,; /// where a pdf is constructed as ""data minus background"" and is thus; /// intended to be displayed as ""data"" (or at least data-like).; /// Usage of this signature is triggered by the draw style ""P"" in RooAbsReal::plotOn.; ///; /// More details.; /// \param[in] f The function to be plotted.; /// \param[in] x The variable on the x-axis; /// \param[in] xErrorFrac Size of the error in x as a fraction of the bin width; /// \param[in] scaleFactor arbitrary scaling of the y-values; /// \param[in] normVars variables over which to normalize; /// \param[in] fr fit result",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:763,Modifiability,variab,variables,763,"////////////////////////////////////////////////////////////////////////////////; /// Create histogram from a pdf or function. Errors are computed based on the fit result provided.; ///; /// This signature is intended for unfolding/deconvolution scenarios,; /// where a pdf is constructed as ""data minus background"" and is thus; /// intended to be displayed as ""data"" (or at least data-like).; /// Usage of this signature is triggered by the draw style ""P"" in RooAbsReal::plotOn.; ///; /// More details.; /// \param[in] f The function to be plotted.; /// \param[in] x The variable on the x-axis; /// \param[in] xErrorFrac Size of the error in x as a fraction of the bin width; /// \param[in] scaleFactor arbitrary scaling of the y-values; /// \param[in] normVars variables over which to normalize; /// \param[in] fr fit result",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform common initialization for all constructors.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:46,Availability,error,errors,46,"// If the scale is negative, the low and high errors must be swapped",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:172,Availability,error,error,172,"////////////////////////////////////////////////////////////////////////////////; /// Add a bin to this histogram with the specified integer bin contents; /// and using an error bar calculated with Poisson statistics. The bin width; /// is used to set the relative scale of bins with different widths.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:21,Availability,error,errors,21,"// calculate Poisson errors for this bin",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:155,Availability,error,error,155,"////////////////////////////////////////////////////////////////////////////////; /// Add a bin to this histogram with the specified bin contents; /// and error. The bin width is used to set the relative scale of; /// bins with different widths.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:155,Availability,error,error,155,"////////////////////////////////////////////////////////////////////////////////; /// Add a bin to this histogram with the specified bin contents; /// and error. The bin width is used to set the relative scale of; /// bins with different widths.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:159,Availability,error,error,159,"////////////////////////////////////////////////////////////////////////////////; /// Add a bin to this histogram with the value (n1-n2)/(n1+n2); /// using an error bar calculated with Binomial statistics.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:22,Availability,error,errors,22,"// calculate Binomial errors for this bin",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:159,Availability,error,error,159,"////////////////////////////////////////////////////////////////////////////////; /// Add a bin to this histogram with the value (n1-n2)/(n1+n2); /// using an error bar calculated with Binomial statistics.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:22,Availability,error,errors,22,"// calculate Binomial errors for this bin",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:154,Availability,error,error,154,"////////////////////////////////////////////////////////////////////////////////; /// Add a bin to this histogram with the value n1/(n1+n2); /// using an error bar calculated with Binomial statistics.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:22,Availability,error,errors,22,"// calculate Binomial errors for this bin",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:154,Availability,error,error,154,"////////////////////////////////////////////////////////////////////////////////; /// Add a bin to this histogram with the value n1/(n1+n2); /// using an error bar calculated with Binomial statistics.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:22,Availability,error,errors,22,"// calculate Binomial errors for this bin",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:166,Availability,toler,tolerance,166,"////////////////////////////////////////////////////////////////////////////////; /// Return true if contents of this RooHist is identical within given; /// relative tolerance to that of 'other'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:45,Performance,perform,perform,45,"// Make temporary TH1s output of RooHists to perform Kolmogorov test",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:64,Testability,test,test,64,"// Make temporary TH1s output of RooHists to perform Kolmogorov test",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:200,Availability,error,error,200,"////////////////////////////////////////////////////////////////////////////////; /// Print info about this histogram to the specified output stream.; ///; /// Standard: number of entries; /// Shape: error CL and maximum value; /// Verbose: print our bin contents and errors",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:268,Availability,error,errors,268,"////////////////////////////////////////////////////////////////////////////////; /// Print info about this histogram to the specified output stream.; ///; /// Standard: number of entries; /// Shape: error CL and maximum value; /// Verbose: print our bin contents and errors",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:233,Availability,error,errors,233,"////////////////////////////////////////////////////////////////////////////////; /// Create and return RooHist containing residuals w.r.t to given curve.; /// If normalize is true, the residuals are normalized by the histogram; /// errors creating a RooHist with pull values",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx:804,Availability,error,error,804,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooHistError.cxx; \class RooHistError; \ingroup Roofitcore. Singleton class used to calculate the error bars; for each bin of a RooHist object. Errors are calculated by integrating; a specified area of a Poisson or Binomail error distribution.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx:850,Availability,Error,Errors,850,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooHistError.cxx; \class RooHistError; \ingroup Roofitcore. Singleton class used to calculate the error bars; for each bin of a RooHist object. Errors are calculated by integrating; a specified area of a Poisson or Binomail error distribution.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx:930,Availability,error,error,930,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooHistError.cxx; \class RooHistError; \ingroup Roofitcore. Singleton class used to calculate the error bars; for each bin of a RooHist object. Errors are calculated by integrating; a specified area of a Poisson or Binomail error distribution.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx:875,Deployability,integrat,integrating,875,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooHistError.cxx; \class RooHistError; \ingroup Roofitcore. Singleton class used to calculate the error bars; for each bin of a RooHist object. Errors are calculated by integrating; a specified area of a Poisson or Binomail error distribution.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx:875,Integrability,integrat,integrating,875,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooHistError.cxx; \class RooHistError; \ingroup Roofitcore. Singleton class used to calculate the error bars; for each bin of a RooHist object. Errors are calculated by integrating; a specified area of a Poisson or Binomail error distribution.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx:3,Safety,sanity check,sanity checks,3,"// sanity checks",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx:18,Availability,error,error,18,"// use asymptotic error if possible",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx:222,Availability,error,error,222,"////////////////////////////////////////////////////////////////////////////////; /// Return 'nSigma' binomial confidence interval for (n,m). The result is return in asym1 and asym2.; /// If the return values is false and error occurred.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx:3,Safety,sanity check,sanity checks,3,"// sanity checks",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx:3,Usability,undo,undo,3,"// undo the swap here",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx:222,Availability,error,error,222,"////////////////////////////////////////////////////////////////////////////////; /// Return 'nSigma' binomial confidence interval for (n,m). The result is return in asym1 and asym2.; /// If the return values is false and error occurred.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx:3,Safety,sanity check,sanity checks,3,"// sanity checks",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx:3,Usability,undo,undo,3,"// undo the swap here",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx:3,Safety,sanity check,sanity checks,3,"// sanity checks",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistError.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistError.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:122,Modifiability,variab,variable,122,"////////////////////////////////////////////////////////////////////////////////; /// Constructor from a RooDataHist. The variable listed in 'vars' control the dimensionality of the; /// function. Any additional dimensions present in 'dhist' will be projected out. RooDataHist dimensions; /// can be either real or discrete. See RooDataHist::RooDataHist for details on the binning.; /// RooHistFunc neither owns or clone 'dhist' and the user must ensure the input histogram exists; /// for the entire life span of this function.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:122,Modifiability,variab,variable,122,"////////////////////////////////////////////////////////////////////////////////; /// Constructor from a RooDataHist. The variable listed in 'vars' control the dimensionality of the; /// function. Any additional dimensions present in 'dhist' will be projected out. RooDataHist dimensions; /// can be either real or discrete. See RooDataHist::RooDataHist for details on the binning.; /// RooHistFunc neither owns or clone 'dhist' and the user must ensure the input histogram exists; /// for the entire life span of this function.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:179,Integrability,depend,dependents,179,"////////////////////////////////////////////////////////////////////////////////; /// Return the current value: The value of the bin enclosing the current coordinates; /// of the dependents, normalized by the histograms contents. Interpolation; /// is applied if the RooHistFunc is configured to do that",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:282,Modifiability,config,configured,282,"////////////////////////////////////////////////////////////////////////////////; /// Return the current value: The value of the bin enclosing the current coordinates; /// of the dependents, normalized by the histograms contents. Interpolation; /// is applied if the RooHistFunc is configured to do that",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:121,Modifiability,variab,variables,121,"////////////////////////////////////////////////////////////////////////////////; /// Only handle case of maximum in all variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:96,Deployability,integrat,integration,96,"////////////////////////////////////////////////////////////////////////////////; /// Determine integration scenario. If no interpolation is used,; /// RooHistFunc can perform all integrals over its dependents; /// analytically via partial or complete summation of the input; /// histogram. If interpolation is used, only the integral; /// over all RooHistPdf observables is implemented.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:96,Integrability,integrat,integration,96,"////////////////////////////////////////////////////////////////////////////////; /// Determine integration scenario. If no interpolation is used,; /// RooHistFunc can perform all integrals over its dependents; /// analytically via partial or complete summation of the input; /// histogram. If interpolation is used, only the integral; /// over all RooHistPdf observables is implemented.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:199,Integrability,depend,dependents,199,"////////////////////////////////////////////////////////////////////////////////; /// Determine integration scenario. If no interpolation is used,; /// RooHistFunc can perform all integrals over its dependents; /// analytically via partial or complete summation of the input; /// histogram. If interpolation is used, only the integral; /// over all RooHistPdf observables is implemented.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:168,Performance,perform,perform,168,"////////////////////////////////////////////////////////////////////////////////; /// Determine integration scenario. If no interpolation is used,; /// RooHistFunc can perform all integrals over its dependents; /// analytically via partial or complete summation of the input; /// histogram. If interpolation is used, only the integral; /// over all RooHistPdf observables is implemented.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:135,Deployability,integrat,integration,135,"////////////////////////////////////////////////////////////////////////////////; /// Return integral identified by 'code'. The actual integration; /// is deferred to RooDataHist::sum() which implements partial; /// or complete summation over the histograms contents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:135,Integrability,integrat,integration,135,"////////////////////////////////////////////////////////////////////////////////; /// Return integral identified by 'code'. The actual integration; /// is deferred to RooDataHist::sum() which implements partial; /// or complete summation over the histograms contents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:223,Energy Efficiency,efficient,efficiently,223,"////////////////////////////////////////////////////////////////////////////////; /// Return sampling hint for making curves of (projections) of this function; /// as the recursive division strategy of RooCurve cannot deal efficiently; /// with the vertical lines that occur in a non-interpolated histogram",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:223,Energy Efficiency,efficient,efficiently,223,"////////////////////////////////////////////////////////////////////////////////; /// Return sampling hint for making curves of (projections) of this function; /// as the recursive division strategy of RooCurve cannot deal efficiently; /// with the vertical lines that occur in a non-interpolated histogram",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:66,Integrability,depend,dependent,66,"// Not found, or check that matching pdf observable is an l-value dependent on histogram observable fails",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:153,Availability,error,error,153,"////////////////////////////////////////////////////////////////////////////////; /// Check if our datahist is already in the workspace.; /// In case of error, return true.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:219,Modifiability,variab,variable,219,"////////////////////////////////////////////////////////////////////////////////; /// Constructor from a RooDataHist. The first list of observables are the p.d.f.; /// observables, which may any RooAbsReal (function or variable). The second list; /// are the corresponding observables in the RooDataHist which must be of type; /// RooRealVar or RooCategory This constructor thus allows to apply a coordinate transformation; /// on the histogram data to be applied.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:282,Modifiability,config,configured,282,"////////////////////////////////////////////////////////////////////////////////; /// Return the current value: The value of the bin enclosing the current coordinates; /// of the observables, normalized by the histograms contents. Interpolation; /// is applied if the RooHistPdf is configured to do that.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:3,Modifiability,parameteriz,parameterized,3,"// parameterized ranges may be full range now, but that might change,; // so return false",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:3,Deployability,integrat,integrate,3,"// integrate over full range of all observables - use bit 0 to indicate; // full range integration over all observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:87,Deployability,integrat,integration,87,"// integrate over full range of all observables - use bit 0 to indicate; // full range integration over all observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:3,Integrability,integrat,integrate,3,"// integrate over full range of all observables - use bit 0 to indicate; // full range integration over all observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:87,Integrability,integrat,integration,87,"// integrate over full range of all observables - use bit 0 to indicate; // full range integration over all observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:77,Deployability,integrat,integrate,77,"// Disable partial analytical integrals if interpolation is used, and we; // integrate over sub-ranges, but leave them enabled when we integrate over; // the full range of one or several variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:135,Deployability,integrat,integrate,135,"// Disable partial analytical integrals if interpolation is used, and we; // integrate over sub-ranges, but leave them enabled when we integrate over; // the full range of one or several variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:77,Integrability,integrat,integrate,77,"// Disable partial analytical integrals if interpolation is used, and we; // integrate over sub-ranges, but leave them enabled when we integrate over; // the full range of one or several variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:135,Integrability,integrat,integrate,135,"// Disable partial analytical integrals if interpolation is used, and we; // integrate over sub-ranges, but leave them enabled when we integrate over; // the full range of one or several variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:187,Modifiability,variab,variables,187,"// Disable partial analytical integrals if interpolation is used, and we; // integrate over sub-ranges, but leave them enabled when we integrate over; // the full range of one or several variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:33,Deployability,integrat,integration,33,"// Simplest scenario, full-range integration over all dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:33,Integrability,integrat,integration,33,"// Simplest scenario, full-range integration over all dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:54,Integrability,depend,dependents,54,"// Simplest scenario, full-range integration over all dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:3,Usability,Simpl,Simplest,3,"// Simplest scenario, full-range integration over all dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:11,Deployability,integrat,integration,11,"// Partial integration scenario, retrieve set of variables, calculate partial; // sum, figure out integration ranges (if needed)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:98,Deployability,integrat,integration,98,"// Partial integration scenario, retrieve set of variables, calculate partial; // sum, figure out integration ranges (if needed)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:11,Integrability,integrat,integration,11,"// Partial integration scenario, retrieve set of variables, calculate partial; // sum, figure out integration ranges (if needed)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:98,Integrability,integrat,integration,98,"// Partial integration scenario, retrieve set of variables, calculate partial; // sum, figure out integration ranges (if needed)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:49,Modifiability,variab,variables,49,"// Partial integration scenario, retrieve set of variables, calculate partial; // sum, figure out integration ranges (if needed)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:96,Deployability,integrat,integration,96,"////////////////////////////////////////////////////////////////////////////////; /// Determine integration scenario. If no interpolation is used,; /// RooHistPdf can perform all integrals over its dependents; /// analytically via partial or complete summation of the input; /// histogram. If interpolation is used on the integral over; /// all histogram observables is supported",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:96,Integrability,integrat,integration,96,"////////////////////////////////////////////////////////////////////////////////; /// Determine integration scenario. If no interpolation is used,; /// RooHistPdf can perform all integrals over its dependents; /// analytically via partial or complete summation of the input; /// histogram. If interpolation is used on the integral over; /// all histogram observables is supported",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:198,Integrability,depend,dependents,198,"////////////////////////////////////////////////////////////////////////////////; /// Determine integration scenario. If no interpolation is used,; /// RooHistPdf can perform all integrals over its dependents; /// analytically via partial or complete summation of the input; /// histogram. If interpolation is used on the integral over; /// all histogram observables is supported",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:167,Performance,perform,perform,167,"////////////////////////////////////////////////////////////////////////////////; /// Determine integration scenario. If no interpolation is used,; /// RooHistPdf can perform all integrals over its dependents; /// analytically via partial or complete summation of the input; /// histogram. If interpolation is used on the integral over; /// all histogram observables is supported",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:135,Deployability,integrat,integration,135,"////////////////////////////////////////////////////////////////////////////////; /// Return integral identified by 'code'. The actual integration; /// is deferred to RooDataHist::sum() which implements partial; /// or complete summation over the histograms contents.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:135,Integrability,integrat,integration,135,"////////////////////////////////////////////////////////////////////////////////; /// Return integral identified by 'code'. The actual integration; /// is deferred to RooDataHist::sum() which implements partial; /// or complete summation over the histograms contents.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:52,Deployability,integrat,integration,52,"// If the observable doesn't depend linearly on the integration; // variable we will not do analytical integration.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:103,Deployability,integrat,integration,103,"// If the observable doesn't depend linearly on the integration; // variable we will not do analytical integration.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:29,Integrability,depend,depend,29,"// If the observable doesn't depend linearly on the integration; // variable we will not do analytical integration.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:52,Integrability,integrat,integration,52,"// If the observable doesn't depend linearly on the integration; // variable we will not do analytical integration.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:103,Integrability,integrat,integration,103,"// If the observable doesn't depend linearly on the integration; // variable we will not do analytical integration.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:68,Modifiability,variab,variable,68,"// If the observable doesn't depend linearly on the integration; // variable we will not do analytical integration.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:223,Energy Efficiency,efficient,efficiently,223,"////////////////////////////////////////////////////////////////////////////////; /// Return sampling hint for making curves of (projections) of this function; /// as the recursive division strategy of RooCurve cannot deal efficiently; /// with the vertical lines that occur in a non-interpolated histogram",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:223,Energy Efficiency,efficient,efficiently,223,"////////////////////////////////////////////////////////////////////////////////; /// Return sampling hint for making curves of (projections) of this function; /// as the recursive division strategy of RooCurve cannot deal efficiently; /// with the vertical lines that occur in a non-interpolated histogram",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:121,Modifiability,variab,variables,121,"////////////////////////////////////////////////////////////////////////////////; /// Only handle case of maximum in all variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:59,Usability,Clear,Clear,59,"// WVE - interim solution - fix proxies here; //_proxyList.Clear() ;; //registerProxy(_pdfObsList) ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooHistPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:804,Deployability,integrat,integrator,804,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooImproperIntegrator1D.cxx; \class RooImproperIntegrator1D; \ingroup Roofitcore. Special numeric integrator that can handle integrals over open domains.; To this end the range is cut in up three pieces: [-inf,-1],[-1,+1] and [+1,inf]; and the outer two pieces, if required are calculated using a 1/x transform; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:804,Integrability,integrat,integrator,804,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooImproperIntegrator1D.cxx; \class RooImproperIntegrator1D; \ingroup Roofitcore. Special numeric integrator that can handle integrals over open domains.; To this end the range is cut in up three pieces: [-inf,-1],[-1,+1] and [+1,inf]; and the outer two pieces, if required are calculated using a 1/x transform; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:125,Deployability,integrat,integration,125,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with function binding. The integration range is taken from the; /// definition in the function binding",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:125,Integrability,integrat,integration,125,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with function binding. The integration range is taken from the; /// definition in the function binding",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:124,Deployability,configurat,configuration,124,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with function binding and configuration object. The integration range is taken; /// from the definition in the function binding",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:150,Deployability,integrat,integration,150,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with function binding and configuration object. The integration range is taken; /// from the definition in the function binding",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:150,Integrability,integrat,integration,150,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with function binding and configuration object. The integration range is taken; /// from the definition in the function binding",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:124,Modifiability,config,configuration,124,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with function binding and configuration object. The integration range is taken; /// from the definition in the function binding",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:135,Deployability,integrat,integration,135,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with function binding, definition of integration range and configuration object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:157,Deployability,configurat,configuration,157,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with function binding, definition of integration range and configuration object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:135,Integrability,integrat,integration,135,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with function binding, definition of integration range and configuration object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:157,Modifiability,config,configuration,157,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with function binding, definition of integration range and configuration object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:101,Deployability,integrat,integrator,101,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the integrator, construct and initialize subintegrators",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:101,Integrability,integrat,integrator,101,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the integrator, construct and initialize subintegrators",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:35,Deployability,configurat,configuration,35,"// Helper function to create a new configuration that is just like the one; // associated to this integrator, but with a different summation rule.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:98,Deployability,integrat,integrator,98,"// Helper function to create a new configuration that is just like the one; // associated to this integrator, but with a different summation rule.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:98,Integrability,integrat,integrator,98,"// Helper function to create a new configuration that is just like the one; // associated to this integrator, but with a different summation rule.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:35,Modifiability,config,configuration,35,"// Helper function to create a new configuration that is just like the one; // associated to this integrator, but with a different summation rule.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:16,Deployability,configurat,configuration,16,"// copy default configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:16,Modifiability,config,configuration,16,"// copy default configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:17,Deployability,integrat,integration,17,"// partition the integration range into subranges that can each be; // handled by RooIntegrator1D",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:17,Integrability,integrat,integration,17,"// partition the integration range into subranges that can each be; // handled by RooIntegrator1D",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:51,Deployability,integrat,integrator,51,"// both limits are finite: use the plain trapezoid integrator",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:51,Integrability,integrat,integrator,51,"// both limits are finite: use the plain trapezoid integrator",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:29,Deployability,integrat,integrate,29,"// both limits are infinite: integrate over (-1,+1) using; // the plain trapezoid integrator...",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:82,Deployability,integrat,integrator,82,"// both limits are infinite: integrate over (-1,+1) using; // the plain trapezoid integrator...",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:29,Integrability,integrat,integrate,29,"// both limits are infinite: integrate over (-1,+1) using; // the plain trapezoid integrator...",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:82,Integrability,integrat,integrator,82,"// both limits are infinite: integrate over (-1,+1) using; // the plain trapezoid integrator...",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:10,Deployability,integrat,integrate,10,"// ...and integrate the infinite tails using the midpoint integrator",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:58,Deployability,integrat,integrator,58,"// ...and integrate the infinite tails using the midpoint integrator",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:10,Integrability,integrat,integrate,10,"// ...and integrate the infinite tails using the midpoint integrator",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:58,Integrability,integrat,integrator,58,"// ...and integrate the infinite tails using the midpoint integrator",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:16,Deployability,integrat,integrate,16,"// xmax >= 0 so integrate from (-inf,-1) and (-1,xmax)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:16,Integrability,integrat,integrate,16,"// xmax >= 0 so integrate from (-inf,-1) and (-1,xmax)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:15,Deployability,integrat,integrate,15,"// xmax < 0 so integrate from (-inf,xmax)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:15,Integrability,integrat,integrate,15,"// xmax < 0 so integrate from (-inf,xmax)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:16,Deployability,integrat,integrate,16,"// xmin <= 0 so integrate from (xmin,+1) and (+1,+inf)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:16,Integrability,integrat,integrate,16,"// xmin <= 0 so integrate from (xmin,+1) and (+1,+inf)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:15,Deployability,integrat,integrate,15,"// xmin > 0 so integrate from (xmin,+inf)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:15,Integrability,integrat,integrate,15,"// xmin > 0 so integrate from (xmin,+inf)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:97,Deployability,integrat,integration,97,"////////////////////////////////////////////////////////////////////////////////; /// Change our integration limits. Return true if the new limits are; /// ok, or otherwise false. Always returns false and does nothing; /// if this object was constructed to always use our integrand's limits.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:97,Integrability,integrat,integration,97,"////////////////////////////////////////////////////////////////////////////////; /// Change our integration limits. Return true if the new limits are; /// ok, or otherwise false. Always returns false and does nothing; /// if this object was constructed to always use our integrand's limits.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:126,Deployability,integrat,integrator,126,"////////////////////////////////////////////////////////////////////////////////; /// Check if the limits are valid. For this integrator all limit configurations; /// are valid, but if the limits change between two calculate() calls it; /// may be necessary to reconfigure (e.g. if an open ended range becomes; /// a closed range",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:147,Deployability,configurat,configurations,147,"////////////////////////////////////////////////////////////////////////////////; /// Check if the limits are valid. For this integrator all limit configurations; /// are valid, but if the limits change between two calculate() calls it; /// may be necessary to reconfigure (e.g. if an open ended range becomes; /// a closed range",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:126,Integrability,integrat,integrator,126,"////////////////////////////////////////////////////////////////////////////////; /// Check if the limits are valid. For this integrator all limit configurations; /// are valid, but if the limits change between two calculate() calls it; /// may be necessary to reconfigure (e.g. if an open ended range becomes; /// a closed range",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:147,Modifiability,config,configurations,147,"////////////////////////////////////////////////////////////////////////////////; /// Check if the limits are valid. For this integrator all limit configurations; /// are valid, but if the limits change between two calculate() calls it; /// may be necessary to reconfigure (e.g. if an open ended range becomes; /// a closed range",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:25,Deployability,integrat,integrators,25,"// Reinitialize embedded integrators, will automatically propagate new limits",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:25,Integrability,integrat,integrators,25,"// Reinitialize embedded integrators, will automatically propagate new limits",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:22,Deployability,integrat,integrators,22,"// Reuse our existing integrators by updating their limits",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:22,Integrability,integrat,integrators,22,"// Reuse our existing integrators by updating their limits",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:5,Deployability,Configurat,Configuration,5,"///< Configuration of limits",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:5,Modifiability,Config,Configuration,5,"///< Configuration of limits",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:5,Deployability,Configurat,Configuration,5,"///< Configuration object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:5,Modifiability,Config,Configuration,5,"///< Configuration object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:11,Deployability,integrat,integrator,11,"///< Piece integrator 1",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:11,Integrability,integrat,integrator,11,"///< Piece integrator 1",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:11,Deployability,integrat,integrator,11,"///< Piece integrator 2",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:11,Integrability,integrat,integrator,11,"///< Piece integrator 2",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:11,Deployability,integrat,integrator,11,"///< Piece integrator 3",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:11,Integrability,integrat,integrator,11,"///< Piece integrator 3",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooImproperIntegrator1D.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooInvTransform.cxx:877,Modifiability,variab,variables,877,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooInvTransform.cxx; \class RooInvTransform; \ingroup Roofitcore. Lightweight function binding that returns the inverse of an input function binding.; Apply the change of variables transformation x -> 1/x to the input; function and its range. The function must be one dimensional and its; range cannot include zero.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooInvTransform.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooInvTransform.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearCombination.cxx:845,Performance,perform,perform,845,"// Author: Rahul Balasubramanian, Nikhef 08 Apr 2021; /*****************************************************************************; * RooFit; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2019, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooLinearCombination; /// RooLinearCombination is a class that helps perform linear combination of; /// floating point numbers and permits handling them as multiprecision; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearCombination.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearCombination.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:918,Deployability,integrat,integrate,918,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooLinearVar; /// RooLinearVar is the most general form of a derived real-valued object that can; /// be used by RooRealIntegral to integrate over. The requirements for this are; /// * Can be modified directly (i.e. invertible formula); /// * Jacobian term in integral is constant (but not necessarily 1); ///; /// This class implements the most general form that satisfies these requirements; /// \f[; /// RLV = \mathrm{slope} \cdot x + \mathrm{offset}; /// \f]; /// \f$ x \f$ is required to be a RooRealVar to meet the invertibility criterium,; /// `slope` and `offset` are RooAbsReals, but cannot overlap with \f$ x \f$,; /// *i.e.*, \f$ x \f$ may not be a server of `slope` and `offset`.; ///; /// In the context of a dataset, `slope` may not contain any real-valued dependents; /// (to satisfyt the constant Jacobian requirement). This check cannot be enforced at; /// construction time, but can be performed at run time through the isJacobianOK(depList); /// member function.; ///; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:918,Integrability,integrat,integrate,918,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooLinearVar; /// RooLinearVar is the most general form of a derived real-valued object that can; /// be used by RooRealIntegral to integrate over. The requirements for this are; /// * Can be modified directly (i.e. invertible formula); /// * Jacobian term in integral is constant (but not necessarily 1); ///; /// This class implements the most general form that satisfies these requirements; /// \f[; /// RLV = \mathrm{slope} \cdot x + \mathrm{offset}; /// \f]; /// \f$ x \f$ is required to be a RooRealVar to meet the invertibility criterium,; /// `slope` and `offset` are RooAbsReals, but cannot overlap with \f$ x \f$,; /// *i.e.*, \f$ x \f$ may not be a server of `slope` and `offset`.; ///; /// In the context of a dataset, `slope` may not contain any real-valued dependents; /// (to satisfyt the constant Jacobian requirement). This check cannot be enforced at; /// construction time, but can be performed at run time through the isJacobianOK(depList); /// member function.; ///; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:1557,Integrability,depend,dependents,1557,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooLinearVar; /// RooLinearVar is the most general form of a derived real-valued object that can; /// be used by RooRealIntegral to integrate over. The requirements for this are; /// * Can be modified directly (i.e. invertible formula); /// * Jacobian term in integral is constant (but not necessarily 1); ///; /// This class implements the most general form that satisfies these requirements; /// \f[; /// RLV = \mathrm{slope} \cdot x + \mathrm{offset}; /// \f]; /// \f$ x \f$ is required to be a RooRealVar to meet the invertibility criterium,; /// `slope` and `offset` are RooAbsReals, but cannot overlap with \f$ x \f$,; /// *i.e.*, \f$ x \f$ may not be a server of `slope` and `offset`.; ///; /// In the context of a dataset, `slope` may not contain any real-valued dependents; /// (to satisfyt the constant Jacobian requirement). This check cannot be enforced at; /// construction time, but can be performed at run time through the isJacobianOK(depList); /// member function.; ///; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:1690,Performance,perform,performed,1690,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooLinearVar; /// RooLinearVar is the most general form of a derived real-valued object that can; /// be used by RooRealIntegral to integrate over. The requirements for this are; /// * Can be modified directly (i.e. invertible formula); /// * Jacobian term in integral is constant (but not necessarily 1); ///; /// This class implements the most general form that satisfies these requirements; /// \f[; /// RLV = \mathrm{slope} \cdot x + \mathrm{offset}; /// \f]; /// \f$ x \f$ is required to be a RooRealVar to meet the invertibility criterium,; /// `slope` and `offset` are RooAbsReals, but cannot overlap with \f$ x \f$,; /// *i.e.*, \f$ x \f$ may not be a server of `slope` and `offset`.; ///; /// In the context of a dataset, `slope` may not contain any real-valued dependents; /// (to satisfyt the constant Jacobian requirement). This check cannot be enforced at; /// construction time, but can be performed at run time through the isJacobianOK(depList); /// member function.; ///; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:120,Modifiability,variab,variable,120,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with RooAbsRealLValue variable and RooAbsReal slope and offset",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:28,Integrability,depend,depend,28,"// Slope and offset may not depend on variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:38,Modifiability,variab,variable,38,"// Slope and offset may not depend on variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:46,Integrability,depend,dependent,46,"// Initial plot range and number of bins from dependent variable; // setPlotRange(variable.getPlotMin()*_slope + _offset,; // variable.getPlotMax()*_slope + _offset) ;; // setPlotBins(variable.getPlotBins()) ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:56,Modifiability,variab,variable,56,"// Initial plot range and number of bins from dependent variable; // setPlotRange(variable.getPlotMin()*_slope + _offset,; // variable.getPlotMax()*_slope + _offset) ;; // setPlotBins(variable.getPlotBins()) ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:82,Modifiability,variab,variable,82,"// Initial plot range and number of bins from dependent variable; // setPlotRange(variable.getPlotMin()*_slope + _offset,; // variable.getPlotMax()*_slope + _offset) ;; // setPlotBins(variable.getPlotBins()) ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:126,Modifiability,variab,variable,126,"// Initial plot range and number of bins from dependent variable; // setPlotRange(variable.getPlotMin()*_slope + _offset,; // variable.getPlotMax()*_slope + _offset) ;; // setPlotBins(variable.getPlotBins()) ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:184,Modifiability,variab,variable,184,"// Initial plot range and number of bins from dependent variable; // setPlotRange(variable.getPlotMin()*_slope + _offset,; // variable.getPlotMax()*_slope + _offset) ;; // setPlotBins(variable.getPlotBins()) ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:201,Availability,error,error,201,"////////////////////////////////////////////////////////////////////////////////; /// Assign given value to linear transformation: sets input variable to (value-offset)/slope; /// If slope is zerom an error message is printed and no assignment is made",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:207,Integrability,message,message,207,"////////////////////////////////////////////////////////////////////////////////; /// Assign given value to linear transformation: sets input variable to (value-offset)/slope; /// If slope is zerom an error message is printed and no assignment is made",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:142,Modifiability,variab,variable,142,"////////////////////////////////////////////////////////////////////////////////; /// Assign given value to linear transformation: sets input variable to (value-offset)/slope; /// If slope is zerom an error message is printed and no assignment is made",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:40,Integrability,depend,dependents,40,"// Check if jacobian has no real-valued dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:87,Integrability,depend,depends,87,"// cout << ""RooLinearVar::isJacobianOK("" << GetName() << "") return false because slope depends on value of "" << arg->GetName() << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:370,Energy Efficiency,adapt,adaptor,370,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve binning of this linear transformation. A RooLinearVar does not have its own; /// binnings but uses linearly transformed binnings of the input variable. If a given; /// binning exists on the input variable, it will also exist on this linear transformation,; /// and a binning adaptor object is created on the fly.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:237,Modifiability,variab,variable,237,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve binning of this linear transformation. A RooLinearVar does not have its own; /// binnings but uses linearly transformed binnings of the input variable. If a given; /// binning exists on the input variable, it will also exist on this linear transformation,; /// and a binning adaptor object is created on the fly.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:291,Modifiability,variab,variable,291,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve binning of this linear transformation. A RooLinearVar does not have its own; /// binnings but uses linearly transformed binnings of the input variable. If a given; /// binning exists on the input variable, it will also exist on this linear transformation,; /// and a binning adaptor object is created on the fly.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:370,Modifiability,adapt,adaptor,370,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve binning of this linear transformation. A RooLinearVar does not have its own; /// binnings but uses linearly transformed binnings of the input variable. If a given; /// binning exists on the input variable, it will also exist on this linear transformation,; /// and a binning adaptor object is created on the fly.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:177,Modifiability,variab,variable,177,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if binning with given name exists.If a given binning; /// exists on the input variable, it will also exists on this linear; /// transformation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinearVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:897,Security,hash,hash,897,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooLinkedList.cxx; \class RooLinkedList; \ingroup Roofitcore. Collection class for internal use, storing; a collection of RooAbsArg pointers in a doubly linked list.; It can optionally add a hash table to speed up random access; in large collections; Use RooAbsCollection derived objects for public use; (e.g. RooArgSet or RooArgList); **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:927,Security,access,access,927,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooLinkedList.cxx; \class RooLinkedList; \ingroup Roofitcore. Collection class for internal use, storing; a collection of RooAbsArg pointers in a doubly linked list.; It can optionally add a hash table to speed up random access; in large collections; Use RooAbsCollection derived objects for public use; (e.g. RooArgSet or RooArgList); **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:4,Deployability,release,release,4,"/// release the pool, return true if the pool is unused",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:31,Energy Efficiency,allocate,allocate,31,"/// find size of next chunk to allocate (in a hopefully smart way)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:3,Energy Efficiency,allocate,allocate,3,"// allocate and register new chunk and put it on the freelist",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:24,Availability,avail,available,24,"// no chunks with space available, figure out chunk size",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:111,Security,hash,hash-table,111,"////////////////////////////////////////////////////////////////////////////////; /// Change the threshold for hash-table use to given size.; /// If a hash table exists when this method is called, it is regenerated.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:151,Security,hash,hash,151,"////////////////////////////////////////////////////////////////////////////////; /// Change the threshold for hash-table use to given size.; /// If a hash table exists when this method is called, it is regenerated.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:6,Security,hash,hash,6,"// No hash table present",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:19,Security,hash,hash,19,"// Remove existing hash table",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:14,Security,hash,hash,14,"// (Re)create hash tables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:8,Security,hash,hash,8,"// Fill hash table with existing entries",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:39,Security,Hash,Hash,39,"// Required since we overload TObject::Hash.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:10,Security,hash,hash,10,"// Add to hash table",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:22,Security,hash,hash,22,"// Expand capacity of hash table if #entries>#slots",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:45,Security,hash,hash,45,"//cout << ""storing link "" << _last << "" with hash arg "" << arg << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:15,Security,hash,hash,15,"// Remove from hash table",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:3,Deployability,Update,Update,3,"// Update first,last if necessary",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:11,Security,hash,hashed,11,"// Link is hashed by contents and may change slot in hash table",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:53,Security,hash,hash,53,"// Link is hashed by contents and may change slot in hash table",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:97,Testability,Test,TestBit,97,"//cout << ""RooLinkedList::find: possibly renamed '"" << name << ""', kRenamedArg="" << (nptr&&nptr->TestBit(RooNameReg::kRenamedArg)) << endl;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:113,Testability,Test,TestBit,113,"//cout << ""RooLinkedList::findArg: possibly renamed '"" << arg->GetName() << ""', kRenamedArg="" << arg->namePtr()->TestBit(RooNameReg::kRenamedArg) << endl;; // See if it might have been renamed",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:15,Deployability,update,update,15,"// if desired, update the tail of the (newly merged sorted) list",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx:15,Deployability,update,update,15,"// if desired, update the tail of the (newly merged sorted) list",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinkedList.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinkedList.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinTransBinning.cxx:881,Modifiability,variab,variable,881,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooLinTransBinning.cxx; \class RooLinTransBinning; \ingroup Roofitcore. Special binning implementation for RooLinearVar; that transforms the binning of the RooLinearVar input variable in the same; way that RooLinearVar does; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinTransBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinTransBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinTransBinning.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the slope and offset parameters and the pointer to the input binning",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinTransBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinTransBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinTransBinning.cxx:320,Performance,bottleneck,bottleneck,320,"// We are not allowed to modify the input array, so we can't apply the; // transformation in-place and then call _input->binNumbers() without; // allocating additional memory. That's why we fall back to binNumber() for; // now. The RooLinTransBinning is only ever used in the RooLinearVar, so if; // this ever becomes a bottleneck this could be optimized.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinTransBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinTransBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinTransBinning.cxx:345,Performance,optimiz,optimized,345,"// We are not allowed to modify the input array, so we can't apply the; // transformation in-place and then call _input->binNumbers() without; // allocating additional memory. That's why we fall back to binNumber() for; // now. The RooLinTransBinning is only ever used in the RooLinearVar, so if; // this ever becomes a bottleneck this could be optimized.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooLinTransBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinTransBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMappedCategory.cxx:2,Usability,Clear,Clear,2,"//Clear existing definitions, but preserve default output",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMappedCategory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMappedCategory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMappedCategory.cxx:150,Usability,intuit,intuitively,150,"////////////////////////////////////////////////////////////////////////////////; /// Customized printing of arguments of a RooMappedCategory to more intuitively reflect the contents of the; /// product operator construction",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMappedCategory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMappedCategory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMappedCategory.cxx:48,Performance,cache,cached,48,"/// When the input category changes states, the cached state mappings are invalidated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMappedCategory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMappedCategory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMappedCategory.cxx:200,Performance,cache,cached,200,"// There is no need to recompute _stateNames and _insertionOrder, as only defining new; // mappings has an effect on these. When the input category changes it shape, it is sufficient; // to clear the cached state mappings.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMappedCategory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMappedCategory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMappedCategory.cxx:190,Usability,clear,clear,190,"// There is no need to recompute _stateNames and _insertionOrder, as only defining new; // mappings has an effect on these. When the input category changes it shape, it is sufficient; // to clear the cached state mappings.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMappedCategory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMappedCategory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:836,Deployability,integrat,integration,836,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMCIntegrator.cxx; \class RooMCIntegrator; \ingroup Roofitcore. Implements an adaptive multi-dimensional Monte Carlo; numerical integration, following the VEGAS algorithm originally described; in G. P. Lepage, J. Comp. Phys. 27, 192(1978). This implementation is; based on a C version from the 0.9 beta release of the GNU scientific library.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:1011,Deployability,release,release,1011,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMCIntegrator.cxx; \class RooMCIntegrator; \ingroup Roofitcore. Implements an adaptive multi-dimensional Monte Carlo; numerical integration, following the VEGAS algorithm originally described; in G. P. Lepage, J. Comp. Phys. 27, 192(1978). This implementation is; based on a C version from the 0.9 beta release of the GNU scientific library.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:786,Energy Efficiency,adapt,adaptive,786,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMCIntegrator.cxx; \class RooMCIntegrator; \ingroup Roofitcore. Implements an adaptive multi-dimensional Monte Carlo; numerical integration, following the VEGAS algorithm originally described; in G. P. Lepage, J. Comp. Phys. 27, 192(1978). This implementation is; based on a C version from the 0.9 beta release of the GNU scientific library.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:836,Integrability,integrat,integration,836,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMCIntegrator.cxx; \class RooMCIntegrator; \ingroup Roofitcore. Implements an adaptive multi-dimensional Monte Carlo; numerical integration, following the VEGAS algorithm originally described; in G. P. Lepage, J. Comp. Phys. 27, 192(1978). This implementation is; based on a C version from the 0.9 beta release of the GNU scientific library.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:786,Modifiability,adapt,adaptive,786,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMCIntegrator.cxx; \class RooMCIntegrator; \ingroup Roofitcore. Implements an adaptive multi-dimensional Monte Carlo; numerical integration, following the VEGAS algorithm originally described; in G. P. Lepage, J. Comp. Phys. 27, 192(1978). This implementation is; based on a C version from the 0.9 beta release of the GNU scientific library.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:183,Deployability,configurat,configuration,183,"// Register this class with RooNumIntFactory; ////////////////////////////////////////////////////////////////////////////////; /// This function registers class RooMCIntegrator, its configuration options; /// and its capabilities with RooNumIntFactory",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:183,Modifiability,config,configuration,183,"// Register this class with RooNumIntFactory; ////////////////////////////////////////////////////////////////////////////////; /// This function registers class RooMCIntegrator, its configuration options; /// and its capabilities with RooNumIntFactory",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:20,Deployability,integrat,integrator,20,"// Create prototype integrator",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:20,Integrability,integrat,integrator,20,"// Create prototype integrator",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:34,Modifiability,config,config,34,"// Register prototype and default config with factory",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:99,Deployability,integrat,integrator,99,"////////////////////////////////////////////////////////////////////////////////; /// Construct an integrator over 'function' with given sampling mode; /// and generator type. The sampling mode can be 'Importance'; /// (default), 'ImportanceOnly' and 'Stratified'. The generator type; /// can be 'QuasiRandom' (default) and 'PseudoRandom'. Consult the original; /// VEGAS documentation on details of the mode and type parameters.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:99,Integrability,integrat,integrator,99,"////////////////////////////////////////////////////////////////////////////////; /// Construct an integrator over 'function' with given sampling mode; /// and generator type. The sampling mode can be 'Importance'; /// (default), 'ImportanceOnly' and 'Stratified'. The generator type; /// can be 'QuasiRandom' (default) and 'PseudoRandom'. Consult the original; /// VEGAS documentation on details of the mode and type parameters.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:99,Deployability,integrat,integrator,99,"////////////////////////////////////////////////////////////////////////////////; /// Construct an integrator over 'function' where the configuration details; /// are taken from 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:136,Deployability,configurat,configuration,136,"////////////////////////////////////////////////////////////////////////////////; /// Construct an integrator over 'function' where the configuration details; /// are taken from 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:99,Integrability,integrat,integrator,99,"////////////////////////////////////////////////////////////////////////////////; /// Construct an integrator over 'function' where the configuration details; /// are taken from 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:136,Modifiability,config,configuration,136,"////////////////////////////////////////////////////////////////////////////////; /// Construct an integrator over 'function' where the configuration details; /// are taken from 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:179,Modifiability,config,config,179,"////////////////////////////////////////////////////////////////////////////////; /// Construct an integrator over 'function' where the configuration details; /// are taken from 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:43,Availability,error,errors,43,"// check that our grid initialized without errors",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:102,Deployability,integrat,integrate,102,"////////////////////////////////////////////////////////////////////////////////; /// Check if we can integrate over the current domain. If return value; /// is true we cannot handle the current limits (e.g. where the domain; /// of one or more observables is open ended.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:102,Integrability,integrat,integrate,102,"////////////////////////////////////////////////////////////////////////////////; /// Check if we can integrate over the current domain. If return value; /// is true we cannot handle the current limits (e.g. where the domain; /// of one or more observables is open ended.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:347,Deployability,integrat,integration,347,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate the integral using a fixed number of calls to evaluate the integrand; /// equal to about 10k per dimension. Use the first 5k calls to refine the grid; /// over 5 iterations of 1k calls each, and the remaining 5k calls for a single; /// high statistics integration.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:347,Integrability,integrat,integration,347,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate the integral using a fixed number of calls to evaluate the integrand; /// equal to about 10k per dimension. Use the first 5k calls to refine the grid; /// over 5 iterations of 1k calls each, and the remaining 5k calls for a single; /// high statistics integration.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:422,Availability,error,error,422,"////////////////////////////////////////////////////////////////////////////////; /// Perform one step of Monte Carlo integration using the specified number of iterations; /// with (approximately) the specified number of integrand evaluation calls per iteration.; /// Use the VEGAS algorithm, starting from the specified stage. Returns the best estimate; /// of the integral. Also sets *absError to the estimated absolute error of the integral; /// estimate if absError is non-zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:118,Deployability,integrat,integration,118,"////////////////////////////////////////////////////////////////////////////////; /// Perform one step of Monte Carlo integration using the specified number of iterations; /// with (approximately) the specified number of integrand evaluation calls per iteration.; /// Use the VEGAS algorithm, starting from the specified stage. Returns the best estimate; /// of the integral. Also sets *absError to the estimated absolute error of the integral; /// estimate if absError is non-zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:118,Integrability,integrat,integration,118,"////////////////////////////////////////////////////////////////////////////////; /// Perform one step of Monte Carlo integration using the specified number of iterations; /// with (approximately) the specified number of integrand evaluation calls per iteration.; /// Use the VEGAS algorithm, starting from the specified stage. Returns the best estimate; /// of the integral. Also sets *absError to the estimated absolute error of the integral; /// estimate if absError is non-zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform one step of Monte Carlo integration using the specified number of iterations; /// with (approximately) the specified number of integrand evaluation calls per iteration.; /// Use the VEGAS algorithm, starting from the specified stage. Returns the best estimate; /// of the integral. Also sets *absError to the estimated absolute error of the integral; /// estimate if absError is non-zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:3,Energy Efficiency,allocate,allocate,3,"// allocate memory for some book-keeping arrays",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:3,Deployability,update,update,3,"// update mean and variance calculations",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:29,Integrability,message,messages,29,"// print occasional progress messages",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.h:40,Modifiability,variab,variables,40,"// Sampling grid definition; // control variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.h:15,Deployability,integrat,integration,15,"///< Number of integration samplings (per dim)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.h:15,Integrability,integrat,integration,15,"///< Number of integration samplings (per dim)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.h:13,Modifiability,variab,variables,13,"///< Scratch variables preserved between calls to vegas1/2/2",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.h:13,Modifiability,variab,variables,13,"///< Scratch variables preserved between calls to vegas1/2/2",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:1560,Availability,error,error,1560,"*************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMCStudy.cxx; \class RooMCStudy; \ingroup Roofitcore. Helper class to facilitate Monte Carlo studies; such as 'goodness-of-fit' studies, that involve fitting a PDF; to multiple toy Monte Carlo sets. These may be generated from either same PDF; or from a different PDF with similar parameters. Given a fit and a generator PDF (they might be identical), RooMCStudy can produce; toyMC samples and/or fit these.; It accumulates the post-fit parameters of each iteration in a dataset. These can be; retrieved using fitParams() or fitParDataSet(). This dataset additionally contains the; variables; - NLL: The value of the negative log-likelihood for each run.; - ngen: The number of events generated for each run. Additional plotting routines simplify the task of plotting; the distribution of the minimized likelihood, the fitted parameter values,; fitted error and pull distribution. RooMCStudy provides the option to insert add-in modules; that modify the generate-and-fit cycle and allow to perform; extra steps in the cycle. Output of these modules can be stored; alongside the fit results in the aggregate results dataset.; These study modules should derive from the class RooAbsMCStudyModule. Check the RooFit tutorials; - rf801_mcstudy.C; - rf802_mcstudy_addons.C; - rf803_mcstudy_addons2.C; - rf804_mcstudy_constr.C; for usage examples.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:1437,Integrability,rout,routines,1437,"*************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMCStudy.cxx; \class RooMCStudy; \ingroup Roofitcore. Helper class to facilitate Monte Carlo studies; such as 'goodness-of-fit' studies, that involve fitting a PDF; to multiple toy Monte Carlo sets. These may be generated from either same PDF; or from a different PDF with similar parameters. Given a fit and a generator PDF (they might be identical), RooMCStudy can produce; toyMC samples and/or fit these.; It accumulates the post-fit parameters of each iteration in a dataset. These can be; retrieved using fitParams() or fitParDataSet(). This dataset additionally contains the; variables; - NLL: The value of the negative log-likelihood for each run.; - ngen: The number of events generated for each run. Additional plotting routines simplify the task of plotting; the distribution of the minimized likelihood, the fitted parameter values,; fitted error and pull distribution. RooMCStudy provides the option to insert add-in modules; that modify the generate-and-fit cycle and allow to perform; extra steps in the cycle. Output of these modules can be stored; alongside the fit results in the aggregate results dataset.; These study modules should derive from the class RooAbsMCStudyModule. Check the RooFit tutorials; - rf801_mcstudy.C; - rf802_mcstudy_addons.C; - rf803_mcstudy_addons2.C; - rf804_mcstudy_constr.C; for usage examples.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:1290,Modifiability,variab,variables,1290,"*************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMCStudy.cxx; \class RooMCStudy; \ingroup Roofitcore. Helper class to facilitate Monte Carlo studies; such as 'goodness-of-fit' studies, that involve fitting a PDF; to multiple toy Monte Carlo sets. These may be generated from either same PDF; or from a different PDF with similar parameters. Given a fit and a generator PDF (they might be identical), RooMCStudy can produce; toyMC samples and/or fit these.; It accumulates the post-fit parameters of each iteration in a dataset. These can be; retrieved using fitParams() or fitParDataSet(). This dataset additionally contains the; variables; - NLL: The value of the negative log-likelihood for each run.; - ngen: The number of events generated for each run. Additional plotting routines simplify the task of plotting; the distribution of the minimized likelihood, the fitted parameter values,; fitted error and pull distribution. RooMCStudy provides the option to insert add-in modules; that modify the generate-and-fit cycle and allow to perform; extra steps in the cycle. Output of these modules can be stored; alongside the fit results in the aggregate results dataset.; These study modules should derive from the class RooAbsMCStudyModule. Check the RooFit tutorials; - rf801_mcstudy.C; - rf802_mcstudy_addons.C; - rf803_mcstudy_addons2.C; - rf804_mcstudy_constr.C; for usage examples.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:1698,Performance,perform,perform,1698,"*************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMCStudy.cxx; \class RooMCStudy; \ingroup Roofitcore. Helper class to facilitate Monte Carlo studies; such as 'goodness-of-fit' studies, that involve fitting a PDF; to multiple toy Monte Carlo sets. These may be generated from either same PDF; or from a different PDF with similar parameters. Given a fit and a generator PDF (they might be identical), RooMCStudy can produce; toyMC samples and/or fit these.; It accumulates the post-fit parameters of each iteration in a dataset. These can be; retrieved using fitParams() or fitParDataSet(). This dataset additionally contains the; variables; - NLL: The value of the negative log-likelihood for each run.; - ngen: The number of events generated for each run. Additional plotting routines simplify the task of plotting; the distribution of the minimized likelihood, the fitted parameter values,; fitted error and pull distribution. RooMCStudy provides the option to insert add-in modules; that modify the generate-and-fit cycle and allow to perform; extra steps in the cycle. Output of these modules can be stored; alongside the fit results in the aggregate results dataset.; These study modules should derive from the class RooAbsMCStudyModule. Check the RooFit tutorials; - rf801_mcstudy.C; - rf802_mcstudy_addons.C; - rf803_mcstudy_addons2.C; - rf804_mcstudy_constr.C; for usage examples.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:1334,Testability,log,log-likelihood,1334,"*************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMCStudy.cxx; \class RooMCStudy; \ingroup Roofitcore. Helper class to facilitate Monte Carlo studies; such as 'goodness-of-fit' studies, that involve fitting a PDF; to multiple toy Monte Carlo sets. These may be generated from either same PDF; or from a different PDF with similar parameters. Given a fit and a generator PDF (they might be identical), RooMCStudy can produce; toyMC samples and/or fit these.; It accumulates the post-fit parameters of each iteration in a dataset. These can be; retrieved using fitParams() or fitParDataSet(). This dataset additionally contains the; variables; - NLL: The value of the negative log-likelihood for each run.; - ngen: The number of events generated for each run. Additional plotting routines simplify the task of plotting; the distribution of the minimized likelihood, the fitted parameter values,; fitted error and pull distribution. RooMCStudy provides the option to insert add-in modules; that modify the generate-and-fit cycle and allow to perform; extra steps in the cycle. Output of these modules can be stored; alongside the fit results in the aggregate results dataset.; These study modules should derive from the class RooAbsMCStudyModule. Check the RooFit tutorials; - rf801_mcstudy.C; - rf802_mcstudy_addons.C; - rf803_mcstudy_addons2.C; - rf804_mcstudy_constr.C; for usage examples.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:1446,Usability,simpl,simplify,1446,"*************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMCStudy.cxx; \class RooMCStudy; \ingroup Roofitcore. Helper class to facilitate Monte Carlo studies; such as 'goodness-of-fit' studies, that involve fitting a PDF; to multiple toy Monte Carlo sets. These may be generated from either same PDF; or from a different PDF with similar parameters. Given a fit and a generator PDF (they might be identical), RooMCStudy can produce; toyMC samples and/or fit these.; It accumulates the post-fit parameters of each iteration in a dataset. These can be; retrieved using fitParams() or fitParDataSet(). This dataset additionally contains the; variables; - NLL: The value of the negative log-likelihood for each run.; - ngen: The number of events generated for each run. Additional plotting routines simplify the task of plotting; the distribution of the minimized likelihood, the fitted parameter values,; fitted error and pull distribution. RooMCStudy provides the option to insert add-in modules; that modify the generate-and-fit cycle and allow to perform; extra steps in the cycle. Output of these modules can be stored; alongside the fit results in the aggregate results dataset.; These study modules should derive from the class RooAbsMCStudyModule. Check the RooFit tutorials; - rf801_mcstudy.C; - rf802_mcstudy_addons.C; - rf803_mcstudy_addons2.C; - rf804_mcstudy_constr.C; for usage examples.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:1834,Energy Efficiency,reduce,reduced,1834,"/**; Construct Monte Carlo Study Manager. This class automates generating data from a given PDF,; fitting the PDF to data and accumulating the fit statistics. \param[in] model The PDF to be studied; \param[in] observables The variables of the PDF to be considered observables; \param[in] arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8 Optional arguments according to table below. <table>; <tr><th> Optional arguments <th>; <tr><td> Silence() <td> Suppress all RooFit messages during running below PROGRESS level; <tr><td> FitModel(const RooAbsPdf&) <td> The PDF for fitting if it is different from the PDF for generating.; <tr><td> ConditionalObservables(const RooArgSet& set) <td> The set of observables that the PDF should _not_ be normalized over; <tr><td> Binned(bool flag) <td> Bin the dataset before fitting it. Speeds up fitting of large data samples; <tr><td> FitOptions(....) <td> Options to be used for fitting. All named arguments inside FitOptions() are passed to RooAbsPdf::fitTo().; `Save()` is especially interesting to be able to retrieve fit results of each run using fitResult().; <tr><td> Verbose(bool flag) <td> Activate informational messages in event generation phase; <tr><td> Extended(bool flag) <td> Determine number of events for each sample anew from a Poisson distribution; <tr><td> Constrain(const RooArgSet& pars) <td> Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy.; <tr><td> ProtoData(const RooDataSet&, bool randOrder); <td> Prototype data for the event generation. If the randOrder flag is set, the order of the dataset will be re-randomized for each generation; cycle to protect against systematic biases if the number of generated events does not exactly match the number of events in the prototype dataset; at the cost of reduced precision with mu equal to the specified number of events; </table>; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:460,Integrability,message,messages,460,"/**; Construct Monte Carlo Study Manager. This class automates generating data from a given PDF,; fitting the PDF to data and accumulating the fit statistics. \param[in] model The PDF to be studied; \param[in] observables The variables of the PDF to be considered observables; \param[in] arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8 Optional arguments according to table below. <table>; <tr><th> Optional arguments <th>; <tr><td> Silence() <td> Suppress all RooFit messages during running below PROGRESS level; <tr><td> FitModel(const RooAbsPdf&) <td> The PDF for fitting if it is different from the PDF for generating.; <tr><td> ConditionalObservables(const RooArgSet& set) <td> The set of observables that the PDF should _not_ be normalized over; <tr><td> Binned(bool flag) <td> Bin the dataset before fitting it. Speeds up fitting of large data samples; <tr><td> FitOptions(....) <td> Options to be used for fitting. All named arguments inside FitOptions() are passed to RooAbsPdf::fitTo().; `Save()` is especially interesting to be able to retrieve fit results of each run using fitResult().; <tr><td> Verbose(bool flag) <td> Activate informational messages in event generation phase; <tr><td> Extended(bool flag) <td> Determine number of events for each sample anew from a Poisson distribution; <tr><td> Constrain(const RooArgSet& pars) <td> Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy.; <tr><td> ProtoData(const RooDataSet&, bool randOrder); <td> Prototype data for the event generation. If the randOrder flag is set, the order of the dataset will be re-randomized for each generation; cycle to protect against systematic biases if the number of generated events does not exactly match the number of events in the prototype dataset; at the cost of reduced precision with mu equal to the specified number of events; </table>; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:1148,Integrability,message,messages,1148,"/**; Construct Monte Carlo Study Manager. This class automates generating data from a given PDF,; fitting the PDF to data and accumulating the fit statistics. \param[in] model The PDF to be studied; \param[in] observables The variables of the PDF to be considered observables; \param[in] arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8 Optional arguments according to table below. <table>; <tr><th> Optional arguments <th>; <tr><td> Silence() <td> Suppress all RooFit messages during running below PROGRESS level; <tr><td> FitModel(const RooAbsPdf&) <td> The PDF for fitting if it is different from the PDF for generating.; <tr><td> ConditionalObservables(const RooArgSet& set) <td> The set of observables that the PDF should _not_ be normalized over; <tr><td> Binned(bool flag) <td> Bin the dataset before fitting it. Speeds up fitting of large data samples; <tr><td> FitOptions(....) <td> Options to be used for fitting. All named arguments inside FitOptions() are passed to RooAbsPdf::fitTo().; `Save()` is especially interesting to be able to retrieve fit results of each run using fitResult().; <tr><td> Verbose(bool flag) <td> Activate informational messages in event generation phase; <tr><td> Extended(bool flag) <td> Determine number of events for each sample anew from a Poisson distribution; <tr><td> Constrain(const RooArgSet& pars) <td> Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy.; <tr><td> ProtoData(const RooDataSet&, bool randOrder); <td> Prototype data for the event generation. If the randOrder flag is set, the order of the dataset will be re-randomized for each generation; cycle to protect against systematic biases if the number of generated events does not exactly match the number of events in the prototype dataset; at the cost of reduced precision with mu equal to the specified number of events; </table>; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:226,Modifiability,variab,variables,226,"/**; Construct Monte Carlo Study Manager. This class automates generating data from a given PDF,; fitting the PDF to data and accumulating the fit statistics. \param[in] model The PDF to be studied; \param[in] observables The variables of the PDF to be considered observables; \param[in] arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8 Optional arguments according to table below. <table>; <tr><th> Optional arguments <th>; <tr><td> Silence() <td> Suppress all RooFit messages during running below PROGRESS level; <tr><td> FitModel(const RooAbsPdf&) <td> The PDF for fitting if it is different from the PDF for generating.; <tr><td> ConditionalObservables(const RooArgSet& set) <td> The set of observables that the PDF should _not_ be normalized over; <tr><td> Binned(bool flag) <td> Bin the dataset before fitting it. Speeds up fitting of large data samples; <tr><td> FitOptions(....) <td> Options to be used for fitting. All named arguments inside FitOptions() are passed to RooAbsPdf::fitTo().; `Save()` is especially interesting to be able to retrieve fit results of each run using fitResult().; <tr><td> Verbose(bool flag) <td> Activate informational messages in event generation phase; <tr><td> Extended(bool flag) <td> Determine number of events for each sample anew from a Poisson distribution; <tr><td> Constrain(const RooArgSet& pars) <td> Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy.; <tr><td> ProtoData(const RooDataSet&, bool randOrder); <td> Prototype data for the event generation. If the randOrder flag is set, the order of the dataset will be re-randomized for each generation; cycle to protect against systematic biases if the number of generated events does not exactly match the number of events in the prototype dataset; at the cost of reduced precision with mu equal to the specified number of events; </table>; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:1193,Modifiability,Extend,Extended,1193,"/**; Construct Monte Carlo Study Manager. This class automates generating data from a given PDF,; fitting the PDF to data and accumulating the fit statistics. \param[in] model The PDF to be studied; \param[in] observables The variables of the PDF to be considered observables; \param[in] arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8 Optional arguments according to table below. <table>; <tr><th> Optional arguments <th>; <tr><td> Silence() <td> Suppress all RooFit messages during running below PROGRESS level; <tr><td> FitModel(const RooAbsPdf&) <td> The PDF for fitting if it is different from the PDF for generating.; <tr><td> ConditionalObservables(const RooArgSet& set) <td> The set of observables that the PDF should _not_ be normalized over; <tr><td> Binned(bool flag) <td> Bin the dataset before fitting it. Speeds up fitting of large data samples; <tr><td> FitOptions(....) <td> Options to be used for fitting. All named arguments inside FitOptions() are passed to RooAbsPdf::fitTo().; `Save()` is especially interesting to be able to retrieve fit results of each run using fitResult().; <tr><td> Verbose(bool flag) <td> Activate informational messages in event generation phase; <tr><td> Extended(bool flag) <td> Determine number of events for each sample anew from a Poisson distribution; <tr><td> Constrain(const RooArgSet& pars) <td> Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy.; <tr><td> ProtoData(const RooDataSet&, bool randOrder); <td> Prototype data for the event generation. If the randOrder flag is set, the order of the dataset will be re-randomized for each generation; cycle to protect against systematic biases if the number of generated events does not exactly match the number of events in the prototype dataset; at the cost of reduced precision with mu equal to the specified number of events; </table>; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:48,Availability,error,errors,48,"// Create data set containing parameter values, errors and pulls",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:36,Availability,error,errors,36,"// Mark all variable to store their errors in the dataset",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:12,Modifiability,variab,variable,12,"// Mark all variable to store their errors in the dataset",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:16,Modifiability,variab,variables,16,"// Append proto variables to allDependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:278,Security,access,accessed,278,"////////////////////////////////////////////////////////////////////////////////; /// Run engine method. Generate and/or fit, according to flags, 'nSamples' samples of 'nEvtPerSample' events.; /// If keepGenData is set, all generated data sets will be kept in memory and can be accessed; /// later via genData().; ///; /// When generating, data sets will be written out in ascii form if the pattern string is supplied; /// The pattern, which is a template for snprintf, should look something like ""data/toymc_%04d.dat""; /// and should contain one integer field that encodes the sample serial number.; ///; /// When fitting only, data sets may optionally be read from ascii files, using the same file; /// pattern.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:28,Modifiability,extend,extended,28,"// Calculate the number of (extended) events for this run",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:28,Modifiability,extend,extended,28,"// Calculate the number of (extended) events for this run",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:3,Performance,Load,Load,3,"// Load sample from ASCII file",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:3,Performance,Load,Load,3,"// Load sample from internal list",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:235,Security,access,accessed,235,"////////////////////////////////////////////////////////////////////////////////; /// Generate and fit 'nSamples' samples of 'nEvtPerSample' events.; /// If keepGenData is set, all generated data sets will be kept in memory and can be accessed; /// later via genData().; ///; /// Data sets will be written out in ascii form if the pattern string is supplied.; /// The pattern, which is a template for snprintf, should look something like ""data/toymc_%04d.dat""; /// and should contain one integer field that encodes the sample serial number.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:3,Usability,Clear,Clear,3,"// Clear any previous data in memory",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:232,Security,access,accessed,232,"////////////////////////////////////////////////////////////////////////////////; /// Generate 'nSamples' samples of 'nEvtPerSample' events.; /// If keepGenData is set, all generated data sets will be kept in memory; /// and can be accessed later via genData().; ///; /// Data sets will be written out in ascii form if the pattern string is supplied.; /// The pattern, which is a template for snprintf, should look something like ""data/toymc_%04d.dat""; /// and should contain one integer field that encodes the sample serial number.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:3,Usability,Clear,Clear,3,"// Clear any previous data in memory",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:3,Usability,Clear,Clear,3,"// Clear any previous data in memory",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:3,Usability,Clear,Clear,3,"// Clear any previous data in memory",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:3,Performance,Load,Load,3,"// Load list of data sets",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:105,Performance,Perform,Performs,105,"////////////////////////////////////////////////////////////////////////////////; /// Internal function. Performs actual fit according to specifications",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:3,Performance,Perform,Perform,3,"// Perform actual fit",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:326,Modifiability,variab,variables,326,"////////////////////////////////////////////////////////////////////////////////; /// Return a RooDataSet containing the post-fit parameters of each toy cycle.; /// This dataset also contains any additional output that was generated; /// by study modules that were added to this RooMCStudy.; /// By default, the two following variables are added (apart from fit parameters):; /// - NLL: The value of the negative log-likelihood for each run.; /// - ngen: Number of events generated for each run.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:413,Testability,log,log-likelihood,413,"////////////////////////////////////////////////////////////////////////////////; /// Return a RooDataSet containing the post-fit parameters of each toy cycle.; /// This dataset also contains any additional output that was generated; /// by study modules that were added to this RooMCStudy.; /// By default, the two following variables are added (apart from fit parameters):; /// - NLL: The value of the negative log-likelihood for each run.; /// - ngen: Number of events generated for each run.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:116,Testability,log,log,116,"////////////////////////////////////////////////////////////////////////////////; /// Plot the distribution of the -log(L) values on a newly created frame.; ///; /// <table>; /// <tr><th> Optional arguments <th>; /// <tr><td> FrameRange(double lo, double hi) <td> Set range of frame to given specification; /// <tr><td> FrameBins(int bins) <td> Set default number of bins of frame to given number; /// <tr><td> Frame() <td> Pass supplied named arguments to RooAbsRealLValue::frame() function. See there; /// for list of allowed arguments; /// </table>; ///; /// If no frame specifications are given, the AutoRange() feature will be used to set the range.; /// Any other named argument is passed to the RooAbsData::plotOn() call. See that function for allowed options",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:119,Availability,error,errors,119,"////////////////////////////////////////////////////////////////////////////////; /// Plot the distribution of the fit errors for the specified parameter on a newly created frame.; ///; /// <table>; /// <tr><th> Optional arguments <th>; /// <tr><td> FrameRange(double lo, double hi) <td> Set range of frame to given specification; /// <tr><td> FrameBins(int bins) <td> Set default number of bins of frame to given number; /// <tr><td> Frame() <td> Pass supplied named arguments to RooAbsRealLValue::frame() function. See there; /// for list of allowed arguments; /// </table>; ///; /// If no frame specifications are given, the AutoRange() feature will be used to set a default range.; /// Any other named argument is passed to the RooAbsData::plotOn() call. See that function for allowed options.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:98,Integrability,wrap,wrapper,98,"// We set the parameters constant to disable the default label. Still, we; // use param() on as a wrapper for the text box generation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:210,Availability,error,errors,210,"// namespace; ////////////////////////////////////////////////////////////////////////////////; /// Plot the distribution of pull values for the specified parameter on a newly created frame. If asymmetric; /// errors are calculated in the fit (by MINOS) those will be used in the pull calculation.; ///; /// If the parameters of the models for generation and fit differ, simple heuristics are used to find the; /// corresponding parameters:; /// - Parameters have the same name: They will be used to compute pulls.; /// - Parameters have different names: The position of the fit parameter in the set of fit parameters will be; /// computed. The parameter at the same position in the set of generator parameters will be used.; ///; /// Further options:; /// <table>; /// <tr><th> Arguments <th> Effect; /// <tr><td> FrameRange(double lo, double hi) <td> Set range of frame to given specification; /// <tr><td> FrameBins(int bins) <td> Set default number of bins of frame to given number; /// <tr><td> Frame() <td> Pass supplied named arguments to RooAbsRealLValue::frame() function. See there; /// for list of allowed arguments; /// <tr><td> FitGauss(bool flag) <td> Add a gaussian fit to the frame; /// </table>; ///; /// If no frame specifications are given, the AutoSymRange() feature will be used to set a default range.; /// Any other named argument is passed to the RooAbsData::plotOn(). See that function for allowed options.; ///; /// If you want to have more control over the Gaussian fit to the pull; /// distribution, you can also do it after the call to plotPull():; ///; /// ~~~ {.cpp}; /// RooPlot *frame = mcstudy->plotPull(myVariable, RooFit::Bins(40), RooFit::FitGauss(false));; /// RooRealVar pullMean(""pullMean"",""Mean of pull"",0,-10,10) ;; /// RooRealVar pullSigma(""pullSigma"",""Width of pull"",1,0.1,5) ;; /// pullMean.setPlotLabel(""pull #mu""); // optional (to get nicer plot labels if you want); /// pullSigma.setPlotLabel(""pull #sigma""); // optional; /// RooGaussian pullGauss(""pull",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:371,Usability,simpl,simple,371,"// namespace; ////////////////////////////////////////////////////////////////////////////////; /// Plot the distribution of pull values for the specified parameter on a newly created frame. If asymmetric; /// errors are calculated in the fit (by MINOS) those will be used in the pull calculation.; ///; /// If the parameters of the models for generation and fit differ, simple heuristics are used to find the; /// corresponding parameters:; /// - Parameters have the same name: They will be used to compute pulls.; /// - Parameters have different names: The position of the fit parameter in the set of fit parameters will be; /// computed. The parameter at the same position in the set of generator parameters will be used.; ///; /// Further options:; /// <table>; /// <tr><th> Arguments <th> Effect; /// <tr><td> FrameRange(double lo, double hi) <td> Set range of frame to given specification; /// <tr><td> FrameBins(int bins) <td> Set default number of bins of frame to given number; /// <tr><td> Frame() <td> Pass supplied named arguments to RooAbsRealLValue::frame() function. See there; /// for list of allowed arguments; /// <tr><td> FitGauss(bool flag) <td> Add a gaussian fit to the frame; /// </table>; ///; /// If no frame specifications are given, the AutoSymRange() feature will be used to set a default range.; /// Any other named argument is passed to the RooAbsData::plotOn(). See that function for allowed options.; ///; /// If you want to have more control over the Gaussian fit to the pull; /// distribution, you can also do it after the call to plotPull():; ///; /// ~~~ {.cpp}; /// RooPlot *frame = mcstudy->plotPull(myVariable, RooFit::Bins(40), RooFit::FitGauss(false));; /// RooRealVar pullMean(""pullMean"",""Mean of pull"",0,-10,10) ;; /// RooRealVar pullSigma(""pullSigma"",""Width of pull"",1,0.1,5) ;; /// pullMean.setPlotLabel(""pull #mu""); // optional (to get nicer plot labels if you want); /// pullSigma.setPlotLabel(""pull #sigma""); // optional; /// RooGaussian pullGauss(""pull",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:111,Testability,log,log,111,"////////////////////////////////////////////////////////////////////////////////; /// Create a RooPlot of the -log(L) distribution in the range lo-hi; /// with 'nBins' bins",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:137,Availability,error,errors,137,"////////////////////////////////////////////////////////////////////////////////; /// Create a RooPlot of the distribution of the fitted errors of the given parameter.; /// The frame is created with a range [lo,hi] and plotted data will be binned in 'nbins' bins",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:287,Performance,perform,performed,287,"////////////////////////////////////////////////////////////////////////////////; /// Create a RooPlot of the pull distribution for the given; /// parameter. The range lo-hi is plotted in nbins. If fitGauss is; /// set, an unbinned ML fit of the distribution to a Gaussian p.d.f; /// is performed. The fit result is overlaid on the returned RooPlot; /// and a box with the fitted mean and sigma is added.; ///; /// If the parameters of the models for generation and fit differ, simple heuristics are used to find the; /// corresponding parameters:; /// - Parameters have the same name: They will be used to compute pulls.; /// - Parameters have different names: The position of the fit parameter in the set of fit parameters will be; /// computed. The parameter at the same position in the set of generator parameters will be used.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:478,Usability,simpl,simple,478,"////////////////////////////////////////////////////////////////////////////////; /// Create a RooPlot of the pull distribution for the given; /// parameter. The range lo-hi is plotted in nbins. If fitGauss is; /// set, an unbinned ML fit of the distribution to a Gaussian p.d.f; /// is performed. The fit result is overlaid on the returned RooPlot; /// and a box with the fitted mean and sigma is added.; ///; /// If the parameters of the models for generation and fit differ, simple heuristics are used to find the; /// corresponding parameters:; /// - Parameters have the same name: They will be used to compute pulls.; /// - Parameters have different names: The position of the fit parameter in the set of fit parameters will be; /// computed. The parameter at the same position in the set of generator parameters will be used.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMCStudy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:1602,Availability,error,errors,1602,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * AL, Alfio Lazzaro, INFN Milan, alfio.lazzaro@mi.infn.it *; * PB, Patrick Bos, NL eScience Center, p.bos@esciencecenter.nl *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMinimizer.cxx; \class RooMinimizer; \ingroup Roofitcore. Wrapper class around ROOT::Math::Minimizer that; provides a seamless interface between the minimizer functionality; and the native RooFit interface.; By default the Minimizer is Minuit 2.; RooMinimizer can minimize any RooAbsReal function with respect to; its parameters. Usual choices for minimization are the object returned by; RooAbsPdf::createNLL() or RooAbsReal::createChi2().; RooMinimizer has methods corresponding to MINUIT functions like; hesse(), migrad(), minos() etc. In each of these function calls; the state of the MINUIT engine is synchronized with the state; of the RooFit variables: any change in variables, change; in the constant status etc is forwarded to MINUIT prior to; execution of the MINUIT call. Afterwards the RooFit objects; are resynchronized with the output state of MINUIT: changes; parameter values, errors are propagated.; Various methods are available to control verbosity, profiling,; automatic PDF optimization.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:1646,Availability,avail,available,1646,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * AL, Alfio Lazzaro, INFN Milan, alfio.lazzaro@mi.infn.it *; * PB, Patrick Bos, NL eScience Center, p.bos@esciencecenter.nl *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMinimizer.cxx; \class RooMinimizer; \ingroup Roofitcore. Wrapper class around ROOT::Math::Minimizer that; provides a seamless interface between the minimizer functionality; and the native RooFit interface.; By default the Minimizer is Minuit 2.; RooMinimizer can minimize any RooAbsReal function with respect to; its parameters. Usual choices for minimization are the object returned by; RooAbsPdf::createNLL() or RooAbsReal::createChi2().; RooMinimizer has methods corresponding to MINUIT functions like; hesse(), migrad(), minos() etc. In each of these function calls; the state of the MINUIT engine is synchronized with the state; of the RooFit variables: any change in variables, change; in the constant status etc is forwarded to MINUIT prior to; execution of the MINUIT call. Afterwards the RooFit objects; are resynchronized with the output state of MINUIT: changes; parameter values, errors are propagated.; Various methods are available to control verbosity, profiling,; automatic PDF optimization.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:767,Integrability,Wrap,Wrapper,767,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * AL, Alfio Lazzaro, INFN Milan, alfio.lazzaro@mi.infn.it *; * PB, Patrick Bos, NL eScience Center, p.bos@esciencecenter.nl *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMinimizer.cxx; \class RooMinimizer; \ingroup Roofitcore. Wrapper class around ROOT::Math::Minimizer that; provides a seamless interface between the minimizer functionality; and the native RooFit interface.; By default the Minimizer is Minuit 2.; RooMinimizer can minimize any RooAbsReal function with respect to; its parameters. Usual choices for minimization are the object returned by; RooAbsPdf::createNLL() or RooAbsReal::createChi2().; RooMinimizer has methods corresponding to MINUIT functions like; hesse(), migrad(), minos() etc. In each of these function calls; the state of the MINUIT engine is synchronized with the state; of the RooFit variables: any change in variables, change; in the constant status etc is forwarded to MINUIT prior to; execution of the MINUIT call. Afterwards the RooFit objects; are resynchronized with the output state of MINUIT: changes; parameter values, errors are propagated.; Various methods are available to control verbosity, profiling,; automatic PDF optimization.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:836,Integrability,interface,interface,836,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * AL, Alfio Lazzaro, INFN Milan, alfio.lazzaro@mi.infn.it *; * PB, Patrick Bos, NL eScience Center, p.bos@esciencecenter.nl *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMinimizer.cxx; \class RooMinimizer; \ingroup Roofitcore. Wrapper class around ROOT::Math::Minimizer that; provides a seamless interface between the minimizer functionality; and the native RooFit interface.; By default the Minimizer is Minuit 2.; RooMinimizer can minimize any RooAbsReal function with respect to; its parameters. Usual choices for minimization are the object returned by; RooAbsPdf::createNLL() or RooAbsReal::createChi2().; RooMinimizer has methods corresponding to MINUIT functions like; hesse(), migrad(), minos() etc. In each of these function calls; the state of the MINUIT engine is synchronized with the state; of the RooFit variables: any change in variables, change; in the constant status etc is forwarded to MINUIT prior to; execution of the MINUIT call. Afterwards the RooFit objects; are resynchronized with the output state of MINUIT: changes; parameter values, errors are propagated.; Various methods are available to control verbosity, profiling,; automatic PDF optimization.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:905,Integrability,interface,interface,905,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * AL, Alfio Lazzaro, INFN Milan, alfio.lazzaro@mi.infn.it *; * PB, Patrick Bos, NL eScience Center, p.bos@esciencecenter.nl *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMinimizer.cxx; \class RooMinimizer; \ingroup Roofitcore. Wrapper class around ROOT::Math::Minimizer that; provides a seamless interface between the minimizer functionality; and the native RooFit interface.; By default the Minimizer is Minuit 2.; RooMinimizer can minimize any RooAbsReal function with respect to; its parameters. Usual choices for minimization are the object returned by; RooAbsPdf::createNLL() or RooAbsReal::createChi2().; RooMinimizer has methods corresponding to MINUIT functions like; hesse(), migrad(), minos() etc. In each of these function calls; the state of the MINUIT engine is synchronized with the state; of the RooFit variables: any change in variables, change; in the constant status etc is forwarded to MINUIT prior to; execution of the MINUIT call. Afterwards the RooFit objects; are resynchronized with the output state of MINUIT: changes; parameter values, errors are propagated.; Various methods are available to control verbosity, profiling,; automatic PDF optimization.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:1315,Integrability,synchroniz,synchronized,1315,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * AL, Alfio Lazzaro, INFN Milan, alfio.lazzaro@mi.infn.it *; * PB, Patrick Bos, NL eScience Center, p.bos@esciencecenter.nl *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMinimizer.cxx; \class RooMinimizer; \ingroup Roofitcore. Wrapper class around ROOT::Math::Minimizer that; provides a seamless interface between the minimizer functionality; and the native RooFit interface.; By default the Minimizer is Minuit 2.; RooMinimizer can minimize any RooAbsReal function with respect to; its parameters. Usual choices for minimization are the object returned by; RooAbsPdf::createNLL() or RooAbsReal::createChi2().; RooMinimizer has methods corresponding to MINUIT functions like; hesse(), migrad(), minos() etc. In each of these function calls; the state of the MINUIT engine is synchronized with the state; of the RooFit variables: any change in variables, change; in the constant status etc is forwarded to MINUIT prior to; execution of the MINUIT call. Afterwards the RooFit objects; are resynchronized with the output state of MINUIT: changes; parameter values, errors are propagated.; Various methods are available to control verbosity, profiling,; automatic PDF optimization.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:1358,Modifiability,variab,variables,1358,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * AL, Alfio Lazzaro, INFN Milan, alfio.lazzaro@mi.infn.it *; * PB, Patrick Bos, NL eScience Center, p.bos@esciencecenter.nl *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMinimizer.cxx; \class RooMinimizer; \ingroup Roofitcore. Wrapper class around ROOT::Math::Minimizer that; provides a seamless interface between the minimizer functionality; and the native RooFit interface.; By default the Minimizer is Minuit 2.; RooMinimizer can minimize any RooAbsReal function with respect to; its parameters. Usual choices for minimization are the object returned by; RooAbsPdf::createNLL() or RooAbsReal::createChi2().; RooMinimizer has methods corresponding to MINUIT functions like; hesse(), migrad(), minos() etc. In each of these function calls; the state of the MINUIT engine is synchronized with the state; of the RooFit variables: any change in variables, change; in the constant status etc is forwarded to MINUIT prior to; execution of the MINUIT call. Afterwards the RooFit objects; are resynchronized with the output state of MINUIT: changes; parameter values, errors are propagated.; Various methods are available to control verbosity, profiling,; automatic PDF optimization.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:1383,Modifiability,variab,variables,1383,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * AL, Alfio Lazzaro, INFN Milan, alfio.lazzaro@mi.infn.it *; * PB, Patrick Bos, NL eScience Center, p.bos@esciencecenter.nl *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMinimizer.cxx; \class RooMinimizer; \ingroup Roofitcore. Wrapper class around ROOT::Math::Minimizer that; provides a seamless interface between the minimizer functionality; and the native RooFit interface.; By default the Minimizer is Minuit 2.; RooMinimizer can minimize any RooAbsReal function with respect to; its parameters. Usual choices for minimization are the object returned by; RooAbsPdf::createNLL() or RooAbsReal::createChi2().; RooMinimizer has methods corresponding to MINUIT functions like; hesse(), migrad(), minos() etc. In each of these function calls; the state of the MINUIT engine is synchronized with the state; of the RooFit variables: any change in variables, change; in the constant status etc is forwarded to MINUIT prior to; execution of the MINUIT call. Afterwards the RooFit objects; are resynchronized with the output state of MINUIT: changes; parameter values, errors are propagated.; Various methods are available to control verbosity, profiling,; automatic PDF optimization.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:1704,Performance,optimiz,optimization,1704,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * AL, Alfio Lazzaro, INFN Milan, alfio.lazzaro@mi.infn.it *; * PB, Patrick Bos, NL eScience Center, p.bos@esciencecenter.nl *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMinimizer.cxx; \class RooMinimizer; \ingroup Roofitcore. Wrapper class around ROOT::Math::Minimizer that; provides a seamless interface between the minimizer functionality; and the native RooFit interface.; By default the Minimizer is Minuit 2.; RooMinimizer can minimize any RooAbsReal function with respect to; its parameters. Usual choices for minimization are the object returned by; RooAbsPdf::createNLL() or RooAbsReal::createChi2().; RooMinimizer has methods corresponding to MINUIT functions like; hesse(), migrad(), minos() etc. In each of these function calls; the state of the MINUIT engine is synchronized with the state; of the RooFit variables: any change in variables, change; in the constant status etc is forwarded to MINUIT prior to; execution of the MINUIT call. Afterwards the RooFit objects; are resynchronized with the output state of MINUIT: changes; parameter values, errors are propagated.; Various methods are available to control verbosity, profiling,; automatic PDF optimization.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:456,Availability,error,errors,456,"////////////////////////////////////////////////////////////////////////////////; /// Construct MINUIT interface to given function. Function can be anything,; /// but is typically a -log(likelihood) implemented by RooNLLVar or a chi^2; /// (implemented by RooChi2Var). Other frequent use cases are a RooAddition; /// of a RooNLLVar plus a penalty or constraint term. This class propagates; /// all RooFit information (floating parameters, their values and errors); /// to MINUIT before each MINUIT call and propagates all MINUIT information; /// back to the RooFit object at the end of each call (updated parameter; /// values, their (asymmetric errors) etc. The default MINUIT error level; /// for HESSE and MINOS error analysis is taken from the defaultErrorLevel(); /// value of the input function.; /// Constructor that accepts all configuration in struct with RooAbsReal likelihood",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:646,Availability,error,errors,646,"////////////////////////////////////////////////////////////////////////////////; /// Construct MINUIT interface to given function. Function can be anything,; /// but is typically a -log(likelihood) implemented by RooNLLVar or a chi^2; /// (implemented by RooChi2Var). Other frequent use cases are a RooAddition; /// of a RooNLLVar plus a penalty or constraint term. This class propagates; /// all RooFit information (floating parameters, their values and errors); /// to MINUIT before each MINUIT call and propagates all MINUIT information; /// back to the RooFit object at the end of each call (updated parameter; /// values, their (asymmetric errors) etc. The default MINUIT error level; /// for HESSE and MINOS error analysis is taken from the defaultErrorLevel(); /// value of the input function.; /// Constructor that accepts all configuration in struct with RooAbsReal likelihood",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:678,Availability,error,error,678,"////////////////////////////////////////////////////////////////////////////////; /// Construct MINUIT interface to given function. Function can be anything,; /// but is typically a -log(likelihood) implemented by RooNLLVar or a chi^2; /// (implemented by RooChi2Var). Other frequent use cases are a RooAddition; /// of a RooNLLVar plus a penalty or constraint term. This class propagates; /// all RooFit information (floating parameters, their values and errors); /// to MINUIT before each MINUIT call and propagates all MINUIT information; /// back to the RooFit object at the end of each call (updated parameter; /// values, their (asymmetric errors) etc. The default MINUIT error level; /// for HESSE and MINOS error analysis is taken from the defaultErrorLevel(); /// value of the input function.; /// Constructor that accepts all configuration in struct with RooAbsReal likelihood",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:715,Availability,error,error,715,"////////////////////////////////////////////////////////////////////////////////; /// Construct MINUIT interface to given function. Function can be anything,; /// but is typically a -log(likelihood) implemented by RooNLLVar or a chi^2; /// (implemented by RooChi2Var). Other frequent use cases are a RooAddition; /// of a RooNLLVar plus a penalty or constraint term. This class propagates; /// all RooFit information (floating parameters, their values and errors); /// to MINUIT before each MINUIT call and propagates all MINUIT information; /// back to the RooFit object at the end of each call (updated parameter; /// values, their (asymmetric errors) etc. The default MINUIT error level; /// for HESSE and MINOS error analysis is taken from the defaultErrorLevel(); /// value of the input function.; /// Constructor that accepts all configuration in struct with RooAbsReal likelihood",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:597,Deployability,update,updated,597,"////////////////////////////////////////////////////////////////////////////////; /// Construct MINUIT interface to given function. Function can be anything,; /// but is typically a -log(likelihood) implemented by RooNLLVar or a chi^2; /// (implemented by RooChi2Var). Other frequent use cases are a RooAddition; /// of a RooNLLVar plus a penalty or constraint term. This class propagates; /// all RooFit information (floating parameters, their values and errors); /// to MINUIT before each MINUIT call and propagates all MINUIT information; /// back to the RooFit object at the end of each call (updated parameter; /// values, their (asymmetric errors) etc. The default MINUIT error level; /// for HESSE and MINOS error analysis is taken from the defaultErrorLevel(); /// value of the input function.; /// Constructor that accepts all configuration in struct with RooAbsReal likelihood",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:836,Deployability,configurat,configuration,836,"////////////////////////////////////////////////////////////////////////////////; /// Construct MINUIT interface to given function. Function can be anything,; /// but is typically a -log(likelihood) implemented by RooNLLVar or a chi^2; /// (implemented by RooChi2Var). Other frequent use cases are a RooAddition; /// of a RooNLLVar plus a penalty or constraint term. This class propagates; /// all RooFit information (floating parameters, their values and errors); /// to MINUIT before each MINUIT call and propagates all MINUIT information; /// back to the RooFit object at the end of each call (updated parameter; /// values, their (asymmetric errors) etc. The default MINUIT error level; /// for HESSE and MINOS error analysis is taken from the defaultErrorLevel(); /// value of the input function.; /// Constructor that accepts all configuration in struct with RooAbsReal likelihood",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:103,Integrability,interface,interface,103,"////////////////////////////////////////////////////////////////////////////////; /// Construct MINUIT interface to given function. Function can be anything,; /// but is typically a -log(likelihood) implemented by RooNLLVar or a chi^2; /// (implemented by RooChi2Var). Other frequent use cases are a RooAddition; /// of a RooNLLVar plus a penalty or constraint term. This class propagates; /// all RooFit information (floating parameters, their values and errors); /// to MINUIT before each MINUIT call and propagates all MINUIT information; /// back to the RooFit object at the end of each call (updated parameter; /// values, their (asymmetric errors) etc. The default MINUIT error level; /// for HESSE and MINOS error analysis is taken from the defaultErrorLevel(); /// value of the input function.; /// Constructor that accepts all configuration in struct with RooAbsReal likelihood",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:836,Modifiability,config,configuration,836,"////////////////////////////////////////////////////////////////////////////////; /// Construct MINUIT interface to given function. Function can be anything,; /// but is typically a -log(likelihood) implemented by RooNLLVar or a chi^2; /// (implemented by RooChi2Var). Other frequent use cases are a RooAddition; /// of a RooNLLVar plus a penalty or constraint term. This class propagates; /// all RooFit information (floating parameters, their values and errors); /// to MINUIT before each MINUIT call and propagates all MINUIT information; /// back to the RooFit object at the end of each call (updated parameter; /// values, their (asymmetric errors) etc. The default MINUIT error level; /// for HESSE and MINOS error analysis is taken from the defaultErrorLevel(); /// value of the input function.; /// Constructor that accepts all configuration in struct with RooAbsReal likelihood",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:183,Testability,log,log,183,"////////////////////////////////////////////////////////////////////////////////; /// Construct MINUIT interface to given function. Function can be anything,; /// but is typically a -log(likelihood) implemented by RooNLLVar or a chi^2; /// (implemented by RooChi2Var). Other frequent use cases are a RooAddition; /// of a RooNLLVar plus a penalty or constraint term. This class propagates; /// all RooFit information (floating parameters, their values and errors); /// to MINUIT before each MINUIT call and propagates all MINUIT information; /// back to the RooFit object at the end of each call (updated parameter; /// values, their (asymmetric errors) etc. The default MINUIT error level; /// for HESSE and MINOS error analysis is taken from the defaultErrorLevel(); /// value of the input function.; /// Constructor that accepts all configuration in struct with RooAbsReal likelihood",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:7,Testability,test,test,7,"// new test statistic with multiprocessing library with; // parallel likelihood or parallel gradient",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:11,Testability,test,test,11,"// modular test statistic non parallel",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:7,Testability,test,test,7,"// Old test statistic with parallel likelihood or gradient",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:11,Availability,toler,tolerance,11,"// default tolerance",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:49,Integrability,depend,dependent,49,"/// Initialize the part of the minimizer that is dependent on the function to be minimized",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:24,Availability,error,errors,24,"// Use +0.5 for 1-sigma errors",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:37,Modifiability,config,config,37,"// Set user defined and default _fcn config",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:204,Energy Efficiency,efficient,efficiently,204,"////////////////////////////////////////////////////////////////////////////////; /// Change MINUIT strategy to istrat. Accepted codes; /// are 0,1,2 and represent MINUIT strategies for dealing; /// most efficiently with fast FCNs (0), expensive FCNs (2); /// and 'intermediate' FCNs (1)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:111,Availability,error,error,111,"////////////////////////////////////////////////////////////////////////////////; /// Set the level for MINUIT error analysis to the given; /// value. This function overrides the default value; /// that is taken in the RooMinimizer constructor from; /// the defaultErrorLevel() method of the input function",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:128,Modifiability,enhance,enhanced,128,"////////////////////////////////////////////////////////////////////////////////; /// Enable internal likelihood offsetting for enhanced numeric precision",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:150,Availability,error,errors,150,"////////////////////////////////////////////////////////////////////////////////; /// Execute MIGRAD. Changes in parameter values; /// and calculated errors are automatically; /// propagated back the RooRealVars representing; /// the floating parameters in the MINUIT operation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:149,Availability,error,errors,149,"////////////////////////////////////////////////////////////////////////////////; /// Execute HESSE. Changes in parameter values; /// and calculated errors are automatically; /// propagated back the RooRealVars representing; /// the floating parameters in the MINUIT operation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:149,Availability,error,errors,149,"////////////////////////////////////////////////////////////////////////////////; /// Execute MINOS. Changes in parameter values; /// and calculated errors are automatically; /// propagated back the RooRealVars representing; /// the floating parameters in the MINUIT operation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:178,Availability,error,errors,178,"////////////////////////////////////////////////////////////////////////////////; /// Execute MINOS for given list of parameters. Changes in parameter values; /// and calculated errors are automatically; /// propagated back the RooRealVars representing; /// the floating parameters in the MINUIT operation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:73,Availability,error,errors,73,"// to avoid that following minimization computes automatically the Minos errors",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:6,Safety,avoid,avoid,6,"// to avoid that following minimization computes automatically the Minos errors",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:148,Availability,error,errors,148,"////////////////////////////////////////////////////////////////////////////////; /// Execute SEEK. Changes in parameter values; /// and calculated errors are automatically; /// propagated back the RooRealVars representing; /// the floating parameters in the MINUIT operation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:151,Availability,error,errors,151,"////////////////////////////////////////////////////////////////////////////////; /// Execute SIMPLEX. Changes in parameter values; /// and calculated errors are automatically; /// propagated back the RooRealVars representing; /// the floating parameters in the MINUIT operation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:94,Usability,SIMPL,SIMPLEX,94,"////////////////////////////////////////////////////////////////////////////////; /// Execute SIMPLEX. Changes in parameter values; /// and calculated errors are automatically; /// propagated back the RooRealVars representing; /// the floating parameters in the MINUIT operation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:151,Availability,error,errors,151,"////////////////////////////////////////////////////////////////////////////////; /// Execute IMPROVE. Changes in parameter values; /// and calculated errors are automatically; /// propagated back the RooRealVars representing; /// the floating parameters in the MINUIT operation.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:103,Performance,perform,perform,103,"////////////////////////////////////////////////////////////////////////////////; /// If flag is true, perform constant term optimization on; /// function being minimized.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:125,Performance,optimiz,optimization,125,"////////////////////////////////////////////////////////////////////////////////; /// If flag is true, perform constant term optimization on; /// function being minimized.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:16,Availability,avail,available,16,"// no matrix is available in case of non-valid fits",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:16,Availability,avail,available,16,"// no matrix is available in case of non-valid fits",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:117,Availability,error,error,117,"////////////////////////////////////////////////////////////////////////////////; /// Create and draw a TH2 with the error contours in the parameters `var1` and `var2`.; /// \param[in] var1 The first parameter (x axis).; /// \param[in] var2 The second parameter (y axis).; /// \param[in] n1 First contour.; /// \param[in] n2 Optional contour. 0 means don't draw.; /// \param[in] n3 Optional contour. 0 means don't draw.; /// \param[in] n4 Optional contour. 0 means don't draw.; /// \param[in] n5 Optional contour. 0 means don't draw.; /// \param[in] n6 Optional contour. 0 means don't draw.; /// \param[in] npoints Number of points for evaluating the contour.; ///; /// Up to six contours can be drawn using the arguments `n1` to `n6` to request the desired; /// coverage in units of \f$ \sigma = n^2 \cdot \mathrm{ErrorDef} \f$.; /// See ROOT::Math::Minimizer::ErrorDef().",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:815,Availability,Error,ErrorDef,815,"////////////////////////////////////////////////////////////////////////////////; /// Create and draw a TH2 with the error contours in the parameters `var1` and `var2`.; /// \param[in] var1 The first parameter (x axis).; /// \param[in] var2 The second parameter (y axis).; /// \param[in] n1 First contour.; /// \param[in] n2 Optional contour. 0 means don't draw.; /// \param[in] n3 Optional contour. 0 means don't draw.; /// \param[in] n4 Optional contour. 0 means don't draw.; /// \param[in] n5 Optional contour. 0 means don't draw.; /// \param[in] n6 Optional contour. 0 means don't draw.; /// \param[in] npoints Number of points for evaluating the contour.; ///; /// Up to six contours can be drawn using the arguments `n1` to `n6` to request the desired; /// coverage in units of \f$ \sigma = n^2 \cdot \mathrm{ErrorDef} \f$.; /// See ROOT::Math::Minimizer::ErrorDef().",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:862,Availability,Error,ErrorDef,862,"////////////////////////////////////////////////////////////////////////////////; /// Create and draw a TH2 with the error contours in the parameters `var1` and `var2`.; /// \param[in] var1 The first parameter (x axis).; /// \param[in] var2 The second parameter (y axis).; /// \param[in] n1 First contour.; /// \param[in] n2 Optional contour. 0 means don't draw.; /// \param[in] n3 Optional contour. 0 means don't draw.; /// \param[in] n4 Optional contour. 0 means don't draw.; /// \param[in] n5 Optional contour. 0 means don't draw.; /// \param[in] n6 Optional contour. 0 means don't draw.; /// \param[in] npoints Number of points for evaluating the contour.; ///; /// Up to six contours can be drawn using the arguments `n1` to `n6` to request the desired; /// coverage in units of \f$ \sigma = n^2 \cdot \mathrm{ErrorDef} \f$.; /// See ROOT::Math::Minimizer::ErrorDef().",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:20,Modifiability,variab,variables,20,"// Verify that both variables are floating parameters of PDF",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:32,Availability,avail,available,32,"// check first if a inimizer is available. If not means; // the minimization is not done , so do it",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:156,Availability,error,errors,156,"////////////////////////////////////////////////////////////////////////////////; /// Apply results of given external covariance matrix. i.e. propagate its errors; /// to all RRV parameter representations and give this matrix instead of the; /// HESSE matrix at the next save() call",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:38,Performance,perform,performed,38,"// Import the results of the last fit performed, interpreting; // the fit parameters as the given varList of parameters.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:11,Availability,recover,recover,11,"/// Try to recover from invalid function values. When invalid function values; /// are encountered, a penalty term is returned to the minimiser to make it; /// back off. This sets the strength of this penalty. \note A strength of zero; /// is equivalent to a constant penalty (= the gradient vanishes, ROOT < 6.24).; /// Positive values lead to a gradient pointing away from the undefined; /// regions. Use ~10 to force the minimiser away from invalid function values.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:11,Safety,recover,recover,11,"/// Try to recover from invalid function values. When invalid function values; /// are encountered, a penalty term is returned to the minimiser to make it; /// back off. This sets the strength of this penalty. \note A strength of zero; /// is equivalent to a constant penalty (= the gradient vanishes, ROOT < 6.24).; /// Positive values lead to a gradient pointing away from the undefined; /// regions. Use ~10 to force the minimiser away from invalid function values.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:17,Availability,error,error,17,"// If evaluation error printing is disabled, we don't need to collect the; // errors and only need to count them. This significantly reduces the; // performance overhead when having evaluation errors.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:78,Availability,error,errors,78,"// If evaluation error printing is disabled, we don't need to collect the; // errors and only need to count them. This significantly reduces the; // performance overhead when having evaluation errors.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:193,Availability,error,errors,193,"// If evaluation error printing is disabled, we don't need to collect the; // errors and only need to count them. This significantly reduces the; // performance overhead when having evaluation errors.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:133,Energy Efficiency,reduce,reduces,133,"// If evaluation error printing is disabled, we don't need to collect the; // errors and only need to count them. This significantly reduces the; // performance overhead when having evaluation errors.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:149,Performance,perform,performance,149,"// If evaluation error printing is disabled, we don't need to collect the; // errors and only need to count them. This significantly reduces the; // performance overhead when having evaluation errors.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:3,Performance,perform,perform,3,"// perform the minimization; // perform the minimization (assume we have already initialized the minimizer)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:32,Performance,perform,perform,32,"// perform the minimization; // perform the minimization (assume we have already initialized the minimizer)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:37,Availability,error,errors,37,"// set also new parameter values and errors in FitConfig",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:21,Availability,error,errors,21,"// compute the Hesse errors according to configuration; // set in the parameters and append value in fit result; // update minimizer (recreate if not done or if name has changed",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:41,Deployability,configurat,configuration,41,"// compute the Hesse errors according to configuration; // set in the parameters and append value in fit result; // update minimizer (recreate if not done or if name has changed",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:116,Deployability,update,update,116,"// compute the Hesse errors according to configuration; // set in the parameters and append value in fit result; // update minimizer (recreate if not done or if name has changed",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:41,Modifiability,config,configuration,41,"// compute the Hesse errors according to configuration; // set in the parameters and append value in fit result; // update minimizer (recreate if not done or if name has changed",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:3,Deployability,update,update,3,"// update minimizer results with what comes out from Hesse; // in case is empty - create from a FitConfig",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:16,Availability,error,errors,16,"// set also new errors in FitConfig",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:21,Availability,error,errors,21,"// compute the Minos errors according to configuration; // set in the parameters and append value in fit result; // normally Minos errors are computed just after the minimization; // (in DoMinimization) aftewr minimizing if the; // FitConfig::MinosErrors() flag is set; // update minimizer (but cannot re-create in this case). Must use an existing one",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:131,Availability,error,errors,131,"// compute the Minos errors according to configuration; // set in the parameters and append value in fit result; // normally Minos errors are computed just after the minimization; // (in DoMinimization) aftewr minimizing if the; // FitConfig::MinosErrors() flag is set; // update minimizer (but cannot re-create in this case). Must use an existing one",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:41,Deployability,configurat,configuration,41,"// compute the Minos errors according to configuration; // set in the parameters and append value in fit result; // normally Minos errors are computed just after the minimization; // (in DoMinimization) aftewr minimizing if the; // FitConfig::MinosErrors() flag is set; // update minimizer (but cannot re-create in this case). Must use an existing one",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:273,Deployability,update,update,273,"// compute the Minos errors according to configuration; // set in the parameters and append value in fit result; // normally Minos errors are computed just after the minimization; // (in DoMinimization) aftewr minimizing if the; // FitConfig::MinosErrors() flag is set; // update minimizer (but cannot re-create in this case). Must use an existing one",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:41,Modifiability,config,configuration,41,"// compute the Minos errors according to configuration; // set in the parameters and append value in fit result; // normally Minos errors are computed just after the minimization; // (in DoMinimization) aftewr minimizing if the; // FitConfig::MinosErrors() flag is set; // update minimizer (but cannot re-create in this case). Must use an existing one",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:6,Safety,avoid,avoid,6,"// to avoid infinite looping",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:76,Availability,error,errors,76,"// update minimizer options when re-doing a Fit or computing Hesse or Minos errors; // create a new minimizer if it is different type; // minimizer type string stored in FitResult is ""minimizer name"" + "" / "" + minimizer algo",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:3,Deployability,update,update,3,"// update minimizer options when re-doing a Fit or computing Hesse or Minos errors; // create a new minimizer if it is different type; // minimizer type string stored in FitResult is ""minimizer name"" + "" / "" + minimizer algo",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:3,Deployability,update,update,3,"// update the fit configuration after a fit using the obtained result",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:18,Deployability,configurat,configuration,18,"// update the fit configuration after a fit using the obtained result",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:18,Modifiability,config,configuration,18,"// update the fit configuration after a fit using the obtained result",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:85,Availability,error,errors,85,"// create a Fit result from a fit config (i.e. with initial parameter values; // and errors equal to step values; // The model function is NULL in this case; // set minimizer type and algorithm",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:34,Modifiability,config,config,34,"// create a Fit result from a fit config (i.e. with initial parameter values; // and errors equal to step values; // The model function is NULL in this case; // set minimizer type and algorithm",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:28,Availability,error,errors,28,"// get parameter values and errors (step sizes)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:72,Deployability,configurat,configuration,72,"// case minimizer does not provide minimum values (it failed) take from configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:72,Modifiability,config,configuration,72,"// case minimizer does not provide minimum values (it failed) take from configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:8,Availability,error,error,8,"// fill error matrix; // if minimizer provides error provides also error matrix; // clear in case of re-filling an existing result",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:47,Availability,error,error,47,"// fill error matrix; // if minimizer provides error provides also error matrix; // clear in case of re-filling an existing result",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:67,Availability,error,error,67,"// fill error matrix; // if minimizer provides error provides also error matrix; // clear in case of re-filling an existing result",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:84,Usability,clear,clear,84,"// fill error matrix; // if minimizer provides error provides also error matrix; // clear in case of re-filling an existing result",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:3,Deployability,update,update,3,"// update fit result with new status from minimizer; // ncalls if it is not zero is used instead of value from minimizer; // in case minimizer changes",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:3,Deployability,update,update,3,"// update minimum value",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:28,Availability,error,errors,28,"// copy parameter value and errors",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:10,Availability,error,error,10,"// update error matrix",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:3,Deployability,update,update,3,"// update error matrix",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:9,Availability,error,errors,9,"// minos errors are set separately when calling Fitter::CalculateMinosErrors(); // update global CC",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:83,Deployability,update,update,83,"// minos errors are set separately when calling Fitter::CalculateMinosErrors(); // update global CC",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:22,Availability,error,error,22,"// return lower Minos error for parameter i; // return the parabolic error if Minos error has not been calculated for the parameter i",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:69,Availability,error,error,69,"// return lower Minos error for parameter i; // return the parabolic error if Minos error has not been calculated for the parameter i",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:84,Availability,error,error,84,"// return lower Minos error for parameter i; // return the parabolic error if Minos error has not been calculated for the parameter i",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:22,Availability,error,error,22,"// return upper Minos error for parameter i; // return the parabolic error if Minos error has not been calculated for the parameter i",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:69,Availability,error,error,69,"// return upper Minos error for parameter i; // return the parabolic error if Minos error has not been calculated for the parameter i",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:84,Availability,error,error,84,"// return upper Minos error for parameter i; // return the parabolic error if Minos error has not been calculated for the parameter i",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizerFcn.cxx:723,Integrability,interface,interface,723,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * AL, Alfio Lazzaro, INFN Milan, alfio.lazzaro@mi.infn.it *; * PB, Patrick Bos, Netherlands eScience Center, p.bos@esciencecenter.nl *; * *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooMinimizerFcn; /// RooMinimizerFcn is an interface to the ROOT::Math::IBaseFunctionMultiDim,; /// a function that ROOT's minimisers use to carry out minimisations.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizerFcn.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizerFcn.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizerFcn.cxx:24,Integrability,wrap,wraps,24,"// Helper function that wraps RooAbsArg::getParameters and directly returns the; // output RooArgSet. To be used in the initializer list of the RooMinimizerFcn; // constructor.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizerFcn.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizerFcn.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizerFcn.cxx:31,Integrability,wrap,wrapper,31,"// namespace; // use reference wrapper for the Functor, such that the functor points to this RooMinimizerFcn by reference.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizerFcn.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizerFcn.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizerFcn.cxx:12,Testability,log,logging,12,"// Optional logging",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizerFcn.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizerFcn.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizerFcn.cxx:12,Testability,log,logging,12,"// Optional logging",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMinimizerFcn.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizerFcn.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:909,Availability,ERROR,ERROR,909,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. ###",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1300,Availability,ERROR,ERROR,1300,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1813,Availability,alive,alive,1813,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1219,Deployability,configurat,configuration,1219,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1374,Deployability,Integrat,Integration,1374,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:799,Integrability,message,messages,799,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. ###",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:835,Integrability,message,message,835,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. ###",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:849,Integrability,message,message,849,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. ###",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1014,Integrability,message,messages,1014,"Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1050,Integrability,message,message,1050,"Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1257,Integrability,message,messages,1257,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1334,Integrability,message,message,1334,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1374,Integrability,Integrat,Integration,1374,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1496,Integrability,message,messages,1496,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1686,Integrability,message,message,1686,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1780,Integrability,message,message,1780,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:2025,Integrability,message,message,2025,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:2099,Integrability,message,message,2099,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:2157,Integrability,message,messages,2157,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1219,Modifiability,config,configuration,1219,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1613,Security,access,accessible,1613,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1474,Testability,log,logging,1474,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:183,Deployability,Install,Install,183,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. Defines names of message levels; /// and mapping of topic codes to topic names; /// Install default message streams.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:116,Integrability,message,message,116,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. Defines names of message levels; /// and mapping of topic codes to topic names; /// Install default message streams.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:199,Integrability,message,message,199,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. Defines names of message levels; /// and mapping of topic codes to topic names; /// Install default message streams.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:92,Integrability,message,message,92,"////////////////////////////////////////////////////////////////////////////////; /// Add a message logging stream for message with given RooFit::MsgLevel or higher.; /// Higher means that messages with higher priority/severity are issued.; ///; /// This method accepts the following arguments to configure the stream:; /// <table>; /// <tr><th> Output Style options <th>; /// <tr><td> Prefix(bool flag=true) <td> Prefix all messages in this stream with Topic/Originator information; /// <tr><th> Filtering options <th>; /// <tr><td> Topic() <td> Restrict stream to messages on given topic; /// <tr><td> ObjectName(const char*) <td> Restrict stream to messages from object with given name; /// <tr><td> ClassName(const char*) <td> Restrict stream to messages from objects with given class name; /// <tr><td> BaseClassName(const char*)<td> Restrict stream to messages from objects with given base class name; /// <tr><td> LabelName(const chat*) <td> Restrict stream to messages from objects setAttribute(const char*) tag with given name; /// <tr><th> Output redirection options <th>; /// <tr><td> OutputFile(const char*) <td> Send output to file with given name. Multiple streams can write to same file.; /// <tr><td> OutputStream(ostream&) <td> Send output to given C++ stream. Multiple message streams can write to same c++ stream; /// </table>; /// The return value is the unique ID of the defined stream.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:119,Integrability,message,message,119,"////////////////////////////////////////////////////////////////////////////////; /// Add a message logging stream for message with given RooFit::MsgLevel or higher.; /// Higher means that messages with higher priority/severity are issued.; ///; /// This method accepts the following arguments to configure the stream:; /// <table>; /// <tr><th> Output Style options <th>; /// <tr><td> Prefix(bool flag=true) <td> Prefix all messages in this stream with Topic/Originator information; /// <tr><th> Filtering options <th>; /// <tr><td> Topic() <td> Restrict stream to messages on given topic; /// <tr><td> ObjectName(const char*) <td> Restrict stream to messages from object with given name; /// <tr><td> ClassName(const char*) <td> Restrict stream to messages from objects with given class name; /// <tr><td> BaseClassName(const char*)<td> Restrict stream to messages from objects with given base class name; /// <tr><td> LabelName(const chat*) <td> Restrict stream to messages from objects setAttribute(const char*) tag with given name; /// <tr><th> Output redirection options <th>; /// <tr><td> OutputFile(const char*) <td> Send output to file with given name. Multiple streams can write to same file.; /// <tr><td> OutputStream(ostream&) <td> Send output to given C++ stream. Multiple message streams can write to same c++ stream; /// </table>; /// The return value is the unique ID of the defined stream.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:189,Integrability,message,messages,189,"////////////////////////////////////////////////////////////////////////////////; /// Add a message logging stream for message with given RooFit::MsgLevel or higher.; /// Higher means that messages with higher priority/severity are issued.; ///; /// This method accepts the following arguments to configure the stream:; /// <table>; /// <tr><th> Output Style options <th>; /// <tr><td> Prefix(bool flag=true) <td> Prefix all messages in this stream with Topic/Originator information; /// <tr><th> Filtering options <th>; /// <tr><td> Topic() <td> Restrict stream to messages on given topic; /// <tr><td> ObjectName(const char*) <td> Restrict stream to messages from object with given name; /// <tr><td> ClassName(const char*) <td> Restrict stream to messages from objects with given class name; /// <tr><td> BaseClassName(const char*)<td> Restrict stream to messages from objects with given base class name; /// <tr><td> LabelName(const chat*) <td> Restrict stream to messages from objects setAttribute(const char*) tag with given name; /// <tr><th> Output redirection options <th>; /// <tr><td> OutputFile(const char*) <td> Send output to file with given name. Multiple streams can write to same file.; /// <tr><td> OutputStream(ostream&) <td> Send output to given C++ stream. Multiple message streams can write to same c++ stream; /// </table>; /// The return value is the unique ID of the defined stream.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:425,Integrability,message,messages,425,"////////////////////////////////////////////////////////////////////////////////; /// Add a message logging stream for message with given RooFit::MsgLevel or higher.; /// Higher means that messages with higher priority/severity are issued.; ///; /// This method accepts the following arguments to configure the stream:; /// <table>; /// <tr><th> Output Style options <th>; /// <tr><td> Prefix(bool flag=true) <td> Prefix all messages in this stream with Topic/Originator information; /// <tr><th> Filtering options <th>; /// <tr><td> Topic() <td> Restrict stream to messages on given topic; /// <tr><td> ObjectName(const char*) <td> Restrict stream to messages from object with given name; /// <tr><td> ClassName(const char*) <td> Restrict stream to messages from objects with given class name; /// <tr><td> BaseClassName(const char*)<td> Restrict stream to messages from objects with given base class name; /// <tr><td> LabelName(const chat*) <td> Restrict stream to messages from objects setAttribute(const char*) tag with given name; /// <tr><th> Output redirection options <th>; /// <tr><td> OutputFile(const char*) <td> Send output to file with given name. Multiple streams can write to same file.; /// <tr><td> OutputStream(ostream&) <td> Send output to given C++ stream. Multiple message streams can write to same c++ stream; /// </table>; /// The return value is the unique ID of the defined stream.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:566,Integrability,message,messages,566,"////////////////////////////////////////////////////////////////////////////////; /// Add a message logging stream for message with given RooFit::MsgLevel or higher.; /// Higher means that messages with higher priority/severity are issued.; ///; /// This method accepts the following arguments to configure the stream:; /// <table>; /// <tr><th> Output Style options <th>; /// <tr><td> Prefix(bool flag=true) <td> Prefix all messages in this stream with Topic/Originator information; /// <tr><th> Filtering options <th>; /// <tr><td> Topic() <td> Restrict stream to messages on given topic; /// <tr><td> ObjectName(const char*) <td> Restrict stream to messages from object with given name; /// <tr><td> ClassName(const char*) <td> Restrict stream to messages from objects with given class name; /// <tr><td> BaseClassName(const char*)<td> Restrict stream to messages from objects with given base class name; /// <tr><td> LabelName(const chat*) <td> Restrict stream to messages from objects setAttribute(const char*) tag with given name; /// <tr><th> Output redirection options <th>; /// <tr><td> OutputFile(const char*) <td> Send output to file with given name. Multiple streams can write to same file.; /// <tr><td> OutputStream(ostream&) <td> Send output to given C++ stream. Multiple message streams can write to same c++ stream; /// </table>; /// The return value is the unique ID of the defined stream.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:652,Integrability,message,messages,652,"////////////////////////////////////////////////////////////////////////////////; /// Add a message logging stream for message with given RooFit::MsgLevel or higher.; /// Higher means that messages with higher priority/severity are issued.; ///; /// This method accepts the following arguments to configure the stream:; /// <table>; /// <tr><th> Output Style options <th>; /// <tr><td> Prefix(bool flag=true) <td> Prefix all messages in this stream with Topic/Originator information; /// <tr><th> Filtering options <th>; /// <tr><td> Topic() <td> Restrict stream to messages on given topic; /// <tr><td> ObjectName(const char*) <td> Restrict stream to messages from object with given name; /// <tr><td> ClassName(const char*) <td> Restrict stream to messages from objects with given class name; /// <tr><td> BaseClassName(const char*)<td> Restrict stream to messages from objects with given base class name; /// <tr><td> LabelName(const chat*) <td> Restrict stream to messages from objects setAttribute(const char*) tag with given name; /// <tr><th> Output redirection options <th>; /// <tr><td> OutputFile(const char*) <td> Send output to file with given name. Multiple streams can write to same file.; /// <tr><td> OutputStream(ostream&) <td> Send output to given C++ stream. Multiple message streams can write to same c++ stream; /// </table>; /// The return value is the unique ID of the defined stream.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:750,Integrability,message,messages,750,"////////////////////////////////////////////////////////////////////////////////; /// Add a message logging stream for message with given RooFit::MsgLevel or higher.; /// Higher means that messages with higher priority/severity are issued.; ///; /// This method accepts the following arguments to configure the stream:; /// <table>; /// <tr><th> Output Style options <th>; /// <tr><td> Prefix(bool flag=true) <td> Prefix all messages in this stream with Topic/Originator information; /// <tr><th> Filtering options <th>; /// <tr><td> Topic() <td> Restrict stream to messages on given topic; /// <tr><td> ObjectName(const char*) <td> Restrict stream to messages from object with given name; /// <tr><td> ClassName(const char*) <td> Restrict stream to messages from objects with given class name; /// <tr><td> BaseClassName(const char*)<td> Restrict stream to messages from objects with given base class name; /// <tr><td> LabelName(const chat*) <td> Restrict stream to messages from objects setAttribute(const char*) tag with given name; /// <tr><th> Output redirection options <th>; /// <tr><td> OutputFile(const char*) <td> Send output to file with given name. Multiple streams can write to same file.; /// <tr><td> OutputStream(ostream&) <td> Send output to given C++ stream. Multiple message streams can write to same c++ stream; /// </table>; /// The return value is the unique ID of the defined stream.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:858,Integrability,message,messages,858,"////////////////////////////////////////////////////////////////////////////////; /// Add a message logging stream for message with given RooFit::MsgLevel or higher.; /// Higher means that messages with higher priority/severity are issued.; ///; /// This method accepts the following arguments to configure the stream:; /// <table>; /// <tr><th> Output Style options <th>; /// <tr><td> Prefix(bool flag=true) <td> Prefix all messages in this stream with Topic/Originator information; /// <tr><th> Filtering options <th>; /// <tr><td> Topic() <td> Restrict stream to messages on given topic; /// <tr><td> ObjectName(const char*) <td> Restrict stream to messages from object with given name; /// <tr><td> ClassName(const char*) <td> Restrict stream to messages from objects with given class name; /// <tr><td> BaseClassName(const char*)<td> Restrict stream to messages from objects with given base class name; /// <tr><td> LabelName(const chat*) <td> Restrict stream to messages from objects setAttribute(const char*) tag with given name; /// <tr><th> Output redirection options <th>; /// <tr><td> OutputFile(const char*) <td> Send output to file with given name. Multiple streams can write to same file.; /// <tr><td> OutputStream(ostream&) <td> Send output to given C++ stream. Multiple message streams can write to same c++ stream; /// </table>; /// The return value is the unique ID of the defined stream.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:968,Integrability,message,messages,968,"////////////////////////////////////////////////////////////////////////////////; /// Add a message logging stream for message with given RooFit::MsgLevel or higher.; /// Higher means that messages with higher priority/severity are issued.; ///; /// This method accepts the following arguments to configure the stream:; /// <table>; /// <tr><th> Output Style options <th>; /// <tr><td> Prefix(bool flag=true) <td> Prefix all messages in this stream with Topic/Originator information; /// <tr><th> Filtering options <th>; /// <tr><td> Topic() <td> Restrict stream to messages on given topic; /// <tr><td> ObjectName(const char*) <td> Restrict stream to messages from object with given name; /// <tr><td> ClassName(const char*) <td> Restrict stream to messages from objects with given class name; /// <tr><td> BaseClassName(const char*)<td> Restrict stream to messages from objects with given base class name; /// <tr><td> LabelName(const chat*) <td> Restrict stream to messages from objects setAttribute(const char*) tag with given name; /// <tr><th> Output redirection options <th>; /// <tr><td> OutputFile(const char*) <td> Send output to file with given name. Multiple streams can write to same file.; /// <tr><td> OutputStream(ostream&) <td> Send output to given C++ stream. Multiple message streams can write to same c++ stream; /// </table>; /// The return value is the unique ID of the defined stream.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1287,Integrability,message,message,1287,"////////////////////////////////////////////////////////////////////////////////; /// Add a message logging stream for message with given RooFit::MsgLevel or higher.; /// Higher means that messages with higher priority/severity are issued.; ///; /// This method accepts the following arguments to configure the stream:; /// <table>; /// <tr><th> Output Style options <th>; /// <tr><td> Prefix(bool flag=true) <td> Prefix all messages in this stream with Topic/Originator information; /// <tr><th> Filtering options <th>; /// <tr><td> Topic() <td> Restrict stream to messages on given topic; /// <tr><td> ObjectName(const char*) <td> Restrict stream to messages from object with given name; /// <tr><td> ClassName(const char*) <td> Restrict stream to messages from objects with given class name; /// <tr><td> BaseClassName(const char*)<td> Restrict stream to messages from objects with given base class name; /// <tr><td> LabelName(const chat*) <td> Restrict stream to messages from objects setAttribute(const char*) tag with given name; /// <tr><th> Output redirection options <th>; /// <tr><td> OutputFile(const char*) <td> Send output to file with given name. Multiple streams can write to same file.; /// <tr><td> OutputStream(ostream&) <td> Send output to given C++ stream. Multiple message streams can write to same c++ stream; /// </table>; /// The return value is the unique ID of the defined stream.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:297,Modifiability,config,configure,297,"////////////////////////////////////////////////////////////////////////////////; /// Add a message logging stream for message with given RooFit::MsgLevel or higher.; /// Higher means that messages with higher priority/severity are issued.; ///; /// This method accepts the following arguments to configure the stream:; /// <table>; /// <tr><th> Output Style options <th>; /// <tr><td> Prefix(bool flag=true) <td> Prefix all messages in this stream with Topic/Originator information; /// <tr><th> Filtering options <th>; /// <tr><td> Topic() <td> Restrict stream to messages on given topic; /// <tr><td> ObjectName(const char*) <td> Restrict stream to messages from object with given name; /// <tr><td> ClassName(const char*) <td> Restrict stream to messages from objects with given class name; /// <tr><td> BaseClassName(const char*)<td> Restrict stream to messages from objects with given base class name; /// <tr><td> LabelName(const chat*) <td> Restrict stream to messages from objects setAttribute(const char*) tag with given name; /// <tr><th> Output redirection options <th>; /// <tr><td> OutputFile(const char*) <td> Send output to file with given name. Multiple streams can write to same file.; /// <tr><td> OutputStream(ostream&) <td> Send output to given C++ stream. Multiple message streams can write to same c++ stream; /// </table>; /// The return value is the unique ID of the defined stream.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:100,Testability,log,logging,100,"////////////////////////////////////////////////////////////////////////////////; /// Add a message logging stream for message with given RooFit::MsgLevel or higher.; /// Higher means that messages with higher priority/severity are issued.; ///; /// This method accepts the following arguments to configure the stream:; /// <table>; /// <tr><th> Output Style options <th>; /// <tr><td> Prefix(bool flag=true) <td> Prefix all messages in this stream with Topic/Originator information; /// <tr><th> Filtering options <th>; /// <tr><td> Topic() <td> Restrict stream to messages on given topic; /// <tr><td> ObjectName(const char*) <td> Restrict stream to messages from object with given name; /// <tr><td> ClassName(const char*) <td> Restrict stream to messages from objects with given class name; /// <tr><td> BaseClassName(const char*)<td> Restrict stream to messages from objects with given base class name; /// <tr><td> LabelName(const chat*) <td> Restrict stream to messages from objects setAttribute(const char*) tag with given name; /// <tr><th> Output redirection options <th>; /// <tr><td> OutputFile(const char*) <td> Send output to file with given name. Multiple streams can write to same file.; /// <tr><td> OutputStream(ostream&) <td> Send output to given C++ stream. Multiple message streams can write to same c++ stream; /// </table>; /// The return value is the unique ID of the defined stream.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:10,Deployability,configurat,configuration,10,"// Define configuration for this method",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:10,Modifiability,config,configuration,10,"// Define configuration for this method",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:9,Deployability,configurat,configuration,9,"// Store configuration info",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:9,Modifiability,config,configuration,9,"// Store configuration info",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:3,Deployability,Update,Update,3,"// Update debug stream count",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:3,Modifiability,Config,Configure,3,"// Configure output",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:3,Deployability,Update,Update,3,"// Update debug stream count",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:3,Deployability,Update,Update,3,"// Update debug stream count",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:108,Integrability,message,message,108,"////////////////////////////////////////////////////////////////////////////////; /// Save current state of message service",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:114,Integrability,message,message,114,"////////////////////////////////////////////////////////////////////////////////; /// Restore last saved state of message service",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:99,Integrability,message,message,99,"////////////////////////////////////////////////////////////////////////////////; /// Determine if message from given object at given level on given topic is logged",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:158,Testability,log,logged,158,"////////////////////////////////////////////////////////////////////////////////; /// Determine if message from given object at given level on given topic is logged",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:99,Integrability,message,message,99,"////////////////////////////////////////////////////////////////////////////////; /// Determine if message from given object at given level on given topic is logged",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:158,Testability,log,logged,158,"////////////////////////////////////////////////////////////////////////////////; /// Determine if message from given object at given level on given topic is logged",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:90,Availability,error,error,90,"////////////////////////////////////////////////////////////////////////////////; /// Log error message associated with RooAbsArg object self at given level and topic. If skipPrefix; /// is true the standard RooMsgService prefix is not added.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:96,Integrability,message,message,96,"////////////////////////////////////////////////////////////////////////////////; /// Log error message associated with RooAbsArg object self at given level and topic. If skipPrefix; /// is true the standard RooMsgService prefix is not added.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:86,Testability,Log,Log,86,"////////////////////////////////////////////////////////////////////////////////; /// Log error message associated with RooAbsArg object self at given level and topic. If skipPrefix; /// is true the standard RooMsgService prefix is not added.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:52,Deployability,configurat,configuration,52,"// Return C++ ostream associated with given message configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:44,Integrability,message,message,44,"// Return C++ ostream associated with given message configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:52,Modifiability,config,configuration,52,"// Return C++ ostream associated with given message configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:22,Integrability,message,messages,22,"// Flush any previous messages",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:90,Availability,error,error,90,"////////////////////////////////////////////////////////////////////////////////; /// Log error message associated with TObject object self at given level and topic. If skipPrefix; /// is true the standard RooMsgService prefix is not added.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:96,Integrability,message,message,96,"////////////////////////////////////////////////////////////////////////////////; /// Log error message associated with TObject object self at given level and topic. If skipPrefix; /// is true the standard RooMsgService prefix is not added.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:86,Testability,Log,Log,86,"////////////////////////////////////////////////////////////////////////////////; /// Log error message associated with TObject object self at given level and topic. If skipPrefix; /// is true the standard RooMsgService prefix is not added.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:52,Deployability,configurat,configuration,52,"// Return C++ ostream associated with given message configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:44,Integrability,message,message,44,"// Return C++ ostream associated with given message configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:52,Modifiability,config,configuration,52,"// Return C++ ostream associated with given message configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:22,Integrability,message,messages,22,"// Flush any previous messages",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:92,Deployability,configurat,configuration,92,"////////////////////////////////////////////////////////////////////////////////; /// Print configuration of message service. If ""v"" option is given also; /// inactive streams are listed",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:109,Integrability,message,message,109,"////////////////////////////////////////////////////////////////////////////////; /// Print configuration of message service. If ""v"" option is given also; /// inactive streams are listed",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:92,Modifiability,config,configuration,92,"////////////////////////////////////////////////////////////////////////////////; /// Print configuration of message service. If ""v"" option is given also; /// inactive streams are listed",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMsgService.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiCategory.cxx:985,Deployability,update,updated,985,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMultiCategory.cxx; \class RooMultiCategory; \ingroup Roofitcore. Connects several RooAbsCategory objects into; a single category. The states of the multi-category consist of all the permutations; of the input categories.; RooMultiCategory states are automatically defined and updated whenever an input; category modifies its list of states. A RooMultiCategory is not an lvalue, *i.e.* one cannot set its states. Its state simply follows; as a computation from the states of the input categories. This is because the input categories; don't need to be lvalues, so their states cannot be set by the MultiCategory. If all input categories; are lvalues, the RooSuperCategory can be used. It works like RooMultiCategory, but allows for; setting the states.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiCategory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiCategory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiCategory.cxx:1131,Usability,simpl,simply,1131,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMultiCategory.cxx; \class RooMultiCategory; \ingroup Roofitcore. Connects several RooAbsCategory objects into; a single category. The states of the multi-category consist of all the permutations; of the input categories.; RooMultiCategory states are automatically defined and updated whenever an input; category modifies its list of states. A RooMultiCategory is not an lvalue, *i.e.* one cannot set its states. Its state simply follows; as a computation from the states of the input categories. This is because the input categories; don't need to be lvalues, so their states cannot be set by the MultiCategory. If all input categories; are lvalues, the RooSuperCategory can be used. It works like RooMultiCategory, but allows for; setting the states.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiCategory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiCategory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiCategory.cxx:103,Availability,avail,available,103,"// It's important that we define the states unchecked, because for checking that name; // or index are available, recomputeShape() would be called.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiCategory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiCategory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiCategory.cxx:50,Performance,cache,cached,50,"// Possible new state numbers will invalidate all cached numbers",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiCategory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiCategory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:24,Deployability,integrat,integration,24,"// Warn that analytical integration is only provided for the first 127 observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:24,Integrability,integrat,integration,24,"// Warn that analytical integration is only provided for the first 127 observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:12,Deployability,integrat,integration,12,"// Check if integration over observable #i is requested",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:12,Integrability,integrat,integration,12,"// Check if integration over observable #i is requested",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:12,Deployability,integrat,integration,12,"// Check if integration over parameter #i is requested",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:12,Integrability,integrat,integration,12,"// Check if integration over parameter #i is requested",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:16,Deployability,integrat,integration,16,"// Full numeric integration over requested observables maps always to code zero",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:16,Integrability,integrat,integration,16,"// Full numeric integration over requested observables maps always to code zero",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:65,Performance,cache,cache,65,"// Handle partial integrals here; // Retrieve |S22|, S22bar from cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:32,Deployability,integrat,integrated,32,"// Fill position vector for non-integrated observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:32,Integrability,integrat,integrated,32,"// Fill position vector for non-integrated observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:95,Performance,cache,cache,95,"////////////////////////////////////////////////////////////////////////////////; /// Check if cache entry was previously created",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:39,Deployability,integrat,integration,39,"// Calculate cache contents; // Decode integration code",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:39,Integrability,integrat,integration,39,"// Calculate cache contents; // Decode integration code",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:13,Performance,cache,cache,13,"// Calculate cache contents; // Decode integration code",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:40,Deployability,integrat,integrated,40,"// Rearrage observables so that all non-integrated observables; // go first (preserving relative order) and all integrated observables; // go last (preserving relative order)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:112,Deployability,integrat,integrated,112,"// Rearrage observables so that all non-integrated observables; // go first (preserving relative order) and all integrated observables; // go last (preserving relative order)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:40,Integrability,integrat,integrated,40,"// Rearrage observables so that all non-integrated observables; // go first (preserving relative order) and all integrated observables; // go last (preserving relative order)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:112,Integrability,integrat,integrated,112,"// Rearrage observables so that all non-integrated observables; // go first (preserving relative order) and all integrated observables; // go last (preserving relative order)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:204,Deployability,integrat,integrated,204,"// Begin calculation of partial integrals; // ___; // sqrt(2pi)^(#intObs) (-0.5 * u1T S22 u1 ); // I = ------------------- * e; // sqrt(|det(S22)|); // ___; // Where S22 is the sub-matrix of covI for the integrated observables and S22; // is the Schur complement of S22; // ___ -1; // S22 = S11 - S12 * S22 * S21; //; // and u1 is the vector of non-integrated observables; // Calculate Schur complement S22bar",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:349,Deployability,integrat,integrated,349,"// Begin calculation of partial integrals; // ___; // sqrt(2pi)^(#intObs) (-0.5 * u1T S22 u1 ); // I = ------------------- * e; // sqrt(|det(S22)|); // ___; // Where S22 is the sub-matrix of covI for the integrated observables and S22; // is the Schur complement of S22; // ___ -1; // S22 = S11 - S12 * S22 * S21; //; // and u1 is the vector of non-integrated observables; // Calculate Schur complement S22bar",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:204,Integrability,integrat,integrated,204,"// Begin calculation of partial integrals; // ___; // sqrt(2pi)^(#intObs) (-0.5 * u1T S22 u1 ); // I = ------------------- * e; // sqrt(|det(S22)|); // ___; // Where S22 is the sub-matrix of covI for the integrated observables and S22; // is the Schur complement of S22; // ___ -1; // S22 = S11 - S12 * S22 * S21; //; // and u1 is the vector of non-integrated observables; // Calculate Schur complement S22bar",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:349,Integrability,integrat,integrated,349,"// Begin calculation of partial integrals; // ___; // sqrt(2pi)^(#intObs) (-0.5 * u1T S22 u1 ); // I = ------------------- * e; // sqrt(|det(S22)|); // ___; // Where S22 is the sub-matrix of covI for the integrated observables and S22; // is the Schur complement of S22; // ___ -1; // S22 = S11 - S12 * S22 * S21; //; // and u1 is the vector of non-integrated observables; // Calculate Schur complement S22bar",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:14,Performance,cache,cache,14,"// Create new cache entry",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:24,Deployability,integrat,integration,24,"// Warn that analytical integration is only provided for the first 127 observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:24,Integrability,integrat,integration,24,"// Warn that analytical integration is only provided for the first 127 observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:104,Performance,cache,cache,104,"////////////////////////////////////////////////////////////////////////////////; /// Clear the GenData cache as its content is not invariant under changes in; /// the mu vector.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear the GenData cache as its content is not invariant under changes in; /// the mu vector.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:105,Modifiability,config,config,105,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve generator config from cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:117,Performance,cache,cache,117,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve generator config from cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:3,Usability,Simpl,Simple,3,"// Simple shift if we generate all observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:28,Integrability,depend,dependent,28,"// Non-generated observable dependent shift for partial generations; // mubar = mu1 + S12 S22Inv ( x2 - mu2)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:12,Performance,cache,cache,12,"// Check if cache entry was previously created",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:8,Performance,cache,cache,8,"// Fill cache data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:8,Performance,cache,cache,8,"// Fill cache data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:104,Deployability,integrat,integration,104,"////////////////////////////////////////////////////////////////////////////////; /// Decode analytical integration/generation code into index map of integrated/generated (map2); /// and non-integrated/generated observables (map1)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:150,Deployability,integrat,integrated,150,"////////////////////////////////////////////////////////////////////////////////; /// Decode analytical integration/generation code into index map of integrated/generated (map2); /// and non-integrated/generated observables (map1)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:191,Deployability,integrat,integrated,191,"////////////////////////////////////////////////////////////////////////////////; /// Decode analytical integration/generation code into index map of integrated/generated (map2); /// and non-integrated/generated observables (map1)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:104,Integrability,integrat,integration,104,"////////////////////////////////////////////////////////////////////////////////; /// Decode analytical integration/generation code into index map of integrated/generated (map2); /// and non-integrated/generated observables (map1)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:150,Integrability,integrat,integrated,150,"////////////////////////////////////////////////////////////////////////////////; /// Decode analytical integration/generation code into index map of integrated/generated (map2); /// and non-integrated/generated observables (map1)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:191,Integrability,integrat,integrated,191,"////////////////////////////////////////////////////////////////////////////////; /// Decode analytical integration/generation code into index map of integrated/generated (map2); /// and non-integrated/generated observables (map1)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:3,Energy Efficiency,Allocate,Allocate,3,"// Allocate and fill reordered covI matrix in 2x2 block structure",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooMultiVarGaussian.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:926,Modifiability,extend,extended,926,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNLLVar.cxx; \class RooNLLVar; \ingroup Roofitcore. Implements a -log(likelihood) calculation from a dataset; and a PDF. The NLL is calculated as; \f[; \sum_\mathrm{data} -\log( \mathrm{pdf}(x_\mathrm{data})); \f]; In extended mode, a; \f$ N_\mathrm{expect} - N_\mathrm{observed}*log(N_\mathrm{expect}) \f$ term is added.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:774,Testability,log,log,774,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNLLVar.cxx; \class RooNLLVar; \ingroup Roofitcore. Implements a -log(likelihood) calculation from a dataset; and a PDF. The NLL is calculated as; \f[; \sum_\mathrm{data} -\log( \mathrm{pdf}(x_\mathrm{data})); \f]; In extended mode, a; \f$ N_\mathrm{expect} - N_\mathrm{observed}*log(N_\mathrm{expect}) \f$ term is added.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:881,Testability,log,log,881,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNLLVar.cxx; \class RooNLLVar; \ingroup Roofitcore. Implements a -log(likelihood) calculation from a dataset; and a PDF. The NLL is calculated as; \f[; \sum_\mathrm{data} -\log( \mathrm{pdf}(x_\mathrm{data})); \f]; In extended mode, a; \f$ N_\mathrm{expect} - N_\mathrm{observed}*log(N_\mathrm{expect}) \f$ term is added.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:988,Testability,log,log,988,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNLLVar.cxx; \class RooNLLVar; \ingroup Roofitcore. Implements a -log(likelihood) calculation from a dataset; and a PDF. The NLL is calculated as; \f[; \sum_\mathrm{data} -\log( \mathrm{pdf}(x_\mathrm{data})); \f]; In extended mode, a; \f$ N_\mathrm{expect} - N_\mathrm{observed}*log(N_\mathrm{expect}) \f$ term is added.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:145,Performance,cache,cache,145,"// If binned likelihood flag is set, pdf is a RooRealSumPdf representing a yield vector; // for a binned likelihood calculation; // Retrieve and cache bin widths needed to convert un-normalized binnedPdf values back to yields",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:95,Testability,test,test,95,"////////////////////////////////////////////////////////////////////////////////; /// Create a test statistic using several properties of the current instance. This is used to duplicate; /// the test statistic in multi-processing scenarios.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:195,Testability,test,test,195,"////////////////////////////////////////////////////////////////////////////////; /// Create a test statistic using several properties of the current instance. This is used to duplicate; /// the test statistic in multi-processing scenarios.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:23,Modifiability,extend,extended,23,"// check if pdf can be extended",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:396,Modifiability,extend,extended,396,"////////////////////////////////////////////////////////////////////////////////; /// Calculate and return likelihood on subset of data.; /// \param[in] firstEvent First event to be processed.; /// \param[in] lastEvent First event not to be processed, any more.; /// \param[in] stepSize Steps between events.; /// \note For batch computations, the step size **must** be one.; ///; /// If this an extended likelihood, the extended term is added to the return likelihood; /// in the batch that encounters the event with index 0.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:421,Modifiability,extend,extended,421,"////////////////////////////////////////////////////////////////////////////////; /// Calculate and return likelihood on subset of data.; /// \param[in] firstEvent First event to be processed.; /// \param[in] lastEvent First event not to be processed, any more.; /// \param[in] stepSize Steps between events.; /// \note For batch computations, the step size **must** be one.; ///; /// If this an extended likelihood, the extended term is added to the return likelihood; /// in the batch that encounters the event with index 0.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:246,Availability,toler,tolerate,246,"// Throughout the calculation, we use Kahan's algorithm for summing to; // prevent loss of precision - this is a factor four more expensive than; // straight addition, but since evaluating the PDF is usually much more; // expensive than that, we tolerate the additional cost...",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:80,Testability,log,log-Poisson,80,"// If pdf is marked as binned - do a binned likelihood calculation here (sum of log-Poisson for each bin)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:13,Testability,log,log,13,"// Calculate log(Poisson(N|mu) for this bin",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:9,Availability,error,error,9,"// Catch error condition: data present where zero events are predicted",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:61,Safety,predict,predicted,61,"// Catch error condition: data present where zero events are predicted",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:129,Deployability,update,update,129,"// Special handling of this case since log(Poisson(0,0)=0 but can't be calculated with usual log-formula; // since log(mu)=0. No update of result is required since term=0.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:39,Testability,log,log,39,"// Special handling of this case since log(Poisson(0,0)=0 but can't be calculated with usual log-formula; // since log(mu)=0. No update of result is required since term=0.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:93,Testability,log,log-formula,93,"// Special handling of this case since log(Poisson(0,0)=0 but can't be calculated with usual log-formula; // since log(mu)=0. No update of result is required since term=0.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:115,Testability,log,log,115,"// Special handling of this case since log(Poisson(0,0)=0 but can't be calculated with usual log-formula; // since log(mu)=0. No update of result is required since term=0.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:15,Modifiability,extend,extended,15,"// include the extended maximum likelihood term, if requested",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:112,Testability,log,log,112,"//unbinned PDF; // If part of simultaneous PDF normalize probability over; // number of simultaneous PDFs: -sum(log(p/n)) = -sum(log(p)) + N*log(n); // If we do bin-by bin offsetting, we don't do this because it cancels out",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:129,Testability,log,log,129,"//unbinned PDF; // If part of simultaneous PDF normalize probability over; // number of simultaneous PDFs: -sum(log(p/n)) = -sum(log(p)) + N*log(n); // If we do bin-by bin offsetting, we don't do this because it cancels out",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:141,Testability,log,log,141,"//unbinned PDF; // If part of simultaneous PDF normalize probability over; // number of simultaneous PDFs: -sum(log(p/n)) = -sum(log(p)) + N*log(n); // If we do bin-by bin offsetting, we don't do this because it cancels out",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:54,Performance,cache,caches,54,"// At the end of the first full calculation, wire the caches",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:31,Availability,error,errors,31,"// Some events with evaluation errors. Return ""badness"" of errors.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:59,Availability,error,errors,59,"// Some events with evaluation errors. Return ""badness"" of errors.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx:434,Usability,simpl,simple,434,"/// \cond ROOFIT_INTERNAL; /*; * Project: RooFit; * Authors:; * Jonas Rembser, CERN 2021; * Emmanouil Michalainas, CERN 2021; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file RooNLLVarNew.cxx; \class RooNLLVarNew; \ingroup Roofitcore. This is a simple class designed to produce the nll values needed by the fitter.; This class calls functions from `RooBatchCompute` library to provide faster; computation times.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVarNew.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx:49,Availability,avail,available,49,"// Declare constexpr static members to make them available if odr-used in C++14.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVarNew.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx:112,Integrability,depend,depends,112,"// Create the template histogram from the data. This operation is very; // expensive, but since the offset only depends on the observables it; // only has to be done once.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVarNew.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx:234,Modifiability,extend,extended,234,// namespace; /** Construct a RooNLLVarNew; \param name the name; \param title the title; \param pdf The pdf for which the nll is computed for; \param observables The observabes of the pdf; \param isExtended Set to true if this is an extended fit; **/,MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVarNew.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx:13,Testability,log,log,13,"// Calculate log(Poisson(N|mu) for this bin",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVarNew.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx:9,Availability,error,error,9,"// Catch error condition: data present where zero events are predicted",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVarNew.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx:61,Safety,predict,predicted,61,"// Catch error condition: data present where zero events are predicted",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVarNew.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx:118,Modifiability,variab,variables,118,"////////////////////////////////////////////////////////////////////////////////; /// Sets the prefix for the special variables of this NLL, like weights or bin; /// volumes.; /// \param[in] prefix The prefix to add to the observables and weight names.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVarNew.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx:86,Deployability,Toggle,Toggles,86,"////////////////////////////////////////////////////////////////////////////////; /// Toggles the weight square correction.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVarNew.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx:96,Testability,log,log,96,"// If part of simultaneous PDF normalize probability over; // number of simultaneous PDFs: -sum(log(p/n)) = -sum(log(p)) + N*log(n); // If we do bin-by bin offsetting, we don't do this because it cancels out",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVarNew.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx:113,Testability,log,log,113,"// If part of simultaneous PDF normalize probability over; // number of simultaneous PDFs: -sum(log(p/n)) = -sum(log(p)) + N*log(n); // If we do bin-by bin offsetting, we don't do this because it cancels out",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVarNew.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx:125,Testability,log,log,125,"// If part of simultaneous PDF normalize probability over; // number of simultaneous PDFs: -sum(log(p/n)) = -sum(log(p)) + N*log(n); // If we do bin-by bin offsetting, we don't do this because it cancels out",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVarNew.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx:51,Modifiability,variab,variable,51,"// Begin loop scope for the observables and weight variable. If the weight; // is a scalar, the context will ignore it for the loop scope. The closing; // brackets of the loop is written at the end of the scopes lifetime.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVarNew.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.h:28,Modifiability,variab,variables,28,"// The names for the weight variables that the RooNLLVarNew expects",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVarNew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.h:36,Availability,error,error,36,"/// Return default level for MINUIT error analysis.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVarNew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.h:28,Safety,avoid,avoid,28,"///<! Offset as KahanSum to avoid loss of precision",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNLLVarNew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormalizedPdf.cxx:56,Integrability,wrap,wraps,56,/**; * \class RooNormalizedPdf; *; * A RooNormalizedPdf wraps a pdf divided by its integral for a given; * normalization set into a new self-normalized pdf.; */,MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormalizedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormalizedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormalizedPdf.cxx:64,Availability,error,errors,64,"// We use the extraArgs as output parameter to count evaluation errors.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormalizedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormalizedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormalizedPdf.h:40,Deployability,integrat,integration,40,"/// Forward determination of analytical integration capabilities to input p.d.f",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormalizedPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormalizedPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormalizedPdf.h:40,Integrability,integrat,integration,40,"/// Forward determination of analytical integration capabilities to input p.d.f",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormalizedPdf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormalizedPdf.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:1145,Availability,fault,faulting,1145,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNormSetCache.cxx; \class RooNormSetCache; \ingroup Roofitcore. Class RooNormSet cache manage the bookkeeping of multiple instances; of sets of integration and normalization observables that effectively; have the same definition. In complex function expression many; RooArgSets with the same contents may be passed to an object that; caches intermediate results dependent on the normalization/integration set; To avoid unnecessary cache faulting, This class tracks all instances; with the same contents and reports to the owner if the present nset/iset; is truly different from the current reference. Class RooNormSet only; evaluates each RooArgSet pointer once, it therefore assumes that; RooArgSets with normalization and/or integration sets are not changes; during their lifetime.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:852,Deployability,integrat,integration,852,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNormSetCache.cxx; \class RooNormSetCache; \ingroup Roofitcore. Class RooNormSet cache manage the bookkeeping of multiple instances; of sets of integration and normalization observables that effectively; have the same definition. In complex function expression many; RooArgSets with the same contents may be passed to an object that; caches intermediate results dependent on the normalization/integration set; To avoid unnecessary cache faulting, This class tracks all instances; with the same contents and reports to the owner if the present nset/iset; is truly different from the current reference. Class RooNormSet only; evaluates each RooArgSet pointer once, it therefore assumes that; RooArgSets with normalization and/or integration sets are not changes; during their lifetime.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:1101,Deployability,integrat,integration,1101,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNormSetCache.cxx; \class RooNormSetCache; \ingroup Roofitcore. Class RooNormSet cache manage the bookkeeping of multiple instances; of sets of integration and normalization observables that effectively; have the same definition. In complex function expression many; RooArgSets with the same contents may be passed to an object that; caches intermediate results dependent on the normalization/integration set; To avoid unnecessary cache faulting, This class tracks all instances; with the same contents and reports to the owner if the present nset/iset; is truly different from the current reference. Class RooNormSet only; evaluates each RooArgSet pointer once, it therefore assumes that; RooArgSets with normalization and/or integration sets are not changes; during their lifetime.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:1435,Deployability,integrat,integration,1435,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNormSetCache.cxx; \class RooNormSetCache; \ingroup Roofitcore. Class RooNormSet cache manage the bookkeeping of multiple instances; of sets of integration and normalization observables that effectively; have the same definition. In complex function expression many; RooArgSets with the same contents may be passed to an object that; caches intermediate results dependent on the normalization/integration set; To avoid unnecessary cache faulting, This class tracks all instances; with the same contents and reports to the owner if the present nset/iset; is truly different from the current reference. Class RooNormSet only; evaluates each RooArgSet pointer once, it therefore assumes that; RooArgSets with normalization and/or integration sets are not changes; during their lifetime.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:852,Integrability,integrat,integration,852,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNormSetCache.cxx; \class RooNormSetCache; \ingroup Roofitcore. Class RooNormSet cache manage the bookkeeping of multiple instances; of sets of integration and normalization observables that effectively; have the same definition. In complex function expression many; RooArgSets with the same contents may be passed to an object that; caches intermediate results dependent on the normalization/integration set; To avoid unnecessary cache faulting, This class tracks all instances; with the same contents and reports to the owner if the present nset/iset; is truly different from the current reference. Class RooNormSet only; evaluates each RooArgSet pointer once, it therefore assumes that; RooArgSets with normalization and/or integration sets are not changes; during their lifetime.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:1070,Integrability,depend,dependent,1070,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNormSetCache.cxx; \class RooNormSetCache; \ingroup Roofitcore. Class RooNormSet cache manage the bookkeeping of multiple instances; of sets of integration and normalization observables that effectively; have the same definition. In complex function expression many; RooArgSets with the same contents may be passed to an object that; caches intermediate results dependent on the normalization/integration set; To avoid unnecessary cache faulting, This class tracks all instances; with the same contents and reports to the owner if the present nset/iset; is truly different from the current reference. Class RooNormSet only; evaluates each RooArgSet pointer once, it therefore assumes that; RooArgSets with normalization and/or integration sets are not changes; during their lifetime.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:1101,Integrability,integrat,integration,1101,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNormSetCache.cxx; \class RooNormSetCache; \ingroup Roofitcore. Class RooNormSet cache manage the bookkeeping of multiple instances; of sets of integration and normalization observables that effectively; have the same definition. In complex function expression many; RooArgSets with the same contents may be passed to an object that; caches intermediate results dependent on the normalization/integration set; To avoid unnecessary cache faulting, This class tracks all instances; with the same contents and reports to the owner if the present nset/iset; is truly different from the current reference. Class RooNormSet only; evaluates each RooArgSet pointer once, it therefore assumes that; RooArgSets with normalization and/or integration sets are not changes; during their lifetime.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:1435,Integrability,integrat,integration,1435,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNormSetCache.cxx; \class RooNormSetCache; \ingroup Roofitcore. Class RooNormSet cache manage the bookkeeping of multiple instances; of sets of integration and normalization observables that effectively; have the same definition. In complex function expression many; RooArgSets with the same contents may be passed to an object that; caches intermediate results dependent on the normalization/integration set; To avoid unnecessary cache faulting, This class tracks all instances; with the same contents and reports to the owner if the present nset/iset; is truly different from the current reference. Class RooNormSet only; evaluates each RooArgSet pointer once, it therefore assumes that; RooArgSets with normalization and/or integration sets are not changes; during their lifetime.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:789,Performance,cache,cache,789,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNormSetCache.cxx; \class RooNormSetCache; \ingroup Roofitcore. Class RooNormSet cache manage the bookkeeping of multiple instances; of sets of integration and normalization observables that effectively; have the same definition. In complex function expression many; RooArgSets with the same contents may be passed to an object that; caches intermediate results dependent on the normalization/integration set; To avoid unnecessary cache faulting, This class tracks all instances; with the same contents and reports to the owner if the present nset/iset; is truly different from the current reference. Class RooNormSet only; evaluates each RooArgSet pointer once, it therefore assumes that; RooArgSets with normalization and/or integration sets are not changes; during their lifetime.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:1042,Performance,cache,caches,1042,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNormSetCache.cxx; \class RooNormSetCache; \ingroup Roofitcore. Class RooNormSet cache manage the bookkeeping of multiple instances; of sets of integration and normalization observables that effectively; have the same definition. In complex function expression many; RooArgSets with the same contents may be passed to an object that; caches intermediate results dependent on the normalization/integration set; To avoid unnecessary cache faulting, This class tracks all instances; with the same contents and reports to the owner if the present nset/iset; is truly different from the current reference. Class RooNormSet only; evaluates each RooArgSet pointer once, it therefore assumes that; RooArgSets with normalization and/or integration sets are not changes; during their lifetime.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:1139,Performance,cache,cache,1139,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNormSetCache.cxx; \class RooNormSetCache; \ingroup Roofitcore. Class RooNormSet cache manage the bookkeeping of multiple instances; of sets of integration and normalization observables that effectively; have the same definition. In complex function expression many; RooArgSets with the same contents may be passed to an object that; caches intermediate results dependent on the normalization/integration set; To avoid unnecessary cache faulting, This class tracks all instances; with the same contents and reports to the owner if the present nset/iset; is truly different from the current reference. Class RooNormSet only; evaluates each RooArgSet pointer once, it therefore assumes that; RooArgSets with normalization and/or integration sets are not changes; during their lifetime.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:1121,Safety,avoid,avoid,1121,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNormSetCache.cxx; \class RooNormSetCache; \ingroup Roofitcore. Class RooNormSet cache manage the bookkeeping of multiple instances; of sets of integration and normalization observables that effectively; have the same definition. In complex function expression many; RooArgSets with the same contents may be passed to an object that; caches intermediate results dependent on the normalization/integration set; To avoid unnecessary cache faulting, This class tracks all instances; with the same contents and reports to the owner if the present nset/iset; is truly different from the current reference. Class RooNormSet only; evaluates each RooArgSet pointer once, it therefore assumes that; RooArgSets with normalization and/or integration sets are not changes; during their lifetime.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear contents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:10,Performance,cache,cache,10,"// if the cache grew too large, start replacing in a round-robin fashion",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:290,Deployability,update,update,290,"////////////////////////////////////////////////////////////////////////////////; /// If RooArgSets set1 and set2 or sets with similar contents have; /// been seen by this cache manager before return `false` If not,; /// return `true`. If sets have not been seen and doRefill is true,; /// update cache reference to current input sets.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:172,Performance,cache,cache,172,"////////////////////////////////////////////////////////////////////////////////; /// If RooArgSets set1 and set2 or sets with similar contents have; /// been seen by this cache manager before return `false` If not,; /// return `true`. If sets have not been seen and doRefill is true,; /// update cache reference to current input sets.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:297,Performance,cache,cache,297,"////////////////////////////////////////////////////////////////////////////////; /// If RooArgSets set1 and set2 or sets with similar contents have; /// been seen by this cache manager before return `false` If not,; /// return `true`. If sets have not been seen and doRefill is true,; /// update cache reference to current input sets.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:13,Performance,cache,cache,13,"// Automated cache management function - Returns `true` if cache is invalidated; // A - Check if set1/2 are in cache and range name is identical",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:59,Performance,cache,cache,59,"// Automated cache management function - Returns `true` if cache is invalidated; // A - Check if set1/2 are in cache and range name is identical",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:111,Performance,cache,cache,111,"// Automated cache management function - Returns `true` if cache is invalidated; // A - Check if set1/2 are in cache and range name is identical",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:16,Integrability,depend,dependents,16,"// B - Check if dependents(set1/set2) are compatible with current cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:66,Performance,cache,cache,66,"// B - Check if dependents(set1/set2) are compatible with current cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:38,Performance,cache,cache,38,"// Compatible - Add current set1/2 to cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx:13,Performance,cache,cache,13,"// C - Reset cache and refill with current state",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNormSetCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNormSetCache.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumCdf.cxx:91,Performance,cache,cache,91,"////////////////////////////////////////////////////////////////////////////////; /// Fill cache using running integral cache elements calculate(); /// method with specification of cdf-specific boundary conditions",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumCdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumCdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumCdf.cxx:120,Performance,cache,cache,120,"////////////////////////////////////////////////////////////////////////////////; /// Fill cache using running integral cache elements calculate(); /// method with specification of cdf-specific boundary conditions",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumCdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumCdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1093,Availability,avail,available,1093,"**************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvolution.cxx; \class RooNumConvolution; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1429,Availability,robust,robust,1429,"ford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvolution.cxx; \class RooNumConvolution; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases wi",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1310,Deployability,integrat,integration,1310,"ford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvolution.cxx; \class RooNumConvolution; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases wi",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1485,Deployability,integrat,integration,1485,"/license.txt) *; *****************************************************************************/; /**; \file RooNumConvolution.cxx; \class RooNumConvolution; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1636,Deployability,integrat,integrated,1636,"/license.txt) *; *****************************************************************************/; /**; \file RooNumConvolution.cxx; \class RooNumConvolution; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1864,Deployability,integrat,integration,1864,"class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls tha",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:2543,Deployability,integrat,integration,2543,"ly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls that MINUIT needs to fit your function as function of the; convolution precision.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:2690,Deployability,integrat,integration,2690,"ly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls that MINUIT needs to fit your function as function of the; convolution precision.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1365,Energy Efficiency,adapt,adaptive,1365,"ford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvolution.cxx; \class RooNumConvolution; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases wi",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1829,Energy Efficiency,consumption,consumption,1829,"class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls tha",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1229,Integrability,depend,depend,1229,"Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvolution.cxx; \class RooNumConvolution; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects alt",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1310,Integrability,integrat,integration,1310,"ford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvolution.cxx; \class RooNumConvolution; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases wi",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1485,Integrability,integrat,integration,1485,"/license.txt) *; *****************************************************************************/; /**; \file RooNumConvolution.cxx; \class RooNumConvolution; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1636,Integrability,integrat,integrated,1636,"/license.txt) *; *****************************************************************************/; /**; \file RooNumConvolution.cxx; \class RooNumConvolution; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1864,Integrability,integrat,integration,1864,"class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls tha",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:2543,Integrability,integrat,integration,2543,"ly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls that MINUIT needs to fit your function as function of the; convolution precision.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:2690,Integrability,integrat,integration,2690,"ly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls that MINUIT needs to fit your function as function of the; convolution precision.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1365,Modifiability,adapt,adaptive,1365,"ford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvolution.cxx; \class RooNumConvolution; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases wi",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:206,Integrability,depend,depend,206,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of convolution operator PDF; ///; /// convVar : convolution variable (on which both pdf and resmodel should depend); /// pdf : input 'physics' pdf; /// resmodel : input 'resolution' pdf; ///; /// output is pdf(x) (X) resmodel(x) = Int [ pdf(x') resmodel (x-x') ] dx'; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:158,Modifiability,variab,variable,158,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of convolution operator PDF; ///; /// convVar : convolution variable (on which both pdf and resmodel should depend); /// pdf : input 'physics' pdf; /// resmodel : input 'resolution' pdf; ///; /// output is pdf(x) (X) resmodel(x) = Int [ pdf(x') resmodel (x-x') ] dx'; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:30,Deployability,integrat,integration,30,"// Use Adaptive Gauss-Kronrod integration by default for the convolution integral",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:7,Energy Efficiency,Adapt,Adaptive,7,"// Use Adaptive Gauss-Kronrod integration by default for the convolution integral",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:30,Integrability,integrat,integration,30,"// Use Adaptive Gauss-Kronrod integration by default for the convolution integral",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:7,Modifiability,Adapt,Adaptive,7,"// Use Adaptive Gauss-Kronrod integration by default for the convolution integral",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:15,Deployability,integrat,integrator,15,"// Instantiate integrator for convolution integrand",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:15,Integrability,integrat,integrator,15,"// Instantiate integrator for convolution integrand",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:41,Modifiability,variab,variable,41,"// Retrieve current value of convolution variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:22,Deployability,integrat,integration,22,"// Adjust convolution integration window",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:22,Integrability,integrat,integration,22,"// Adjust convolution integration window",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:125,Performance,cache,cache,125,"////////////////////////////////////////////////////////////////////////////////; /// Intercept server redirects. Throw away cache, as figuring out redirections on the cache is an unsolvable problem.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:168,Performance,cache,cache,168,"////////////////////////////////////////////////////////////////////////////////; /// Intercept server redirects. Throw away cache, as figuring out redirections on the cache is an unsolvable problem.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:206,Modifiability,variab,variablem,206,"////////////////////////////////////////////////////////////////////////////////; /// Restrict convolution integral to finite range [ x - C - S*W, x - C + S*W ]; /// where x is current value of convolution variablem, C = centerParam, W=widthParam and S = widthScaleFactor; /// Inputs centerParam and withParam can be function expressions (RooAbsReal, RooFormulaVar) etc.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:103,Integrability,message,messages,103,"////////////////////////////////////////////////////////////////////////////////; /// Activate warning messages if number of function calls needed for evaluation of convolution integral; /// exceeds given threshold",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:250,Modifiability,variab,variable,250,"////////////////////////////////////////////////////////////////////////////////; /// Activate call profile if flag is set to true. A 2-D histogram is kept that stores the required number; /// of function calls versus the value of x, the convolution variable; ///; /// All clones of RooNumConvolution objects will keep logging to the histogram of the original class; /// so that performance of temporary object clones, such as used in e.g. fitting, plotting and generating; /// are all logged in a single place.; ///; /// Function caller should take ownership of profiling histogram as it is not deleted at the RooNumConvolution dtor; ///; /// Calling this function with flag set to false will deactivate call profiling and delete the profiling histogram",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:379,Performance,perform,performance,379,"////////////////////////////////////////////////////////////////////////////////; /// Activate call profile if flag is set to true. A 2-D histogram is kept that stores the required number; /// of function calls versus the value of x, the convolution variable; ///; /// All clones of RooNumConvolution objects will keep logging to the histogram of the original class; /// so that performance of temporary object clones, such as used in e.g. fitting, plotting and generating; /// are all logged in a single place.; ///; /// Function caller should take ownership of profiling histogram as it is not deleted at the RooNumConvolution dtor; ///; /// Calling this function with flag set to false will deactivate call profiling and delete the profiling histogram",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:319,Testability,log,logging,319,"////////////////////////////////////////////////////////////////////////////////; /// Activate call profile if flag is set to true. A 2-D histogram is kept that stores the required number; /// of function calls versus the value of x, the convolution variable; ///; /// All clones of RooNumConvolution objects will keep logging to the histogram of the original class; /// so that performance of temporary object clones, such as used in e.g. fitting, plotting and generating; /// are all logged in a single place.; ///; /// Function caller should take ownership of profiling histogram as it is not deleted at the RooNumConvolution dtor; ///; /// Calling this function with flag set to false will deactivate call profiling and delete the profiling histogram",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:486,Testability,log,logged,486,"////////////////////////////////////////////////////////////////////////////////; /// Activate call profile if flag is set to true. A 2-D histogram is kept that stores the required number; /// of function calls versus the value of x, the convolution variable; ///; /// All clones of RooNumConvolution objects will keep logging to the histogram of the original class; /// so that performance of temporary object clones, such as used in e.g. fitting, plotting and generating; /// are all logged in a single place.; ///; /// Function caller should take ownership of profiling histogram as it is not deleted at the RooNumConvolution dtor; ///; /// Calling this function with flag set to false will deactivate call profiling and delete the profiling histogram",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:195,Performance,cache,cache,195,"////////////////////////////////////////////////////////////////////////////////; /// Hook function to intercept printCompactTree() calls so that it can print out; /// the content of its private cache in the print sequence",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvolution.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:1591,Availability,robust,robust,1591,"the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvPdf.cxx; \class RooNumConvPdf; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF using a straightforward numeric calculation of the; convolution integral; This class should be used as last resort as numeric convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases wi",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:1472,Deployability,integrat,integration,1472,"the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvPdf.cxx; \class RooNumConvPdf; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF using a straightforward numeric calculation of the; convolution integral; This class should be used as last resort as numeric convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases wi",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:1647,Deployability,integrat,integration,1647,"itcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF using a straightforward numeric calculation of the; convolution integral; This class should be used as last resort as numeric convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:1798,Deployability,integrat,integrated,1798,"itcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF using a straightforward numeric calculation of the; convolution integral; This class should be used as last resort as numeric convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:2026,Deployability,integrat,integration,2026,"ic convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls tha",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:2705,Deployability,integrat,integration,2705,"lity fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls that MINUIT needs to fit your function as function of the; convolution precision.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:2852,Deployability,integrat,integration,2852,"lity fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls that MINUIT needs to fit your function as function of the; convolution precision.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:1527,Energy Efficiency,adapt,adaptive,1527,"the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvPdf.cxx; \class RooNumConvPdf; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF using a straightforward numeric calculation of the; convolution integral; This class should be used as last resort as numeric convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases wi",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:1991,Energy Efficiency,consumption,consumption,1991,"ic convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls tha",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:1390,Integrability,depend,depend,1390,"@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvPdf.cxx; \class RooNumConvPdf; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF using a straightforward numeric calculation of the; convolution integral; This class should be used as last resort as numeric convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:1472,Integrability,integrat,integration,1472,"the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvPdf.cxx; \class RooNumConvPdf; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF using a straightforward numeric calculation of the; convolution integral; This class should be used as last resort as numeric convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases wi",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:1647,Integrability,integrat,integration,1647,"itcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF using a straightforward numeric calculation of the; convolution integral; This class should be used as last resort as numeric convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:1798,Integrability,integrat,integrated,1798,"itcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF using a straightforward numeric calculation of the; convolution integral; This class should be used as last resort as numeric convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:2026,Integrability,integrat,integration,2026,"ic convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls tha",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:2705,Integrability,integrat,integration,2705,"lity fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls that MINUIT needs to fit your function as function of the; convolution precision.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:2852,Integrability,integrat,integration,2852,"lity fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls that MINUIT needs to fit your function as function of the; convolution precision.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:1527,Modifiability,adapt,adaptive,1527,"the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvPdf.cxx; \class RooNumConvPdf; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF using a straightforward numeric calculation of the; convolution integral; This class should be used as last resort as numeric convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases wi",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:121,Integrability,depend,depend,121,"// Constructor of convolution operator PDF; //; // convVar : convolution variable (on which both pdf and resmodel should depend); // pdf : input 'physics' pdf; // resmodel : input 'resolution' pdf; //; // output is pdf(x) (X) resmodel(x) = Int [ pdf(x') resmodel (x-x') ] dx'; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:73,Modifiability,variab,variable,73,"// Constructor of convolution operator PDF; //; // convVar : convolution variable (on which both pdf and resmodel should depend); // pdf : input 'physics' pdf; // resmodel : input 'resolution' pdf; //; // output is pdf(x) (X) resmodel(x) = Int [ pdf(x') resmodel (x-x') ] dx'; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:60,Deployability,configurat,configuration,60,"// Make temporary clone of original convolution to preserve configuration information; // This information will be propagated to a newly create convolution in a subsequent; // call to initialize()",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:60,Modifiability,config,configuration,60,"// Make temporary clone of original convolution to preserve configuration information; // This information will be propagated to a newly create convolution in a subsequent; // call to initialize()",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:25,Deployability,configurat,configuration,25,"// Optionally pass along configuration data from prototype object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:25,Modifiability,config,configuration,25,"// Optionally pass along configuration data from prototype object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:226,Performance,optimiz,optimization,226,"////////////////////////////////////////////////////////////////////////////////; /// Return appropriate generator context for this convolved p.d.f. If both pdf and resolution; /// model support internal generation return and optimization convolution generation context; /// that uses a smearing algorithm. Otherwise return a standard accept/reject sampling; /// context on the convoluted shape.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:88,Modifiability,variab,variable,88,"// Check if physics PDF and resolution model can both directly generate the convolution variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:34,Integrability,depend,dependents,34,"// Any resolution model with more dependents than the convolution variable; // or pdf or resmodel do not support direct generation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:66,Modifiability,variab,variable,66,"// Any resolution model with more dependents than the convolution variable; // or pdf or resmodel do not support direct generation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:146,Usability,intuit,intuitively,146,"////////////////////////////////////////////////////////////////////////////////; /// Customized printing of arguments of a RooNumConvPdf to more intuitively reflect the contents of the; /// product operator construction",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumConvPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:782,Deployability,configurat,configuration,782,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenConfig.cxx; \class RooNumGenConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:831,Deployability,integrat,integrators,831,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenConfig.cxx; \class RooNumGenConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:946,Deployability,configurat,configuration,946,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenConfig.cxx; \class RooNumGenConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:831,Integrability,integrat,integrators,831,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenConfig.cxx; \class RooNumGenConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:960,Integrability,interface,interface,960,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenConfig.cxx; \class RooNumGenConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:782,Modifiability,config,configuration,782,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenConfig.cxx; \class RooNumGenConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:946,Modifiability,config,configuration,946,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenConfig.cxx; \class RooNumGenConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:134,Deployability,integrat,integrator,134,"////////////////////////////////////////////////////////////////////////////////; /// Return reference to instance of default numeric integrator configuration object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:145,Deployability,configurat,configuration,145,"////////////////////////////////////////////////////////////////////////////////; /// Return reference to instance of default numeric integrator configuration object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:134,Integrability,integrat,integrator,134,"////////////////////////////////////////////////////////////////////////////////; /// Return reference to instance of default numeric integrator configuration object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:145,Modifiability,config,configuration,145,"////////////////////////////////////////////////////////////////////////////////; /// Return reference to instance of default numeric integrator configuration object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:132,Deployability,integrat,integrator,132,"// Set all methods to undefined; // Defined methods will be registered by static initialization routines; // of the various numeric integrator engines",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:96,Integrability,rout,routines,96,"// Set all methods to undefined; // Defined methods will be registered by static initialization routines; // of the various numeric integrator engines",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:132,Integrability,integrat,integrator,132,"// Set all methods to undefined; // Defined methods will be registered by static initialization routines; // of the various numeric integrator engines",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:14,Deployability,configurat,configuration,14,"// Delete all configuration data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:14,Modifiability,config,configuration,14,"// Delete all configuration data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:13,Deployability,configurat,configuration,13,"// Clone all configuration dat",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:13,Modifiability,config,configuration,13,"// Clone all configuration dat",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:14,Deployability,integrat,integrator-specific,14,"// Delete old integrator-specific configuration data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:34,Deployability,configurat,configuration,34,"// Delete old integrator-specific configuration data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:14,Integrability,integrat,integrator-specific,14,"// Delete old integrator-specific configuration data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:34,Modifiability,config,configuration,34,"// Delete old integrator-specific configuration data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:12,Deployability,integrat,integrator-specific,12,"// Copy new integrator-specific data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:12,Integrability,integrat,integrator-specific,12,"// Copy new integrator-specific data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:92,Deployability,configurat,configuration,92,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:131,Deployability,integrat,integrator,131,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:143,Deployability,Integrat,Integrator,143,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:302,Deployability,configurat,configuration,302,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:324,Deployability,integrat,integrator,324,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:131,Integrability,integrat,integrator,131,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:143,Integrability,Integrat,Integrator,143,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:324,Integrability,integrat,integrator,324,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:92,Modifiability,config,configuration,92,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:302,Modifiability,config,configuration,302,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:12,Deployability,integrat,integrator,12,"// Register integrator for appropriate dimensionalities",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:12,Integrability,integrat,integrator,12,"// Register integrator for appropriate dimensionalities",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:17,Deployability,configurat,configuration,17,"// Store default configuration parameters",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:17,Modifiability,config,configuration,17,"// Store default configuration parameters",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:106,Deployability,configurat,configuration,106,"////////////////////////////////////////////////////////////////////////////////; /// Return section with configuration parameters for integrator with given (class) name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:135,Deployability,integrat,integrator,135,"////////////////////////////////////////////////////////////////////////////////; /// Return section with configuration parameters for integrator with given (class) name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:135,Integrability,integrat,integrator,135,"////////////////////////////////////////////////////////////////////////////////; /// Return section with configuration parameters for integrator with given (class) name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:106,Modifiability,config,configuration,106,"////////////////////////////////////////////////////////////////////////////////; /// Return section with configuration parameters for integrator with given (class) name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:95,Deployability,configurat,configuration,95,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve configuration information specific to integrator with given name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:133,Deployability,integrat,integrator,133,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve configuration information specific to integrator with given name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:133,Integrability,integrat,integrator,133,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve configuration information specific to integrator with given name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:95,Modifiability,config,configuration,95,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve configuration information specific to integrator with given name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:104,Integrability,interface,interface,104,"////////////////////////////////////////////////////////////////////////////////; /// Detailed printing interface",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:806,Deployability,integrat,integrators,806,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:861,Deployability,configurat,configuration,861,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:912,Deployability,integrat,integrator,912,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:996,Deployability,integrat,integration,996,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:1070,Deployability,integrat,integrated,1070,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:1101,Deployability,integrat,integration,1101,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:1195,Deployability,configurat,configuration,1195,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:806,Integrability,integrat,integrators,806,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:912,Integrability,integrat,integrator,912,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:996,Integrability,integrat,integration,996,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:1035,Integrability,depend,depend,1035,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:1070,Integrability,integrat,integrated,1070,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:1101,Integrability,integrat,integration,1101,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:861,Modifiability,config,configuration,861,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:1195,Modifiability,config,configuration,1195,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:976,Performance,perform,perform,976,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:118,Deployability,integrat,integrators,118,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. Register all known integrators by calling; /// their static registration functions",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:118,Integrability,integrat,integrators,118,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. Register all known integrators by calling; /// their static registration functions",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:139,Deployability,integrat,integrator,139,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:193,Deployability,configurat,configuration,193,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:262,Deployability,integrat,integrators,262,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:293,Deployability,integrat,integrator,293,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:329,Deployability,integrat,integrator,329,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:139,Integrability,integrat,integrator,139,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:262,Integrability,integrat,integrators,262,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:293,Integrability,integrat,integrator,293,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:304,Integrability,depend,depends,304,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:329,Integrability,integrat,integrator,329,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:193,Modifiability,config,configuration,193,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:44,Availability,ERROR,ERROR,44,"//cout << ""RooNumGenFactory::storeSampler() ERROR: integrator '"" << name << ""' already registered"" << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:51,Deployability,integrat,integrator,51,"//cout << ""RooNumGenFactory::storeSampler() ERROR: integrator '"" << name << ""' already registered"" << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:51,Integrability,integrat,integrator,51,"//cout << ""RooNumGenFactory::storeSampler() ERROR: integrator '"" << name << ""' already registered"" << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:15,Modifiability,config,config,15,"// Add default config to master config",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:32,Modifiability,config,config,32,"// Add default config to master config",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:103,Deployability,integrat,integrator,103,"////////////////////////////////////////////////////////////////////////////////; /// Return prototype integrator with given (class) name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:103,Integrability,integrat,integrator,103,"////////////////////////////////////////////////////////////////////////////////; /// Return prototype integrator with given (class) name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:379,Availability,avail,available,379,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:106,Deployability,integrat,integrator,106,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:287,Deployability,integrat,integration,287,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:399,Deployability,integrat,integrators,399,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:536,Deployability,integrat,integration,536,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:106,Integrability,integrat,integrator,106,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:287,Integrability,integrat,integration,287,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:399,Integrability,integrat,integrators,399,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:536,Integrability,integrat,integration,536,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:166,Modifiability,config,configured,166,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:188,Modifiability,config,config,188,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:679,Modifiability,config,config,679,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:23,Deployability,configurat,configuration,23,"// Find method defined configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:23,Modifiability,config,configuration,23,"// Find method defined configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:18,Deployability,integrat,integrator,18,"// Retrieve proto integrator and return clone configured for the requested integration task",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:75,Deployability,integrat,integration,75,"// Retrieve proto integrator and return clone configured for the requested integration task",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:18,Integrability,integrat,integrator,18,"// Retrieve proto integrator and return clone configured for the requested integration task",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:75,Integrability,integrat,integration,75,"// Retrieve proto integrator and return clone configured for the requested integration task",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:46,Modifiability,config,configured,46,"// Retrieve proto integrator and return clone configured for the requested integration task",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumGenFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:782,Deployability,configurat,configuration,782,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntConfig.cxx; \class RooNumIntConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:831,Deployability,integrat,integrators,831,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntConfig.cxx; \class RooNumIntConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:946,Deployability,configurat,configuration,946,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntConfig.cxx; \class RooNumIntConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:831,Integrability,integrat,integrators,831,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntConfig.cxx; \class RooNumIntConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:960,Integrability,interface,interface,960,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntConfig.cxx; \class RooNumIntConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:782,Modifiability,config,configuration,782,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntConfig.cxx; \class RooNumIntConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:946,Modifiability,config,configuration,946,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntConfig.cxx; \class RooNumIntConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:134,Deployability,integrat,integrator,134,"////////////////////////////////////////////////////////////////////////////////; /// Return reference to instance of default numeric integrator configuration object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:145,Deployability,configurat,configuration,145,"////////////////////////////////////////////////////////////////////////////////; /// Return reference to instance of default numeric integrator configuration object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:134,Integrability,integrat,integrator,134,"////////////////////////////////////////////////////////////////////////////////; /// Return reference to instance of default numeric integrator configuration object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:145,Modifiability,config,configuration,145,"////////////////////////////////////////////////////////////////////////////////; /// Return reference to instance of default numeric integrator configuration object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:132,Deployability,integrat,integrator,132,"// Set all methods to undefined; // Defined methods will be registered by static initialization routines; // of the various numeric integrator engines",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:96,Integrability,rout,routines,96,"// Set all methods to undefined; // Defined methods will be registered by static initialization routines; // of the various numeric integrator engines",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:132,Integrability,integrat,integrator,132,"// Set all methods to undefined; // Defined methods will be registered by static initialization routines; // of the various numeric integrator engines",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:14,Deployability,configurat,configuration,14,"// Delete all configuration data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:14,Modifiability,config,configuration,14,"// Delete all configuration data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:13,Deployability,configurat,configuration,13,"// Clone all configuration dat",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:13,Modifiability,config,configuration,13,"// Clone all configuration dat",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:14,Deployability,integrat,integrator-specific,14,"// Delete old integrator-specific configuration data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:34,Deployability,configurat,configuration,34,"// Delete old integrator-specific configuration data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:14,Integrability,integrat,integrator-specific,14,"// Delete old integrator-specific configuration data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:34,Modifiability,config,configuration,34,"// Delete old integrator-specific configuration data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:12,Deployability,integrat,integrator-specific,12,"// Copy new integrator-specific data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:12,Integrability,integrat,integrator-specific,12,"// Copy new integrator-specific data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:92,Deployability,configurat,configuration,92,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:131,Deployability,integrat,integrator,131,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:143,Deployability,Integrat,Integrator,143,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:302,Deployability,configurat,configuration,302,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:324,Deployability,integrat,integrator,324,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:131,Integrability,integrat,integrator,131,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:143,Integrability,Integrat,Integrator,143,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:324,Integrability,integrat,integrator,324,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:92,Modifiability,config,configuration,92,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:302,Modifiability,config,configuration,302,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:12,Deployability,integrat,integrator,12,"// Register integrator for appropriate dimensionalities",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:12,Integrability,integrat,integrator,12,"// Register integrator for appropriate dimensionalities",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:17,Deployability,configurat,configuration,17,"// Store default configuration parameters",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:17,Modifiability,config,configuration,17,"// Store default configuration parameters",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:106,Deployability,configurat,configuration,106,"////////////////////////////////////////////////////////////////////////////////; /// Return section with configuration parameters for integrator with given (class) name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:135,Deployability,integrat,integrator,135,"////////////////////////////////////////////////////////////////////////////////; /// Return section with configuration parameters for integrator with given (class) name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:135,Integrability,integrat,integrator,135,"////////////////////////////////////////////////////////////////////////////////; /// Return section with configuration parameters for integrator with given (class) name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:106,Modifiability,config,configuration,106,"////////////////////////////////////////////////////////////////////////////////; /// Return section with configuration parameters for integrator with given (class) name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:95,Deployability,configurat,configuration,95,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve configuration information specific to integrator with given name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:133,Deployability,integrat,integrator,133,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve configuration information specific to integrator with given name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:133,Integrability,integrat,integrator,133,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve configuration information specific to integrator with given name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:95,Modifiability,config,configuration,95,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve configuration information specific to integrator with given name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:104,Integrability,interface,interface,104,"////////////////////////////////////////////////////////////////////////////////; /// Detailed printing interface",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:2,Modifiability,config,configSet,2,"//configSet->writeToStream(os,false) ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntConfig.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:806,Deployability,integrat,integrators,806,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:861,Deployability,configurat,configuration,861,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:912,Deployability,integrat,integrator,912,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:996,Deployability,integrat,integration,996,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:1070,Deployability,integrat,integrated,1070,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:1101,Deployability,integrat,integration,1101,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:1195,Deployability,configurat,configuration,1195,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:806,Integrability,integrat,integrators,806,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:912,Integrability,integrat,integrator,912,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:996,Integrability,integrat,integration,996,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:1035,Integrability,depend,depend,1035,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:1070,Integrability,integrat,integrated,1070,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:1101,Integrability,integrat,integration,1101,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:861,Modifiability,config,configuration,861,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:1195,Modifiability,config,configuration,1195,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:976,Performance,perform,perform,976,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:105,Deployability,integrat,integrators,105,"////////////////////////////////////////////////////////////////////////////////; /// Register all known integrators by calling; /// their static registration functions",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:105,Integrability,integrat,integrators,105,"////////////////////////////////////////////////////////////////////////////////; /// Register all known integrators by calling; /// their static registration functions",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:7,Deployability,integrat,integrator,7,"// GSL integrator is now in RooFitMore and it register itself; //RooAdaptiveGaussKronrodIntegrator1D::registerIntegrator(*this) ;; //RooGaussKronrodIntegrator1D::registerIntegrator(*this) ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:7,Integrability,integrat,integrator,7,"// GSL integrator is now in RooFitMore and it register itself; //RooAdaptiveGaussKronrodIntegrator1D::registerIntegrator(*this) ;; //RooGaussKronrodIntegrator1D::registerIntegrator(*this) ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:12,Availability,avail,available,12,"//if GSL is available load (and register GSL integrator)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:45,Deployability,integrat,integrator,45,"//if GSL is available load (and register GSL integrator)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:45,Integrability,integrat,integrator,45,"//if GSL is available load (and register GSL integrator)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:22,Performance,load,load,22,"//if GSL is available load (and register GSL integrator)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:139,Deployability,integrat,integrator,139,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:193,Deployability,configurat,configuration,193,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:262,Deployability,integrat,integrators,262,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:293,Deployability,integrat,integrator,293,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:329,Deployability,integrat,integrator,329,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:139,Integrability,integrat,integrator,139,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:262,Integrability,integrat,integrators,262,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:293,Integrability,integrat,integrator,293,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:304,Integrability,depend,depends,304,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:329,Integrability,integrat,integrator,329,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:193,Modifiability,config,configuration,193,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:47,Availability,ERROR,ERROR,47,"//cout << ""RooNumIntFactory::storeIntegrator() ERROR: integrator '"" << name << ""' already registered"" << std::endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:54,Deployability,integrat,integrator,54,"//cout << ""RooNumIntFactory::storeIntegrator() ERROR: integrator '"" << name << ""' already registered"" << std::endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:54,Integrability,integrat,integrator,54,"//cout << ""RooNumIntFactory::storeIntegrator() ERROR: integrator '"" << name << ""' already registered"" << std::endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:15,Modifiability,config,config,15,"// Add default config to master config",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:32,Modifiability,config,config,32,"// Add default config to master config",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:23,Deployability,configurat,configuration,23,"// Find method defined configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:23,Modifiability,config,configuration,23,"// Find method defined configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:66,Deployability,integrat,integrator,66,"// If distribution is binned and not open-ended override with bin integrator",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:66,Integrability,integrat,integrator,66,"// If distribution is binned and not open-ended override with bin integrator",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:379,Availability,avail,available,379,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:106,Deployability,integrat,integrator,106,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:287,Deployability,integrat,integration,287,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:399,Deployability,integrat,integrators,399,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:536,Deployability,integrat,integration,536,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:106,Integrability,integrat,integrator,106,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:287,Integrability,integrat,integration,287,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:399,Integrability,integrat,integrators,399,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:536,Integrability,integrat,integration,536,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:166,Modifiability,config,configured,166,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:188,Modifiability,config,config,188,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:679,Modifiability,config,config,679,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:18,Deployability,integrat,integrator,18,"// Retrieve proto integrator and return clone configured for the requested integration task",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:75,Deployability,integrat,integration,75,"// Retrieve proto integrator and return clone configured for the requested integration task",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:18,Integrability,integrat,integrator,18,"// Retrieve proto integrator and return clone configured for the requested integration task",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:75,Integrability,integrat,integration,75,"// Retrieve proto integrator and return clone configured for the requested integration task",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:46,Modifiability,config,configured,46,"// Retrieve proto integrator and return clone configured for the requested integration task",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumIntFactory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:840,Deployability,integrat,integrated,840,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumRunningInt.cxx; \class RooNumRunningInt; \ingroup Roofitcore. Implementation of RooAbsCachedReal that represents a running integral; \f[ RI(f(x)) = \int_{xlow}^{x} f(x') dx' \f]; that is calculated internally with a numeric technique: The input function; is first sampled into a histogram, which is then numerically integrated.; The output function is an interpolated version of the integrated histogram.; The sampling density is controlled by the binning named ""cache"" in the observable x.; The shape of the p.d.f is always calculated for the entire domain in x and; cached in a histogram. The cache histogram is automatically recalculated; when any of the parameters of the input p.d.f. has changed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:907,Deployability,integrat,integrated,907,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumRunningInt.cxx; \class RooNumRunningInt; \ingroup Roofitcore. Implementation of RooAbsCachedReal that represents a running integral; \f[ RI(f(x)) = \int_{xlow}^{x} f(x') dx' \f]; that is calculated internally with a numeric technique: The input function; is first sampled into a histogram, which is then numerically integrated.; The output function is an interpolated version of the integrated histogram.; The sampling density is controlled by the binning named ""cache"" in the observable x.; The shape of the p.d.f is always calculated for the entire domain in x and; cached in a histogram. The cache histogram is automatically recalculated; when any of the parameters of the input p.d.f. has changed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:840,Integrability,integrat,integrated,840,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumRunningInt.cxx; \class RooNumRunningInt; \ingroup Roofitcore. Implementation of RooAbsCachedReal that represents a running integral; \f[ RI(f(x)) = \int_{xlow}^{x} f(x') dx' \f]; that is calculated internally with a numeric technique: The input function; is first sampled into a histogram, which is then numerically integrated.; The output function is an interpolated version of the integrated histogram.; The sampling density is controlled by the binning named ""cache"" in the observable x.; The shape of the p.d.f is always calculated for the entire domain in x and; cached in a histogram. The cache histogram is automatically recalculated; when any of the parameters of the input p.d.f. has changed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:907,Integrability,integrat,integrated,907,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumRunningInt.cxx; \class RooNumRunningInt; \ingroup Roofitcore. Implementation of RooAbsCachedReal that represents a running integral; \f[ RI(f(x)) = \int_{xlow}^{x} f(x') dx' \f]; that is calculated internally with a numeric technique: The input function; is first sampled into a histogram, which is then numerically integrated.; The output function is an interpolated version of the integrated histogram.; The sampling density is controlled by the binning named ""cache"" in the observable x.; The shape of the p.d.f is always calculated for the entire domain in x and; cached in a histogram. The cache histogram is automatically recalculated; when any of the parameters of the input p.d.f. has changed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:987,Performance,cache,cache,987,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumRunningInt.cxx; \class RooNumRunningInt; \ingroup Roofitcore. Implementation of RooAbsCachedReal that represents a running integral; \f[ RI(f(x)) = \int_{xlow}^{x} f(x') dx' \f]; that is calculated internally with a numeric technique: The input function; is first sampled into a histogram, which is then numerically integrated.; The output function is an interpolated version of the integrated histogram.; The sampling density is controlled by the binning named ""cache"" in the observable x.; The shape of the p.d.f is always calculated for the entire domain in x and; cached in a histogram. The cache histogram is automatically recalculated; when any of the parameters of the input p.d.f. has changed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:1092,Performance,cache,cached,1092,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumRunningInt.cxx; \class RooNumRunningInt; \ingroup Roofitcore. Implementation of RooAbsCachedReal that represents a running integral; \f[ RI(f(x)) = \int_{xlow}^{x} f(x') dx' \f]; that is calculated internally with a numeric technique: The input function; is first sampled into a histogram, which is then numerically integrated.; The output function is an interpolated version of the integrated histogram.; The sampling density is controlled by the binning named ""cache"" in the observable x.; The shape of the p.d.f is always calculated for the entire domain in x and; cached in a histogram. The cache histogram is automatically recalculated; when any of the parameters of the input p.d.f. has changed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:1119,Performance,cache,cache,1119,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumRunningInt.cxx; \class RooNumRunningInt; \ingroup Roofitcore. Implementation of RooAbsCachedReal that represents a running integral; \f[ RI(f(x)) = \int_{xlow}^{x} f(x') dx' \f]; that is calculated internally with a numeric technique: The input function; is first sampled into a histogram, which is then numerically integrated.; The output function is an interpolated version of the integrated histogram.; The sampling density is controlled by the binning named ""cache"" in the observable x.; The shape of the p.d.f is always calculated for the entire domain in x and; cached in a histogram. The cache histogram is automatically recalculated; when any of the parameters of the input p.d.f. has changed.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:125,Performance,cache,cache,125,"////////////////////////////////////////////////////////////////////////////////; /// Return unique name for RooAbsCachedPdf cache components; /// constructed from input function name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:112,Performance,Cache,CacheElement,112,"////////////////////////////////////////////////////////////////////////////////; /// Construct RunningIntegral CacheElement",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:131,Performance,cache,cache,131,"////////////////////////////////////////////////////////////////////////////////; /// Return all RooAbsArg components contained in cache element",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:158,Performance,cache,cache,158,"////////////////////////////////////////////////////////////////////////////////; /// Calculate the numeric running integral and store; /// the result in the cache histogram provided; /// by RooAbsCachedPdf",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:3,Deployability,Update,Update,3,"// Update contents of histogram",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:19,Deployability,integrat,integration,19,"// Perform numeric integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:19,Integrability,integrat,integration,19,"// Perform numeric integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:3,Performance,Perform,Perform,3,"// Perform numeric integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:29,Performance,cache,cache,29,"// Normalize and transfer to cache histogram",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:292,Availability,toler,tolerance,292,"////////////////////////////////////////////////////////////////////////////////; /// Fill all empty histogram bins in the range [ixlo,ixhi] where nbins is the; /// total number of histogram bins. This method samples the mid-point of the; /// range and if the mid-point value is within small tolerance of the interpolated; /// mid-point value fills all remaining elements through linear interpolation.; /// If the tolerance is exceeded, the algorithm is recursed on the two subranges; /// [xlo,xmid] and [xmid,xhi]",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:414,Availability,toler,tolerance,414,"////////////////////////////////////////////////////////////////////////////////; /// Fill all empty histogram bins in the range [ixlo,ixhi] where nbins is the; /// total number of histogram bins. This method samples the mid-point of the; /// range and if the mid-point value is within small tolerance of the interpolated; /// mid-point value fills all remaining elements through linear interpolation.; /// If the tolerance is exceeded, the algorithm is recursed on the two subranges; /// [xlo,xmid] and [xmid,xhi]",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:23,Usability,simpl,simply,23,"// If gap size is one, simply fill gap and return",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:41,Availability,toler,tolerance,41,"// If relative deviation is greater than tolerance divide and iterate",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:95,Performance,cache,cache,95,"////////////////////////////////////////////////////////////////////////////////; /// Fill the cache object by calling its calculate() method",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:189,Deployability,integrat,integrated,189,"////////////////////////////////////////////////////////////////////////////////; /// Return observable in nset to be cached by RooAbsCachedPdf; /// this is always the x observable that is integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:189,Integrability,integrat,integrated,189,"////////////////////////////////////////////////////////////////////////////////; /// Return observable in nset to be cached by RooAbsCachedPdf; /// this is always the x observable that is integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:118,Performance,cache,cached,118,"////////////////////////////////////////////////////////////////////////////////; /// Return observable in nset to be cached by RooAbsCachedPdf; /// this is always the x observable that is integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:221,Deployability,integrat,integrated,221,"////////////////////////////////////////////////////////////////////////////////; /// Return the parameters of the cache created by RooAbsCachedPdf.; /// These are always the input functions parameter, but never the; /// integrated variable x.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:221,Integrability,integrat,integrated,221,"////////////////////////////////////////////////////////////////////////////////; /// Return the parameters of the cache created by RooAbsCachedPdf.; /// These are always the input functions parameter, but never the; /// integrated variable x.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:232,Modifiability,variab,variable,232,"////////////////////////////////////////////////////////////////////////////////; /// Return the parameters of the cache created by RooAbsCachedPdf.; /// These are always the input functions parameter, but never the; /// integrated variable x.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:115,Performance,cache,cache,115,"////////////////////////////////////////////////////////////////////////////////; /// Return the parameters of the cache created by RooAbsCachedPdf.; /// These are always the input functions parameter, but never the; /// integrated variable x.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:100,Performance,cache,cache,100,"////////////////////////////////////////////////////////////////////////////////; /// Create custom cache element for running integral calculations",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooNumRunningInt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:1220,Integrability,interface,interface,1220,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooObjCacheManager.cxx; \class RooObjCacheManager; \ingroup Roofitcore. Implementation of a RooCacheManager<RooAbsCacheElement>; that specializes in the storage of cache elements that contain RooAbsArg objects.; Caches with RooAbsArg derived payload require special care as server redirects; cache operation mode changes and constant term optimization calls may need to be; forwarded to such cache payload. This cache manager takes care of all these operations; by forwarding these calls to the RooAbsCacheElement interface functions, which; have a sensible default implementation.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:870,Performance,cache,cache,870,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooObjCacheManager.cxx; \class RooObjCacheManager; \ingroup Roofitcore. Implementation of a RooCacheManager<RooAbsCacheElement>; that specializes in the storage of cache elements that contain RooAbsArg objects.; Caches with RooAbsArg derived payload require special care as server redirects; cache operation mode changes and constant term optimization calls may need to be; forwarded to such cache payload. This cache manager takes care of all these operations; by forwarding these calls to the RooAbsCacheElement interface functions, which; have a sensible default implementation.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:918,Performance,Cache,Caches,918,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooObjCacheManager.cxx; \class RooObjCacheManager; \ingroup Roofitcore. Implementation of a RooCacheManager<RooAbsCacheElement>; that specializes in the storage of cache elements that contain RooAbsArg objects.; Caches with RooAbsArg derived payload require special care as server redirects; cache operation mode changes and constant term optimization calls may need to be; forwarded to such cache payload. This cache manager takes care of all these operations; by forwarding these calls to the RooAbsCacheElement interface functions, which; have a sensible default implementation.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:998,Performance,cache,cache,998,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooObjCacheManager.cxx; \class RooObjCacheManager; \ingroup Roofitcore. Implementation of a RooCacheManager<RooAbsCacheElement>; that specializes in the storage of cache elements that contain RooAbsArg objects.; Caches with RooAbsArg derived payload require special care as server redirects; cache operation mode changes and constant term optimization calls may need to be; forwarded to such cache payload. This cache manager takes care of all these operations; by forwarding these calls to the RooAbsCacheElement interface functions, which; have a sensible default implementation.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:1045,Performance,optimiz,optimization,1045,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooObjCacheManager.cxx; \class RooObjCacheManager; \ingroup Roofitcore. Implementation of a RooCacheManager<RooAbsCacheElement>; that specializes in the storage of cache elements that contain RooAbsArg objects.; Caches with RooAbsArg derived payload require special care as server redirects; cache operation mode changes and constant term optimization calls may need to be; forwarded to such cache payload. This cache manager takes care of all these operations; by forwarding these calls to the RooAbsCacheElement interface functions, which; have a sensible default implementation.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:1098,Performance,cache,cache,1098,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooObjCacheManager.cxx; \class RooObjCacheManager; \ingroup Roofitcore. Implementation of a RooCacheManager<RooAbsCacheElement>; that specializes in the storage of cache elements that contain RooAbsArg objects.; Caches with RooAbsArg derived payload require special care as server redirects; cache operation mode changes and constant term optimization calls may need to be; forwarded to such cache payload. This cache manager takes care of all these operations; by forwarding these calls to the RooAbsCacheElement interface functions, which; have a sensible default implementation.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:1118,Performance,cache,cache,1118,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooObjCacheManager.cxx; \class RooObjCacheManager; \ingroup Roofitcore. Implementation of a RooCacheManager<RooAbsCacheElement>; that specializes in the storage of cache elements that contain RooAbsArg objects.; Caches with RooAbsArg derived payload require special care as server redirects; cache operation mode changes and constant term optimization calls may need to be; forwarded to such cache payload. This cache manager takes care of all these operations; by forwarding these calls to the RooAbsCacheElement interface functions, which; have a sensible default implementation.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:108,Performance,cache,cache,108,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of object cache manager for given owner. If clearCacheOnServerRedirect is true; /// all cache elements will be cleared when a server redirect is intercepted by the cache manager.; /// This is the default strategy and should only be overridden when you really understand; /// what you're doing as properly implementing server redirect in cache elements can get very; /// complicated, especially if there are (cyclical) reference back to the owning object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:186,Performance,cache,cache,186,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of object cache manager for given owner. If clearCacheOnServerRedirect is true; /// all cache elements will be cleared when a server redirect is intercepted by the cache manager.; /// This is the default strategy and should only be overridden when you really understand; /// what you're doing as properly implementing server redirect in cache elements can get very; /// complicated, especially if there are (cyclical) reference back to the owning object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:262,Performance,cache,cache,262,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of object cache manager for given owner. If clearCacheOnServerRedirect is true; /// all cache elements will be cleared when a server redirect is intercepted by the cache manager.; /// This is the default strategy and should only be overridden when you really understand; /// what you're doing as properly implementing server redirect in cache elements can get very; /// complicated, especially if there are (cyclical) reference back to the owning object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:435,Performance,cache,cache,435,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of object cache manager for given owner. If clearCacheOnServerRedirect is true; /// all cache elements will be cleared when a server redirect is intercepted by the cache manager.; /// This is the default strategy and should only be overridden when you really understand; /// what you're doing as properly implementing server redirect in cache elements can get very; /// complicated, especially if there are (cyclical) reference back to the owning object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:142,Usability,clear,clearCacheOnServerRedirect,142,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of object cache manager for given owner. If clearCacheOnServerRedirect is true; /// all cache elements will be cleared when a server redirect is intercepted by the cache manager.; /// This is the default strategy and should only be overridden when you really understand; /// what you're doing as properly implementing server redirect in cache elements can get very; /// complicated, especially if there are (cyclical) reference back to the owning object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:209,Usability,clear,cleared,209,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of object cache manager for given owner. If clearCacheOnServerRedirect is true; /// all cache elements will be cleared when a server redirect is intercepted by the cache manager.; /// This is the default strategy and should only be overridden when you really understand; /// what you're doing as properly implementing server redirect in cache elements can get very; /// complicated, especially if there are (cyclical) reference back to the owning object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:3,Performance,cache,cache,3,"// cache mode properties are not transferred in copy constructor",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:166,Performance,cache,cache,166,"////////////////////////////////////////////////////////////////////////////////; /// Intercept server redirect calls. If clearOnRedirect was set, sterilize; /// the cache (i.e. keep the structure but delete all contents). If not; /// forward serverRedirect to cache elements",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:261,Performance,cache,cache,261,"////////////////////////////////////////////////////////////////////////////////; /// Intercept server redirect calls. If clearOnRedirect was set, sterilize; /// the cache (i.e. keep the structure but delete all contents). If not; /// forward serverRedirect to cache elements",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:122,Usability,clear,clearOnRedirect,122,"////////////////////////////////////////////////////////////////////////////////; /// Intercept server redirect calls. If clearOnRedirect was set, sterilize; /// the cache (i.e. keep the structure but delete all contents). If not; /// forward serverRedirect to cache elements",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:107,Performance,cache,cache,107,"////////////////////////////////////////////////////////////////////////////////; /// Intercept changes to cache operation mode and forward to cache elements",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:143,Performance,cache,cache,143,"////////////////////////////////////////////////////////////////////////////////; /// Intercept changes to cache operation mode and forward to cache elements",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:216,Deployability,configurat,configuration,216,"////////////////////////////////////////////////////////////////////////////////; /// Intercept calls to perform automatic optimization of cache mode operation.; /// Forward calls to existing cache elements and save configuration of; /// cache mode optimization so that it can be applied on new cache elements; /// upon insertion",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:216,Modifiability,config,configuration,216,"////////////////////////////////////////////////////////////////////////////////; /// Intercept calls to perform automatic optimization of cache mode operation.; /// Forward calls to existing cache elements and save configuration of; /// cache mode optimization so that it can be applied on new cache elements; /// upon insertion",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:105,Performance,perform,perform,105,"////////////////////////////////////////////////////////////////////////////////; /// Intercept calls to perform automatic optimization of cache mode operation.; /// Forward calls to existing cache elements and save configuration of; /// cache mode optimization so that it can be applied on new cache elements; /// upon insertion",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:123,Performance,optimiz,optimization,123,"////////////////////////////////////////////////////////////////////////////////; /// Intercept calls to perform automatic optimization of cache mode operation.; /// Forward calls to existing cache elements and save configuration of; /// cache mode optimization so that it can be applied on new cache elements; /// upon insertion",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:139,Performance,cache,cache,139,"////////////////////////////////////////////////////////////////////////////////; /// Intercept calls to perform automatic optimization of cache mode operation.; /// Forward calls to existing cache elements and save configuration of; /// cache mode optimization so that it can be applied on new cache elements; /// upon insertion",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:192,Performance,cache,cache,192,"////////////////////////////////////////////////////////////////////////////////; /// Intercept calls to perform automatic optimization of cache mode operation.; /// Forward calls to existing cache elements and save configuration of; /// cache mode optimization so that it can be applied on new cache elements; /// upon insertion",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:238,Performance,cache,cache,238,"////////////////////////////////////////////////////////////////////////////////; /// Intercept calls to perform automatic optimization of cache mode operation.; /// Forward calls to existing cache elements and save configuration of; /// cache mode optimization so that it can be applied on new cache elements; /// upon insertion",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:249,Performance,optimiz,optimization,249,"////////////////////////////////////////////////////////////////////////////////; /// Intercept calls to perform automatic optimization of cache mode operation.; /// Forward calls to existing cache elements and save configuration of; /// cache mode optimization so that it can be applied on new cache elements; /// upon insertion",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:295,Performance,cache,cache,295,"////////////////////////////////////////////////////////////////////////////////; /// Intercept calls to perform automatic optimization of cache mode operation.; /// Forward calls to existing cache elements and save configuration of; /// cache mode optimization so that it can be applied on new cache elements; /// upon insertion",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:129,Performance,cache,cache,129,"////////////////////////////////////////////////////////////////////////////////; /// Set owner link on all object inserted into cache.; /// Also if cache mode optimization was requested, apply; /// it now to cache element being inserted",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:149,Performance,cache,cache,149,"////////////////////////////////////////////////////////////////////////////////; /// Set owner link on all object inserted into cache.; /// Also if cache mode optimization was requested, apply; /// it now to cache element being inserted",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:160,Performance,optimiz,optimization,160,"////////////////////////////////////////////////////////////////////////////////; /// Set owner link on all object inserted into cache.; /// Also if cache mode optimization was requested, apply; /// it now to cache element being inserted",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:209,Performance,cache,cache,209,"////////////////////////////////////////////////////////////////////////////////; /// Set owner link on all object inserted into cache.; /// Also if cache mode optimization was requested, apply; /// it now to cache element being inserted",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:25,Performance,optimiz,optimization,25,"// If value caching mode optimization has happened, process it now on object being inserted",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:101,Performance,cache,cache,101,"////////////////////////////////////////////////////////////////////////////////; /// Add details on cache contents when printing in tree mode",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:137,Performance,optimiz,optimization,137,"////////////////////////////////////////////////////////////////////////////////; /// If clearOnRedirect is false, forward constant term optimization calls to; /// cache elements",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:164,Performance,cache,cache,164,"////////////////////////////////////////////////////////////////////////////////; /// If clearOnRedirect is false, forward constant term optimization calls to; /// cache elements",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:89,Usability,clear,clearOnRedirect,89,"////////////////////////////////////////////////////////////////////////////////; /// If clearOnRedirect is false, forward constant term optimization calls to; /// cache elements",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooObjCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooParamBinning.cxx:860,Integrability,depend,depends,860,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooParamBinning.cxx; \class RooParamBinning; \ingroup Roofitcore. Implementation of RooAbsBinning that constructs; a binning with a range definition that depends on external RooAbsReal objects.; The external RooAbsReal definitions are explicitly allowed to depend on other; observables and parameters, and make it possible to define non-rectangular; range definitions in RooFit. Objects of class RooParamBinning are made; by the RooRealVar::setRange() that takes RooAbsReal references as arguments; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooParamBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooParamBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooParamBinning.cxx:963,Integrability,depend,depend,963,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooParamBinning.cxx; \class RooParamBinning; \ingroup Roofitcore. Implementation of RooAbsBinning that constructs; a binning with a range definition that depends on external RooAbsReal objects.; The external RooAbsReal definitions are explicitly allowed to depend on other; observables and parameters, and make it possible to define non-rectangular; range definitions in RooFit. Objects of class RooParamBinning are made; by the RooRealVar::setRange() that takes RooAbsReal references as arguments; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooParamBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooParamBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooParamBinning.cxx:144,Modifiability,parameteriz,parameterized,144,"////////////////////////////////////////////////////////////////////////////////; /// Construct binning with 'nBins' bins and with a range; /// parameterized by external RooAbsReals xloIn and xhiIn.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooParamBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooParamBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooParamBinning.cxx:32,Deployability,update,update,32,"// If list proxy already exists update pointers from proxy; // cout << ""RooParamBinning::insertHook("" << this << "","" << GetName() << "") _lp at beginning = "" << _lp << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooParamBinning.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooParamBinning.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:869,Integrability,interface,interface,869,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooPlot.cxx; \class RooPlot; \ingroup Roofitcore. Plot frame and a container for graphics objects; within that frame. As a frame, it provides the TH1-style public interface; for setting plot ranges, configuring axes, etc. As a container, it; holds an arbitrary set of objects that might be histograms of data,; curves representing a fit model, or text labels. Use the Draw(); method to draw a frame and the objects it contains. Use the various; add...() methods to add objects to be drawn. In general, the; add...() methods create a private copy of the object you pass them; and return a pointer to this copy. The caller owns the input object; and this class owns the returned object.; All RooAbsReal and RooAbsData derived classes implement plotOn(); functions that facilitate to plot themselves on a given RooPlot, e.g.; ~~~ {.cpp}; RooPlot *frame = x.frame() ;; data.plotOn(frame) ;; pdf.plotOn(frame) ;; ~~~; These high level functions also take care of any projections; or other mappings that need to be made to plot a multi-dimensional; object onto a one-dimensional plot.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:905,Modifiability,config,configuring,905,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooPlot.cxx; \class RooPlot; \ingroup Roofitcore. Plot frame and a container for graphics objects; within that frame. As a frame, it provides the TH1-style public interface; for setting plot ranges, configuring axes, etc. As a container, it; holds an arbitrary set of objects that might be histograms of data,; curves representing a fit model, or text labels. Use the Draw(); method to draw a frame and the objects it contains. Use the various; add...() methods to add objects to be drawn. In general, the; add...() methods create a private copy of the object you pass them; and return a pointer to this copy. The caller owns the input object; and this class owns the returned object.; All RooAbsReal and RooAbsData derived classes implement plotOn(); functions that facilitate to plot themselves on a given RooPlot, e.g.; ~~~ {.cpp}; RooPlot *frame = x.frame() ;; data.plotOn(frame) ;; pdf.plotOn(frame) ;; ~~~; These high level functions also take care of any projections; or other mappings that need to be made to plot a multi-dimensional; object onto a one-dimensional plot.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:179,Modifiability,variab,variables,179,"// namespace; ////////////////////////////////////////////////////////////////////////////////; /// Construct a two-dimensional RooPlot with ranges and properties taken; /// from variables var1 and var2",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:165,Modifiability,variab,variables,165,"////////////////////////////////////////////////////////////////////////////////; /// Construct a two-dimensional RooPlot with ranges and properties taken; /// from variables var1 and var2 but with an overriding range definition; /// of [xmin,xmax] x [ymin,ymax]",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:25,Modifiability,variab,variable,25,"// In the past, the plot variable was cloned, but there was no apparent reason for doing so.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:25,Modifiability,variab,variable,25,"// In the past, the plot variable was cloned, but there was no apparent reason for doing so.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:152,Integrability,wrap,wrapper,152,"////////////////////////////////////////////////////////////////////////////////; /// Create a new frame for a given variable in x. This is just a; /// wrapper for the RooPlot constructor with the same interface.; ///; /// More details.; /// \param[in] var The variable on the x-axis; /// \param[in] xmin Left edge of the x-axis; /// \param[in] xmax Right edge of the x-axis; /// \param[in] nBins number of bins on the x-axis",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:202,Integrability,interface,interface,202,"////////////////////////////////////////////////////////////////////////////////; /// Create a new frame for a given variable in x. This is just a; /// wrapper for the RooPlot constructor with the same interface.; ///; /// More details.; /// \param[in] var The variable on the x-axis; /// \param[in] xmin Left edge of the x-axis; /// \param[in] xmax Right edge of the x-axis; /// \param[in] nBins number of bins on the x-axis",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:117,Modifiability,variab,variable,117,"////////////////////////////////////////////////////////////////////////////////; /// Create a new frame for a given variable in x. This is just a; /// wrapper for the RooPlot constructor with the same interface.; ///; /// More details.; /// \param[in] var The variable on the x-axis; /// \param[in] xmin Left edge of the x-axis; /// \param[in] xmax Right edge of the x-axis; /// \param[in] nBins number of bins on the x-axis",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:261,Modifiability,variab,variable,261,"////////////////////////////////////////////////////////////////////////////////; /// Create a new frame for a given variable in x. This is just a; /// wrapper for the RooPlot constructor with the same interface.; ///; /// More details.; /// \param[in] var The variable on the x-axis; /// \param[in] xmin Left edge of the x-axis; /// \param[in] xmax Right edge of the x-axis; /// \param[in] nBins number of bins on the x-axis",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:117,Modifiability,variab,variable,117,"////////////////////////////////////////////////////////////////////////////////; /// Create a new frame for a given variable in x, adding bin labels.; /// The binning will be extracted from the variable given. The bin; /// labels will be set as ""%g-%g"" for the left and right edges of each; /// bin of the given variable.; ///; /// More details.; /// \param[in] var The variable on the x-axis",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:195,Modifiability,variab,variable,195,"////////////////////////////////////////////////////////////////////////////////; /// Create a new frame for a given variable in x, adding bin labels.; /// The binning will be extracted from the variable given. The bin; /// labels will be set as ""%g-%g"" for the left and right edges of each; /// bin of the given variable.; ///; /// More details.; /// \param[in] var The variable on the x-axis",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:313,Modifiability,variab,variable,313,"////////////////////////////////////////////////////////////////////////////////; /// Create a new frame for a given variable in x, adding bin labels.; /// The binning will be extracted from the variable given. The bin; /// labels will be set as ""%g-%g"" for the left and right edges of each; /// bin of the given variable.; ///; /// More details.; /// \param[in] var The variable on the x-axis",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:371,Modifiability,variab,variable,371,"////////////////////////////////////////////////////////////////////////////////; /// Create a new frame for a given variable in x, adding bin labels.; /// The binning will be extracted from the variable given. The bin; /// labels will be set as ""%g-%g"" for the left and right edges of each; /// bin of the given variable.; ///; /// More details.; /// \param[in] var The variable on the x-axis",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:25,Modifiability,variab,variable,25,"// In the past, the plot variable was cloned, but there was no apparent reason for doing so.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform initialization that is common to all constructors.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install the given set of observables are reference normalization; /// variables for this frame. These observables are e.g. later used; /// to automatically project out observables when plotting functions; /// on this frame. This function is only effective when called the; /// first time on a frame",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:156,Modifiability,variab,variables,156,"////////////////////////////////////////////////////////////////////////////////; /// Install the given set of observables are reference normalization; /// variables for this frame. These observables are e.g. later used; /// to automatically project out observables when plotting functions; /// on this frame. This function is only effective when called the; /// first time on a frame",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:3,Deployability,update,update,3,"// update our y-axis label and limits",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:3,Deployability,update,update,3,"// update our y-axis label and limits",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update our plot normalization over our plot variable's fit range,; /// which will be determined by the first suitable object added to our plot.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:130,Modifiability,variab,variable,130,"////////////////////////////////////////////////////////////////////////////////; /// Update our plot normalization over our plot variable's fit range,; /// which will be determined by the first suitable object added to our plot.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update our plot normalization over our plot variable's fit range,; /// which will be determined by the first suitable object added to our plot.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:130,Modifiability,variab,variable,130,"////////////////////////////////////////////////////////////////////////////////; /// Update our plot normalization over our plot variable's fit range,; /// which will be determined by the first suitable object added to our plot.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update our y-axis limits to accommodate an object whose spread; /// in y is (ymin,ymax). Use the specified y-axis label if we don't; /// have one assigned already.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:3,Deployability,update,update,3,"// update our limits if necessary",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:194,Integrability,message,message,194,"////////////////////////////////////////////////////////////////////////////////; /// Find the named object in our list of items and return a pointer; /// to it. Return zero and print a warning message if the named; /// object cannot be found. If no name is supplied the last object; /// added is returned.; ///; /// Note that the returned pointer is to a; /// TObject and so will generally need casting. Use the getAtt...(); /// methods to change the drawing style attributes of a contained; /// object directly.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:834,Availability,error,errors,834,"////////////////////////////////////////////////////////////////////////////////; /// Calculate and return reduced chi-squared between a curve and a histogram.; ///; /// \param[in] curvename Name of the curve or nullptr for last curve; /// \param[in] histname Name of the histogram to compare to or nullptr for last added histogram; /// \param[in] nFitParam If non-zero, reduce the number of degrees of freedom by this; /// number. This means that the curve was fitted to the data with nFitParam floating; /// parameters, which needs to be reflected in the calculation of \f$\chi^2 / \mathrm{ndf}\f$.; ///; /// \return \f$ \chi^2 / \mathrm{ndf} \f$ between the plotted curve and the data.; ///; /// \note The \f$ \chi^2 \f$ is calculated between a *plot of the original distribution* and the data.; /// It therefore has more rounding errors than directly calculating the \f$ \chi^2 \f$ from a PDF or; /// function. To do this, use RooAbsReal::createChi2(RooDataHist&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&).",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:107,Energy Efficiency,reduce,reduced,107,"////////////////////////////////////////////////////////////////////////////////; /// Calculate and return reduced chi-squared between a curve and a histogram.; ///; /// \param[in] curvename Name of the curve or nullptr for last curve; /// \param[in] histname Name of the histogram to compare to or nullptr for last added histogram; /// \param[in] nFitParam If non-zero, reduce the number of degrees of freedom by this; /// number. This means that the curve was fitted to the data with nFitParam floating; /// parameters, which needs to be reflected in the calculation of \f$\chi^2 / \mathrm{ndf}\f$.; ///; /// \return \f$ \chi^2 / \mathrm{ndf} \f$ between the plotted curve and the data.; ///; /// \note The \f$ \chi^2 \f$ is calculated between a *plot of the original distribution* and the data.; /// It therefore has more rounding errors than directly calculating the \f$ \chi^2 \f$ from a PDF or; /// function. To do this, use RooAbsReal::createChi2(RooDataHist&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&).",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:371,Energy Efficiency,reduce,reduce,371,"////////////////////////////////////////////////////////////////////////////////; /// Calculate and return reduced chi-squared between a curve and a histogram.; ///; /// \param[in] curvename Name of the curve or nullptr for last curve; /// \param[in] histname Name of the histogram to compare to or nullptr for last added histogram; /// \param[in] nFitParam If non-zero, reduce the number of degrees of freedom by this; /// number. This means that the curve was fitted to the data with nFitParam floating; /// parameters, which needs to be reflected in the calculation of \f$\chi^2 / \mathrm{ndf}\f$.; ///; /// \return \f$ \chi^2 / \mathrm{ndf} \f$ between the plotted curve and the data.; ///; /// \note The \f$ \chi^2 \f$ is calculated between a *plot of the original distribution* and the data.; /// It therefore has more rounding errors than directly calculating the \f$ \chi^2 \f$ from a PDF or; /// function. To do this, use RooAbsReal::createChi2(RooDataHist&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&).",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:631,Availability,error,error,631,"////////////////////////////////////////////////////////////////////////////////; /// Return a RooHist (derives from TGraphAsymErrors) containing the residuals of a histogram.; /// The plotting range of the graph is adapted to the plotting range of the current plot.; ///; /// \param histname Name of the data histogram.; /// Passing an empty string or `nullptr` will create residuals of the last-plotted histogram.; /// \param curvename Name of the curve to compare to data.; /// Passing an empty string or `nullptr` will create residuals of the last-plotted curve.; /// \param normalize If true, the residuals are divided by the error; /// of the histogram, effectively returning a pull histogram.; /// \param useAverage If true, the histogram is compared with the curve averaged in each bin.; /// Otherwise, the curve is evaluated at the bin centres, which is not accurate for strongly curved distributions.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:216,Energy Efficiency,adapt,adapted,216,"////////////////////////////////////////////////////////////////////////////////; /// Return a RooHist (derives from TGraphAsymErrors) containing the residuals of a histogram.; /// The plotting range of the graph is adapted to the plotting range of the current plot.; ///; /// \param histname Name of the data histogram.; /// Passing an empty string or `nullptr` will create residuals of the last-plotted histogram.; /// \param curvename Name of the curve to compare to data.; /// Passing an empty string or `nullptr` will create residuals of the last-plotted curve.; /// \param normalize If true, the residuals are divided by the error; /// of the histogram, effectively returning a pull histogram.; /// \param useAverage If true, the histogram is compared with the curve averaged in each bin.; /// Otherwise, the curve is evaluated at the bin centres, which is not accurate for strongly curved distributions.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:216,Modifiability,adapt,adapted,216,"////////////////////////////////////////////////////////////////////////////////; /// Return a RooHist (derives from TGraphAsymErrors) containing the residuals of a histogram.; /// The plotting range of the graph is adapted to the plotting range of the current plot.; ///; /// \param histname Name of the data histogram.; /// Passing an empty string or `nullptr` will create residuals of the last-plotted histogram.; /// \param curvename Name of the curve to compare to data.; /// Passing an empty string or `nullptr` will create residuals of the last-plotted curve.; /// \param normalize If true, the residuals are divided by the error; /// of the histogram, effectively returning a pull histogram.; /// \param useAverage If true, the histogram is compared with the curve averaged in each bin.; /// Otherwise, the curve is evaluated at the bin centres, which is not accurate for strongly curved distributions.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:399,Availability,error,error,399,"////////////////////////////////////////////////////////////////////////////////; /// Return the number of events that is associated with the range [xlo,xhi]; /// This method is only fully functional for ranges not equal to the full; /// range if the object that inserted the normalization data provided; /// a link to an external object that can calculate the event count in; /// in sub ranges. An error will be printed if this function is used; /// on sub-ranges while that information is not available",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:495,Availability,avail,available,495,"////////////////////////////////////////////////////////////////////////////////; /// Return the number of events that is associated with the range [xlo,xhi]; /// This method is only fully functional for ranges not equal to the full; /// range if the object that inserted the normalization data provided; /// a link to an external object that can calculate the event count in; /// in sub ranges. An error will be printed if this function is used; /// on sub-ranges while that information is not available",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:37,Modifiability,variab,variable,37,"/// Replaces the pointer to the plot variable with a pointer to a clone of the; /// plot variable that is owned by this RooPlot. The RooPlot references the; /// plotted variable by non-owning pointer by default since ROOT 6.28, which; /// resulted in a big speedup when plotting complicated pdfs that are expensive; /// to clone. However, going back to an owned clone is useful in rare cases.; /// For example in the RooUnitTest, where the registered plots need to live; /// longer than the scope of the unit test.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:89,Modifiability,variab,variable,89,"/// Replaces the pointer to the plot variable with a pointer to a clone of the; /// plot variable that is owned by this RooPlot. The RooPlot references the; /// plotted variable by non-owning pointer by default since ROOT 6.28, which; /// resulted in a big speedup when plotting complicated pdfs that are expensive; /// to clone. However, going back to an owned clone is useful in rare cases.; /// For example in the RooUnitTest, where the registered plots need to live; /// longer than the scope of the unit test.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:169,Modifiability,variab,variable,169,"/// Replaces the pointer to the plot variable with a pointer to a clone of the; /// plot variable that is owned by this RooPlot. The RooPlot references the; /// plotted variable by non-owning pointer by default since ROOT 6.28, which; /// resulted in a big speedup when plotting complicated pdfs that are expensive; /// to clone. However, going back to an owned clone is useful in rare cases.; /// For example in the RooUnitTest, where the registered plots need to live; /// longer than the scope of the unit test.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:509,Testability,test,test,509,"/// Replaces the pointer to the plot variable with a pointer to a clone of the; /// plot variable that is owned by this RooPlot. The RooPlot references the; /// plotted variable by non-owning pointer by default since ROOT 6.28, which; /// resulted in a big speedup when plotting complicated pdfs that are expensive; /// to clone. However, going back to an owned clone is useful in rare cases.; /// For example in the RooUnitTest, where the registered plots need to live; /// longer than the scope of the unit test.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:15,Modifiability,variab,variable,15,"// If the plot variable is already cloned, we don't need to do anything.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPlot.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx:715,Modifiability,variab,variables,715,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2021: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooPolyFunc; \ingroup Roofit. RooPolyFunc implements a polynomial function in multi-variables.; The polynomial coefficients are implemented as doubles and are not; part of the RooFit computation graph.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPolyFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx:31,Modifiability,variab,variables,31,"// linear iterate over all the variables, create var1^exp1 ..vark^0",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPolyFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx:237,Modifiability,variab,variables,237,"//////////////////////////////////////////////////////////////////////////////; /// Taylor expanding given function in terms of observables around; /// observableValues. Supports expansions upto order 2.; /// \param[in] func Function of variables that is taylor expanded.; /// \param[in] observables Set of variables to perform the expansion.; /// It's type is RooArgList to ensure that it is always ordered the; /// same as the observableValues vector. However, duplicate; /// observables are still not allowed.; /// \param[in] order Order of the expansion (0,1,2 supported).; /// \param[in] observableValues Coordinates around which expansion is; /// performed. If empty, the nominal observable values are taken, if; /// the size matches the size of the observables RooArgSet, the; /// values are mapped to the observables in matching order. If it; /// contains only one element, the same single value is used for all; /// observables.; /// \param[in] eps1 Precision for first derivative and second derivative.; /// \param[in] eps2 Precision for second partial derivative of cross-derivative.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPolyFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx:307,Modifiability,variab,variables,307,"//////////////////////////////////////////////////////////////////////////////; /// Taylor expanding given function in terms of observables around; /// observableValues. Supports expansions upto order 2.; /// \param[in] func Function of variables that is taylor expanded.; /// \param[in] observables Set of variables to perform the expansion.; /// It's type is RooArgList to ensure that it is always ordered the; /// same as the observableValues vector. However, duplicate; /// observables are still not allowed.; /// \param[in] order Order of the expansion (0,1,2 supported).; /// \param[in] observableValues Coordinates around which expansion is; /// performed. If empty, the nominal observable values are taken, if; /// the size matches the size of the observables RooArgSet, the; /// values are mapped to the observables in matching order. If it; /// contains only one element, the same single value is used for all; /// observables.; /// \param[in] eps1 Precision for first derivative and second derivative.; /// \param[in] eps2 Precision for second partial derivative of cross-derivative.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPolyFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx:320,Performance,perform,perform,320,"//////////////////////////////////////////////////////////////////////////////; /// Taylor expanding given function in terms of observables around; /// observableValues. Supports expansions upto order 2.; /// \param[in] func Function of variables that is taylor expanded.; /// \param[in] observables Set of variables to perform the expansion.; /// It's type is RooArgList to ensure that it is always ordered the; /// same as the observableValues vector. However, duplicate; /// observables are still not allowed.; /// \param[in] order Order of the expansion (0,1,2 supported).; /// \param[in] observableValues Coordinates around which expansion is; /// performed. If empty, the nominal observable values are taken, if; /// the size matches the size of the observables RooArgSet, the; /// values are mapped to the observables in matching order. If it; /// contains only one element, the same single value is used for all; /// observables.; /// \param[in] eps1 Precision for first derivative and second derivative.; /// \param[in] eps2 Precision for second partial derivative of cross-derivative.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPolyFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx:653,Performance,perform,performed,653,"//////////////////////////////////////////////////////////////////////////////; /// Taylor expanding given function in terms of observables around; /// observableValues. Supports expansions upto order 2.; /// \param[in] func Function of variables that is taylor expanded.; /// \param[in] observables Set of variables to perform the expansion.; /// It's type is RooArgList to ensure that it is always ordered the; /// same as the observableValues vector. However, duplicate; /// observables are still not allowed.; /// \param[in] order Order of the expansion (0,1,2 supported).; /// \param[in] observableValues Coordinates around which expansion is; /// performed. If empty, the nominal observable values are taken, if; /// the size matches the size of the observables RooArgSet, the; /// values are mapped to the observables in matching order. If it; /// contains only one element, the same single value is used for all; /// observables.; /// \param[in] eps1 Precision for first derivative and second derivative.; /// \param[in] eps2 Precision for second partial derivative of cross-derivative.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPolyFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx:29,Availability,error,error,29,"// we can be silent now, the error will come later",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPolyFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx:27,Performance,perform,performed,27,"// taylor expansion can be performed only for order 0, 1, 2 currently",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPolyFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyVar.cxx:119,Deployability,integrat,integrate,119,"////////////////////////////////////////////////////////////////////////////////; /// Advertise that we can internally integrate over x",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPolyVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyVar.cxx:119,Integrability,integrat,integrate,119,"////////////////////////////////////////////////////////////////////////////////; /// Advertise that we can internally integrate over x",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPolyVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx:1037,Integrability,depend,dependent,1037,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooPrintable.cxx; \class RooPrintable; \ingroup Roofitcore. A 'mix-in' base class that define the standard RooFit plotting and; printing methods. Each RooPlotable implementation must define methods that; print the objects name, class name, title, value, arguments and extras; to a provided stream. The definition of value is class dependent. The definition; of arguments is also class dependent, but should always be interpreted as; the names (and properties) of any (RooAbsArg) external inputs of a given object.; The extras method can be used to print any properties that does not fit in any; of the other classes. Each object an also override the definitions made; in defaultPrintStyle and defaultPrintContents to determine what is printed; (in terms of contents) and how it is printed (inline,single-line or multiline); given a Print() option string.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPrintable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx:1091,Integrability,depend,dependent,1091,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooPrintable.cxx; \class RooPrintable; \ingroup Roofitcore. A 'mix-in' base class that define the standard RooFit plotting and; printing methods. Each RooPlotable implementation must define methods that; print the objects name, class name, title, value, arguments and extras; to a provided stream. The definition of value is class dependent. The definition; of arguments is also class dependent, but should always be interpreted as; the names (and properties) of any (RooAbsArg) external inputs of a given object.; The extras method can be used to print any properties that does not fit in any; of the other classes. Each object an also override the definitions made; in defaultPrintStyle and defaultPrintContents to determine what is printed; (in terms of contents) and how it is printed (inline,single-line or multiline); given a Print() option string.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPrintable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx:293,Integrability,message,message,293,"////////////////////////////////////////////////////////////////////////////////; /// Print description of object on ostream, printing contents set by contents integer,; /// which is interpreted as an OR of 'enum ContentsOptions' values and in the style; /// given by 'enum StyleOption'. Each message is prefixed by string 'indent' when printed",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPrintable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx:154,Integrability,Interface,Interface,154,"// Virtual hook function for class-specific content implementation; ////////////////////////////////////////////////////////////////////////////////; /// Interface to print value of object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPrintable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to print extras of object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPrintable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface for detailed printing of object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPrintable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface for tree structure printing of object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPrintable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface for printing of object arguments. Arguments; /// are loosely defined as external server objects; /// in this context",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPrintable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:776,Energy Efficiency,Efficient,Efficient,776,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProdGenContext.cxx; \class RooProdGenContext; \ingroup Roofitcore. Efficient implementation of the generator context; specific for RooProdPdf PDFs. The sim-context owns a list of; component generator contexts that are used to generate the dependents; for each component PDF sequentially.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:948,Integrability,depend,dependents,948,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProdGenContext.cxx; \class RooProdGenContext; \ingroup Roofitcore. Efficient implementation of the generator context; specific for RooProdPdf PDFs. The sim-context owns a list of; component generator contexts that are used to generate the dependents; for each component PDF sequentially.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:18,Performance,optimiz,optimization,18,"// Constructor of optimization generator context for RooProdPdf objects; //Build an array of generator contexts for each product component PDF",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:21,Integrability,depend,dependents,21,"// Make full list of dependents (generated & proto)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:40,Integrability,depend,dependents,40,"// Add this term if we have no imported dependents, or imported dependents are already generated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:64,Integrability,depend,dependents,64,"// Add this term if we have no imported dependents, or imported dependents are already generated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:35,Integrability,depend,dependents,35,"// Check if this component has any dependents that need to be generated; // e.g. it can happen that there are none if all dependents of this component are prototyped",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:122,Integrability,depend,dependents,122,"// Check if this component has any dependents that need to be generated; // e.g. it can happen that there are none if all dependents of this component are prototyped",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:3,Usability,Simpl,Simple,3,"// Simple term",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:29,Integrability,depend,dependents,29,"// cout << ""adding following dependents to list of generated observables: "" ; pdfDep->Print(""1"") ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:95,Integrability,depend,dependency,95,"// Check if there are any left over terms that cannot be generated; // separately due to cross dependency of observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:251,Integrability,depend,dependencies,251,"////////////////////////////////////////////////////////////////////////////////; /// Generate a single event of the product by generating the components; /// of the products sequentially. The subcontext have been order such; /// that all conditional dependencies are correctly taken into account; /// when processed in sequential order",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:35,Integrability,depend,dependents,35,"// Generate uniform variables (non-dependents)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:20,Modifiability,variab,variables,20,"// Generate uniform variables (non-dependents)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx:104,Integrability,interface,interface,104,"////////////////////////////////////////////////////////////////////////////////; /// Detailed printing interface",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:1018,Deployability,integrat,integration,1018,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProdPdf.cxx; \class RooProdPdf; \ingroup Roofitcore. Efficient implementation of a product of PDFs of the form; \f[ \prod_{i=1}^{N} \mathrm{PDF}_i (x, \ldots) \f]. PDFs may share observables. If that is the case any irreducible subset; of PDFs that share observables will be normalised with explicit numeric; integration as any built-in normalisation will no longer be valid. Alternatively, products using conditional PDFs can be defined, *e.g.*. \f[ F(x|y) \cdot G(y), \f]. meaning a PDF \f$ F(x) \f$ **given** \f$ y \f$ and a PDF \f$ G(y) \f$.; In this construction, \f$ F \f$ is only; normalised w.r.t \f$ x\f$, and \f$ G \f$ is normalised w.r.t \f$ y \f$. The product in this construction; is properly normalised. If exactly one of the component PDFs supports extended likelihood fits, the; product will also be usable in extended mode, returning the number of expected; events from the extendable component PDF. The extendable component does not; have to appear in any specific place in the list.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:762,Energy Efficiency,Efficient,Efficient,762,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProdPdf.cxx; \class RooProdPdf; \ingroup Roofitcore. Efficient implementation of a product of PDFs of the form; \f[ \prod_{i=1}^{N} \mathrm{PDF}_i (x, \ldots) \f]. PDFs may share observables. If that is the case any irreducible subset; of PDFs that share observables will be normalised with explicit numeric; integration as any built-in normalisation will no longer be valid. Alternatively, products using conditional PDFs can be defined, *e.g.*. \f[ F(x|y) \cdot G(y), \f]. meaning a PDF \f$ F(x) \f$ **given** \f$ y \f$ and a PDF \f$ G(y) \f$.; In this construction, \f$ F \f$ is only; normalised w.r.t \f$ x\f$, and \f$ G \f$ is normalised w.r.t \f$ y \f$. The product in this construction; is properly normalised. If exactly one of the component PDFs supports extended likelihood fits, the; product will also be usable in extended mode, returning the number of expected; events from the extendable component PDF. The extendable component does not; have to appear in any specific place in the list.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:1018,Integrability,integrat,integration,1018,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProdPdf.cxx; \class RooProdPdf; \ingroup Roofitcore. Efficient implementation of a product of PDFs of the form; \f[ \prod_{i=1}^{N} \mathrm{PDF}_i (x, \ldots) \f]. PDFs may share observables. If that is the case any irreducible subset; of PDFs that share observables will be normalised with explicit numeric; integration as any built-in normalisation will no longer be valid. Alternatively, products using conditional PDFs can be defined, *e.g.*. \f[ F(x|y) \cdot G(y), \f]. meaning a PDF \f$ F(x) \f$ **given** \f$ y \f$ and a PDF \f$ G(y) \f$.; In this construction, \f$ F \f$ is only; normalised w.r.t \f$ x\f$, and \f$ G \f$ is normalised w.r.t \f$ y \f$. The product in this construction; is properly normalised. If exactly one of the component PDFs supports extended likelihood fits, the; product will also be usable in extended mode, returning the number of expected; events from the extendable component PDF. The extendable component does not; have to appear in any specific place in the list.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:1473,Modifiability,extend,extended,1473,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProdPdf.cxx; \class RooProdPdf; \ingroup Roofitcore. Efficient implementation of a product of PDFs of the form; \f[ \prod_{i=1}^{N} \mathrm{PDF}_i (x, \ldots) \f]. PDFs may share observables. If that is the case any irreducible subset; of PDFs that share observables will be normalised with explicit numeric; integration as any built-in normalisation will no longer be valid. Alternatively, products using conditional PDFs can be defined, *e.g.*. \f[ F(x|y) \cdot G(y), \f]. meaning a PDF \f$ F(x) \f$ **given** \f$ y \f$ and a PDF \f$ G(y) \f$.; In this construction, \f$ F \f$ is only; normalised w.r.t \f$ x\f$, and \f$ G \f$ is normalised w.r.t \f$ y \f$. The product in this construction; is properly normalised. If exactly one of the component PDFs supports extended likelihood fits, the; product will also be usable in extended mode, returning the number of expected; events from the extendable component PDF. The extendable component does not; have to appear in any specific place in the list.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:1535,Modifiability,extend,extended,1535,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProdPdf.cxx; \class RooProdPdf; \ingroup Roofitcore. Efficient implementation of a product of PDFs of the form; \f[ \prod_{i=1}^{N} \mathrm{PDF}_i (x, \ldots) \f]. PDFs may share observables. If that is the case any irreducible subset; of PDFs that share observables will be normalised with explicit numeric; integration as any built-in normalisation will no longer be valid. Alternatively, products using conditional PDFs can be defined, *e.g.*. \f[ F(x|y) \cdot G(y), \f]. meaning a PDF \f$ F(x) \f$ **given** \f$ y \f$ and a PDF \f$ G(y) \f$.; In this construction, \f$ F \f$ is only; normalised w.r.t \f$ x\f$, and \f$ G \f$ is normalised w.r.t \f$ y \f$. The product in this construction; is properly normalised. If exactly one of the component PDFs supports extended likelihood fits, the; product will also be usable in extended mode, returning the number of expected; events from the extendable component PDF. The extendable component does not; have to appear in any specific place in the list.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:1600,Modifiability,extend,extendable,1600,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProdPdf.cxx; \class RooProdPdf; \ingroup Roofitcore. Efficient implementation of a product of PDFs of the form; \f[ \prod_{i=1}^{N} \mathrm{PDF}_i (x, \ldots) \f]. PDFs may share observables. If that is the case any irreducible subset; of PDFs that share observables will be normalised with explicit numeric; integration as any built-in normalisation will no longer be valid. Alternatively, products using conditional PDFs can be defined, *e.g.*. \f[ F(x|y) \cdot G(y), \f]. meaning a PDF \f$ F(x) \f$ **given** \f$ y \f$ and a PDF \f$ G(y) \f$.; In this construction, \f$ F \f$ is only; normalised w.r.t \f$ x\f$, and \f$ G \f$ is normalised w.r.t \f$ y \f$. The product in this construction; is properly normalised. If exactly one of the component PDFs supports extended likelihood fits, the; product will also be usable in extended mode, returning the number of expected; events from the extendable component PDF. The extendable component does not; have to appear in any specific place in the list.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:1630,Modifiability,extend,extendable,1630,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProdPdf.cxx; \class RooProdPdf; \ingroup Roofitcore. Efficient implementation of a product of PDFs of the form; \f[ \prod_{i=1}^{N} \mathrm{PDF}_i (x, \ldots) \f]. PDFs may share observables. If that is the case any irreducible subset; of PDFs that share observables will be normalised with explicit numeric; integration as any built-in normalisation will no longer be valid. Alternatively, products using conditional PDFs can be defined, *e.g.*. \f[ F(x|y) \cdot G(y), \f]. meaning a PDF \f$ F(x) \f$ **given** \f$ y \f$ and a PDF \f$ G(y) \f$.; In this construction, \f$ F \f$ is only; normalised w.r.t \f$ x\f$, and \f$ G \f$ is normalised w.r.t \f$ y \f$. The product in this construction; is properly normalised. If exactly one of the component PDFs supports extended likelihood fits, the; product will also be usable in extended mode, returning the number of expected; events from the extendable component PDF. The extendable component does not; have to appear in any specific place in the list.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:1525,Usability,usab,usable,1525,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProdPdf.cxx; \class RooProdPdf; \ingroup Roofitcore. Efficient implementation of a product of PDFs of the form; \f[ \prod_{i=1}^{N} \mathrm{PDF}_i (x, \ldots) \f]. PDFs may share observables. If that is the case any irreducible subset; of PDFs that share observables will be normalised with explicit numeric; integration as any built-in normalisation will no longer be valid. Alternatively, products using conditional PDFs can be defined, *e.g.*. \f[ F(x|y) \cdot G(y), \f]. meaning a PDF \f$ F(x) \f$ **given** \f$ y \f$ and a PDF \f$ G(y) \f$.; In this construction, \f$ F \f$ is only; normalised w.r.t \f$ x\f$, and \f$ G \f$ is normalised w.r.t \f$ y \f$. The product in this construction; is properly normalised. If exactly one of the component PDFs supports extended likelihood fits, the; product will also be usable in extended mode, returning the number of expected; events from the extendable component PDF. The extendable component does not; have to appear in any specific place in the list.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:199,Performance,optimiz,optimization,199,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with 2 PDFs (most frequent use case).; ///; /// The optional cutOff parameter can be used as a speed optimization if; /// one or more of the PDF have sizable regions with very small values,; /// which would pull the entire product of PDFs to zero in those regions.; ///; /// After each PDF multiplication, the running product is compared with; /// the cutOff parameter. If the running product is smaller than the; /// cutOff value, the product series is terminated and remaining PDFs; /// are not evaluated.; ///; /// There is no magic value of the cutOff, the user should experiment; /// to find the appropriate balance between speed and precision.; /// If a cutoff is specified, the PDFs most likely to be small should; /// be put first in the product. The default cutOff value is zero.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:28,Modifiability,extend,extended,28,"// Protect against multiple extended terms",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:182,Performance,optimiz,optimization,182,"////////////////////////////////////////////////////////////////////////////////; /// Constructor from a list of PDFs.; ///; /// The optional cutOff parameter can be used as a speed optimization if; /// one or more of the PDF have sizable regions with very small values,; /// which would pull the entire product of PDFs to zero in those regions.; ///; /// After each PDF multiplication, the running product is compared with; /// the cutOff parameter. If the running product is smaller than the; /// cutOff value, the product series is terminated and remaining PDFs; /// are not evaluated.; ///; /// There is no magic value of the cutOff, the user should experiment; /// to find the appropriate balance between speed and precision.; /// If a cutoff is specified, the PDFs most likely to be small should; /// be put first in the product. The default cutOff value is zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:108,Deployability,configurat,configuration,108,"////////////////////////////////////////////////////////////////////////////////; /// Initialize RooProdPdf configuration from given list of RooCmdArg configuration arguments; /// and set of 'regular' p.d.f.s in product",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:151,Deployability,configurat,configuration,151,"////////////////////////////////////////////////////////////////////////////////; /// Initialize RooProdPdf configuration from given list of RooCmdArg configuration arguments; /// and set of 'regular' p.d.f.s in product",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:108,Modifiability,config,configuration,108,"////////////////////////////////////////////////////////////////////////////////; /// Initialize RooProdPdf configuration from given list of RooCmdArg configuration arguments; /// and set of 'regular' p.d.f.s in product",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:151,Modifiability,config,configuration,151,"////////////////////////////////////////////////////////////////////////////////; /// Initialize RooProdPdf configuration from given list of RooCmdArg configuration arguments; /// and set of 'regular' p.d.f.s in product",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:28,Modifiability,extend,extended,28,"// Protect against multiple extended terms",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:29,Deployability,configurat,configuration,29,"// If cache doesn't have our configuration, recalculate here",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:29,Modifiability,config,configuration,29,"// If cache doesn't have our configuration, recalculate here",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:6,Performance,cache,cache,6,"// If cache doesn't have our configuration, recalculate here",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:3,Performance,cache,cache,3,"// cache._rearrangedNum->printComponentTree("""",0,5) ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:3,Performance,cache,cache,3,"// cache._rearrangedDen->printComponentTree("""",0,5) ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:145,Deployability,integrat,integration,145,"////////////////////////////////////////////////////////////////////////////////; /// Factorize product in irreducible terms for given choice of integration/normalization",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:145,Integrability,integrat,integration,145,"////////////////////////////////////////////////////////////////////////////////; /// Factorize product in irreducible terms for given choice of integration/normalization",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:20,Integrability,depend,dependents,20,"// List of all term dependents: normalization and imported",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:49,Integrability,depend,dependents,49,"// Setup lists for factorization terms and their dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:3,Integrability,Depend,Dependents,3,"// Dependents to be normalized for the PDF",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:7,Integrability,depend,dependents,7,"// All dependents of this PDF; // Loop over the PDFs",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:3,Energy Efficiency,Reduce,Reduce,3,"// Reduce pdfNSet to actual dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:28,Integrability,depend,dependents,28,"// Reduce pdfNSet to actual dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:20,Integrability,depend,dependents,20,"// Make list of all dependents of this PDF",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:185,Integrability,depend,dependents,185,"// cout << GetName() << "": pdf = "" << pdf->GetName() << "" pdfAllDeps = "" << pdfAllDeps << "" pdfNSet = "" << *pdfNSet << "" pdfCSet = "" << *pdfCSet << endl;; // Make list of normalization dependents for this PDF;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:164,Integrability,depend,dependents,164,"// cout << GetName() << "": pdf = "" << pdf->GetName() << "" intset = "" << *pdfIntSet << "" pdfIntNoNormDeps = "" << pdfIntNoNormDeps << endl;; // Check if this PDF has dependents overlapping with one of the existing terms",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:190,Deployability,integrat,integration,190,"// PDF should be added to existing term if; // 1) It has overlapping normalization dependents with any other PDF in existing term; // 2) It has overlapping dependents of any class for which integration is requested; // 3) If normalization happens over multiple ranges, and those ranges are both defined; // in either observable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:83,Integrability,depend,dependents,83,"// PDF should be added to existing term if; // 1) It has overlapping normalization dependents with any other PDF in existing term; // 2) It has overlapping dependents of any class for which integration is requested; // 3) If normalization happens over multiple ranges, and those ranges are both defined; // in either observable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:156,Integrability,depend,dependents,156,"// PDF should be added to existing term if; // 1) It has overlapping normalization dependents with any other PDF in existing term; // 2) It has overlapping dependents of any class for which integration is requested; // 3) If normalization happens over multiple ranges, and those ranges are both defined; // in either observable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:190,Integrability,integrat,integration,190,"// PDF should be added to existing term if; // 1) It has overlapping normalization dependents with any other PDF in existing term; // 2) It has overlapping dependents of any class for which integration is requested; // 3) If normalization happens over multiple ranges, and those ranges are both defined; // in either observable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:32,Integrability,depend,dependents,32,"// Make list of wholly imported dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:44,Integrability,depend,dependents,44,"// cout << GetName() << "": list of imported dependents for term "" << (*term) << "" set to "" << impDeps << endl ;; // Make list of cross dependents (term is self contained for these dependents,; // but components import dependents from other components)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:135,Integrability,depend,dependents,135,"// cout << GetName() << "": list of imported dependents for term "" << (*term) << "" set to "" << impDeps << endl ;; // Make list of cross dependents (term is self contained for these dependents,; // but components import dependents from other components)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:180,Integrability,depend,dependents,180,"// cout << GetName() << "": list of imported dependents for term "" << (*term) << "" set to "" << impDeps << endl ;; // Make list of cross dependents (term is self contained for these dependents,; // but components import dependents from other components)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:218,Integrability,depend,dependents,218,"// cout << GetName() << "": list of imported dependents for term "" << (*term) << "" set to "" << impDeps << endl ;; // Make list of cross dependents (term is self contained for these dependents,; // but components import dependents from other components)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:41,Integrability,depend,dependents,41,"// cout << GetName() << "": list of cross dependents for term "" << (*term) << "" set to "" << *crossDeps << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:142,Deployability,integrat,integration,142,"////////////////////////////////////////////////////////////////////////////////; /// Return list of (partial) integrals of product terms for integration; /// of p.d.f over observables iset while normalization over observables nset.; /// Also return list of normalization sets to be used to evaluate; /// each component in the list correctly.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:142,Integrability,integrat,integration,142,"////////////////////////////////////////////////////////////////////////////////; /// Return list of (partial) integrals of product terms for integration; /// of p.d.f over observables iset while normalization over observables nset.; /// Also return list of normalization sets to be used to evaluate; /// each component in the list correctly.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:17,Deployability,configurat,configuration,17,"// Check if this configuration was created before",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:17,Modifiability,config,configuration,17,"// Check if this configuration was created before",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:55,Deployability,integrat,integrated,55,"// Group irriducible terms that need to be (partially) integrated together",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:55,Integrability,integrat,integrated,55,"// Group irriducible terms that need to be (partially) integrated together",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:125,Safety,avoid,avoid,125,"// cout<<""FK: rangeIdentical Single = ""<<(rangeIdentical ? 'T':'F')<<endl;; // coverity[CONSTANT_EXPRESSION_RESULT]; // LM : avoid making integral ratio if range is the same. Why was not included ??? (same at line 857)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:31,Deployability,integrat,integrated,31,"// Take list of normalization, integrated dependents from factorization algorithm",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:31,Integrability,integrat,integrated,31,"// Take list of normalization, integrated dependents from factorization algorithm",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:42,Integrability,depend,dependents,42,"// Take list of normalization, integrated dependents from factorization algorithm",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:18,Deployability,integrat,integrated,18,"// Cross-imported integrated dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:18,Integrability,integrat,integrated,18,"// Cross-imported integrated dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:29,Integrability,depend,dependents,29,"// Cross-imported integrated dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:16,Deployability,integrat,integration,16,"// Remove outer integration dependents from termISet",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:16,Integrability,integrat,integration,16,"// Remove outer integration dependents from termISet",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:28,Integrability,depend,dependents,28,"// Remove outer integration dependents from termISet",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:2,Performance,cache,cache,2,"//cache->_numList.add(*func[1]);; //cache->_denList.add(*func[2]);",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:36,Performance,cache,cache,36,"//cache->_numList.add(*func[1]);; //cache->_denList.add(*func[2]);",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:56,Deployability,integrat,integration,56,"// If denominator is an integral, make a clone with the integration range adjusted to; // the selected component of the normalization integral; // cout << ""NOW PROCESSING DENOMINATOR "" << den->ClassName() << ""::"" << den->GetName() << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:56,Integrability,integrat,integration,56,"// If denominator is an integral, make a clone with the integration range adjusted to; // the selected component of the normalization integral; // cout << ""NOW PROCESSING DENOMINATOR "" << den->ClassName() << ""::"" << den->GetName() << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:12,Integrability,depend,depends,12,"// cout << ""depends in value of ratio"" << endl ;; // Make specialize ratio instance",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:21,Integrability,depend,depend,21,"// cout << ""does NOT depend on value of ratio"" << endl ;; // parg->Print(""t"") ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:19,Deployability,integrat,integration,19,"// Apply posterior integration required for SPECINT case",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:19,Integrability,integrat,integration,19,"// Apply posterior integration required for SPECINT case",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:56,Deployability,integrat,integration,56,"// If input is integral, recreate integral but override integration range to be targetRangeName",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:56,Integrability,integrat,integration,56,"// If input is integral, recreate integral but override integration range to be targetRangeName",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:93,Deployability,integrat,integration,93,"// If input is sum of integrals, recreate integral from first component of set, but override integration range to be targetRangeName",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:93,Integrability,integrat,integration,93,"// If input is sum of integrals, recreate integral from first component of set, but override integration range to be targetRangeName",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:25,Integrability,depend,dependents,25,"// Make list of imported dependents that occur in any term",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:16,Deployability,integrat,integrated,16,"// Make list of integrated dependents that occur in any term",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:16,Integrability,integrat,integrated,16,"// Make list of integrated dependents that occur in any term",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:27,Integrability,depend,dependents,27,"// Make list of integrated dependents that occur in any term",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:59,Deployability,integrat,integrated,59,"// Now iteratively merge groups that should be (partially) integrated together",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:59,Integrability,integrat,integrated,59,"// Now iteratively merge groups that should be (partially) integrated together",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:36,Integrability,depend,dependent,36,"// Collect groups that feature this dependent",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:33,Integrability,depend,depends,33,"// See if any term in this group depends in any ay on outerDepInt",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:37,Deployability,integrat,integrated,37,"// CASE I: factorizing term: term is integrated over all normalizing observables; // -----------------------------------------------------------------------------; // Check if all observbales of this term are integrated. If so the term cancels",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:209,Deployability,integrat,integrated,209,"// CASE I: factorizing term: term is integrated over all normalizing observables; // -----------------------------------------------------------------------------; // Check if all observbales of this term are integrated. If so the term cancels",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:37,Integrability,integrat,integrated,37,"// CASE I: factorizing term: term is integrated over all normalizing observables; // -----------------------------------------------------------------------------; // Check if all observbales of this term are integrated. If so the term cancels",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:209,Integrability,integrat,integrated,209,"// CASE I: factorizing term: term is integrated over all normalizing observables; // -----------------------------------------------------------------------------; // Check if all observbales of this term are integrated. If so the term cancels",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:39,Deployability,integrat,integrated,39,"// CASE IIIa: Normalized and partially integrated single PDF term; //---------------------------------------------------------------",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:39,Integrability,integrat,integrated,39,"// CASE IIIa: Normalized and partially integrated single PDF term; //---------------------------------------------------------------",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:39,Deployability,integrat,integrated,39,"// CASE IIIb: Normalized and partially integrated composite PDF term; //---------------------------------------------------------------; // Use auxiliary class RooGenProdProj to calculate this term",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:39,Integrability,integrat,integrated,39,"// CASE IIIb: Normalized and partially integrated composite PDF term; //---------------------------------------------------------------; // Use auxiliary class RooGenProdProj to calculate this term",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:28,Deployability,integrat,integrated,28,"// CASE IVa: Normalized non-integrated composite PDF term; // -------------------------------------------------------",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:28,Integrability,integrat,integrated,28,"// CASE IVa: Normalized non-integrated composite PDF term; // -------------------------------------------------------",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:35,Deployability,integrat,integration,35,"// Composite term needs normalized integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:35,Integrability,integrat,integration,35,"// Composite term needs normalized integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:29,Deployability,integrat,integrated,29,"// CASE IVb: Normalized, non-integrated single PDF term; // -----------------------------------------------------",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:29,Integrability,integrat,integrated,29,"// CASE IVb: Normalized, non-integrated single PDF term; // -----------------------------------------------------",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:50,Integrability,wrap,wrapper,50,"// Construct representative name of normalization wrapper",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:146,Deployability,integrat,integration,146,"////////////////////////////////////////////////////////////////////////////////; /// Force RooRealIntegral to offer all observables for internal integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:146,Integrability,integrat,integration,146,"////////////////////////////////////////////////////////////////////////////////; /// Force RooRealIntegral to offer all observables for internal integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:188,Deployability,integrat,integration,188,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:220,Deployability,integrat,integration,220,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:414,Deployability,integrat,integrated,414,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:476,Deployability,integrat,integrate,476,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:596,Deployability,integrat,integration,596,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:720,Deployability,integrat,integrated,720,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:848,Deployability,integrat,integrating,848,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:920,Deployability,integrat,integration,920,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:952,Deployability,integrat,integration,952,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:188,Integrability,integrat,integration,188,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:220,Integrability,integrat,integration,220,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:383,Integrability,depend,dependents,383,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:414,Integrability,integrat,integrated,414,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:476,Integrability,integrat,integrate,476,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:596,Integrability,integrat,integration,596,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:720,Integrability,integrat,integrated,720,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:848,Integrability,integrat,integrating,848,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:920,Integrability,integrat,integration,920,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:952,Integrability,integrat,integration,952,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:693,Modifiability,variab,variables,693,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:141,Performance,perform,performed,141,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:36,Deployability,integrat,integrate,36,"// Declare that we can analytically integrate all requested observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:36,Integrability,integrat,integrate,36,"// Declare that we can analytically integrate all requested observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:6,Deployability,integrat,integration,6,"// No integration scenario",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:6,Integrability,integrat,integration,6,"// No integration scenario",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:58,Deployability,integrat,integration,58,"// WVE needs adaptation for rangename feature; // Partial integration scenarios",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:13,Energy Efficiency,adapt,adaptation,13,"// WVE needs adaptation for rangename feature; // Partial integration scenarios",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:58,Integrability,integrat,integration,58,"// WVE needs adaptation for rangename feature; // Partial integration scenarios",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:13,Modifiability,adapt,adaptation,13,"// WVE needs adaptation for rangename feature; // Partial integration scenarios",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:6,Performance,cache,cache,6,"// If cache has been sterilized, revive this slot",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:123,Modifiability,extend,extendable,123,"////////////////////////////////////////////////////////////////////////////////; /// If this product contains exactly one extendable p.d.f return the extension abilities of; /// that p.d.f, otherwise return CanNotBeExtended",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:143,Modifiability,extend,extendable,143,"////////////////////////////////////////////////////////////////////////////////; /// Return the expected number of events associated with the extendable input PDF; /// in the product. If there is no extendable term, abort.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:200,Modifiability,extend,extendable,200,"////////////////////////////////////////////////////////////////////////////////; /// Return the expected number of events associated with the extendable input PDF; /// in the product. If there is no extendable term, abort.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:217,Safety,abort,abort,217,"////////////////////////////////////////////////////////////////////////////////; /// Return the expected number of events associated with the extendable input PDF; /// in the product. If there is no extendable term, abort.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:111,Performance,optimiz,optimized,111,"////////////////////////////////////////////////////////////////////////////////; /// Return generator context optimized for generating events from product p.d.f.s",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:190,Deployability,configurat,configuration,190,"////////////////////////////////////////////////////////////////////////////////; /// Query internal generation capabilities of component p.d.f.s and aggregate capabilities; /// into master configuration passed to the generator context",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:190,Modifiability,config,configuration,190,"////////////////////////////////////////////////////////////////////////////////; /// Query internal generation capabilities of component p.d.f.s and aggregate capabilities; /// into master configuration passed to the generator context",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:40,Integrability,depend,depend,40,"// Find the subset directVars that only depend on a single PDF in the product",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:19,Deployability,integrat,integrator,19,"// Now find direct integrator for relevant components ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:19,Integrability,integrat,integrator,19,"// Now find direct integrator for relevant components ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:115,Deployability,configurat,configuration,115,"////////////////////////////////////////////////////////////////////////////////; /// Generate a single event with configuration specified by 'code'; /// Defer internal generation to components as encoded in the _genCode; /// registry for given generator code.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:115,Modifiability,config,configuration,115,"////////////////////////////////////////////////////////////////////////////////; /// Generate a single event with configuration specified by 'code'; /// Defer internal generation to components as encoded in the _genCode; /// registry for given generator code.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:131,Performance,cache,cache,131,"////////////////////////////////////////////////////////////////////////////////; /// Return RooAbsArg components contained in the cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:109,Performance,cache,cache,109,"////////////////////////////////////////////////////////////////////////////////; /// Hook function to print cache contents in tree printing of RooProdPdf",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:111,Safety,safe,safety,111,"////////////////////////////////////////////////////////////////////////////////; /// Forward determination of safety of internal generator code to; /// component p.d.f that would generate the given observable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:13,Integrability,depend,depending,13,"// Found PDF depending on arg; // If multiple PDFs depend on arg directGen is not safe",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:51,Integrability,depend,depend,51,"// Found PDF depending on arg; // If multiple PDFs depend on arg directGen is not safe",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:82,Safety,safe,safe,82,"// Found PDF depending on arg; // If multiple PDFs depend on arg directGen is not safe",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:28,Modifiability,extend,extended,28,"// Protect against multiple extended terms",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:9,Performance,cache,cache,9,"// Reset cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:21,Modifiability,extend,extended,21,"// Remember what the extended PDF is",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:107,Deployability,update,updated,107,"// Since we may have removed PDFs from the list, the index of the extended; // PDF in the list needs to be updated. The new index might also be -1 if the; // extended PDF got removed.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:66,Modifiability,extend,extended,66,"// Since we may have removed PDFs from the list, the index of the extended; // PDF in the list needs to be updated. The new index might also be -1 if the; // extended PDF got removed.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:158,Modifiability,extend,extended,158,"// Since we may have removed PDFs from the list, the index of the extended; // PDF in the list needs to be updated. The new index might also be -1 if the; // extended PDF got removed.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:9,Performance,cache,cache,9,"// Reset cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:11,Performance,optimiz,optimized,11,"// For the optimized implementation of checking if two collections overlap by name.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:97,Integrability,depend,depend,97,"// A constraint term is a p.d.f that doesn't contribute to the; // expectedEvents() and does not depend on any of the listed observables; // but does depends on any of the parameters that should be constrained",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:150,Integrability,depend,depends,150,"// A constraint term is a p.d.f that doesn't contribute to the; // expectedEvents() and does not depend on any of the listed observables; // but does depends on any of the parameters that should be constrained",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:37,Integrability,depend,dependsOn,37,"// Before, there were calls to `pdf->dependsOn()` here, but they were very; // expensive for large computation graphs! Given that we have to traverse; // the computation graph with a call to `pdf->getParameters()` anyway, we; // can just check if the set of all variables operlaps with the observables; // or constraind parameters.; //; // We are using an optimized implementation of overlap checking. Because; // the overlap is checked by name, we can check overlap of the; // corresponding name pointers. The optimization can't be in; // RooAbsCollection itself, because it is crucial that the memory for the; // non-tmp name pointers is not reallocated for each pdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:262,Modifiability,variab,variables,262,"// Before, there were calls to `pdf->dependsOn()` here, but they were very; // expensive for large computation graphs! Given that we have to traverse; // the computation graph with a call to `pdf->getParameters()` anyway, we; // can just check if the set of all variables operlaps with the observables; // or constraind parameters.; //; // We are using an optimized implementation of overlap checking. Because; // the overlap is checked by name, we can check overlap of the; // corresponding name pointers. The optimization can't be in; // RooAbsCollection itself, because it is crucial that the memory for the; // non-tmp name pointers is not reallocated for each pdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:356,Performance,optimiz,optimized,356,"// Before, there were calls to `pdf->dependsOn()` here, but they were very; // expensive for large computation graphs! Given that we have to traverse; // the computation graph with a call to `pdf->getParameters()` anyway, we; // can just check if the set of all variables operlaps with the observables; // or constraind parameters.; //; // We are using an optimized implementation of overlap checking. Because; // the overlap is checked by name, we can check overlap of the; // corresponding name pointers. The optimization can't be in; // RooAbsCollection itself, because it is crucial that the memory for the; // non-tmp name pointers is not reallocated for each pdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:511,Performance,optimiz,optimization,511,"// Before, there were calls to `pdf->dependsOn()` here, but they were very; // expensive for large computation graphs! Given that we have to traverse; // the computation graph with a call to `pdf->getParameters()` anyway, we; // can just check if the set of all variables operlaps with the observables; // or constraind parameters.; //; // We are using an optimized implementation of overlap checking. Because; // the overlap is checked by name, we can check overlap of the; // corresponding name pointers. The optimization can't be in; // RooAbsCollection itself, because it is crucial that the memory for the; // non-tmp name pointers is not reallocated for each pdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:155,Modifiability,variab,variables,155,"// We only want to add parameter, not observables. Since a call like; // `pdf->getParameters(&observables)` would be expensive, we take the set; // of all variables and remove the ovservables, which is much cheaper. In; // a call to `pdf->getParameters(&observables)`, the observables are; // matched by name, so we have to pass the `matchByNameOnly` here.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:43,Integrability,depend,depend,43,"// Strip any terms from params that do not depend on any term",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface function used by test statistics to freeze choice of range; /// for interpretation of conditional product terms",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:113,Testability,test,test,113,"////////////////////////////////////////////////////////////////////////////////; /// Interface function used by test statistics to freeze choice of range; /// for interpretation of conditional product terms",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:109,Integrability,depend,depend,109,"////////////////////////////////////////////////////////////////////////////////; /// If all components that depend on obs are binned that so is the product",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:130,Performance,cache,cache-and-track,130,"////////////////////////////////////////////////////////////////////////////////; /// Label OK'ed components of a RooProdPdf with cache-and-track, _and_ label all RooProdPdf; /// descendants with extra information about (conditional) normalization, needed to be able; /// to Cache-And-Track them outside the RooProdPdf context.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:275,Performance,Cache,Cache-And-Track,275,"////////////////////////////////////////////////////////////////////////////////; /// Label OK'ed components of a RooProdPdf with cache-and-track, _and_ label all RooProdPdf; /// descendants with extra information about (conditional) normalization, needed to be able; /// to Cache-And-Track them outside the RooProdPdf context.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:143,Usability,intuit,intuitively,143,"////////////////////////////////////////////////////////////////////////////////; /// Customized printing of arguments of a RooProdPdf to more intuitively reflect the contents of the; /// product operator construction",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:9,Performance,cache,caches,9,"// Clear caches",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:3,Usability,Clear,Clear,3,"// Clear caches",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:134,Integrability,interface,interface,134,"/// A RooProdPdf with a fixed normalization set can be replaced by this class.; /// Its purpose is to provide the right client-server interface for the; /// evaluation of RooProdPdf cache elements that were created for a given; /// normalization set.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:182,Performance,cache,cache,182,"/// A RooProdPdf with a fixed normalization set can be replaced by this class.; /// Its purpose is to provide the right client-server interface for the; /// evaluation of RooProdPdf cache elements that were created for a given; /// normalization set.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:14,Deployability,Integrat,Integration,14,"// Analytical Integration handling",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:14,Integrability,Integrat,Integration,14,"// Analytical Integration handling",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:52,Integrability,depend,depend,52,"// The actual servers for a given normalization set depend on whether the; // cache is rearranged or not. See RooProdPdf::calculateBatch to see; // which args in the cache are used directly.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:78,Performance,cache,cache,78,"// The actual servers for a given normalization set depend on whether the; // cache is rearranged or not. See RooProdPdf::calculateBatch to see; // which args in the cache are used directly.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:166,Performance,cache,cache,166,"// The actual servers for a given normalization set depend on whether the; // cache is rearranged or not. See RooProdPdf::calculateBatch to see; // which args in the cache are used directly.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProdPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:77,Security,expose,expose,77,"// Namespace with helper functions that have STL stuff that we don't want to expose to CINT",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:113,Deployability,integrat,integration,113,"////////////////////////////////////////////////////////////////////////////////; /// Force internal handling of integration of given observable if any; /// of the product terms depend on it.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:113,Integrability,integrat,integration,113,"////////////////////////////////////////////////////////////////////////////////; /// Force internal handling of integration of given observable if any; /// of the product terms depend on it.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:178,Integrability,depend,depend,178,"////////////////////////////////////////////////////////////////////////////////; /// Force internal handling of integration of given observable if any; /// of the product terms depend on it.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:30,Deployability,integrat,integration,30,"// Force internal handling of integration of given observable if any; // of the product terms depend on it.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:30,Integrability,integrat,integration,30,"// Force internal handling of integration of given observable if any; // of the product terms depend on it.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:94,Integrability,depend,depend,94,"// Force internal handling of integration of given observable if any; // of the product terms depend on it.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:175,Deployability,integrat,integrated,175,"////////////////////////////////////////////////////////////////////////////////; /// Group observables into subsets in which the product factorizes; /// and that can thus be integrated separately",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:175,Integrability,integrat,integrated,175,"////////////////////////////////////////////////////////////////////////////////; /// Group observables into subsets in which the product factorizes; /// and that can thus be integrated separately",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:75,Deployability,integrat,integrate,75,"// Do we have any terms which do not depend on the; // on the variables we integrate over?",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:37,Integrability,depend,depend,37,"// Do we have any terms which do not depend on the; // on the variables we integrate over?",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:75,Integrability,integrat,integrate,75,"// Do we have any terms which do not depend on the; // on the variables we integrate over?",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:62,Modifiability,variab,variables,62,"// Do we have any terms which do not depend on the; // on the variables we integrate over?",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:33,Integrability,depend,dependents,33,"// Merge groups with overlapping dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:42,Deployability,integrat,integrated,42,"// check that we have all variables to be integrated over on the LHS; // of the map, and all terms in the product do appear on the RHS",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:42,Integrability,integrat,integrated,42,"// check that we have all variables to be integrated over on the LHS; // of the map, and all terms in the product do appear on the RHS",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:26,Modifiability,variab,variables,26,"// check that we have all variables to be integrated over on the LHS; // of the map, and all terms in the product do appear on the RHS",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:292,Performance,cache,cache,292,"////////////////////////////////////////////////////////////////////////////////; /// Return list of (partial) integrals whose product defines the integral of this; /// RooProduct over the observables in iset in range isetRange. If no such list; /// exists, create it now and store it in the cache for future use.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:28,Deployability,integrat,integrate,28,"// check whether we need to integrate over this term or not...",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:28,Integrability,integrat,integrate,28,"// check whether we need to integrate over this term or not...",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:25,Performance,cache,cache,25,"// add current set-up to cache, and return index..",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:113,Deployability,integrat,integrations,113,"////////////////////////////////////////////////////////////////////////////////; /// Declare that we handle all integrations internally",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:113,Integrability,integrat,integrations,113,"////////////////////////////////////////////////////////////////////////////////; /// Declare that we handle all integrations internally",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:36,Deployability,integrat,integrate,36,"// Declare that we can analytically integrate all requested observables; // (basically, we will take care of the problem, and delegate where required); //assert(normSet==0);",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:36,Integrability,integrat,integrate,36,"// Declare that we can analytically integrate all requested observables; // (basically, we will take care of the problem, and delegate where required); //assert(normSet==0);",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:154,Testability,assert,assert,154,"// Declare that we can analytically integrate all requested observables; // (basically, we will take care of the problem, and delegate where required); //assert(normSet==0);",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:150,Performance,cache,cache,150,"////////////////////////////////////////////////////////////////////////////////; /// Calculate integral internally from appropriate partial integral cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:3,Performance,cache,cache,3,"// cache got sterilized, trigger repopulation of this slot, then try again...",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:26,Integrability,depend,depend,26,"// If all components that depend on obs are binned that so is the product",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:119,Performance,cache,cache,119,"////////////////////////////////////////////////////////////////////////////////; /// Return list of all RooAbsArgs in cache element",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:130,Performance,cache,cache-and-track,130,"////////////////////////////////////////////////////////////////////////////////; /// Label OK'ed components of a RooProduct with cache-and-track",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:143,Usability,intuit,intuitively,143,"////////////////////////////////////////////////////////////////////////////////; /// Customized printing of arguments of a RooProduct to more intuitively reflect the contents of the; /// product operator construction",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:33,Modifiability,evolve,evolved,33,"// If the proxy data members are evolved by schema evolution, the proxy list; // that references them will contain null pointers because the evolved; // members are only created after the proxy list. That's why we have to set; // them manually in that case.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:141,Modifiability,evolve,evolved,141,"// If the proxy data members are evolved by schema evolution, the proxy list; // that references them will contain null pointers because the evolved; // members are only created after the proxy list. That's why we have to set; // them manually in that case.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:110,Availability,error,errors,110,"// If the proxies in the proxy list still don't correspond to _compRSet and; // _compCSet, it's time to print errors. And try to recover.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:129,Availability,recover,recover,129,"// If the proxies in the proxy list still don't correspond to _compRSet and; // _compCSet, it's time to print errors. And try to recover.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:129,Safety,recover,recover,129,"// If the proxies in the proxy list still don't correspond to _compRSet and; // _compCSet, it's time to print errors. And try to recover.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:142,Availability,recover,recover,142,"// From experience, it's rather the members of the RooProduct that is; // still correct in these inconsistent cases. That's why we try to; // recover by setting the proxy in the _proxyList to be equal to the; // member proxy. But that might be wrong, so it's important to warn the; // user anyway.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:142,Safety,recover,recover,142,"// From experience, it's rather the members of the RooProduct that is; // still correct in these inconsistent cases. That's why we try to; // recover by setting the proxy in the _proxyList to be equal to the; // member proxy. But that might be wrong, so it's important to warn the; // user anyway.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProduct.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProfileLL.cxx:866,Testability,log,log,866,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProfileLL.cxx; \class RooProfileLL; \ingroup Roofitcore. Implements the profile likelihood estimator for; a given likelihood and set of parameters of interest. The value return by; RooProfileLL is the input likelihood nll minimized w.r.t all nuisance parameters; (which are all parameters except for those listed in the constructor) minus; the -log(L) of the best fit. Note that this function is slow to evaluate; as a MIGRAD minimization step is executed for each function evaluation; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProfileLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProfileLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProfileLL.cxx:175,Modifiability,variab,variables,175,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of profile likelihood given input likelihood nll w.r.t; /// the given set of variables. The input log likelihood is minimized w.r.t; /// to all other variables of the likelihood at each evaluation and the; /// value of the global log likelihood minimum is always subtracted.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProfileLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProfileLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProfileLL.cxx:248,Modifiability,variab,variables,248,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of profile likelihood given input likelihood nll w.r.t; /// the given set of variables. The input log likelihood is minimized w.r.t; /// to all other variables of the likelihood at each evaluation and the; /// value of the global log likelihood minimum is always subtracted.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProfileLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProfileLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProfileLL.cxx:196,Testability,log,log,196,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of profile likelihood given input likelihood nll w.r.t; /// the given set of variables. The input log likelihood is minimized w.r.t; /// to all other variables of the likelihood at each evaluation and the; /// value of the global log likelihood minimum is always subtracted.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProfileLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProfileLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProfileLL.cxx:328,Testability,log,log,328,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of profile likelihood given input likelihood nll w.r.t; /// the given set of variables. The input log likelihood is minimized w.r.t; /// to all other variables of the likelihood at each evaluation and the; /// value of the global log likelihood minimum is always subtracted.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProfileLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProfileLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProfileLL.cxx:86,Performance,Optimiz,Optimized,86,"////////////////////////////////////////////////////////////////////////////////; /// Optimized implementation of createProfile for profile likelihoods.; /// Return profile of original function in terms of stated parameters; /// of interest rather than profiling recursively.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProfileLL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProfileLL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:1165,Deployability,integrat,integration,1165,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProjectedPdf.cxx; \class RooProjectedPdf; \ingroup Roofitcore. A RooAbsPdf implementation that represent a projection; of a given input p.d.f and the object returned by RooAbsPdf::createProjection.; The actual projection integral for it value and normalization are; calculated on the fly in getVal() once the normalization observables are known.; Class RooProjectedPdf can cache projected p.d.f.s for multiple normalization; observables simultaneously.; The createProjection() method of RooProjectedPdf is overloaded and will; return a new RooProjectedPdf that performs the projection of itself; and the requested additional projections in one integration step; The performance of <pre>f->createProjection(x)->createProjection(y)</pre>; is therefore identical to that of <pre>f->createProjection(RooArgSet(x,y))</pre>; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:1165,Integrability,integrat,integration,1165,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProjectedPdf.cxx; \class RooProjectedPdf; \ingroup Roofitcore. A RooAbsPdf implementation that represent a projection; of a given input p.d.f and the object returned by RooAbsPdf::createProjection.; The actual projection integral for it value and normalization are; calculated on the fly in getVal() once the normalization observables are known.; Class RooProjectedPdf can cache projected p.d.f.s for multiple normalization; observables simultaneously.; The createProjection() method of RooProjectedPdf is overloaded and will; return a new RooProjectedPdf that performs the projection of itself; and the requested additional projections in one integration step; The performance of <pre>f->createProjection(x)->createProjection(y)</pre>; is therefore identical to that of <pre>f->createProjection(RooArgSet(x,y))</pre>; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:894,Performance,cache,cache,894,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProjectedPdf.cxx; \class RooProjectedPdf; \ingroup Roofitcore. A RooAbsPdf implementation that represent a projection; of a given input p.d.f and the object returned by RooAbsPdf::createProjection.; The actual projection integral for it value and normalization are; calculated on the fly in getVal() once the normalization observables are known.; Class RooProjectedPdf can cache projected p.d.f.s for multiple normalization; observables simultaneously.; The createProjection() method of RooProjectedPdf is overloaded and will; return a new RooProjectedPdf that performs the projection of itself; and the requested additional projections in one integration step; The performance of <pre>f->createProjection(x)->createProjection(y)</pre>; is therefore identical to that of <pre>f->createProjection(RooArgSet(x,y))</pre>; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:1082,Performance,perform,performs,1082,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProjectedPdf.cxx; \class RooProjectedPdf; \ingroup Roofitcore. A RooAbsPdf implementation that represent a projection; of a given input p.d.f and the object returned by RooAbsPdf::createProjection.; The actual projection integral for it value and normalization are; calculated on the fly in getVal() once the normalization observables are known.; Class RooProjectedPdf can cache projected p.d.f.s for multiple normalization; observables simultaneously.; The createProjection() method of RooProjectedPdf is overloaded and will; return a new RooProjectedPdf that performs the projection of itself; and the requested additional projections in one integration step; The performance of <pre>f->createProjection(x)->createProjection(y)</pre>; is therefore identical to that of <pre>f->createProjection(RooArgSet(x,y))</pre>; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:1187,Performance,perform,performance,1187,"/*****************************************************************************; * Project: RooFit *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProjectedPdf.cxx; \class RooProjectedPdf; \ingroup Roofitcore. A RooAbsPdf implementation that represent a projection; of a given input p.d.f and the object returned by RooAbsPdf::createProjection.; The actual projection integral for it value and normalization are; calculated on the fly in getVal() once the normalization observables are known.; Class RooProjectedPdf can cache projected p.d.f.s for multiple normalization; observables simultaneously.; The createProjection() method of RooProjectedPdf is overloaded and will; return a new RooProjectedPdf that performs the projection of itself; and the requested additional projections in one integration step; The performance of <pre>f->createProjection(x)->createProjection(y)</pre>; is therefore identical to that of <pre>f->createProjection(RooArgSet(x,y))</pre>; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:160,Deployability,Integrat,Integration,160,"// Since a projected PDF is an integral, we can use the same logic from; // RooRealIntegral via the projection integral to figure out what the; // servers are. Integration observables will be shape servers, the other; // servers are value servers.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:160,Integrability,Integrat,Integration,160,"// Since a projected PDF is an integral, we can use the same logic from; // RooRealIntegral via the projection integral to figure out what the; // servers are. Integration observables will be shape servers, the other; // servers are value servers.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:61,Testability,log,logic,61,"// Since a projected PDF is an integral, we can use the same logic from; // RooRealIntegral via the projection integral to figure out what the; // servers are. Integration observables will be shape servers, the other; // servers are value servers.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:324,Deployability,configurat,configuration,324,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve object representing projection integral of input p.d.f; /// over observables iset, while normalizing over observables; /// nset. The code argument returned by reference is the unique code; /// defining this particular projection configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:324,Modifiability,config,configuration,324,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve object representing projection integral of input p.d.f; /// over observables iset, while normalizing over observables; /// nset. The code argument returned by reference is the unique code; /// defining this particular projection configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:17,Deployability,configurat,configuration,17,"// Check if this configuration was created before",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:17,Modifiability,config,configuration,17,"// Check if this configuration was created before",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:194,Deployability,integrat,integrating,194,"////////////////////////////////////////////////////////////////////////////////; /// Special version of RooAbsReal::createProjection that deals with; /// projections of projections. Instead of integrating twice, a new; /// RooProjectedPdf is returned that is configured to perform the; /// complete integration in one step",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:300,Deployability,integrat,integration,300,"////////////////////////////////////////////////////////////////////////////////; /// Special version of RooAbsReal::createProjection that deals with; /// projections of projections. Instead of integrating twice, a new; /// RooProjectedPdf is returned that is configured to perform the; /// complete integration in one step",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:194,Integrability,integrat,integrating,194,"////////////////////////////////////////////////////////////////////////////////; /// Special version of RooAbsReal::createProjection that deals with; /// projections of projections. Instead of integrating twice, a new; /// RooProjectedPdf is returned that is configured to perform the; /// complete integration in one step",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:300,Integrability,integrat,integration,300,"////////////////////////////////////////////////////////////////////////////////; /// Special version of RooAbsReal::createProjection that deals with; /// projections of projections. Instead of integrating twice, a new; /// RooProjectedPdf is returned that is configured to perform the; /// complete integration in one step",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:260,Modifiability,config,configured,260,"////////////////////////////////////////////////////////////////////////////////; /// Special version of RooAbsReal::createProjection that deals with; /// projections of projections. Instead of integrating twice, a new; /// RooProjectedPdf is returned that is configured to perform the; /// complete integration in one step",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:274,Performance,perform,perform,274,"////////////////////////////////////////////////////////////////////////////////; /// Special version of RooAbsReal::createProjection that deals with; /// projections of projections. Instead of integrating twice, a new; /// RooProjectedPdf is returned that is configured to perform the; /// complete integration in one step",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:120,Deployability,integrat,integration,120,"////////////////////////////////////////////////////////////////////////////////; /// Force RooRealIntegral to relegate integration of all observables to internal logic",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:120,Integrability,integrat,integration,120,"////////////////////////////////////////////////////////////////////////////////; /// Force RooRealIntegral to relegate integration of all observables to internal logic",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:163,Testability,log,logic,163,"////////////////////////////////////////////////////////////////////////////////; /// Force RooRealIntegral to relegate integration of all observables to internal logic",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:129,Deployability,integrat,integrated,129,"////////////////////////////////////////////////////////////////////////////////; /// Mark all requested variables as internally integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:129,Integrability,integrat,integrated,129,"////////////////////////////////////////////////////////////////////////////////; /// Mark all requested variables as internally integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:105,Modifiability,variab,variables,105,"////////////////////////////////////////////////////////////////////////////////; /// Mark all requested variables as internally integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:160,Performance,cache,cache,160,"////////////////////////////////////////////////////////////////////////////////; /// Return analytical integral represent by appropriate element of projection cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:125,Deployability,update,update,125,"////////////////////////////////////////////////////////////////////////////////; /// Intercept a server redirection all and update list of dependents if necessary; /// Specifically update the set proxy 'deps' which introduces the dependency; /// on server value dirty flags of ourselves",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:182,Deployability,update,update,182,"////////////////////////////////////////////////////////////////////////////////; /// Intercept a server redirection all and update list of dependents if necessary; /// Specifically update the set proxy 'deps' which introduces the dependency; /// on server value dirty flags of ourselves",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:140,Integrability,depend,dependents,140,"////////////////////////////////////////////////////////////////////////////////; /// Intercept a server redirection all and update list of dependents if necessary; /// Specifically update the set proxy 'deps' which introduces the dependency; /// on server value dirty flags of ourselves",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:231,Integrability,depend,dependency,231,"////////////////////////////////////////////////////////////////////////////////; /// Intercept a server redirection all and update list of dependents if necessary; /// Specifically update the set proxy 'deps' which introduces the dependency; /// on server value dirty flags of ourselves",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:32,Integrability,depend,dependents,32,"// Redetermine explicit list of dependents if intPdf is being replaced",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:23,Integrability,depend,dependens,23,"// Determine if set of dependens of new p.d.f is different from old p.d.f.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:136,Performance,cache,cache,136,"////////////////////////////////////////////////////////////////////////////////; /// Return RooAbsArg elements contained in projection cache element.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:193,Deployability,integrat,integration,193,"////////////////////////////////////////////////////////////////////////////////; /// Customized printing of arguments of a RooRealIntegral to more intuitively reflect the contents of the; /// integration operation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:193,Integrability,integrat,integration,193,"////////////////////////////////////////////////////////////////////////////////; /// Customized printing of arguments of a RooRealIntegral to more intuitively reflect the contents of the; /// integration operation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:148,Usability,intuit,intuitively,148,"////////////////////////////////////////////////////////////////////////////////; /// Customized printing of arguments of a RooRealIntegral to more intuitively reflect the contents of the; /// integration operation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:104,Performance,cache,cache,104,"////////////////////////////////////////////////////////////////////////////////; /// Print contents of cache when printing self as part of object tree",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooProjectedPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx:852,Availability,error,error,852,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooPullVar.cxx; \class RooPullVar; \ingroup Roofitcore. Represents the pull of a measurement w.r.t. the true value; using the measurement and its error. Both the true value and; the measured value (with error) are taken from two user-supplied; RooRealVars. If the measured parameter has an asymmetric error, the proper; side of that error will be used:; \f[; \mathrm{Pull}_x = \frac{x_\mathrm{meas}-x_\mathrm{true}}{\Delta_x}; \f]; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPullVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx:909,Availability,error,error,909,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooPullVar.cxx; \class RooPullVar; \ingroup Roofitcore. Represents the pull of a measurement w.r.t. the true value; using the measurement and its error. Both the true value and; the measured value (with error) are taken from two user-supplied; RooRealVars. If the measured parameter has an asymmetric error, the proper; side of that error will be used:; \f[; \mathrm{Pull}_x = \frac{x_\mathrm{meas}-x_\mathrm{true}}{\Delta_x}; \f]; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPullVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx:1007,Availability,error,error,1007,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooPullVar.cxx; \class RooPullVar; \ingroup Roofitcore. Represents the pull of a measurement w.r.t. the true value; using the measurement and its error. Both the true value and; the measured value (with error) are taken from two user-supplied; RooRealVars. If the measured parameter has an asymmetric error, the proper; side of that error will be used:; \f[; \mathrm{Pull}_x = \frac{x_\mathrm{meas}-x_\mathrm{true}}{\Delta_x}; \f]; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPullVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx:1039,Availability,error,error,1039,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooPullVar.cxx; \class RooPullVar; \ingroup Roofitcore. Represents the pull of a measurement w.r.t. the true value; using the measurement and its error. Both the true value and; the measured value (with error) are taken from two user-supplied; RooRealVars. If the measured parameter has an asymmetric error, the proper; side of that error will be used:; \f[; \mathrm{Pull}_x = \frac{x_\mathrm{meas}-x_\mathrm{true}}{\Delta_x}; \f]; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPullVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx:301,Availability,error,error,301,"////////////////////////////////////////////////////////////////////////////////; /// Construct the pull of the RooRealVar 'meas'.; ///; /// \param[in] name Name of the pull variable.; /// \param[in] title The title (for plotting).; /// \param[in] meas The measurement. This variable needs to have an error, and therefore is a RooRealVar.; /// \param[in] truth The true value.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPullVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx:174,Modifiability,variab,variable,174,"////////////////////////////////////////////////////////////////////////////////; /// Construct the pull of the RooRealVar 'meas'.; ///; /// \param[in] name Name of the pull variable.; /// \param[in] title The title (for plotting).; /// \param[in] meas The measurement. This variable needs to have an error, and therefore is a RooRealVar.; /// \param[in] truth The true value.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPullVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx:275,Modifiability,variab,variable,275,"////////////////////////////////////////////////////////////////////////////////; /// Construct the pull of the RooRealVar 'meas'.; ///; /// \param[in] name Name of the pull variable.; /// \param[in] title The title (for plotting).; /// \param[in] meas The measurement. This variable needs to have an error, and therefore is a RooRealVar.; /// \param[in] truth The true value.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPullVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx:117,Availability,error,error,117,"////////////////////////////////////////////////////////////////////////////////; /// Calculate pull. Use asymmetric error if defined in measurement,; /// otherwise use symmetric error. If measurement has no error; /// return zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPullVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx:179,Availability,error,error,179,"////////////////////////////////////////////////////////////////////////////////; /// Calculate pull. Use asymmetric error if defined in measurement,; /// otherwise use symmetric error. If measurement has no error; /// return zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPullVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx:208,Availability,error,error,208,"////////////////////////////////////////////////////////////////////////////////; /// Calculate pull. Use asymmetric error if defined in measurement,; /// otherwise use symmetric error. If measurement has no error; /// return zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooPullVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx:1062,Deployability,release,release,1062,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooQuasiRandomGenerator.cxx; \class RooQuasiRandomGenerator; \ingroup Roofitcore. This class generates the quasi-random (aka ""low discrepancy""); sequence for dimensions up to 12 using the Niederreiter base 2; algorithm described in Bratley, Fox, Niederreiter, ACM Trans.; Model. Comp. Sim. 2, 195 (1992). This implementation was adapted; from the 0.9 beta release of the GNU scientific library.; Quasi-random number sequences are useful for improving the; convergence of a Monte Carlo integration.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx:1191,Deployability,integrat,integration,1191,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooQuasiRandomGenerator.cxx; \class RooQuasiRandomGenerator; \ingroup Roofitcore. This class generates the quasi-random (aka ""low discrepancy""); sequence for dimensions up to 12 using the Niederreiter base 2; algorithm described in Bratley, Fox, Niederreiter, ACM Trans.; Model. Comp. Sim. 2, 195 (1992). This implementation was adapted; from the 0.9 beta release of the GNU scientific library.; Quasi-random number sequences are useful for improving the; convergence of a Monte Carlo integration.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx:1035,Energy Efficiency,adapt,adapted,1035,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooQuasiRandomGenerator.cxx; \class RooQuasiRandomGenerator; \ingroup Roofitcore. This class generates the quasi-random (aka ""low discrepancy""); sequence for dimensions up to 12 using the Niederreiter base 2; algorithm described in Bratley, Fox, Niederreiter, ACM Trans.; Model. Comp. Sim. 2, 195 (1992). This implementation was adapted; from the 0.9 beta release of the GNU scientific library.; Quasi-random number sequences are useful for improving the; convergence of a Monte Carlo integration.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx:1191,Integrability,integrat,integration,1191,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooQuasiRandomGenerator.cxx; \class RooQuasiRandomGenerator; \ingroup Roofitcore. This class generates the quasi-random (aka ""low discrepancy""); sequence for dimensions up to 12 using the Niederreiter base 2; algorithm described in Bratley, Fox, Niederreiter, ACM Trans.; Model. Comp. Sim. 2, 195 (1992). This implementation was adapted; from the 0.9 beta release of the GNU scientific library.; Quasi-random number sequences are useful for improving the; convergence of a Monte Carlo integration.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx:1035,Modifiability,adapt,adapted,1035,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooQuasiRandomGenerator.cxx; \class RooQuasiRandomGenerator; \ingroup Roofitcore. This class generates the quasi-random (aka ""low discrepancy""); sequence for dimensions up to 12 using the Niederreiter base 2; algorithm described in Bratley, Fox, Niederreiter, ACM Trans.; Model. Comp. Sim. 2, 195 (1992). This implementation was adapted; from the 0.9 beta release of the GNU scientific library.; Quasi-random number sequences are useful for improving the; convergence of a Monte Carlo integration.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform one-time initialization of our static coefficient array if necessary; /// and initialize our workspace.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx:3,Energy Efficiency,allocate,allocate,3,"// allocate workspace memory",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx:3,Performance,Load,Load,3,/* Load the result from the saved state. */,MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx:61,Modifiability,variab,variables,61,"/* Niederreiter (page 56, after equation (7), defines two; * variables Q and U. We do not need Q explicitly, but we; * do need U.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx:44,Energy Efficiency,power,powers,44,"/* For each dimension, we need to calculate powers of an; * appropriate irreducible polynomial, see Niederreiter; * page 65, just below equation (19).; * Copy the appropriate irreducible polynomial into PX,; * and its degree into E. Set polynomial B = PX ** 0 = 1.; * M is the degree of B. Subsequently B will hold higher; * powers of PX.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx:325,Energy Efficiency,power,powers,325,"/* For each dimension, we need to calculate powers of an; * appropriate irreducible polynomial, see Niederreiter; * page 65, just below equation (19).; * Copy the appropriate irreducible polynomial into PX,; * and its degree into E. Set polynomial B = PX ** 0 = 1.; * M is the degree of B. Subsequently B will hold higher; * powers of PX.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx:42,Energy Efficiency,power,power,42,"/* If U = 0, we need to set B to the next power of PX; * and recalculate V.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx:32,Modifiability,variab,variables,32,/* Advance Niederreiter's state variables. */,MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandom.cxx:789,Integrability,interface,interface,789,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRandom.cxx; \class RooRandom; \ingroup Roofitcore. This class provides a static interface for generating random numbers.; By default a private copy of TRandom3 is used to generate all random numbers.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRandom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandom.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandom.cxx:111,Modifiability,variab,variable,111,"////////////////////////////////////////////////////////////////////////////////; /// Return a Gaussian random variable with mean 0 and variance 1.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRandom.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandom.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:1013,Modifiability,variab,variable,1013,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRandomizeParamMCSModule.cxx; \class RooRandomizeParamMCSModule; \ingroup Roofitcore. Add-on module to RooMCStudy that; allows you to randomize input generation parameters. Randomized generation; parameters can be sampled from a uniform or Gaussian distribution.; For every randomized parameter, an extra variable is added to; RooMCStudy::fitParDataSet() named <tt>`<parname>`_gen</tt> that indicates the actual; value used for generation for each trial.; You can also choose to randomize the sum of N parameters, rather; than a single parameter. In that case common multiplicative scale; factor is applied to each component to bring the sum to the desired; target value taken from either uniform or Gaussian sampling. This; latter option is for example useful if you want to change the total; number of expected events of an extended p.d.f; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:1534,Modifiability,extend,extended,1534,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRandomizeParamMCSModule.cxx; \class RooRandomizeParamMCSModule; \ingroup Roofitcore. Add-on module to RooMCStudy that; allows you to randomize input generation parameters. Randomized generation; parameters can be sampled from a uniform or Gaussian distribution.; For every randomized parameter, an extra variable is added to; RooMCStudy::fitParDataSet() named <tt>`<parname>`_gen</tt> that indicates the actual; value used for generation for each trial.; You can also choose to randomize the sum of N parameters, rather; than a single parameter. In that case common multiplicative scale; factor is applied to each component to bring the sum to the desired; target value taken from either uniform or Gaussian sampling. This; latter option is for example useful if you want to change the total; number of expected events of an extended p.d.f; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:26,Availability,avail,available,26,"// If genParams() are not available, skip this check for now",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:26,Availability,avail,available,26,"// If genParams() are not available, skip this check for now",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:21,Modifiability,variab,variable,21,"// Check that listed variable is actual generator model parameter",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:7,Modifiability,variab,variable,7,"// Add variable to summary dataset to hold generator value",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:21,Modifiability,variab,variable,21,"// Check that listed variable is actual generator model parameter",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:7,Modifiability,variab,variable,7,"// Add variable to summary dataset to hold generator value",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:25,Modifiability,variab,variables,25,"// Check that all listed variables are actual generator model parameters",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:7,Modifiability,variab,variables,7,"// Add variables to summary dataset to hold generator values",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:25,Modifiability,variab,variables,25,"// Check that all listed variables are actual generator model parameters",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:7,Modifiability,variab,variables,7,"// Add variables to summary dataset to hold generator values",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:3,Usability,Clear,Clear,3,"// Clear dataset at beginning of run",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRangeBoolean.cxx:789,Modifiability,variab,variable,789,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRangeBoolean.cxx; \class RooRangeBoolean; \ingroup Roofitcore. Returns `1.0` if variable is within given a range and `0.0` otherwise.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRangeBoolean.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRangeBoolean.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:792,Energy Efficiency,adapt,adaptor,792,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealBinding.cxx; \class RooRealBinding; \ingroup Roofitcore. Lightweight interface adaptor that binds a RooAbsReal object to a subset; of its servers and present it as a simple array oriented interface.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:782,Integrability,interface,interface,782,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealBinding.cxx; \class RooRealBinding; \ingroup Roofitcore. Lightweight interface adaptor that binds a RooAbsReal object to a subset; of its servers and present it as a simple array oriented interface.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:901,Integrability,interface,interface,901,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealBinding.cxx; \class RooRealBinding; \ingroup Roofitcore. Lightweight interface adaptor that binds a RooAbsReal object to a subset; of its servers and present it as a simple array oriented interface.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:792,Modifiability,adapt,adaptor,792,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealBinding.cxx; \class RooRealBinding; \ingroup Roofitcore. Lightweight interface adaptor that binds a RooAbsReal object to a subset; of its servers and present it as a simple array oriented interface.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:879,Usability,simpl,simple,879,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealBinding.cxx; \class RooRealBinding; \ingroup Roofitcore. Lightweight interface adaptor that binds a RooAbsReal object to a subset; of its servers and present it as a simple array oriented interface.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:154,Modifiability,variab,variables,154,"////////////////////////////////////////////////////////////////////////////////; /// Construct a lightweight function binding of RooAbsReal func to; /// variables 'vars'. Use the provided nset as normalization set to; /// be passed to RooAbsReal::getVal() If rangeName is not null, use; /// the range of with that name as range associated with the; /// variables of this function binding. If clipInvalid is true,; /// values requested to the function binding that are outside the; /// defined range of the variables are clipped to fit in the defined; /// range.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:354,Modifiability,variab,variables,354,"////////////////////////////////////////////////////////////////////////////////; /// Construct a lightweight function binding of RooAbsReal func to; /// variables 'vars'. Use the provided nset as normalization set to; /// be passed to RooAbsReal::getVal() If rangeName is not null, use; /// the range of with that name as range associated with the; /// variables of this function binding. If clipInvalid is true,; /// values requested to the function binding that are outside the; /// defined range of the variables are clipped to fit in the defined; /// range.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:507,Modifiability,variab,variables,507,"////////////////////////////////////////////////////////////////////////////////; /// Construct a lightweight function binding of RooAbsReal func to; /// variables 'vars'. Use the provided nset as normalization set to; /// be passed to RooAbsReal::getVal() If rangeName is not null, use; /// the range of with that name as range associated with the; /// variables of this function binding. If clipInvalid is true,; /// values requested to the function binding that are outside the; /// defined range of the variables are clipped to fit in the defined; /// range.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:154,Modifiability,variab,variables,154,"////////////////////////////////////////////////////////////////////////////////; /// Construct a lightweight function binding of RooAbsReal func to; /// variables 'vars'. Use the provided nset as normalization set to; /// be passed to RooAbsReal::getVal() If rangeName is not null, use; /// the range of with that name as range associated with the; /// variables of this function binding. If clipInvalid is true,; /// values requested to the function binding that are outside the; /// defined range of the variables are clipped to fit in the defined; /// range.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:354,Modifiability,variab,variables,354,"////////////////////////////////////////////////////////////////////////////////; /// Construct a lightweight function binding of RooAbsReal func to; /// variables 'vars'. Use the provided nset as normalization set to; /// be passed to RooAbsReal::getVal() If rangeName is not null, use; /// the range of with that name as range associated with the; /// variables of this function binding. If clipInvalid is true,; /// values requested to the function binding that are outside the; /// defined range of the variables are clipped to fit in the defined; /// range.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:507,Modifiability,variab,variables,507,"////////////////////////////////////////////////////////////////////////////////; /// Construct a lightweight function binding of RooAbsReal func to; /// variables 'vars'. Use the provided nset as normalization set to; /// be passed to RooAbsReal::getVal() If rangeName is not null, use; /// the range of with that name as range associated with the; /// variables of this function binding. If clipInvalid is true,; /// values requested to the function binding that are outside the; /// defined range of the variables are clipped to fit in the defined; /// range.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:104,Modifiability,variab,variables,104,"////////////////////////////////////////////////////////////////////////////////; /// Save value of all variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:107,Modifiability,variab,variables,107,"////////////////////////////////////////////////////////////////////////////////; /// Restore value of all variables to previously; /// saved values by saveXVec()",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:105,Modifiability,variab,variable,105,"////////////////////////////////////////////////////////////////////////////////; /// Load the vector of variable values into the RooRealVars associated; /// as variables with the bound RooAbsReal function.; /// \warning This will load as many values as the dimensionality of the function; /// requires. The size of `xvector` is not checked.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:161,Modifiability,variab,variables,161,"////////////////////////////////////////////////////////////////////////////////; /// Load the vector of variable values into the RooRealVars associated; /// as variables with the bound RooAbsReal function.; /// \warning This will load as many values as the dimensionality of the function; /// requires. The size of `xvector` is not checked.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load the vector of variable values into the RooRealVars associated; /// as variables with the bound RooAbsReal function.; /// \warning This will load as many values as the dimensionality of the function; /// requires. The size of `xvector` is not checked.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:231,Performance,load,load,231,"////////////////////////////////////////////////////////////////////////////////; /// Load the vector of variable values into the RooRealVars associated; /// as variables with the bound RooAbsReal function.; /// \warning This will load as many values as the dimensionality of the function; /// requires. The size of `xvector` is not checked.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:123,Modifiability,variab,variable,123,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate the bound RooAbsReal at the variable values provided in xvector",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:113,Modifiability,variab,variable,113,"////////////////////////////////////////////////////////////////////////////////; /// Return lower limit on i-th variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:113,Modifiability,variab,variable,113,"////////////////////////////////////////////////////////////////////////////////; /// Return upper limit on i-th variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealBinding.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealConstant.cxx:931,Usability,simpl,simply,931,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealConstant.cxx; \class RooRealConstant; \ingroup Roofitcore. Provides static functions to create and keep track; of RooRealVar constants. Instead of creating such constants by; hand (e.g. RooRealVar one(""one"",""one"",1)), simply use; ~~~{.cpp}; RooRealConstant::value(1.0); ~~~; whenever a reference to RooRealVar with constant value 1.0 is needed.; RooRealConstant keeps an internal database of previously created; RooRealVar objects and will recycle them as appropriate.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealConstant.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealConstant.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealConstant.cxx:176,Availability,avail,available,176,"////////////////////////////////////////////////////////////////////////////////; /// Return a constant value object with given value.; /// Return previously created object if available,; /// otherwise create a new one on the fly.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealConstant.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealConstant.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:881,Deployability,integrat,integration,881,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealIntegral.cxx; \class RooRealIntegral; \ingroup Roofitcore. Performs hybrid numerical/analytical integrals of RooAbsReal objects.; The class performs none of the actual integration, but only manages the logic; of what variables can be integrated analytically, accounts for eventual jacobian; terms and defines what numerical integrations needs to be done to complement the; analytical integral.; The actual analytical integrations (if any) are done in the PDF themselves, the numerical; integration is performed in the various implementations of the RooAbsIntegrator base class.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:947,Deployability,integrat,integrated,947,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealIntegral.cxx; \class RooRealIntegral; \ingroup Roofitcore. Performs hybrid numerical/analytical integrals of RooAbsReal objects.; The class performs none of the actual integration, but only manages the logic; of what variables can be integrated analytically, accounts for eventual jacobian; terms and defines what numerical integrations needs to be done to complement the; analytical integral.; The actual analytical integrations (if any) are done in the PDF themselves, the numerical; integration is performed in the various implementations of the RooAbsIntegrator base class.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:1037,Deployability,integrat,integrations,1037,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealIntegral.cxx; \class RooRealIntegral; \ingroup Roofitcore. Performs hybrid numerical/analytical integrals of RooAbsReal objects.; The class performs none of the actual integration, but only manages the logic; of what variables can be integrated analytically, accounts for eventual jacobian; terms and defines what numerical integrations needs to be done to complement the; analytical integral.; The actual analytical integrations (if any) are done in the PDF themselves, the numerical; integration is performed in the various implementations of the RooAbsIntegrator base class.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:1130,Deployability,integrat,integrations,1130,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealIntegral.cxx; \class RooRealIntegral; \ingroup Roofitcore. Performs hybrid numerical/analytical integrals of RooAbsReal objects.; The class performs none of the actual integration, but only manages the logic; of what variables can be integrated analytically, accounts for eventual jacobian; terms and defines what numerical integrations needs to be done to complement the; analytical integral.; The actual analytical integrations (if any) are done in the PDF themselves, the numerical; integration is performed in the various implementations of the RooAbsIntegrator base class.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:1199,Deployability,integrat,integration,1199,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealIntegral.cxx; \class RooRealIntegral; \ingroup Roofitcore. Performs hybrid numerical/analytical integrals of RooAbsReal objects.; The class performs none of the actual integration, but only manages the logic; of what variables can be integrated analytically, accounts for eventual jacobian; terms and defines what numerical integrations needs to be done to complement the; analytical integral.; The actual analytical integrations (if any) are done in the PDF themselves, the numerical; integration is performed in the various implementations of the RooAbsIntegrator base class.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:881,Integrability,integrat,integration,881,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealIntegral.cxx; \class RooRealIntegral; \ingroup Roofitcore. Performs hybrid numerical/analytical integrals of RooAbsReal objects.; The class performs none of the actual integration, but only manages the logic; of what variables can be integrated analytically, accounts for eventual jacobian; terms and defines what numerical integrations needs to be done to complement the; analytical integral.; The actual analytical integrations (if any) are done in the PDF themselves, the numerical; integration is performed in the various implementations of the RooAbsIntegrator base class.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:947,Integrability,integrat,integrated,947,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealIntegral.cxx; \class RooRealIntegral; \ingroup Roofitcore. Performs hybrid numerical/analytical integrals of RooAbsReal objects.; The class performs none of the actual integration, but only manages the logic; of what variables can be integrated analytically, accounts for eventual jacobian; terms and defines what numerical integrations needs to be done to complement the; analytical integral.; The actual analytical integrations (if any) are done in the PDF themselves, the numerical; integration is performed in the various implementations of the RooAbsIntegrator base class.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:1037,Integrability,integrat,integrations,1037,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealIntegral.cxx; \class RooRealIntegral; \ingroup Roofitcore. Performs hybrid numerical/analytical integrals of RooAbsReal objects.; The class performs none of the actual integration, but only manages the logic; of what variables can be integrated analytically, accounts for eventual jacobian; terms and defines what numerical integrations needs to be done to complement the; analytical integral.; The actual analytical integrations (if any) are done in the PDF themselves, the numerical; integration is performed in the various implementations of the RooAbsIntegrator base class.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:1130,Integrability,integrat,integrations,1130,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealIntegral.cxx; \class RooRealIntegral; \ingroup Roofitcore. Performs hybrid numerical/analytical integrals of RooAbsReal objects.; The class performs none of the actual integration, but only manages the logic; of what variables can be integrated analytically, accounts for eventual jacobian; terms and defines what numerical integrations needs to be done to complement the; analytical integral.; The actual analytical integrations (if any) are done in the PDF themselves, the numerical; integration is performed in the various implementations of the RooAbsIntegrator base class.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:1199,Integrability,integrat,integration,1199,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealIntegral.cxx; \class RooRealIntegral; \ingroup Roofitcore. Performs hybrid numerical/analytical integrals of RooAbsReal objects.; The class performs none of the actual integration, but only manages the logic; of what variables can be integrated analytically, accounts for eventual jacobian; terms and defines what numerical integrations needs to be done to complement the; analytical integral.; The actual analytical integrations (if any) are done in the PDF themselves, the numerical; integration is performed in the various implementations of the RooAbsIntegrator base class.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:930,Modifiability,variab,variables,930,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealIntegral.cxx; \class RooRealIntegral; \ingroup Roofitcore. Performs hybrid numerical/analytical integrals of RooAbsReal objects.; The class performs none of the actual integration, but only manages the logic; of what variables can be integrated analytically, accounts for eventual jacobian; terms and defines what numerical integrations needs to be done to complement the; analytical integral.; The actual analytical integrations (if any) are done in the PDF themselves, the numerical; integration is performed in the various implementations of the RooAbsIntegrator base class.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:772,Performance,Perform,Performs,772,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealIntegral.cxx; \class RooRealIntegral; \ingroup Roofitcore. Performs hybrid numerical/analytical integrals of RooAbsReal objects.; The class performs none of the actual integration, but only manages the logic; of what variables can be integrated analytically, accounts for eventual jacobian; terms and defines what numerical integrations needs to be done to complement the; analytical integral.; The actual analytical integrations (if any) are done in the PDF themselves, the numerical; integration is performed in the various implementations of the RooAbsIntegrator base class.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:853,Performance,perform,performs,853,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealIntegral.cxx; \class RooRealIntegral; \ingroup Roofitcore. Performs hybrid numerical/analytical integrals of RooAbsReal objects.; The class performs none of the actual integration, but only manages the logic; of what variables can be integrated analytically, accounts for eventual jacobian; terms and defines what numerical integrations needs to be done to complement the; analytical integral.; The actual analytical integrations (if any) are done in the PDF themselves, the numerical; integration is performed in the various implementations of the RooAbsIntegrator base class.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:1214,Performance,perform,performed,1214,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealIntegral.cxx; \class RooRealIntegral; \ingroup Roofitcore. Performs hybrid numerical/analytical integrals of RooAbsReal objects.; The class performs none of the actual integration, but only manages the logic; of what variables can be integrated analytically, accounts for eventual jacobian; terms and defines what numerical integrations needs to be done to complement the; analytical integral.; The actual analytical integrations (if any) are done in the PDF themselves, the numerical; integration is performed in the various implementations of the RooAbsIntegrator base class.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:915,Testability,log,logic,915,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealIntegral.cxx; \class RooRealIntegral; \ingroup Roofitcore. Performs hybrid numerical/analytical integrals of RooAbsReal objects.; The class performs none of the actual integration, but only manages the logic; of what variables can be integrated analytically, accounts for eventual jacobian; terms and defines what numerical integrations needs to be done to complement the; analytical integral.; The actual analytical integrations (if any) are done in the PDF themselves, the numerical; integration is performed in the various implementations of the RooAbsIntegrator base class.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:129,Availability,avail,available,129,"// Determine if given server serves exclusively exactly one of the given nodes in exclLVBranches; // Special case, no LV servers available",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:108,Deployability,integrat,integration,108,"// We don't want to consider the function itself; // Mark all args that are (indirect) value servers of the integration; // variable or the integration variable itself. If something was marked,; // it means the integration variable was in the compute graph and we will; // add it to the server list.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:140,Deployability,integrat,integration,140,"// We don't want to consider the function itself; // Mark all args that are (indirect) value servers of the integration; // variable or the integration variable itself. If something was marked,; // it means the integration variable was in the compute graph and we will; // add it to the server list.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:211,Deployability,integrat,integration,211,"// We don't want to consider the function itself; // Mark all args that are (indirect) value servers of the integration; // variable or the integration variable itself. If something was marked,; // it means the integration variable was in the compute graph and we will; // add it to the server list.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:108,Integrability,integrat,integration,108,"// We don't want to consider the function itself; // Mark all args that are (indirect) value servers of the integration; // variable or the integration variable itself. If something was marked,; // it means the integration variable was in the compute graph and we will; // add it to the server list.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:140,Integrability,integrat,integration,140,"// We don't want to consider the function itself; // Mark all args that are (indirect) value servers of the integration; // variable or the integration variable itself. If something was marked,; // it means the integration variable was in the compute graph and we will; // add it to the server list.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:211,Integrability,integrat,integration,211,"// We don't want to consider the function itself; // Mark all args that are (indirect) value servers of the integration; // variable or the integration variable itself. If something was marked,; // it means the integration variable was in the compute graph and we will; // add it to the server list.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:124,Modifiability,variab,variable,124,"// We don't want to consider the function itself; // Mark all args that are (indirect) value servers of the integration; // variable or the integration variable itself. If something was marked,; // it means the integration variable was in the compute graph and we will; // add it to the server list.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:152,Modifiability,variab,variable,152,"// We don't want to consider the function itself; // Mark all args that are (indirect) value servers of the integration; // variable or the integration variable itself. If something was marked,; // it means the integration variable was in the compute graph and we will; // add it to the server list.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:223,Modifiability,variab,variable,223,"// We don't want to consider the function itself; // Mark all args that are (indirect) value servers of the integration; // variable or the integration variable itself. If something was marked,; // it means the integration variable was in the compute graph and we will; // add it to the server list.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:81,Deployability,integrat,integration,81,"// We are adding all independent direct servers of the args depending on the; // integration variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:60,Integrability,depend,depending,60,"// We are adding all independent direct servers of the args depending on the; // integration variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:81,Integrability,integrat,integration,81,"// We are adding all independent direct servers of the args depending on the; // integration variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:93,Modifiability,variab,variables,93,"// We are adding all independent direct servers of the args depending on the; // integration variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:85,Deployability,integrat,integrated,85,"// If any of the branches in the computation graph of the function depend on; // the integrated variable, we can't do analytical integration. The only; // case where this would work is if the branch is an l-value with known; // Jacobian, but this case is already handled in step B) in the constructor; // by reexpressing the original integration variables in terms of; // higher-order l-values if possible.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:129,Deployability,integrat,integration,129,"// If any of the branches in the computation graph of the function depend on; // the integrated variable, we can't do analytical integration. The only; // case where this would work is if the branch is an l-value with known; // Jacobian, but this case is already handled in step B) in the constructor; // by reexpressing the original integration variables in terms of; // higher-order l-values if possible.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:334,Deployability,integrat,integration,334,"// If any of the branches in the computation graph of the function depend on; // the integrated variable, we can't do analytical integration. The only; // case where this would work is if the branch is an l-value with known; // Jacobian, but this case is already handled in step B) in the constructor; // by reexpressing the original integration variables in terms of; // higher-order l-values if possible.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:67,Integrability,depend,depend,67,"// If any of the branches in the computation graph of the function depend on; // the integrated variable, we can't do analytical integration. The only; // case where this would work is if the branch is an l-value with known; // Jacobian, but this case is already handled in step B) in the constructor; // by reexpressing the original integration variables in terms of; // higher-order l-values if possible.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:85,Integrability,integrat,integrated,85,"// If any of the branches in the computation graph of the function depend on; // the integrated variable, we can't do analytical integration. The only; // case where this would work is if the branch is an l-value with known; // Jacobian, but this case is already handled in step B) in the constructor; // by reexpressing the original integration variables in terms of; // higher-order l-values if possible.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:129,Integrability,integrat,integration,129,"// If any of the branches in the computation graph of the function depend on; // the integrated variable, we can't do analytical integration. The only; // case where this would work is if the branch is an l-value with known; // Jacobian, but this case is already handled in step B) in the constructor; // by reexpressing the original integration variables in terms of; // higher-order l-values if possible.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:334,Integrability,integrat,integration,334,"// If any of the branches in the computation graph of the function depend on; // the integrated variable, we can't do analytical integration. The only; // case where this would work is if the branch is an l-value with known; // Jacobian, but this case is already handled in step B) in the constructor; // by reexpressing the original integration variables in terms of; // higher-order l-values if possible.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:96,Modifiability,variab,variable,96,"// If any of the branches in the computation graph of the function depend on; // the integrated variable, we can't do analytical integration. The only; // case where this would work is if the branch is an l-value with known; // Jacobian, but this case is already handled in step B) in the constructor; // by reexpressing the original integration variables in terms of; // higher-order l-values if possible.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:346,Modifiability,variab,variables,346,"// If any of the branches in the computation graph of the function depend on; // the integrated variable, we can't do analytical integration. The only; // case where this would work is if the branch is an l-value with known; // Jacobian, but this case is already handled in step B) in the constructor; // by reexpressing the original integration variables in terms of; // higher-order l-values if possible.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:32,Deployability,integrat,integration,32,"// It's ok if the branch is the integration variable itself",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:32,Integrability,integrat,integration,32,"// It's ok if the branch is the integration variable itself",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:44,Modifiability,variab,variable,44,"// It's ok if the branch is the integration variable itself",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:3,Integrability,Depend,Dependent,3,"// Dependent or parameter?",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:13,Deployability,integrat,integratable,13,"// Check for integratable AbsRealLValue",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:13,Integrability,integrat,integratable,13,"// Check for integratable AbsRealLValue",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:63,Deployability,integrat,integration,63,"// Add server to list of dependents that are OK for analytical integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:25,Integrability,depend,dependents,25,"// Add server to list of dependents that are OK for analytical integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:63,Integrability,integrat,integration,63,"// Add server to list of dependents that are OK for analytical integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:380,Deployability,integrat,integrations,380,"////////////////////////////////////////////////////////////////////////////////; /// Construct integral of 'function' over observables in 'depList'; /// in range 'rangeName' with normalization observables 'funcNormSet'; /// (for p.d.f.s). In the integral is performed to the maximum extent; /// possible the internal (analytical) integrals advertised by function.; /// The other integrations are performed numerically. The optional; /// config object prescribes how these numeric integrations are configured.; ///; /// \Note If pdf component selection was globally overridden to always include; /// all components (either with RooAbsReal::globalSelectComp(bool) or a; /// RooAbsReal::GlobalSelectComponentRAII), then any created integral will; /// ignore component selections during its lifetime. This is especially useful; /// when creating normalization or projection integrals.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:481,Deployability,integrat,integrations,481,"////////////////////////////////////////////////////////////////////////////////; /// Construct integral of 'function' over observables in 'depList'; /// in range 'rangeName' with normalization observables 'funcNormSet'; /// (for p.d.f.s). In the integral is performed to the maximum extent; /// possible the internal (analytical) integrals advertised by function.; /// The other integrations are performed numerically. The optional; /// config object prescribes how these numeric integrations are configured.; ///; /// \Note If pdf component selection was globally overridden to always include; /// all components (either with RooAbsReal::globalSelectComp(bool) or a; /// RooAbsReal::GlobalSelectComponentRAII), then any created integral will; /// ignore component selections during its lifetime. This is especially useful; /// when creating normalization or projection integrals.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:380,Integrability,integrat,integrations,380,"////////////////////////////////////////////////////////////////////////////////; /// Construct integral of 'function' over observables in 'depList'; /// in range 'rangeName' with normalization observables 'funcNormSet'; /// (for p.d.f.s). In the integral is performed to the maximum extent; /// possible the internal (analytical) integrals advertised by function.; /// The other integrations are performed numerically. The optional; /// config object prescribes how these numeric integrations are configured.; ///; /// \Note If pdf component selection was globally overridden to always include; /// all components (either with RooAbsReal::globalSelectComp(bool) or a; /// RooAbsReal::GlobalSelectComponentRAII), then any created integral will; /// ignore component selections during its lifetime. This is especially useful; /// when creating normalization or projection integrals.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:481,Integrability,integrat,integrations,481,"////////////////////////////////////////////////////////////////////////////////; /// Construct integral of 'function' over observables in 'depList'; /// in range 'rangeName' with normalization observables 'funcNormSet'; /// (for p.d.f.s). In the integral is performed to the maximum extent; /// possible the internal (analytical) integrals advertised by function.; /// The other integrations are performed numerically. The optional; /// config object prescribes how these numeric integrations are configured.; ///; /// \Note If pdf component selection was globally overridden to always include; /// all components (either with RooAbsReal::globalSelectComp(bool) or a; /// RooAbsReal::GlobalSelectComponentRAII), then any created integral will; /// ignore component selections during its lifetime. This is especially useful; /// when creating normalization or projection integrals.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:438,Modifiability,config,config,438,"////////////////////////////////////////////////////////////////////////////////; /// Construct integral of 'function' over observables in 'depList'; /// in range 'rangeName' with normalization observables 'funcNormSet'; /// (for p.d.f.s). In the integral is performed to the maximum extent; /// possible the internal (analytical) integrals advertised by function.; /// The other integrations are performed numerically. The optional; /// config object prescribes how these numeric integrations are configured.; ///; /// \Note If pdf component selection was globally overridden to always include; /// all components (either with RooAbsReal::globalSelectComp(bool) or a; /// RooAbsReal::GlobalSelectComponentRAII), then any created integral will; /// ignore component selections during its lifetime. This is especially useful; /// when creating normalization or projection integrals.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:498,Modifiability,config,configured,498,"////////////////////////////////////////////////////////////////////////////////; /// Construct integral of 'function' over observables in 'depList'; /// in range 'rangeName' with normalization observables 'funcNormSet'; /// (for p.d.f.s). In the integral is performed to the maximum extent; /// possible the internal (analytical) integrals advertised by function.; /// The other integrations are performed numerically. The optional; /// config object prescribes how these numeric integrations are configured.; ///; /// \Note If pdf component selection was globally overridden to always include; /// all components (either with RooAbsReal::globalSelectComp(bool) or a; /// RooAbsReal::GlobalSelectComponentRAII), then any created integral will; /// ignore component selections during its lifetime. This is especially useful; /// when creating normalization or projection integrals.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:259,Performance,perform,performed,259,"////////////////////////////////////////////////////////////////////////////////; /// Construct integral of 'function' over observables in 'depList'; /// in range 'rangeName' with normalization observables 'funcNormSet'; /// (for p.d.f.s). In the integral is performed to the maximum extent; /// possible the internal (analytical) integrals advertised by function.; /// The other integrations are performed numerically. The optional; /// config object prescribes how these numeric integrations are configured.; ///; /// \Note If pdf component selection was globally overridden to always include; /// all components (either with RooAbsReal::globalSelectComp(bool) or a; /// RooAbsReal::GlobalSelectComponentRAII), then any created integral will; /// ignore component selections during its lifetime. This is especially useful; /// when creating normalization or projection integrals.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:397,Performance,perform,performed,397,"////////////////////////////////////////////////////////////////////////////////; /// Construct integral of 'function' over observables in 'depList'; /// in range 'rangeName' with normalization observables 'funcNormSet'; /// (for p.d.f.s). In the integral is performed to the maximum extent; /// possible the internal (analytical) integrals advertised by function.; /// The other integrations are performed numerically. The optional; /// config object prescribes how these numeric integrations are configured.; ///; /// \Note If pdf component selection was globally overridden to always include; /// all components (either with RooAbsReal::globalSelectComp(bool) or a; /// RooAbsReal::GlobalSelectComponentRAII), then any created integral will; /// ignore component selections during its lifetime. This is especially useful; /// when creating normalization or projection integrals.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:213,Deployability,integrat,integrating,213,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:293,Deployability,integrat,integrated,293,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:441,Deployability,integrat,integrated,441,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:499,Deployability,integrat,integration,499,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:591,Deployability,integrat,integration,591,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:678,Deployability,integrat,integrated,678,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:731,Deployability,integrat,integrated,731,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:787,Deployability,integrat,integration,787,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:21,Integrability,depend,dependents,21,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:72,Integrability,depend,dependents,72,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:178,Integrability,depend,dependents,178,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:213,Integrability,integrat,integrating,213,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:293,Integrability,integrat,integrated,293,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:340,Integrability,depend,dependents,340,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:441,Integrability,integrat,integrated,441,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:499,Integrability,integrat,integration,499,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:551,Integrability,depend,dependents,551,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:591,Integrability,integrat,integration,591,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:678,Integrability,integrat,integrated,678,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:731,Integrability,integrat,integrated,731,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:787,Integrability,integrat,integration,787,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:511,Modifiability,variab,variables,511,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:32,Performance,cache,cache,32,"// Choose same expensive object cache as integrand",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:180,Deployability,integrat,integrator,180,"// cout << ""RRI::ctor("" << GetName() << "") setting expensive object cache to "" << &expensiveObjectCache() << "" as taken from "" << function.GetName() << std::endl ;; // Use objects integrator configuration if none is specified",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:191,Deployability,configurat,configuration,191,"// cout << ""RRI::ctor("" << GetName() << "") setting expensive object cache to "" << &expensiveObjectCache() << "" as taken from "" << function.GetName() << std::endl ;; // Use objects integrator configuration if none is specified",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:180,Integrability,integrat,integrator,180,"// cout << ""RRI::ctor("" << GetName() << "") setting expensive object cache to "" << &expensiveObjectCache() << "" as taken from "" << function.GetName() << std::endl ;; // Use objects integrator configuration if none is specified",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:191,Modifiability,config,configuration,191,"// cout << ""RRI::ctor("" << GetName() << "") setting expensive object cache to "" << &expensiveObjectCache() << "" as taken from "" << function.GetName() << std::endl ;; // Use objects integrator configuration if none is specified",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:68,Performance,cache,cache,68,"// cout << ""RRI::ctor("" << GetName() << "") setting expensive object cache to "" << &expensiveObjectCache() << "" as taken from "" << function.GetName() << std::endl ;; // Use objects integrator configuration if none is specified",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:104,Integrability,depend,dependent,104,"//_funcNormSet = funcNormSet ? (RooArgSet*)funcNormSet->snapshot(false) : 0 ;; // Make internal copy of dependent list",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:91,Integrability,depend,dependents,91,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * A) Check that all dependents are lvalues and filter out any; // dependents that the PDF doesn't explicitly depend on; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:137,Integrability,depend,dependents,137,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * A) Check that all dependents are lvalues and filter out any; // dependents that the PDF doesn't explicitly depend on; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:180,Integrability,depend,depend,180,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * A) Check that all dependents are lvalues and filter out any; // dependents that the PDF doesn't explicitly depend on; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:93,Integrability,depend,dependents,93,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * B) Check if list of dependents can be re-expressed in *; // * lvalues that are higher in the expression tree *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // Initial fill of list of LValue branches",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:27,Integrability,depend,dependence,27,"// Obtain mutual exclusive dependence by iterative reduction",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:3,Energy Efficiency,Reduce,Reduce,3,"// Reduce exclLVServers to only those serving exclusively exclLVBranches",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:3,Energy Efficiency,Reduce,Reduce,3,"// Reduce exclLVBranches to only those depending exclusively on exclLVservers; // Attention: counting loop, since erasing from container",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:39,Integrability,depend,depending,39,"// Reduce exclLVBranches to only those depending exclusively on exclLVservers; // Attention: counting loop, since erasing from container",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:40,Integrability,depend,depend,40,"// Eliminate exclLVBranches that do not depend on any LVServer; // Attention: Counting loop, since modifying container",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:142,Deployability,integrat,integration,142,"// Replace exclusive lvalue branch servers with lvalue branches; // WVE Don't do this for binned distributions - deal with this using numeric integration with transformed bin boundaroes",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:142,Integrability,integrat,integration,142,"// Replace exclusive lvalue branch servers with lvalue branches; // WVE Don't do this for binned distributions - deal with this using numeric integration with transformed bin boundaroes",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:121,Deployability,integrat,integrating,121,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * C) Check for dependents that the PDF insists on integrating *; // analytically itself *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:86,Integrability,depend,dependents,86,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * C) Check for dependents that the PDF insists on integrating *; // analytically itself *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:121,Integrability,integrat,integrating,121,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * C) Check for dependents that the PDF insists on integrating *; // analytically itself *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:109,Deployability,integrat,integrated,109,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * D) Make list of servers that can be integrated analytically *; // Add all parameters/dependents as value/shape servers *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:109,Integrability,integrat,integrated,109,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * D) Make list of servers that can be integrated analytically *; // Add all parameters/dependents as value/shape servers *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:158,Integrability,depend,dependents,158,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * D) Make list of servers that can be integrated analytically *; // Add all parameters/dependents as value/shape servers *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:375,Deployability,integrat,integrated,375,"// We will not add the servers just now, because it makes only sense to add; // them once we have made sure that this integral is not operating in; // pass-through mode. It will be done at the end of this constructor.; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * E) interact with function to make list of objects actually integrated analytically *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:375,Integrability,integrat,integrated,375,"// We will not add the servers just now, because it makes only sense to add; // them once we have made sure that this integral is not operating in; // pass-through mode. It will be done at the end of this constructor.; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * E) interact with function to make list of objects actually integrated analytically *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:3,Safety,Avoid,Avoid,3,"// Avoid confusion -- if mode is zero no analytical integral is defined regardless of contents of _anaList",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:15,Integrability,synchroniz,synchronize,15,"// WVE kludge: synchronize dset for use in analyticalIntegral; // LM : I think this is needed only if _funcNormSet is not an empty set",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:113,Deployability,integrat,integration,113,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * F) Make list of numerical integration variables consisting of: *; // * - Category dependents of RealLValues in analytical integration *; // * - Expanded server lists of server that are not analytically integrated *; // * Make Jacobian list with analytically integrated RealLValues *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // Loop over actually analytically integrated dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:209,Deployability,integrat,integration,209,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * F) Make list of numerical integration variables consisting of: *; // * - Category dependents of RealLValues in analytical integration *; // * - Expanded server lists of server that are not analytically integrated *; // * Make Jacobian list with analytically integrated RealLValues *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // Loop over actually analytically integrated dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:289,Deployability,integrat,integrated,289,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * F) Make list of numerical integration variables consisting of: *; // * - Category dependents of RealLValues in analytical integration *; // * - Expanded server lists of server that are not analytically integrated *; // * Make Jacobian list with analytically integrated RealLValues *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // Loop over actually analytically integrated dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:345,Deployability,integrat,integrated,345,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * F) Make list of numerical integration variables consisting of: *; // * - Category dependents of RealLValues in analytical integration *; // * - Expanded server lists of server that are not analytically integrated *; // * Make Jacobian list with analytically integrated RealLValues *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // Loop over actually analytically integrated dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:488,Deployability,integrat,integrated,488,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * F) Make list of numerical integration variables consisting of: *; // * - Category dependents of RealLValues in analytical integration *; // * - Expanded server lists of server that are not analytically integrated *; // * Make Jacobian list with analytically integrated RealLValues *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // Loop over actually analytically integrated dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:113,Integrability,integrat,integration,113,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * F) Make list of numerical integration variables consisting of: *; // * - Category dependents of RealLValues in analytical integration *; // * - Expanded server lists of server that are not analytically integrated *; // * Make Jacobian list with analytically integrated RealLValues *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // Loop over actually analytically integrated dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:169,Integrability,depend,dependents,169,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * F) Make list of numerical integration variables consisting of: *; // * - Category dependents of RealLValues in analytical integration *; // * - Expanded server lists of server that are not analytically integrated *; // * Make Jacobian list with analytically integrated RealLValues *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // Loop over actually analytically integrated dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:209,Integrability,integrat,integration,209,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * F) Make list of numerical integration variables consisting of: *; // * - Category dependents of RealLValues in analytical integration *; // * - Expanded server lists of server that are not analytically integrated *; // * Make Jacobian list with analytically integrated RealLValues *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // Loop over actually analytically integrated dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:289,Integrability,integrat,integrated,289,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * F) Make list of numerical integration variables consisting of: *; // * - Category dependents of RealLValues in analytical integration *; // * - Expanded server lists of server that are not analytically integrated *; // * Make Jacobian list with analytically integrated RealLValues *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // Loop over actually analytically integrated dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:345,Integrability,integrat,integrated,345,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * F) Make list of numerical integration variables consisting of: *; // * - Category dependents of RealLValues in analytical integration *; // * - Expanded server lists of server that are not analytically integrated *; // * Make Jacobian list with analytically integrated RealLValues *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // Loop over actually analytically integrated dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:488,Integrability,integrat,integrated,488,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * F) Make list of numerical integration variables consisting of: *; // * - Category dependents of RealLValues in analytical integration *; // * - Expanded server lists of server that are not analytically integrated *; // * Make Jacobian list with analytically integrated RealLValues *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // Loop over actually analytically integrated dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:499,Integrability,depend,dependents,499,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * F) Make list of numerical integration variables consisting of: *; // * - Category dependents of RealLValues in analytical integration *; // * - Expanded server lists of server that are not analytically integrated *; // * Make Jacobian list with analytically integrated RealLValues *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // Loop over actually analytically integrated dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:125,Modifiability,variab,variables,125,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * F) Make list of numerical integration variables consisting of: *; // * - Category dependents of RealLValues in analytical integration *; // * - Expanded server lists of server that are not analytically integrated *; // * Make Jacobian list with analytically integrated RealLValues *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // Loop over actually analytically integrated dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:48,Deployability,integrat,integration,48,"// Add category dependent of LValueReal used in integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:16,Integrability,depend,dependent,16,"// Add category dependent of LValueReal used in integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:48,Integrability,integrat,integration,48,"// Add category dependent of LValueReal used in integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:18,Deployability,integrat,integrated,18,"// If nothing was integrated analytically, swap back LVbranches for LVservers for subsequent numeric integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:101,Deployability,integrat,integration,101,"// If nothing was integrated analytically, swap back LVbranches for LVservers for subsequent numeric integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:18,Integrability,integrat,integrated,18,"// If nothing was integrated analytically, swap back LVbranches for LVservers for subsequent numeric integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:101,Integrability,integrat,integration,101,"// If nothing was integrated analytically, swap back LVbranches for LVservers for subsequent numeric integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:124,Deployability,integrat,integrations,124,"//cout << ""NUMINT intDepList = "" << intDepList << std::endl ;; // Loop again over function servers to add remaining numeric integrations",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:124,Integrability,integrat,integrations,124,"//cout << ""NUMINT intDepList = "" << intDepList << std::endl ;; // Loop again over function servers to add remaining numeric integrations",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:102,Integrability,depend,dependents,102,"// WVE this will only get the observables, but not l-value transformations; // Expand server in final dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:47,Deployability,integrat,integrated,47,"// Add final dependents, that are not forcibly integrated analytically,; // to numerical integration list",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:89,Deployability,integrat,integration,89,"// Add final dependents, that are not forcibly integrated analytically,; // to numerical integration list",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:13,Integrability,depend,dependents,13,"// Add final dependents, that are not forcibly integrated analytically,; // to numerical integration list",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:47,Integrability,integrat,integrated,47,"// Add final dependents, that are not forcibly integrated analytically,; // to numerical integration list",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:89,Integrability,integrat,integration,89,"// Add final dependents, that are not forcibly integrated analytically,; // to numerical integration list",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:37,Deployability,integrat,integration,37,"// Numerical and optional Analytical integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:37,Integrability,integrat,integration,37,"// Numerical and optional Analytical integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:21,Deployability,integrat,integration,21,"// Purely analytical integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:21,Integrability,integrat,integration,21,"// Purely analytical integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:6,Deployability,integrat,integration,6,"// No integration performed, where the function is a direct value server",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:6,Integrability,integrat,integration,6,"// No integration performed, where the function is a direct value server",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:18,Performance,perform,performed,18,"// No integration performed, where the function is a direct value server",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:56,Usability,clear,clear,56,"// We are only setting the function proxy now that it's clear if it's a value; // server or not.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:16,Performance,cache,caches,16,"// Create value caches for _intList and _sumList",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:136,Integrability,depend,depending,136,"////////////////////////////////////////////////////////////////////////////////; /// Set appropriate cache operation mode for integral depending on cache operation; /// mode of server objects",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:102,Performance,cache,cache,102,"////////////////////////////////////////////////////////////////////////////////; /// Set appropriate cache operation mode for integral depending on cache operation; /// mode of server objects",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:149,Performance,cache,cache,149,"////////////////////////////////////////////////////////////////////////////////; /// Set appropriate cache operation mode for integral depending on cache operation; /// mode of server objects",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:111,Deployability,integrat,integration,111,"////////////////////////////////////////////////////////////////////////////////; /// (Re)Initialize numerical integration engine if necessary. Return true if; /// successful, or otherwise false.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:111,Integrability,integrat,integration,111,"////////////////////////////////////////////////////////////////////////////////; /// (Re)Initialize numerical integration engine if necessary. Return true if; /// successful, or otherwise false.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:41,Deployability,integrat,integrate,41,"// All done if there are no arguments to integrate numerically",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:41,Integrability,integrat,integrate,41,"// All done if there are no arguments to integrate numerically",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:110,Deployability,integrat,integrated,110,"// Bind the appropriate analytic integral of our RooRealVar object to; // those of its arguments that will be integrated out numerically.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:110,Integrability,integrat,integrated,110,"// Bind the appropriate analytic integral of our RooRealVar object to; // those of its arguments that will be integrated out numerically.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:30,Deployability,integrat,integrator,30,"// Create appropriate numeric integrator using factory",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:30,Integrability,integrat,integrator,30,"// Create appropriate numeric integrator using factory",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:29,Deployability,integrat,integration,29,"// Handle special case of no integration with default algorithm",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:29,Integrability,integrat,integration,29,"// Handle special case of no integration with default algorithm",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:117,Performance,cache,cache,117,"////////////////////////////////////////////////////////////////////////////////; /// Return value of object. If the cache is clean, return the; /// cached value, otherwise recalculate on the fly and refill; /// the cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:149,Performance,cache,cached,149,"////////////////////////////////////////////////////////////////////////////////; /// Return value of object. If the cache is clean, return the; /// cached value, otherwise recalculate on the fly and refill; /// the cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:216,Performance,cache,cache,216,"////////////////////////////////////////////////////////////////////////////////; /// Return value of object. If the cache is clean, return the; /// cached value, otherwise recalculate on the fly and refill; /// the cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:23,Performance,cache,cache,23,"// // fast-track clean-cache processing; // if (_operMode==AClean) {; // return _value ;; // }",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:98,Deployability,integrat,integration,98,"////////////////////////////////////////////////////////////////////////////////; /// Perform the integration and return the result",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:98,Integrability,integrat,integration,98,"////////////////////////////////////////////////////////////////////////////////; /// Perform the integration and return the result",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform the integration and return the result",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:3,Performance,Cache,Cache,3,"// Cache numeric integrals in >1d expensive object cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:51,Performance,cache,cache,51,"// Cache numeric integrals in >1d expensive object cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:18,Performance,cache,cached,18,"// cout << ""using cached value of integral"" << GetName() << std::endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:21,Integrability,depend,dependents,21,"// Find any function dependents that are AClean; // and switch them temporarily to ADirty",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:35,Deployability,integrat,integration,35,"// try to initialize our numerical integration engine",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:35,Integrability,integrat,integration,35,"// try to initialize our numerical integration engine",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:25,Integrability,depend,dependent,25,"// Save current integral dependent values",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:37,Integrability,depend,dependents,37,"// This must happen BEFORE restoring dependents, otherwise no dirty state propagation in restore step",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:20,Integrability,depend,dependent,20,"// Restore integral dependent values",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:3,Performance,Cache,Cache,3,"// Cache numeric integrals in >1d expensive object cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:51,Performance,cache,cache,51,"// Cache numeric integrals in >1d expensive object cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:124,Integrability,depend,depend,124,"// In pass through mode, the RooRealIntegral should have registered the; // function as a value server, because we directly depend on its value.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:147,Deployability,integrat,integrated,147,"// There should be no other servers besides the actual function and the; // factorized observables that the function doesn't depend on but are; // integrated over later.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:125,Integrability,depend,depend,125,"// There should be no other servers besides the actual function and the; // factorized observables that the function doesn't depend on but are; // integrated over later.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:147,Integrability,integrat,integrated,147,"// There should be no other servers besides the actual function and the; // factorized observables that the function doesn't depend on but are; // integrated over later.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:24,Deployability,integrat,integration,24,"// Multiply answer with integration ranges of factorized variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:24,Integrability,integrat,integration,24,"// Multiply answer with integration ranges of factorized variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:57,Modifiability,variab,variables,57,"// Multiply answer with integration ranges of factorized variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:36,Integrability,depend,dependents,36,"// Multiply by fit range for 'real' dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:45,Integrability,depend,dependents,45,"// Multiply by number of states for category dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:147,Deployability,integrat,integration,147,"////////////////////////////////////////////////////////////////////////////////; /// Return product of jacobian terms originating from analytical integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:147,Integrability,integrat,integration,147,"////////////////////////////////////////////////////////////////////////////////; /// Return product of jacobian terms originating from analytical integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:141,Deployability,integrat,integrated,141,"////////////////////////////////////////////////////////////////////////////////; /// Perform summation of list of category dependents to be integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:124,Integrability,depend,dependents,124,"////////////////////////////////////////////////////////////////////////////////; /// Perform summation of list of category dependents to be integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:141,Integrability,integrat,integrated,141,"////////////////////////////////////////////////////////////////////////////////; /// Perform summation of list of category dependents to be integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform summation of list of category dependents to be integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:3,Usability,Simpl,Simply,3,"// Simply return integral",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:122,Deployability,integrat,integration,122,"////////////////////////////////////////////////////////////////////////////////; /// Perform hybrid numerical/analytical integration over all real-valued dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:122,Integrability,integrat,integration,122,"////////////////////////////////////////////////////////////////////////////////; /// Perform hybrid numerical/analytical integration over all real-valued dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:155,Integrability,depend,dependents,155,"////////////////////////////////////////////////////////////////////////////////; /// Perform hybrid numerical/analytical integration over all real-valued dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform hybrid numerical/analytical integration over all real-valued dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:34,Deployability,integrat,integration,34,"// Trivial case, fully analytical integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:34,Integrability,integrat,integration,34,"// Trivial case, fully analytical integration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:3,Deployability,Update,Update,3,"// Update contents value caches for _intList and _sumList",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:25,Performance,cache,caches,25,"// Update contents value caches for _intList and _sumList",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:21,Performance,cache,cache,21,"// Delete parameters cache if we have one",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:12,Deployability,integrat,integration,12,"// Fill the integration variable with dummy value for now. This will then; // be reset in the sampling loop.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:12,Integrability,integrat,integration,12,"// Fill the integration variable with dummy value for now. This will then; // be reset in the sampling loop.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:24,Modifiability,variab,variable,24,"// Fill the integration variable with dummy value for now. This will then; // be reset in the sampling loop.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:106,Modifiability,refactor,refactor,106,"// TODO: once Clad has support for higher-order functions (follow also the; // Clad issue #637), we could refactor this code into an actual function; // instead of hardcoding it here as a string.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:193,Deployability,integrat,integration,193,"////////////////////////////////////////////////////////////////////////////////; /// Customized printing of arguments of a RooRealIntegral to more intuitively reflect the contents of the; /// integration operation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:193,Integrability,integrat,integration,193,"////////////////////////////////////////////////////////////////////////////////; /// Customized printing of arguments of a RooRealIntegral to more intuitively reflect the contents of the; /// integration operation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:148,Usability,intuit,intuitively,148,"////////////////////////////////////////////////////////////////////////////////; /// Customized printing of arguments of a RooRealIntegral to more intuitively reflect the contents of the; /// integration operation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:19,Deployability,integrat,integrated,19,"// List internally integrated observables and factorizing observables as analytically integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:86,Deployability,integrat,integrated,86,"// List internally integrated observables and factorizing observables as analytically integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:19,Integrability,integrat,integrated,19,"// List internally integrated observables and factorizing observables as analytically integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:86,Integrability,integrat,integrated,86,"// List internally integrated observables and factorizing observables as analytically integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:20,Deployability,integrat,integrated,20,"// List numerically integrated and summed observables as numerically integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:69,Deployability,integrat,integrated,69,"// List numerically integrated and summed observables as numerically integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:20,Integrability,integrat,integrated,20,"// List numerically integrated and summed observables as numerically integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:69,Integrability,integrat,integrated,69,"// List numerically integrated and summed observables as numerically integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:134,Deployability,integrat,integrate,134,"////////////////////////////////////////////////////////////////////////////////; /// Global switch to cache all integral values that integrate at least ndim dimensions numerically",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:134,Integrability,integrat,integrate,134,"////////////////////////////////////////////////////////////////////////////////; /// Global switch to cache all integral values that integrate at least ndim dimensions numerically",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:103,Performance,cache,cache,103,"////////////////////////////////////////////////////////////////////////////////; /// Global switch to cache all integral values that integrate at least ndim dimensions numerically",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:123,Deployability,integrat,integration,123,"////////////////////////////////////////////////////////////////////////////////; /// Return minimum dimensions of numeric integration for which values are cached.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:123,Integrability,integrat,integration,123,"////////////////////////////////////////////////////////////////////////////////; /// Return minimum dimensions of numeric integration for which values are cached.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:156,Performance,cache,cached,156,"////////////////////////////////////////////////////////////////////////////////; /// Return minimum dimensions of numeric integration for which values are cached.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:17,Deployability,integrat,integration,17,"/// Sort numeric integration variables in summation and integration lists.; /// To be used during construction.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:56,Deployability,integrat,integration,56,"/// Sort numeric integration variables in summation and integration lists.; /// To be used during construction.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:17,Integrability,integrat,integration,17,"/// Sort numeric integration variables in summation and integration lists.; /// To be used during construction.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:56,Integrability,integrat,integration,56,"/// Sort numeric integration variables in summation and integration lists.; /// To be used during construction.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:29,Modifiability,variab,variables,29,"/// Sort numeric integration variables in summation and integration lists.; /// To be used during construction.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealIntegral.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:1100,Availability,avail,available,1100,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealMPFE.cxx; \class RooRealMPFE; \ingroup Roofitcore. Multi-processor front-end for parallel calculation; of RooAbsReal objects. Each RooRealMPFE forks a process that calculates; the value of the proxies RooAbsReal object. The (re)calculation of; the proxied object is started asynchronously with the calculate() option.; A subsequent call to getVal() will return the calculated value when available; If the calculation is still in progress when getVal() is called it blocks; the calling process until the calculation is done. The forked calculation process; is terminated when the front-end object is deleted; Simple use demonstration. ~~~{.cpp}; RooAbsReal* slowFunc ;. double val = slowFunc->getVal() // Evaluate slowFunc in current process. RooRealMPFE mpfe(""mpfe"",""frontend to slowFunc"",*slowFunc) ;; mpfe.calculate() ; // Start calculation of slow-func in remote process; // .. do other stuff here ..; double val = mpfe.getVal() // Wait for remote calculation to finish and retrieve value; ~~~. For general multiprocessing in ROOT, please refer to the TProcessExecutor class. **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:1321,Usability,Simpl,Simple,1321,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealMPFE.cxx; \class RooRealMPFE; \ingroup Roofitcore. Multi-processor front-end for parallel calculation; of RooAbsReal objects. Each RooRealMPFE forks a process that calculates; the value of the proxies RooAbsReal object. The (re)calculation of; the proxied object is started asynchronously with the calculate() option.; A subsequent call to getVal() will return the calculated value when available; If the calculation is still in progress when getVal() is called it blocks; the calling process until the calculation is done. The forked calculation process; is terminated when the front-end object is deleted; Simple use demonstration. ~~~{.cpp}; RooAbsReal* slowFunc ;. double val = slowFunc->getVal() // Evaluate slowFunc in current process. RooRealMPFE mpfe(""mpfe"",""frontend to slowFunc"",*slowFunc) ;; mpfe.calculate() ; // Start calculation of slow-func in remote process; // .. do other stuff here ..; double val = mpfe.getVal() // Wait for remote calculation to finish and retrieve value; ~~~. For general multiprocessing in ROOT, please refer to the TProcessExecutor class. **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:105,Modifiability,variab,variables,105,"////////////////////////////////////////////////////////////////////////////////; /// Initialize list of variables of front-end argument 'arg'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:120,Integrability,message,message,120,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the remote process and message passing; /// pipes between current process and remote process",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:14,Availability,error,error,14,"// Clear eval error log prior to forking; // to avoid confusions...",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:48,Safety,avoid,avoid,48,"// Clear eval error log prior to forking; // to avoid confusions...",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:20,Testability,log,log,20,"// Clear eval error log prior to forking; // to avoid confusions...",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:3,Usability,Clear,Clear,3,"// Clear eval error log prior to forking; // to avoid confusions...",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:182,Integrability,message,message,182,"////////////////////////////////////////////////////////////////////////////////; /// Server loop of remote processes. This function will return; /// only when an incoming TERMINATE message is received.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:13,Availability,error,errors,13,"// Loop over errors",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:55,Availability,error,errors,55,"// let other end know that we're done with the list of errors",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:9,Availability,error,error,9,"// Clear error list on local side",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:3,Usability,Clear,Clear,3,"// Clear error list on local side",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:56,Performance,perform,performing,56,"// cout << ""RooRealMPFE::calculate("" << GetName() << "") performing Inline calculation NOW"" << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:28,Modifiability,variab,variables,28,"// Compare current value of variables with saved values and send changes to server",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:54,Modifiability,variab,variable,54,"//cout << ""RooRealMPFE::calculate("" << GetName() << "" variable "" << var->GetName() << "" changed "" << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:8,Integrability,message,message,8,"// send message to server",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:3,Usability,Clear,Clear,3,"// Clear dirty state and mark that calculation request was dispatched",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:3,Performance,Cache,Cache,3,"// Cache is dirty, no calculation has been started yet; //cout << ""RooRealMPFE::getValF("" << GetName() << "") cache is dirty, calling calculate and evaluate"" << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:109,Performance,cache,cache,109,"// Cache is dirty, no calculation has been started yet; //cout << ""RooRealMPFE::getValF("" << GetName() << "") cache is dirty, calling calculate and evaluate"" << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:110,Performance,Cache,Cache,110,"//cout << ""RooRealMPFE::getValF("" << GetName() << "") calculation in progress, calling evaluate"" << endl ;; // Cache is clean and calculation is in progress",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:53,Performance,cache,cache,53,"//cout << ""RooRealMPFE::getValF("" << GetName() << "") cache is clean, doing nothing"" << endl ;; // Cache is clean and calculated value is in cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:98,Performance,Cache,Cache,98,"//cout << ""RooRealMPFE::getValF("" << GetName() << "") cache is clean, doing nothing"" << endl ;; // Cache is clean and calculated value is in cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:140,Performance,cache,cache,140,"//cout << ""RooRealMPFE::getValF("" << GetName() << "") cache is clean, doing nothing"" << endl ;; // Cache is clean and calculated value is in cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:150,Availability,error,error,150,"////////////////////////////////////////////////////////////////////////////////; /// Send message to server process to retrieve output value; /// If error were logged use logEvalError() on remote side; /// transfer those errors to the local eval error queue.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:222,Availability,error,errors,222,"////////////////////////////////////////////////////////////////////////////////; /// Send message to server process to retrieve output value; /// If error were logged use logEvalError() on remote side; /// transfer those errors to the local eval error queue.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:247,Availability,error,error,247,"////////////////////////////////////////////////////////////////////////////////; /// Send message to server process to retrieve output value; /// If error were logged use logEvalError() on remote side; /// transfer those errors to the local eval error queue.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:91,Integrability,message,message,91,"////////////////////////////////////////////////////////////////////////////////; /// Send message to server process to retrieve output value; /// If error were logged use logEvalError() on remote side; /// transfer those errors to the local eval error queue.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:253,Performance,queue,queue,253,"////////////////////////////////////////////////////////////////////////////////; /// Send message to server process to retrieve output value; /// If error were logged use logEvalError() on remote side; /// transfer those errors to the local eval error queue.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:161,Testability,log,logged,161,"////////////////////////////////////////////////////////////////////////////////; /// Send message to server process to retrieve output value; /// If error were logged use logEvalError() on remote side; /// transfer those errors to the local eval error queue.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:172,Testability,log,logEvalError,172,"////////////////////////////////////////////////////////////////////////////////; /// Send message to server process to retrieve output value; /// If error were logged use logEvalError() on remote side; /// transfer those errors to the local eval error queue.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:14,Availability,error,error,14,"// If current error logging state is not the same as remote state; // update the remote state",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:70,Deployability,update,update,70,"// If current error logging state is not the same as remote state; // update the remote state",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:20,Testability,log,logging,20,"// If current error logging state is not the same as remote state; // update the remote state",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:19,Availability,error,errors,19,"// Retrieve remote errors and feed into local error queue",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:46,Availability,error,error,46,"// Retrieve remote errors and feed into local error queue",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:52,Performance,queue,queue,52,"// Retrieve remote errors and feed into local error queue",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:104,Performance,optimiz,optimize,104,"////////////////////////////////////////////////////////////////////////////////; /// Intercept call to optimize constant term in test statistics; /// and forward it to object on server side.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:130,Testability,test,test,130,"////////////////////////////////////////////////////////////////////////////////; /// Intercept call to optimize constant term in test statistics; /// and forward it to object on server side.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h:5,Modifiability,Variab,Variables,5,"///< Variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h:13,Modifiability,variab,variables,13,"///< Copy of variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h:30,Deployability,update,update,30,"///<! Flags if variable needs update on server-side",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h:15,Modifiability,variab,variable,15,"///<! Flags if variable needs update on server-side",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h:30,Deployability,update,update,30,"///<! Flags if variable needs update on server-side",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h:15,Modifiability,variab,variable,15,"///<! Flags if variable needs update on server-side",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h:6,Deployability,Update,Update,6,"///<! Update master",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealMPFE.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumFunc.cxx:1228,Integrability,depend,dependents,1228,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; ///; /// Class RooRealSumFunc implements a PDF constructed from a sum of; /// functions:; /// ```; /// Sum(i=1,n-1) coef_i * func_i(x) + [ 1 - (Sum(i=1,n-1) coef_i ] * func_n(x); /// pdf(x) = ------------------------------------------------------------------------------; /// Sum(i=1,n-1) coef_i * Int(func_i)dx + [ 1 - (Sum(i=1,n-1) coef_i ] * Int(func_n)dx; ///; /// ```; /// where coef_i and func_i are RooAbsReal objects, and x is the collection of dependents.; /// In the present version coef_i may not depend on x, but this limitation may be removed in the future; ///; /// ### Difference between RooAddPdf / RooRealSum{Func|Pdf}; /// - RooAddPdf is a PDF of PDFs, *i.e.* its components need to be normalised and non-negative.; /// - RooRealSumPdf is a PDF of functions, *i.e.*, its components can be negative, but their sum cannot be. The normalisation; /// is computed automatically, unless the PDF is extended (see above).; /// - RooRealSumFunc is a sum of functions. It is neither normalised, nor need it be positive.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumFunc.cxx:1283,Integrability,depend,depend,1283,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; ///; /// Class RooRealSumFunc implements a PDF constructed from a sum of; /// functions:; /// ```; /// Sum(i=1,n-1) coef_i * func_i(x) + [ 1 - (Sum(i=1,n-1) coef_i ] * func_n(x); /// pdf(x) = ------------------------------------------------------------------------------; /// Sum(i=1,n-1) coef_i * Int(func_i)dx + [ 1 - (Sum(i=1,n-1) coef_i ] * Int(func_n)dx; ///; /// ```; /// where coef_i and func_i are RooAbsReal objects, and x is the collection of dependents.; /// In the present version coef_i may not depend on x, but this limitation may be removed in the future; ///; /// ### Difference between RooAddPdf / RooRealSum{Func|Pdf}; /// - RooAddPdf is a PDF of PDFs, *i.e.* its components need to be normalised and non-negative.; /// - RooRealSumPdf is a PDF of functions, *i.e.*, its components can be negative, but their sum cannot be. The normalisation; /// is computed automatically, unless the PDF is extended (see above).; /// - RooRealSumFunc is a sum of functions. It is neither normalised, nor need it be positive.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumFunc.cxx:1685,Modifiability,extend,extended,1685,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; ///; /// Class RooRealSumFunc implements a PDF constructed from a sum of; /// functions:; /// ```; /// Sum(i=1,n-1) coef_i * func_i(x) + [ 1 - (Sum(i=1,n-1) coef_i ] * func_n(x); /// pdf(x) = ------------------------------------------------------------------------------; /// Sum(i=1,n-1) coef_i * Int(func_i)dx + [ 1 - (Sum(i=1,n-1) coef_i ] * Int(func_n)dx; ///; /// ```; /// where coef_i and func_i are RooAbsReal objects, and x is the collection of dependents.; /// In the present version coef_i may not depend on x, but this limitation may be removed in the future; ///; /// ### Difference between RooAddPdf / RooRealSum{Func|Pdf}; /// - RooAddPdf is a PDF of PDFs, *i.e.* its components need to be normalised and non-negative.; /// - RooRealSumPdf is a PDF of functions, *i.e.*, its components can be negative, but their sum cannot be. The normalisation; /// is computed automatically, unless the PDF is extended (see above).; /// - RooRealSumFunc is a sum of functions. It is neither normalised, nor need it be positive.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumFunc.cxx:65,Usability,intuit,intuitively,65,"/// Customized printing of arguments of a RooRealSumFunc to more intuitively; /// reflect the contents of the product operator construction.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumFunc.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumFunc.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:1305,Integrability,depend,dependents,1305,"rkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooRealSumPdf; \ingroup Roofitcore. Implements a PDF constructed from a sum of functions:; \f[; \mathrm{PDF}(x) = \frac{ \sum_{i=1}^{n-1} \mathrm{coef}_i * \mathrm{func}_i(x) + \left[ 1 - \sum_{i=1}^{n-1} \mathrm{coef}_i \right] * \mathrm{func}_n(x) }; {\sum_{i=1}^{n-1} \mathrm{coef}_i * \int \mathrm{func}_i(x)dx + \left[ 1 - \sum_{i=1}^{n-1} \mathrm{coef}_i \right] * \int \mathrm{func}_n(x) dx }; \f]. where \f$\mathrm{coef}_i\f$ and \f$\mathrm{func}_i\f$ are RooAbsReal objects, and \f$ x \f$ is the collection of dependents.; In the present version \f$\mathrm{coef}_i\f$ may not depend on \f$ x \f$, but this limitation could be removed should the need arise. If the number of coefficients is one less than the number of functions, the PDF is assumed to be normalised. Due to this additional constraint,; \f$\mathrm{coef}_n\f$ is computed from the other coefficients. ### Extending the PDF; If an \f$ n^\mathrm{th} \f$ coefficient is provided, the PDF **can** be used as an extended PDF, *i.e.* the total number of events will be measured in addition; to the fractions of the various functions. **This requires setting the last argument of the constructor to `true`.**; \note For the RooAddPdf, the extension happens automatically. ### Difference to RooAddPdf / RooRealSumFunc; - RooAddPdf is a PDF of PDFs, *i.e.* its components need to be normalised and non-negative.; - RooRealSumPdf is a PDF of functions, *i.e.*, its components can be negative, but their su",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:1371,Integrability,depend,depend,1371,"ersity. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooRealSumPdf; \ingroup Roofitcore. Implements a PDF constructed from a sum of functions:; \f[; \mathrm{PDF}(x) = \frac{ \sum_{i=1}^{n-1} \mathrm{coef}_i * \mathrm{func}_i(x) + \left[ 1 - \sum_{i=1}^{n-1} \mathrm{coef}_i \right] * \mathrm{func}_n(x) }; {\sum_{i=1}^{n-1} \mathrm{coef}_i * \int \mathrm{func}_i(x)dx + \left[ 1 - \sum_{i=1}^{n-1} \mathrm{coef}_i \right] * \int \mathrm{func}_n(x) dx }; \f]. where \f$\mathrm{coef}_i\f$ and \f$\mathrm{func}_i\f$ are RooAbsReal objects, and \f$ x \f$ is the collection of dependents.; In the present version \f$\mathrm{coef}_i\f$ may not depend on \f$ x \f$, but this limitation could be removed should the need arise. If the number of coefficients is one less than the number of functions, the PDF is assumed to be normalised. Due to this additional constraint,; \f$\mathrm{coef}_n\f$ is computed from the other coefficients. ### Extending the PDF; If an \f$ n^\mathrm{th} \f$ coefficient is provided, the PDF **can** be used as an extended PDF, *i.e.* the total number of events will be measured in addition; to the fractions of the various functions. **This requires setting the last argument of the constructor to `true`.**; \note For the RooAddPdf, the extension happens automatically. ### Difference to RooAddPdf / RooRealSumFunc; - RooAddPdf is a PDF of PDFs, *i.e.* its components need to be normalised and non-negative.; - RooRealSumPdf is a PDF of functions, *i.e.*, its components can be negative, but their sum cannot be. The normalisation; is computed automatically, unless the PDF is extended (see above).; - RooRealSumFunc is a sum of f",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:1664,Modifiability,Extend,Extending,1664," source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooRealSumPdf; \ingroup Roofitcore. Implements a PDF constructed from a sum of functions:; \f[; \mathrm{PDF}(x) = \frac{ \sum_{i=1}^{n-1} \mathrm{coef}_i * \mathrm{func}_i(x) + \left[ 1 - \sum_{i=1}^{n-1} \mathrm{coef}_i \right] * \mathrm{func}_n(x) }; {\sum_{i=1}^{n-1} \mathrm{coef}_i * \int \mathrm{func}_i(x)dx + \left[ 1 - \sum_{i=1}^{n-1} \mathrm{coef}_i \right] * \int \mathrm{func}_n(x) dx }; \f]. where \f$\mathrm{coef}_i\f$ and \f$\mathrm{func}_i\f$ are RooAbsReal objects, and \f$ x \f$ is the collection of dependents.; In the present version \f$\mathrm{coef}_i\f$ may not depend on \f$ x \f$, but this limitation could be removed should the need arise. If the number of coefficients is one less than the number of functions, the PDF is assumed to be normalised. Due to this additional constraint,; \f$\mathrm{coef}_n\f$ is computed from the other coefficients. ### Extending the PDF; If an \f$ n^\mathrm{th} \f$ coefficient is provided, the PDF **can** be used as an extended PDF, *i.e.* the total number of events will be measured in addition; to the fractions of the various functions. **This requires setting the last argument of the constructor to `true`.**; \note For the RooAddPdf, the extension happens automatically. ### Difference to RooAddPdf / RooRealSumFunc; - RooAddPdf is a PDF of PDFs, *i.e.* its components need to be normalised and non-negative.; - RooRealSumPdf is a PDF of functions, *i.e.*, its components can be negative, but their sum cannot be. The normalisation; is computed automatically, unless the PDF is extended (see above).; - RooRealSumFunc is a sum of functions. It is neither normalised, nor need it be positive. */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:1766,Modifiability,extend,extended,1766," source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooRealSumPdf; \ingroup Roofitcore. Implements a PDF constructed from a sum of functions:; \f[; \mathrm{PDF}(x) = \frac{ \sum_{i=1}^{n-1} \mathrm{coef}_i * \mathrm{func}_i(x) + \left[ 1 - \sum_{i=1}^{n-1} \mathrm{coef}_i \right] * \mathrm{func}_n(x) }; {\sum_{i=1}^{n-1} \mathrm{coef}_i * \int \mathrm{func}_i(x)dx + \left[ 1 - \sum_{i=1}^{n-1} \mathrm{coef}_i \right] * \int \mathrm{func}_n(x) dx }; \f]. where \f$\mathrm{coef}_i\f$ and \f$\mathrm{func}_i\f$ are RooAbsReal objects, and \f$ x \f$ is the collection of dependents.; In the present version \f$\mathrm{coef}_i\f$ may not depend on \f$ x \f$, but this limitation could be removed should the need arise. If the number of coefficients is one less than the number of functions, the PDF is assumed to be normalised. Due to this additional constraint,; \f$\mathrm{coef}_n\f$ is computed from the other coefficients. ### Extending the PDF; If an \f$ n^\mathrm{th} \f$ coefficient is provided, the PDF **can** be used as an extended PDF, *i.e.* the total number of events will be measured in addition; to the fractions of the various functions. **This requires setting the last argument of the constructor to `true`.**; \note For the RooAddPdf, the extension happens automatically. ### Difference to RooAddPdf / RooRealSumFunc; - RooAddPdf is a PDF of PDFs, *i.e.* its components need to be normalised and non-negative.; - RooRealSumPdf is a PDF of functions, *i.e.*, its components can be negative, but their sum cannot be. The normalisation; is computed automatically, unless the PDF is extended (see above).; - RooRealSumFunc is a sum of functions. It is neither normalised, nor need it be positive. */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:2331,Modifiability,extend,extended,2331," source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooRealSumPdf; \ingroup Roofitcore. Implements a PDF constructed from a sum of functions:; \f[; \mathrm{PDF}(x) = \frac{ \sum_{i=1}^{n-1} \mathrm{coef}_i * \mathrm{func}_i(x) + \left[ 1 - \sum_{i=1}^{n-1} \mathrm{coef}_i \right] * \mathrm{func}_n(x) }; {\sum_{i=1}^{n-1} \mathrm{coef}_i * \int \mathrm{func}_i(x)dx + \left[ 1 - \sum_{i=1}^{n-1} \mathrm{coef}_i \right] * \int \mathrm{func}_n(x) dx }; \f]. where \f$\mathrm{coef}_i\f$ and \f$\mathrm{func}_i\f$ are RooAbsReal objects, and \f$ x \f$ is the collection of dependents.; In the present version \f$\mathrm{coef}_i\f$ may not depend on \f$ x \f$, but this limitation could be removed should the need arise. If the number of coefficients is one less than the number of functions, the PDF is assumed to be normalised. Due to this additional constraint,; \f$\mathrm{coef}_n\f$ is computed from the other coefficients. ### Extending the PDF; If an \f$ n^\mathrm{th} \f$ coefficient is provided, the PDF **can** be used as an extended PDF, *i.e.* the total number of events will be measured in addition; to the fractions of the various functions. **This requires setting the last argument of the constructor to `true`.**; \note For the RooAddPdf, the extension happens automatically. ### Difference to RooAddPdf / RooRealSumFunc; - RooAddPdf is a PDF of PDFs, *i.e.* its components need to be normalised and non-negative.; - RooRealSumPdf is a PDF of functions, *i.e.*, its components can be negative, but their sum cannot be. The normalisation; is computed automatically, unless the PDF is extended (see above).; - RooRealSumFunc is a sum of functions. It is neither normalised, nor need it be positive. */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:296,Modifiability,extend,extended,296,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for a PDF from a list of functions and coefficients.; /// It implements; /// \f[; /// \sum_i \mathrm{coef}_i \cdot \mathrm{func}_i,; /// \f]; /// if \f$ N_\mathrm{coef} = N_\mathrm{func} \f$. With `extended=true`, the coefficients can take any values. With `extended=false`,; /// there is the danger of getting a degenerate minimisation problem because a PDF has to be normalised, which needs one degree; /// of freedom less.; ///; /// A plain (normalised) PDF can therefore be implemented with one less coefficient. RooFit then computes; /// \f[; /// \sum_i^{N-1} \mathrm{coef}_i \cdot \mathrm{func}_i + (1 - \sum_i \mathrm{coef}_i ) \cdot \mathrm{func}_N,; /// \f]; /// if \f$ N_\mathrm{coef} = N_\mathrm{func} - 1 \f$.; ///; /// All coefficients and functions are allowed to be negative; /// but the sum (*i.e.* the PDF) is not, which is enforced at runtime.; ///; /// \param name Name of the PDF; /// \param title Title (for plotting); /// \param inFuncList List of functions to sum; /// \param inCoefList List of coefficients; /// \param extended Interpret as extended PDF (requires equal number of functions and coefficients)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:356,Modifiability,extend,extended,356,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for a PDF from a list of functions and coefficients.; /// It implements; /// \f[; /// \sum_i \mathrm{coef}_i \cdot \mathrm{func}_i,; /// \f]; /// if \f$ N_\mathrm{coef} = N_\mathrm{func} \f$. With `extended=true`, the coefficients can take any values. With `extended=false`,; /// there is the danger of getting a degenerate minimisation problem because a PDF has to be normalised, which needs one degree; /// of freedom less.; ///; /// A plain (normalised) PDF can therefore be implemented with one less coefficient. RooFit then computes; /// \f[; /// \sum_i^{N-1} \mathrm{coef}_i \cdot \mathrm{func}_i + (1 - \sum_i \mathrm{coef}_i ) \cdot \mathrm{func}_N,; /// \f]; /// if \f$ N_\mathrm{coef} = N_\mathrm{func} - 1 \f$.; ///; /// All coefficients and functions are allowed to be negative; /// but the sum (*i.e.* the PDF) is not, which is enforced at runtime.; ///; /// \param name Name of the PDF; /// \param title Title (for plotting); /// \param inFuncList List of functions to sum; /// \param inCoefList List of coefficients; /// \param extended Interpret as extended PDF (requires equal number of functions and coefficients)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:1141,Modifiability,extend,extended,1141,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for a PDF from a list of functions and coefficients.; /// It implements; /// \f[; /// \sum_i \mathrm{coef}_i \cdot \mathrm{func}_i,; /// \f]; /// if \f$ N_\mathrm{coef} = N_\mathrm{func} \f$. With `extended=true`, the coefficients can take any values. With `extended=false`,; /// there is the danger of getting a degenerate minimisation problem because a PDF has to be normalised, which needs one degree; /// of freedom less.; ///; /// A plain (normalised) PDF can therefore be implemented with one less coefficient. RooFit then computes; /// \f[; /// \sum_i^{N-1} \mathrm{coef}_i \cdot \mathrm{func}_i + (1 - \sum_i \mathrm{coef}_i ) \cdot \mathrm{func}_N,; /// \f]; /// if \f$ N_\mathrm{coef} = N_\mathrm{func} - 1 \f$.; ///; /// All coefficients and functions are allowed to be negative; /// but the sum (*i.e.* the PDF) is not, which is enforced at runtime.; ///; /// \param name Name of the PDF; /// \param title Title (for plotting); /// \param inFuncList List of functions to sum; /// \param inCoefList List of coefficients; /// \param extended Interpret as extended PDF (requires equal number of functions and coefficients)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:1163,Modifiability,extend,extended,1163,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for a PDF from a list of functions and coefficients.; /// It implements; /// \f[; /// \sum_i \mathrm{coef}_i \cdot \mathrm{func}_i,; /// \f]; /// if \f$ N_\mathrm{coef} = N_\mathrm{func} \f$. With `extended=true`, the coefficients can take any values. With `extended=false`,; /// there is the danger of getting a degenerate minimisation problem because a PDF has to be normalised, which needs one degree; /// of freedom less.; ///; /// A plain (normalised) PDF can therefore be implemented with one less coefficient. RooFit then computes; /// \f[; /// \sum_i^{N-1} \mathrm{coef}_i \cdot \mathrm{func}_i + (1 - \sum_i \mathrm{coef}_i ) \cdot \mathrm{func}_N,; /// \f]; /// if \f$ N_\mathrm{coef} = N_\mathrm{func} - 1 \f$.; ///; /// All coefficients and functions are allowed to be negative; /// but the sum (*i.e.* the PDF) is not, which is enforced at runtime.; ///; /// \param name Name of the PDF; /// \param title Title (for plotting); /// \param inFuncList List of functions to sum; /// \param inCoefList List of coefficients; /// \param extended Interpret as extended PDF (requires equal number of functions and coefficients)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:21,Deployability,integrat,integration,21,"// Handle trivial no-integration scenario",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:21,Integrability,integrat,integration,21,"// Handle trivial no-integration scenario",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:44,Integrability,depend,dependents,44,"// Select subset of allVars that are actual dependents",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:17,Deployability,configurat,configuration,17,"// Check if this configuration was created before",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:17,Modifiability,config,configuration,17,"// Check if this configuration was created before",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:225,Performance,cache,cached,225,"//cout << ""RooRealSumPdf(""<<this<<"")::getAnalyticalIntegralWN:""<<GetName()<<""(""<<allVars<<"",""<<analVars<<"",""<<(normSet2?*normSet2:RooArgSet())<<"",""<<(rangeName?rangeName:""<none>"") << "" -> "" << _normIntMgr.lastIndex()+1 << "" (cached)"" << endl;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:14,Performance,cache,cache,14,"// Create new cache element",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:9,Performance,cache,cache,9,"// Store cache element",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:107,Deployability,integrat,integrations,107,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by deferring integration of component; /// functions to integrators of components.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:133,Deployability,integrat,integration,133,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by deferring integration of component; /// functions to integrators of components.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:176,Deployability,integrat,integrators,176,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by deferring integration of component; /// functions to integrators of components.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:107,Integrability,integrat,integrations,107,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by deferring integration of component; /// functions to integrators of components.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:133,Integrability,integrat,integration,133,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by deferring integration of component; /// functions to integrators of components.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:176,Integrability,integrat,integrators,176,"////////////////////////////////////////////////////////////////////////////////; /// Implement analytical integrations by deferring integration of component; /// functions to integrators of components.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:13,Energy Efficiency,adapt,adaptation,13,"// WVE needs adaptation for rangeName feature",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:13,Modifiability,adapt,adaptation,13,"// WVE needs adaptation for rangeName feature",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:27,Performance,cache,cache,27,"// revive the (sterilized) cache; //cout << ""RooRealSumPdf(""<<this<<"")::analyticalIntegralWN:""<<GetName()<<""(""<<code<<"",""<<(normSet2?*normSet2:RooArgSet())<<"",""<<(rangeName?rangeName:""<none>"") << "": reviving cache ""<< endl;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:208,Performance,cache,cache,208,"// revive the (sterilized) cache; //cout << ""RooRealSumPdf(""<<this<<"")::analyticalIntegralWN:""<<GetName()<<""(""<<code<<"",""<<(normSet2?*normSet2:RooArgSet())<<"",""<<(rangeName?rangeName:""<none>"") << "": reviving cache ""<< endl;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:33,Integrability,depend,depend,33,"/// Check if all components that depend on `obs` are binned.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:133,Performance,cache,cache-and-track,133,"////////////////////////////////////////////////////////////////////////////////; /// Label OK'ed components of a RooRealSumPdf with cache-and-track",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:146,Usability,intuit,intuitively,146,"////////////////////////////////////////////////////////////////////////////////; /// Customized printing of arguments of a RooRealSumPdf to more intuitively reflect the contents of the; /// product operator construction",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealSumPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:913,Availability,error,error,913,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealVar.cxx; \class RooRealVar; \ingroup Roofitcore. Variable that can be changed from the outside.; For example by the user or a fitter. It can be written into datasets, can hold a (possibly asymmetric) error, and; can have several ranges. These can be accessed with names, to e.g. limit fits; or integrals to sub ranges. The range without any name is used as default range.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:762,Modifiability,Variab,Variable,762,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealVar.cxx; \class RooRealVar; \ingroup Roofitcore. Variable that can be changed from the outside.; For example by the user or a fitter. It can be written into datasets, can hold a (possibly asymmetric) error, and; can have several ranges. These can be accessed with names, to e.g. limit fits; or integrals to sub ranges. The range without any name is used as default range.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:963,Security,access,accessed,963,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealVar.cxx; \class RooRealVar; \ingroup Roofitcore. Variable that can be changed from the outside.; For example by the user or a fitter. It can be written into datasets, can hold a (possibly asymmetric) error, and; can have several ranges. These can be accessed with names, to e.g. limit fits; or integrals to sub ranges. The range without any name is used as default range.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:143,Safety,avoid,avoid,143,"////////////////////////////////////////////////////////////////////////////////; /// Explicitly deletes the shared properties list on exit to avoid problems; /// with the initialization order. Meant to be only used internally in RooFit; /// by RooSentinel.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:104,Modifiability,variab,variable,104,"////////////////////////////////////////////////////////////////////////////////; /// Create a constant variable with a value and optional unit.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:95,Modifiability,variab,variable,95,"////////////////////////////////////////////////////////////////////////////////; /// Create a variable allowed to float in the given range.; /// The initial value will be set to the center of the range.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:95,Modifiability,variab,variable,95,"////////////////////////////////////////////////////////////////////////////////; /// Create a variable with the given starting value. It is allowed to float; /// within the defined range. Optionally, a unit can be specified for axis labels.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:102,Modifiability,variab,variable,102,"////////////////////////////////////////////////////////////////////////////////; /// Return value of variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:99,Modifiability,variab,variable,99,"////////////////////////////////////////////////////////////////////////////////; /// Set value of variable to 'value'. If 'value' is outside; /// range of object, clip value into range",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:99,Modifiability,variab,variable,99,"////////////////////////////////////////////////////////////////////////////////; /// Set value of variable to `value`. If `value` is outside of the; /// range named `rangeName`, clip value into that range.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:129,Availability,error,error,129,"////////////////////////////////////////////////////////////////////////////////; /// Return a RooAbsRealLValue representing the error associated; /// with this variable. The callers takes ownership of the; /// return object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:161,Modifiability,variab,variable,161,"////////////////////////////////////////////////////////////////////////////////; /// Return a RooAbsRealLValue representing the error associated; /// with this variable. The callers takes ownership of the; /// return object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:102,Modifiability,variab,variable,102,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if variable has a binning named 'name'.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:334,Integrability,message,message,334,"////////////////////////////////////////////////////////////////////////////////; /// Return binning definition with name. If binning with 'name' is not found it is created; /// on the fly as a clone of the default binning if createOnTheFly is true, otherwise; /// a reference to the default binning is returned. If verbose is true a message; /// is printed if a binning is created on the fly.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:334,Integrability,message,message,334,"////////////////////////////////////////////////////////////////////////////////; /// Return binning definition with name. If binning with 'name' is not found it is created; /// on the fly as a clone of the default binning if createOnTheFly is true, otherwise; /// a reference to the default binning is returned. If verbose is true a message; /// is printed if a binning is created on the fly.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:291,Deployability,install,install,291,"////////////////////////////////////////////////////////////////////////////////; /// Create a uniform binning under name 'name' for this variable.; /// \param[in] nBins Number of bins. The limits are taken from the currently set limits.; /// \param[in] name Optional name. If name is null, install as default binning.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:138,Modifiability,variab,variable,138,"////////////////////////////////////////////////////////////////////////////////; /// Create a uniform binning under name 'name' for this variable.; /// \param[in] nBins Number of bins. The limits are taken from the currently set limits.; /// \param[in] name Optional name. If name is null, install as default binning.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:179,Deployability,install,installed,179,"////////////////////////////////////////////////////////////////////////////////; /// Add given binning under name 'name' with this variable. If name is null,; /// the binning is installed as the default binning.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:132,Modifiability,variab,variable,132,"////////////////////////////////////////////////////////////////////////////////; /// Add given binning under name 'name' with this variable. If name is null,; /// the binning is installed as the default binning.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:37,Modifiability,parameteriz,parameterized,37,"// Process insert hooks required for parameterized binnings",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:3,Deployability,Install,Install,3,"// Install new",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:173,Deployability,integrat,integration,173,"////////////////////////////////////////////////////////////////////////////////; /// Set a fit or plotting range.; /// Ranges can be selected for e.g. fitting, plotting or integration. Note that multiple; /// variables can have ranges with the same name, so multi-dimensional PDFs can be sliced.; /// See also the tutorial rf203_ranges.C; /// \param[in] name Name this range (so it can be selected later for fitting or; /// plotting). If the name is `nullptr`, the function sets the limits of the default range.; /// \param[in] min Miniminum of the range.; /// \param[in] max Maximum of the range.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:173,Integrability,integrat,integration,173,"////////////////////////////////////////////////////////////////////////////////; /// Set a fit or plotting range.; /// Ranges can be selected for e.g. fitting, plotting or integration. Note that multiple; /// variables can have ranges with the same name, so multi-dimensional PDFs can be sliced.; /// See also the tutorial rf203_ranges.C; /// \param[in] name Name this range (so it can be selected later for fitting or; /// plotting). If the name is `nullptr`, the function sets the limits of the default range.; /// \param[in] min Miniminum of the range.; /// \param[in] max Maximum of the range.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:210,Modifiability,variab,variables,210,"////////////////////////////////////////////////////////////////////////////////; /// Set a fit or plotting range.; /// Ranges can be selected for e.g. fitting, plotting or integration. Note that multiple; /// variables can have ranges with the same name, so multi-dimensional PDFs can be sliced.; /// See also the tutorial rf203_ranges.C; /// \param[in] name Name this range (so it can be selected later for fitting or; /// plotting). If the name is `nullptr`, the function sets the limits of the default range.; /// \param[in] min Miniminum of the range.; /// \param[in] max Maximum of the range.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:151,Integrability,depend,dependence,151,"////////////////////////////////////////////////////////////////////////////////; /// Set or modify a parameterised range, i.e., a range the varies in dependence; /// of parameters.; /// See setRange() for more details.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:3,Modifiability,Extend,Extended,3,"// Extended mode: Read multiple tokens on a single line",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:17,Availability,error,error,17,"// Next token is error or asymmetric error, check if first char of token is a '('",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:37,Availability,error,error,37,"// Next token is error or asymmetric error, check if first char of token is a '('",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:13,Availability,error,error,13,"// Symmetric error, convert token do double",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:8,Availability,error,error,8,"// Have error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:20,Availability,error,error,20,"// Write value with error (if not zero)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:101,Modifiability,variab,variable,101,"////////////////////////////////////////////////////////////////////////////////; /// Print value of variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:125,Availability,error,error,125,"////////////////////////////////////////////////////////////////////////////////; /// Print extras of variable: (asymmetric) error, constant flag, limits and binning",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:102,Modifiability,variab,variable,102,"////////////////////////////////////////////////////////////////////////////////; /// Print extras of variable: (asymmetric) error, constant flag, limits and binning",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:104,Integrability,interface,interface,104,"////////////////////////////////////////////////////////////////////////////////; /// Detailed printing interface",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:129,Availability,error,error,129,"////////////////////////////////////////////////////////////////////////////////; /// Format numeric value of RooRealVar and its error in a variety of ways; ///; /// To control what is shown use the following options; /// N = show name; /// T = show title (takes precedent over `N`, falls back to `N` if title is empty); /// H = hide value; /// E = show error; /// A = show asymmetric error instead of parabolic error (if available); /// U = show unit; ///; /// To control how it is shown use these options; /// L = TLatex mode; /// X = Latex mode; /// Y = Latex table mode ( '=' replaced by '&' ); /// V = Make name \\verbatim in Latex mode; /// P = use error to control shown precision; /// F = force fixed precision; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:354,Availability,error,error,354,"////////////////////////////////////////////////////////////////////////////////; /// Format numeric value of RooRealVar and its error in a variety of ways; ///; /// To control what is shown use the following options; /// N = show name; /// T = show title (takes precedent over `N`, falls back to `N` if title is empty); /// H = hide value; /// E = show error; /// A = show asymmetric error instead of parabolic error (if available); /// U = show unit; ///; /// To control how it is shown use these options; /// L = TLatex mode; /// X = Latex mode; /// Y = Latex table mode ( '=' replaced by '&' ); /// V = Make name \\verbatim in Latex mode; /// P = use error to control shown precision; /// F = force fixed precision; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:385,Availability,error,error,385,"////////////////////////////////////////////////////////////////////////////////; /// Format numeric value of RooRealVar and its error in a variety of ways; ///; /// To control what is shown use the following options; /// N = show name; /// T = show title (takes precedent over `N`, falls back to `N` if title is empty); /// H = hide value; /// E = show error; /// A = show asymmetric error instead of parabolic error (if available); /// U = show unit; ///; /// To control how it is shown use these options; /// L = TLatex mode; /// X = Latex mode; /// Y = Latex table mode ( '=' replaced by '&' ); /// V = Make name \\verbatim in Latex mode; /// P = use error to control shown precision; /// F = force fixed precision; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:412,Availability,error,error,412,"////////////////////////////////////////////////////////////////////////////////; /// Format numeric value of RooRealVar and its error in a variety of ways; ///; /// To control what is shown use the following options; /// N = show name; /// T = show title (takes precedent over `N`, falls back to `N` if title is empty); /// H = hide value; /// E = show error; /// A = show asymmetric error instead of parabolic error (if available); /// U = show unit; ///; /// To control how it is shown use these options; /// L = TLatex mode; /// X = Latex mode; /// Y = Latex table mode ( '=' replaced by '&' ); /// V = Make name \\verbatim in Latex mode; /// P = use error to control shown precision; /// F = force fixed precision; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:422,Availability,avail,available,422,"////////////////////////////////////////////////////////////////////////////////; /// Format numeric value of RooRealVar and its error in a variety of ways; ///; /// To control what is shown use the following options; /// N = show name; /// T = show title (takes precedent over `N`, falls back to `N` if title is empty); /// H = hide value; /// E = show error; /// A = show asymmetric error instead of parabolic error (if available); /// U = show unit; ///; /// To control how it is shown use these options; /// L = TLatex mode; /// X = Latex mode; /// Y = Latex table mode ( '=' replaced by '&' ); /// V = Make name \\verbatim in Latex mode; /// P = use error to control shown precision; /// F = force fixed precision; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:655,Availability,error,error,655,"////////////////////////////////////////////////////////////////////////////////; /// Format numeric value of RooRealVar and its error in a variety of ways; ///; /// To control what is shown use the following options; /// N = show name; /// T = show title (takes precedent over `N`, falls back to `N` if title is empty); /// H = hide value; /// E = show error; /// A = show asymmetric error instead of parabolic error (if available); /// U = show unit; ///; /// To control how it is shown use these options; /// L = TLatex mode; /// X = Latex mode; /// Y = Latex table mode ( '=' replaced by '&' ); /// V = Make name \\verbatim in Latex mode; /// P = use error to control shown precision; /// F = force fixed precision; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:14,Availability,error,error,14,"// append our error if requested and this variable is not constant",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:42,Modifiability,variab,variable,42,"// append our error if requested and this variable is not constant",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:161,Availability,error,error,161,"////////////////////////////////////////////////////////////////////////////////; /// Utility to calculate number of decimals to show; /// based on magnitude of error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:153,Availability,error,errors,153,"////////////////////////////////////////////////////////////////////////////////; /// Overload RooAbsReal::attachToTree to also attach; /// branches for errors and/or asymmetric errors; /// attribute StoreError and/or StoreAsymError are set",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:178,Availability,error,errors,178,"////////////////////////////////////////////////////////////////////////////////; /// Overload RooAbsReal::attachToTree to also attach; /// branches for errors and/or asymmetric errors; /// attribute StoreError and/or StoreAsymError are set",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:39,Availability,error,error,39,"// Attach/create additional branch for error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:52,Availability,error,error,52,"// Attach/create additional branches for asymmetric error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:153,Availability,error,errors,153,"////////////////////////////////////////////////////////////////////////////////; /// Overload RooAbsReal::attachToTree to also attach; /// branches for errors and/or asymmetric errors; /// attribute StoreError and/or StoreAsymError are set",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:178,Availability,error,errors,178,"////////////////////////////////////////////////////////////////////////////////; /// Overload RooAbsReal::attachToTree to also attach; /// branches for errors and/or asymmetric errors; /// attribute StoreError and/or StoreAsymError are set",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:189,Availability,error,error,189,"// cout << ""RooRealVar::attachToTree("" << this << "") name = "" << GetName(); // << "" StoreError = "" << (getAttribute(""StoreError"")?""T"":""F"") << endl ;; // Attach/create additional branch for error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:52,Availability,error,error,52,"// Attach/create additional branches for asymmetric error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:172,Availability,error,errors,172,"////////////////////////////////////////////////////////////////////////////////; /// Overload RooAbsReal::fillTreeBranch to also; /// fill tree branches with (asymmetric) errors; /// if requested.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:95,Performance,cache,cached,95,"////////////////////////////////////////////////////////////////////////////////; /// Copy the cached value of another RooAbsArg to our cache; /// Warning: This function copies the cached values of source,; /// it is the callers responsibility to make sure the cache is clean",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:136,Performance,cache,cache,136,"////////////////////////////////////////////////////////////////////////////////; /// Copy the cached value of another RooAbsArg to our cache; /// Warning: This function copies the cached values of source,; /// it is the callers responsibility to make sure the cache is clean",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:181,Performance,cache,cached,181,"////////////////////////////////////////////////////////////////////////////////; /// Copy the cached value of another RooAbsArg to our cache; /// Warning: This function copies the cached values of source,; /// it is the callers responsibility to make sure the cache is clean",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:261,Performance,cache,cache,261,"////////////////////////////////////////////////////////////////////////////////; /// Copy the cached value of another RooAbsArg to our cache; /// Warning: This function copies the cached values of source,; /// it is the callers responsibility to make sure the cache is clean",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:8,Availability,error,error,8,"// Copy error too, if source has one",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:19,Availability,error,error,19,"// Copy additional error value",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:63,Deployability,install,install,63,"// In v3, properties were written as pointers, so read now and install:",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install the shared property into the member _sharedProp.; /// If a property with same name already exists, discard the incoming one,; /// and share the existing.; /// `nullptr` and properties equal to the RooRealVar::_nullProp will not be installed.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:325,Deployability,install,installed,325,"////////////////////////////////////////////////////////////////////////////////; /// Install the shared property into the member _sharedProp.; /// If a property with same name already exists, discard the incoming one,; /// and share the existing.; /// `nullptr` and properties equal to the RooRealVar::_nullProp will not be installed.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:18,Deployability,Install,Install,18,"// Doesn't exist. Install, register weak pointer for future sharing",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRealVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:1107,Modifiability,variab,variable,1107,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /**; * \class RooResolutionModel; * RooResolutionModel is the base class for PDFs that represent a; * resolution model that can be convoluted with a physics model of the form; * \f[; * \mathrm{Phys}(x,a,b) = \sum_k \mathrm{coef}_k(a) * \mathrm{basis}_k(x,b); * \f]; * where basis_k are a limited number of functions in terms of the variable; * to be convoluted and coef_k are coefficients independent of the convolution; * variable.; *; * Classes derived from RooResolutionModel implement; * \f[; * R_k(x,\bar{b},\bar{c}) = \int \mathrm{basis}_k(x',\bar{b}) * \mathrm{resModel}(x-x',\bar{c}) \; \mathrm{d} x',; * \f]; * which RooAbsAnaConvPdf uses to construct the pdf for [ Phys (x) R ] :; * \f[; * \mathrm{PDF}(x,\bar a, \bar b, \bar c) = \sum_k \mathrm{coef}_k(\bar a) * R_k(x, \bar b, \bar c); * \f]; *; * A minimal implementation of a RooResolutionModel consists of a; * ```; * Int_t basisCode(const char* name); * ```; * function indicating which basis functions this resolution model supports, and; * ```; * double evaluate(),; * ```; * which should implement the resolution model (optionally convoluted with one of the; * supported basis functions). RooResolutionModel objects can be used as regular; * PDFs (They inhe",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooResolutionModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:1198,Modifiability,variab,variable,1198,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /**; * \class RooResolutionModel; * RooResolutionModel is the base class for PDFs that represent a; * resolution model that can be convoluted with a physics model of the form; * \f[; * \mathrm{Phys}(x,a,b) = \sum_k \mathrm{coef}_k(a) * \mathrm{basis}_k(x,b); * \f]; * where basis_k are a limited number of functions in terms of the variable; * to be convoluted and coef_k are coefficients independent of the convolution; * variable.; *; * Classes derived from RooResolutionModel implement; * \f[; * R_k(x,\bar{b},\bar{c}) = \int \mathrm{basis}_k(x',\bar{b}) * \mathrm{resModel}(x-x',\bar{c}) \; \mathrm{d} x',; * \f]; * which RooAbsAnaConvPdf uses to construct the pdf for [ Phys (x) R ] :; * \f[; * \mathrm{PDF}(x,\bar a, \bar b, \bar c) = \sum_k \mathrm{coef}_k(\bar a) * R_k(x, \bar b, \bar c); * \f]; *; * A minimal implementation of a RooResolutionModel consists of a; * ```; * Int_t basisCode(const char* name); * ```; * function indicating which basis functions this resolution model supports, and; * ```; * double evaluate(),; * ```; * which should implement the resolution model (optionally convoluted with one of the; * supported basis functions). RooResolutionModel objects can be used as regular; * PDFs (They inhe",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooResolutionModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:1997,Modifiability,inherit,inherit,1997,"ionModel; * RooResolutionModel is the base class for PDFs that represent a; * resolution model that can be convoluted with a physics model of the form; * \f[; * \mathrm{Phys}(x,a,b) = \sum_k \mathrm{coef}_k(a) * \mathrm{basis}_k(x,b); * \f]; * where basis_k are a limited number of functions in terms of the variable; * to be convoluted and coef_k are coefficients independent of the convolution; * variable.; *; * Classes derived from RooResolutionModel implement; * \f[; * R_k(x,\bar{b},\bar{c}) = \int \mathrm{basis}_k(x',\bar{b}) * \mathrm{resModel}(x-x',\bar{c}) \; \mathrm{d} x',; * \f]; * which RooAbsAnaConvPdf uses to construct the pdf for [ Phys (x) R ] :; * \f[; * \mathrm{PDF}(x,\bar a, \bar b, \bar c) = \sum_k \mathrm{coef}_k(\bar a) * R_k(x, \bar b, \bar c); * \f]; *; * A minimal implementation of a RooResolutionModel consists of a; * ```; * Int_t basisCode(const char* name); * ```; * function indicating which basis functions this resolution model supports, and; * ```; * double evaluate(),; * ```; * which should implement the resolution model (optionally convoluted with one of the; * supported basis functions). RooResolutionModel objects can be used as regular; * PDFs (They inherit from RooAbsPdf), or as resolution model convoluted with; * a basis function. The implementation of evaluate() can identify the requested; * mode using basisCode(). If zero, the regular PDF value; * should be calculated. If non-zero, the model's value convoluted with the; * basis function identified by the code should be calculated.; *; * Optionally, analytical integrals can be advertised and implemented, in the; * same way as done for regular PDFS (see RooAbsPdf for further details).; * Also in getAnalyticalIntegral() / analyticalIntegral(), the implementation; * should use basisCode() to determine for which scenario the integral is; * requested.; *; * The choice of basis returned by basisCode() is guaranteed not to change; * during the lifetime of a RooResolutionModel object.; *; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooResolutionModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:115,Modifiability,variab,variable,115,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with convolution variable 'x'.; /// The convolution variable needs to be convertible to real values, and be able; /// to give information about its range. This is supported by e.g. RooRealVar or RooLinearVar, which; /// accepts offsetting and scaling an observable.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooResolutionModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:150,Modifiability,variab,variable,150,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with convolution variable 'x'.; /// The convolution variable needs to be convertible to real values, and be able; /// to give information about its range. This is supported by e.g. RooRealVar or RooLinearVar, which; /// accepts offsetting and scaling an observable.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooResolutionModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:256,Safety,avoid,avoid,256,"////////////////////////////////////////////////////////////////////////////////; /// Instantiate a clone of this resolution model representing a convolution with given; /// basis function. The owners object name is incorporated in the clones name; /// to avoid multiple convolution objects with the same name in complex PDF structures.; ///; /// Note: The 'inBasis' formula expression must be a RooFormulaVar that encodes the formula; /// in the title of the object and this expression must be an exact match against the; /// implemented basis function strings (see derived class implementation of method basisCode(); /// for those strings",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooResolutionModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:22,Modifiability,variab,variable,22,"// Check that primary variable of basis functions is our convolution variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooResolutionModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:69,Modifiability,variab,variable,69,"// Check that primary variable of basis functions is our convolution variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooResolutionModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:28,Deployability,update,update,28,"// Change basis pointer and update client-server link",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooResolutionModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:109,Modifiability,variab,variable,109,"////////////////////////////////////////////////////////////////////////////////; /// Return the convolution variable of the selection basis function.; /// This is, by definition, the first parameter of the basis function",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooResolutionModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:15,Modifiability,variab,variable,15,"// Convolution variable is by definition first server of basis function",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooResolutionModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:58,Performance,cache,cached,58,"// Return value of object. Calculated if dirty, otherwise cached value is returned.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooResolutionModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:101,Availability,error,error,101,"////////////////////////////////////////////////////////////////////////////////; /// Floating point error checking and tracing for given float value; //bool RooResolutionModel::traceEvalHook(double value) const; //{; // // check for a math error or negative value; // return TMath::IsNaN(value) ;; //}; ////////////////////////////////////////////////////////////////////////////////; /// Return the list of servers used by our normalization integral",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooResolutionModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:241,Availability,error,error,241,"////////////////////////////////////////////////////////////////////////////////; /// Floating point error checking and tracing for given float value; //bool RooResolutionModel::traceEvalHook(double value) const; //{; // // check for a math error or negative value; // return TMath::IsNaN(value) ;; //}; ////////////////////////////////////////////////////////////////////////////////; /// Return the list of servers used by our normalization integral",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooResolutionModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:801,Deployability,integrat,integration,801,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRombergIntegrator.cxx; \class RooRombergIntegrator; \ingroup Roofitcore. Adaptive numerical integration algorithm. It uses Romberg's method with trapezoids or midpoints.; The integrand is approximated by \f$ 1, 2, 4, 8, \ldots, 2^n \f$ trapezoids, and; Richardson series acceleration is applied to the series. For refinement step \f$ n \f$, that is; \f[; R(n,m) = \frac{1}{4^m - 1} \left( 4^m R(n, m-1) - R(n-1, m-1) \right); \f]; The integrator will evaluate the first six refinements (i.e. 64 points) in one go,; apply a five-point series acceleration, and successively add more steps until the; desired precision is reached.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:1144,Deployability,integrat,integrator,1144,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRombergIntegrator.cxx; \class RooRombergIntegrator; \ingroup Roofitcore. Adaptive numerical integration algorithm. It uses Romberg's method with trapezoids or midpoints.; The integrand is approximated by \f$ 1, 2, 4, 8, \ldots, 2^n \f$ trapezoids, and; Richardson series acceleration is applied to the series. For refinement step \f$ n \f$, that is; \f[; R(n,m) = \frac{1}{4^m - 1} \left( 4^m R(n, m-1) - R(n-1, m-1) \right); \f]; The integrator will evaluate the first six refinements (i.e. 64 points) in one go,; apply a five-point series acceleration, and successively add more steps until the; desired precision is reached.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:782,Energy Efficiency,Adapt,Adaptive,782,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRombergIntegrator.cxx; \class RooRombergIntegrator; \ingroup Roofitcore. Adaptive numerical integration algorithm. It uses Romberg's method with trapezoids or midpoints.; The integrand is approximated by \f$ 1, 2, 4, 8, \ldots, 2^n \f$ trapezoids, and; Richardson series acceleration is applied to the series. For refinement step \f$ n \f$, that is; \f[; R(n,m) = \frac{1}{4^m - 1} \left( 4^m R(n, m-1) - R(n-1, m-1) \right); \f]; The integrator will evaluate the first six refinements (i.e. 64 points) in one go,; apply a five-point series acceleration, and successively add more steps until the; desired precision is reached.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:801,Integrability,integrat,integration,801,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRombergIntegrator.cxx; \class RooRombergIntegrator; \ingroup Roofitcore. Adaptive numerical integration algorithm. It uses Romberg's method with trapezoids or midpoints.; The integrand is approximated by \f$ 1, 2, 4, 8, \ldots, 2^n \f$ trapezoids, and; Richardson series acceleration is applied to the series. For refinement step \f$ n \f$, that is; \f[; R(n,m) = \frac{1}{4^m - 1} \left( 4^m R(n, m-1) - R(n-1, m-1) \right); \f]; The integrator will evaluate the first six refinements (i.e. 64 points) in one go,; apply a five-point series acceleration, and successively add more steps until the; desired precision is reached.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:1144,Integrability,integrat,integrator,1144,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRombergIntegrator.cxx; \class RooRombergIntegrator; \ingroup Roofitcore. Adaptive numerical integration algorithm. It uses Romberg's method with trapezoids or midpoints.; The integrand is approximated by \f$ 1, 2, 4, 8, \ldots, 2^n \f$ trapezoids, and; Richardson series acceleration is applied to the series. For refinement step \f$ n \f$, that is; \f[; R(n,m) = \frac{1}{4^m - 1} \left( 4^m R(n, m-1) - R(n-1, m-1) \right); \f]; The integrator will evaluate the first six refinements (i.e. 64 points) in one go,; apply a five-point series acceleration, and successively add more steps until the; desired precision is reached.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:782,Modifiability,Adapt,Adaptive,782,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRombergIntegrator.cxx; \class RooRombergIntegrator; \ingroup Roofitcore. Adaptive numerical integration algorithm. It uses Romberg's method with trapezoids or midpoints.; The integrand is approximated by \f$ 1, 2, 4, 8, \ldots, 2^n \f$ trapezoids, and; Richardson series acceleration is applied to the series. For refinement step \f$ n \f$, that is; \f[; R(n,m) = \frac{1}{4^m - 1} \left( 4^m R(n, m-1) - R(n-1, m-1) \right); \f]; The integrator will evaluate the first six refinements (i.e. 64 points) in one go,; apply a five-point series acceleration, and successively add more steps until the; desired precision is reached.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:393,Modifiability,variab,variables,393,"////////////////////////////////////////////////////////////////////////////////; /// Calculate the n-th stage of refinement of the Second Euler-Maclaurin; /// summation rule which has the useful property of not evaluating the; /// integrand at either of its endpoints but requires more function; /// evaluations than the trapezoidal rule. This rule can be used with; /// a suitable change of variables to estimate improper integrals.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:191,Energy Efficiency,efficient,efficient,191,"////////////////////////////////////////////////////////////////////////////////; /// Calculate the n-th stage of refinement of the extended trapezoidal; /// summation rule. This is the most efficient rule for a well behaved; /// integrands that can be evaluated over its entire range, including the; /// endpoints.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:132,Modifiability,extend,extended,132,"////////////////////////////////////////////////////////////////////////////////; /// Calculate the n-th stage of refinement of the extended trapezoidal; /// summation rule. This is the most efficient rule for a well behaved; /// integrands that can be evaluated over its entire range, including the; /// endpoints.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:19,Availability,down,down,19,"// break the range down into several trapezoids using 2**(n-2); // equally-spaced interior points",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:3,Deployability,update,update,3,"// update the step size for the next refinement of the summation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:161,Deployability,integrat,integrator,161,"// namespace RooFit; // Register this class with RooNumIntConfig; ////////////////////////////////////////////////////////////////////////////////; /// Register integrator plugins, their parameters and capabilities with RooNumIntFactory.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:161,Integrability,integrat,integrator,161,"// namespace RooFit; // Register this class with RooNumIntConfig; ////////////////////////////////////////////////////////////////////////////////; /// Register integrator plugins, their parameters and capabilities with RooNumIntFactory.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:172,Modifiability,plugin,plugins,172,"// namespace RooFit; // Register this class with RooNumIntConfig; ////////////////////////////////////////////////////////////////////////////////; /// Register integrator plugins, their parameters and capabilities with RooNumIntFactory.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:26,Deployability,integrat,integrators,26,"// only for the segmented integrators",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:26,Integrability,integrat,integrators,26,"// only for the segmented integrators",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:210,Availability,toler,tolerance,210,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified summation; /// rule, maximum number of steps and conversion tolerance. The integration; /// limits are taken from the function binding.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:96,Deployability,integrat,integrator,96,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified summation; /// rule, maximum number of steps and conversion tolerance. The integration; /// limits are taken from the function binding.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:225,Deployability,integrat,integration,225,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified summation; /// rule, maximum number of steps and conversion tolerance. The integration; /// limits are taken from the function binding.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:96,Integrability,integrat,integrator,96,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified summation; /// rule, maximum number of steps and conversion tolerance. The integration; /// limits are taken from the function binding.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:225,Integrability,integrat,integration,225,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified summation; /// rule, maximum number of steps and conversion tolerance. The integration; /// limits are taken from the function binding.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:231,Availability,toler,tolerance,231,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding for given range,; /// using specified summation rule, maximum number of steps and; /// conversion tolerance. The integration limits are taken from the; /// function binding.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:96,Deployability,integrat,integrator,96,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding for given range,; /// using specified summation rule, maximum number of steps and; /// conversion tolerance. The integration limits are taken from the; /// function binding.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:246,Deployability,integrat,integration,246,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding for given range,; /// using specified summation rule, maximum number of steps and; /// conversion tolerance. The integration limits are taken from the; /// function binding.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:96,Integrability,integrat,integrator,96,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding for given range,; /// using specified summation rule, maximum number of steps and; /// conversion tolerance. The integration limits are taken from the; /// function binding.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:246,Integrability,integrat,integration,246,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding for given range,; /// using specified summation rule, maximum number of steps and; /// conversion tolerance. The integration limits are taken from the; /// function binding.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:96,Deployability,integrat,integrator,96,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified; /// configuration object. The integration limits are taken from the; /// function binding",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:155,Deployability,configurat,configuration,155,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified; /// configuration object. The integration limits are taken from the; /// function binding",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:181,Deployability,integrat,integration,181,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified; /// configuration object. The integration limits are taken from the; /// function binding",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:96,Integrability,integrat,integrator,96,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified; /// configuration object. The integration limits are taken from the; /// function binding",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:181,Integrability,integrat,integration,181,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified; /// configuration object. The integration limits are taken from the; /// function binding",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:155,Modifiability,config,configuration,155,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified; /// configuration object. The integration limits are taken from the; /// function binding",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:27,Modifiability,config,config,27,"// Extract parameters from config object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:96,Deployability,integrat,integrator,96,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified; /// configuration object and integration range",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:155,Deployability,configurat,configuration,155,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified; /// configuration object and integration range",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:180,Deployability,integrat,integration,180,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified; /// configuration object and integration range",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:96,Integrability,integrat,integrator,96,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified; /// configuration object and integration range",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:180,Integrability,integrat,integration,180,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified; /// configuration object and integration range",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:155,Modifiability,config,configuration,155,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified; /// configuration object and integration range",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:27,Modifiability,config,config,27,"// Extract parameters from config object",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:101,Deployability,integrat,integrator,101,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the integrator",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:101,Integrability,integrat,integrator,101,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the integrator",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:3,Energy Efficiency,Allocate,Allocate,3,"// Allocate coordinate buffer size after number of function dimensions",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:36,Deployability,integrat,integration,36,"// Allocate workspace for numerical integration engine",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:3,Energy Efficiency,Allocate,Allocate,3,"// Allocate workspace for numerical integration engine",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:36,Integrability,integrat,integration,36,"// Allocate workspace for numerical integration engine",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:97,Deployability,integrat,integration,97,"////////////////////////////////////////////////////////////////////////////////; /// Change our integration limits. Return true if the new limits are; /// ok, or otherwise false. Always returns false and does nothing; /// if this object was constructed to always use our integrand's limits.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:97,Integrability,integrat,integration,97,"////////////////////////////////////////////////////////////////////////////////; /// Change our integration limits. Return true if the new limits are; /// ok, or otherwise false. Always returns false and does nothing; /// if this object was constructed to always use our integrand's limits.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:101,Deployability,integrat,integration,101,"////////////////////////////////////////////////////////////////////////////////; /// Check that our integration range is finite and otherwise return false.; /// Update the limits from the integrand if requested.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:162,Deployability,Update,Update,162,"////////////////////////////////////////////////////////////////////////////////; /// Check that our integration range is finite and otherwise return false.; /// Update the limits from the integrand if requested.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:101,Integrability,integrat,integration,101,"////////////////////////////////////////////////////////////////////////////////; /// Check that our integration range is finite and otherwise return false.; /// Update the limits from the integrand if requested.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:53,Deployability,Integrat,Integrator,53,"///< If true limits of function binding are used; // Integrator configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:64,Deployability,configurat,configuration,64,"///< If true limits of function binding are used; // Integrator configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:53,Integrability,Integrat,Integrator,53,"///< If true limits of function binding are used; // Integrator configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:64,Modifiability,config,configuration,64,"///< If true limits of function binding are used; // Integrator configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:26,Availability,toler,tolerance,26,"///< Absolute convergence tolerance",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:26,Availability,toler,tolerance,26,"///< Relative convergence tolerance",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:12,Deployability,integrat,integration,12,"///<! Lower integration bounds",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:12,Integrability,integrat,integration,12,"///<! Lower integration bounds",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:12,Deployability,integrat,integration,12,"///<! Upper integration bounds; // Numerical integrator workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:45,Deployability,integrat,integrator,45,"///<! Upper integration bounds; // Numerical integrator workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:12,Integrability,integrat,integration,12,"///<! Upper integration bounds; // Numerical integrator workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:45,Integrability,integrat,integrator,45,"///<! Upper integration bounds; // Numerical integrator workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:6,Deployability,Integrat,Integrator,6,"///<! Integrator workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:6,Integrability,Integrat,Integrator,6,"///<! Integrator workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooRombergIntegrator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSentinel.cxx:1138,Deployability,install,installs,1138,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooSentinel.cxx; \class RooSentinel; \ingroup Roofitcore. RooSentinel is a special purpose singleton class that terminates; all other RooFit singleton services when the process exits. All function RooFit singleton services are created on the heap with; a static wrapper function to avoid the 'static initialization order fiasco'; but are not automatically destroyed at the end of the session. This class; installs an atexit() function that takes care of this; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSentinel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSentinel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSentinel.cxx:995,Integrability,wrap,wrapper,995,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooSentinel.cxx; \class RooSentinel; \ingroup Roofitcore. RooSentinel is a special purpose singleton class that terminates; all other RooFit singleton services when the process exits. All function RooFit singleton services are created on the heap with; a static wrapper function to avoid the 'static initialization order fiasco'; but are not automatically destroyed at the end of the session. This class; installs an atexit() function that takes care of this; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSentinel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSentinel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSentinel.cxx:1015,Safety,avoid,avoid,1015,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooSentinel.cxx; \class RooSentinel; \ingroup Roofitcore. RooSentinel is a special purpose singleton class that terminates; all other RooFit singleton services when the process exits. All function RooFit singleton services are created on the heap with; a static wrapper function to avoid the 'static initialization order fiasco'; but are not automatically destroyed at the end of the session. This class; installs an atexit() function that takes care of this; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSentinel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSentinel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSentinel.cxx:86,Deployability,Install,Install,86,"////////////////////////////////////////////////////////////////////////////////; /// Install atexit handler that calls CleanupRooFitAtExit(); /// on program termination",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSentinel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSentinel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSharedProperties.cxx:95,Integrability,interface,interface,95,"////////////////////////////////////////////////////////////////////////////////; /// Printing interface",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSharedProperties.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSharedProperties.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimGenContext.cxx:774,Energy Efficiency,Efficient,Efficient,774,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooSimGenContext.cxx; \class RooSimGenContext; \ingroup Roofitcore. Efficient implementation of the generator context; specific for RooSimultaneous PDFs when generating more than one of the; component pdfs.; It runs in two modes:; - Proto data with category entries are given: An event from the same category as; in the proto data is created.; - No proto data: A category is chosen randomly.; \note This requires that the PDFs are extended, to determine the relative probabilities; that an event originates from a certain category.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimGenContext.cxx:1137,Modifiability,extend,extended,1137,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooSimGenContext.cxx; \class RooSimGenContext; \ingroup Roofitcore. Efficient implementation of the generator context; specific for RooSimultaneous PDFs when generating more than one of the; component pdfs.; It runs in two modes:; - Proto data with category entries are given: An event from the same category as; in the proto data is created.; - No proto data: A category is chosen randomly.; \note This requires that the PDFs are extended, to determine the relative probabilities; that an event originates from a certain category.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimGenContext.cxx:40,Modifiability,extend,extended,40,"// We must either have the prototype or extended likelihood to determined; // the relative fractions of the components",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimGenContext.cxx:53,Modifiability,extend,extended,53,"// Initialize fraction threshold array (used only in extended mode)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimGenContext.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform one-time initialization of generator context",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimGenContext.cxx:3,Deployability,Update,Update,3,"// Update fractions reflecting possible new parameter values",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimGenContext.cxx:104,Integrability,interface,interface,104,"////////////////////////////////////////////////////////////////////////////////; /// Detailed printing interface",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimSplitGenContext.cxx:784,Energy Efficiency,Efficient,Efficient,784,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooSimSplitGenContext.cxx; \class RooSimSplitGenContext; \ingroup Roofitcore. Efficient implementation of the generator context; specific for RooSimultaneous PDFs when generating more than one of the; component pdfs.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimSplitGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimSplitGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimSplitGenContext.cxx:11,Modifiability,extend,extended,11,"// We must extended likelihood to determine the relative fractions of the components",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimSplitGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimSplitGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimSplitGenContext.cxx:53,Modifiability,extend,extended,53,"// Initialize fraction threshold array (used only in extended mode)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimSplitGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimSplitGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimSplitGenContext.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform one-time initialization of generator context",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimSplitGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimSplitGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimSplitGenContext.cxx:119,Deployability,configurat,configuration,119,"// Perform any subclass implementation-specific initialization; // Can be skipped if this is a rerun with an identical configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimSplitGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimSplitGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimSplitGenContext.cxx:119,Modifiability,config,configuration,119,"// Perform any subclass implementation-specific initialization; // Can be skipped if this is a rerun with an identical configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimSplitGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimSplitGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimSplitGenContext.cxx:3,Performance,Perform,Perform,3,"// Perform any subclass implementation-specific initialization; // Can be skipped if this is a rerun with an identical configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimSplitGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimSplitGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimSplitGenContext.cxx:104,Integrability,interface,interface,104,"////////////////////////////////////////////////////////////////////////////////; /// Detailed printing interface",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimSplitGenContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimSplitGenContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:1120,Modifiability,Extend,Extended,1120,"thors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooSimultaneous.cxx; \class RooSimultaneous; \ingroup Roofitcore. Facilitates simultaneous fitting of multiple PDFs to subsets of a given dataset.; The class takes an index category, which is used as a selector; for PDFs, and a list of PDFs, each associated; with a state of the index category. RooSimultaneous always returns; the value of the PDF that is associated with the current value; of the index category. Extended likelihood fitting is supported if all components support; extended likelihood mode. The expected number of events by a RooSimultaneous; is that of the component p.d.f. selected by the index category. The index category can be accessed using indexCategory(). ###Generating events; When generating events from a RooSimultaneous, the index category has to be added to; the dataset. Further, the PDF needs to know the relative probabilities of each category, i.e.,; how many events are in which category. This can be achieved in two ways:; - Generating with proto data that have category entries: An event from the same category as; in the proto data is created for each event in the proto data.; See RooAbsPdf::generate(const RooArgSet&,const RooDataSet&,Int_t,bool,bool,bool) const.; - No proto data: A category is chosen randomly.; \note This requires that the PDFs building the simultaneous are extended. In this way,; the relative probability of each category can be calculated from the number of events; in each category.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:1188,Modifiability,extend,extended,1188,"thors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooSimultaneous.cxx; \class RooSimultaneous; \ingroup Roofitcore. Facilitates simultaneous fitting of multiple PDFs to subsets of a given dataset.; The class takes an index category, which is used as a selector; for PDFs, and a list of PDFs, each associated; with a state of the index category. RooSimultaneous always returns; the value of the PDF that is associated with the current value; of the index category. Extended likelihood fitting is supported if all components support; extended likelihood mode. The expected number of events by a RooSimultaneous; is that of the component p.d.f. selected by the index category. The index category can be accessed using indexCategory(). ###Generating events; When generating events from a RooSimultaneous, the index category has to be added to; the dataset. Further, the PDF needs to know the relative probabilities of each category, i.e.,; how many events are in which category. This can be achieved in two ways:; - Generating with proto data that have category entries: An event from the same category as; in the proto data is created for each event in the proto data.; See RooAbsPdf::generate(const RooArgSet&,const RooDataSet&,Int_t,bool,bool,bool) const.; - No proto data: A category is chosen randomly.; \note This requires that the PDFs building the simultaneous are extended. In this way,; the relative probability of each category can be calculated from the number of events; in each category.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:2025,Modifiability,extend,extended,2025,"thors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooSimultaneous.cxx; \class RooSimultaneous; \ingroup Roofitcore. Facilitates simultaneous fitting of multiple PDFs to subsets of a given dataset.; The class takes an index category, which is used as a selector; for PDFs, and a list of PDFs, each associated; with a state of the index category. RooSimultaneous always returns; the value of the PDF that is associated with the current value; of the index category. Extended likelihood fitting is supported if all components support; extended likelihood mode. The expected number of events by a RooSimultaneous; is that of the component p.d.f. selected by the index category. The index category can be accessed using indexCategory(). ###Generating events; When generating events from a RooSimultaneous, the index category has to be added to; the dataset. Further, the PDF needs to know the relative probabilities of each category, i.e.,; how many events are in which category. This can be achieved in two ways:; - Generating with proto data that have category entries: An event from the same category as; in the proto data is created for each event in the proto data.; See RooAbsPdf::generate(const RooArgSet&,const RooDataSet&,Int_t,bool,bool,bool) const.; - No proto data: A category is chosen randomly.; \note This requires that the PDFs building the simultaneous are extended. In this way,; the relative probability of each category can be calculated from the number of events; in each category.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:1356,Security,access,accessed,1356,"thors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooSimultaneous.cxx; \class RooSimultaneous; \ingroup Roofitcore. Facilitates simultaneous fitting of multiple PDFs to subsets of a given dataset.; The class takes an index category, which is used as a selector; for PDFs, and a list of PDFs, each associated; with a state of the index category. RooSimultaneous always returns; the value of the PDF that is associated with the current value; of the index category. Extended likelihood fitting is supported if all components support; extended likelihood mode. The expected number of events by a RooSimultaneous; is that of the component p.d.f. selected by the index category. The index category can be accessed using indexCategory(). ###Generating events; When generating events from a RooSimultaneous, the index category has to be added to; the dataset. Further, the PDF needs to know the relative probabilities of each category, i.e.,; how many events are in which category. This can be achieved in two ways:; - Generating with proto data that have category entries: An event from the same category as; in the proto data is created for each event in the proto data.; See RooAbsPdf::generate(const RooArgSet&,const RooDataSet&,Int_t,bool,bool,bool) const.; - No proto data: A category is chosen randomly.; \note This requires that the PDFs building the simultaneous are extended. In this way,; the relative probability of each category can be calculated from the number of events; in each category.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:422,Testability,assert,assert,422,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with index category. PDFs associated with indexCat; /// states can be added after construction with the addPdf() function.; ///; /// RooSimultaneous can function without having a PDF associated; /// with every single state. The normalization in such cases is taken; /// from the number of registered PDFs, but getVal() will assert if; /// when called for an unregistered index state.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:551,Modifiability,variab,variables,551,"////////////////////////////////////////////////////////////////////////////////; /// Constructor from index category and full list of PDFs.; /// In this constructor form, a PDF must be supplied for each indexCat state; /// to avoid ambiguities. The PDFs are associated with the states of the; /// index category as they appear when iterating through the category states; /// with RooAbsCategory::begin() and RooAbsCategory::end(). This usually means; /// they are associated by ascending index numbers.; ///; /// PDFs may not overlap (i.e. share any variables) with the index category (function)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:227,Safety,avoid,avoid,227,"////////////////////////////////////////////////////////////////////////////////; /// Constructor from index category and full list of PDFs.; /// In this constructor form, a PDF must be supplied for each indexCat state; /// to avoid ambiguities. The PDFs are associated with the states of the; /// index category as they appear when iterating through the category states; /// with RooAbsCategory::begin() and RooAbsCategory::end(). This usually means; /// they are associated by ascending index numbers.; ///; /// PDFs may not overlap (i.e. share any variables) with the index category (function)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:52,Usability,simpl,simple,52,"// If there are no simultaneous component p.d.f. do simple processing through addPdf()",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:14,Integrability,message,message,14,"// Issue info message that we are about to do some rearranging",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:714,Availability,failure,failure,714,"////////////////////////////////////////////////////////////////////////////////; /// Associate given PDF with index category state label 'catLabel'.; /// The name state must be already defined in the index category.; ///; /// RooSimultaneous can function without having a PDF associated; /// with every single state. The normalization in such cases is taken; /// from the number of registered PDFs, but getVal() will fail if; /// called for an unregistered index state.; ///; /// PDFs may not overlap (i.e. share any variables) with the index category (function).; /// \param[in] pdf PDF to be added.; /// \param[in] catLabel Name of the category state to be associated to the PDF.; /// \return `true` in case of failure.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:518,Modifiability,variab,variables,518,"////////////////////////////////////////////////////////////////////////////////; /// Associate given PDF with index category state label 'catLabel'.; /// The name state must be already defined in the index category.; ///; /// RooSimultaneous can function without having a PDF associated; /// with every single state. The normalization in such cases is taken; /// from the number of registered PDFs, but getVal() will fail if; /// called for an unregistered index state.; ///; /// PDFs may not overlap (i.e. share any variables) with the index category (function).; /// \param[in] pdf PDF to be added.; /// \param[in] catLabel Name of the category state to be associated to the PDF.; /// \return `true` in case of failure.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:145,Modifiability,extend,extended,145,"////////////////////////////////////////////////////////////////////////////////; /// Examine the pdf components and check if one of them can be extended or must be extended.; /// It is enough to have one component that can be extended or must be extended to return the flag in; /// the total simultaneous pdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:165,Modifiability,extend,extended,165,"////////////////////////////////////////////////////////////////////////////////; /// Examine the pdf components and check if one of them can be extended or must be extended.; /// It is enough to have one component that can be extended or must be extended to return the flag in; /// the total simultaneous pdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:227,Modifiability,extend,extended,227,"////////////////////////////////////////////////////////////////////////////////; /// Examine the pdf components and check if one of them can be extended or must be extended.; /// It is enough to have one component that can be extended or must be extended to return the flag in; /// the total simultaneous pdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:247,Modifiability,extend,extended,247,"////////////////////////////////////////////////////////////////////////////////; /// Examine the pdf components and check if one of them can be extended or must be extended.; /// It is enough to have one component that can be extended or must be extended to return the flag in; /// the total simultaneous pdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:19,Modifiability,extend,extendedMode,19,"//cout << ""RooSim::extendedMode("" << GetName() << "") component "" << pdf->GetName() << "" can be extended""; // << endl;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:95,Modifiability,extend,extended,95,"//cout << ""RooSim::extendedMode("" << GetName() << "") component "" << pdf->GetName() << "" can be extended""; // << endl;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:19,Modifiability,extend,extendedMode,19,"//cout << ""RooSim::extendedMode("" << GetName() << "") component "" << pdf->GetName() << "" MUST be extended"" << endl;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:96,Modifiability,extend,extended,96,"//cout << ""RooSim::extendedMode("" << GetName() << "") component "" << pdf->GetName() << "" MUST be extended"" << endl;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:19,Modifiability,extend,extendedMode,19,"//cout << ""RooSim::extendedMode("" << GetName() << "") returning MustBeExtended"" << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:19,Modifiability,extend,extendedMode,19,"//cout << ""RooSim::extendedMode("" << GetName() << "") returning CanBeExtended"" << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:19,Modifiability,extend,extendedMode,19,"//cout << ""RooSim::extendedMode("" << GetName() << "") returning CanNotBeExtended"" << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:2,Testability,assert,assert,2,"//assert(proxy!=0) ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:59,Modifiability,extend,extendable,59,"// Calculate relative weighting factor for sim-pdfs of all extendable components",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:2,Testability,assert,assert,2,"//assert(proxy!=0) ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:122,Deployability,integrat,integration,122,"////////////////////////////////////////////////////////////////////////////////; /// Forward determination of analytical integration capabilities to component p.d.f.s; /// A unique code is assigned to the combined integration capabilities of all associated; /// p.d.f.s",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:215,Deployability,integrat,integration,215,"////////////////////////////////////////////////////////////////////////////////; /// Forward determination of analytical integration capabilities to component p.d.f.s; /// A unique code is assigned to the combined integration capabilities of all associated; /// p.d.f.s",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:122,Integrability,integrat,integration,122,"////////////////////////////////////////////////////////////////////////////////; /// Forward determination of analytical integration capabilities to component p.d.f.s; /// A unique code is assigned to the combined integration capabilities of all associated; /// p.d.f.s",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:215,Integrability,integrat,integration,215,"////////////////////////////////////////////////////////////////////////////////; /// Forward determination of analytical integration capabilities to component p.d.f.s; /// A unique code is assigned to the combined integration capabilities of all associated; /// p.d.f.s",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:36,Deployability,integrat,integrate,36,"// Declare that we can analytically integrate all requested observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:36,Integrability,integrat,integrate,36,"// Declare that we can analytically integrate all requested observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:17,Deployability,configurat,configuration,17,"// Check if this configuration was created before",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:17,Modifiability,config,configuration,17,"// Check if this configuration was created before",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:104,Deployability,integrat,integration,104,"////////////////////////////////////////////////////////////////////////////////; /// Return analytical integration defined by given code",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:104,Integrability,integrat,integration,104,"////////////////////////////////////////////////////////////////////////////////; /// Return analytical integration defined by given code",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:6,Deployability,integrat,integration,6,"// No integration scenario",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:6,Integrability,integrat,integration,6,"// No integration scenario",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:11,Deployability,integrat,integration,11,"// Partial integration scenarios, rangeName already encoded in 'code'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:11,Integrability,integrat,integration,11,"// Partial integration scenarios, rangeName already encoded in 'code'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:253,Deployability,integrat,integration,253,"////////////////////////////////////////////////////////////////////////////////; /// Back-end for plotOn() implementation on RooSimultaneous which; /// needs special handling because a RooSimultaneous PDF cannot; /// project out its index category via integration. plotOn() will; /// abort if this is requested without providing a projection dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:253,Integrability,integrat,integration,253,"////////////////////////////////////////////////////////////////////////////////; /// Back-end for plotOn() implementation on RooSimultaneous which; /// needs special handling because a RooSimultaneous PDF cannot; /// project out its index category via integration. plotOn() will; /// abort if this is requested without providing a projection dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:285,Safety,abort,abort,285,"////////////////////////////////////////////////////////////////////////////////; /// Back-end for plotOn() implementation on RooSimultaneous which; /// needs special handling because a RooSimultaneous PDF cannot; /// project out its index category via integration. plotOn() will; /// abort if this is requested without providing a projection dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:3,Safety,Sanity check,Sanity checks,3,"// Sanity checks",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:22,Deployability,configurat,configuration,22,"// Extract projection configuration from command list",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:22,Modifiability,config,configuration,22,"// Extract projection configuration from command list",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:198,Availability,ERROR,ERROR,198,"// This dummy is needed for plotOn to recognize the ""SliceCatMany"" command.; // It is not used directly, but the ""SliceCat"" commands are nested in it.; // Removing this dummy definition results in ""ERROR: unrecognized command: SliceCatMany"".",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:16,Modifiability,variab,variables,16,"// Make list of variables to be projected",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:23,Modifiability,variab,variables,23,"// Take out the sliced variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:7,Availability,Error,Error,7,"// *** Error checking for a fundamental index category ***; //cout << ""RooSim::plotOn: index is fundamental"" << endl ;; // Check that the provided projection dataset contains our index variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:185,Modifiability,variab,variable,185,"// *** Error checking for a fundamental index category ***; //cout << ""RooSim::plotOn: index is fundamental"" << endl ;; // Check that the provided projection dataset contains our index variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:7,Availability,Error,Error,7,"// *** Error checking for a composite index category ***; // Determine if any servers of the index category are in the projectedVars",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:3,Energy Efficiency,Reduce,Reduce,3,"// Reduce projData: take out fitCat (component) columns and entries that don't match selected slice; // Construct cut string to only select projection data event that match the current slice; // Make cut string to exclude rows from projection data",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface function used by test statistics to freeze choice of observables; /// for interpretation of fraction coefficients. Needed here because a RooSimultaneous; /// works like a RooAddPdf when plotted",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:113,Testability,test,test,113,"////////////////////////////////////////////////////////////////////////////////; /// Interface function used by test statistics to freeze choice of observables; /// for interpretation of fraction coefficients. Needed here because a RooSimultaneous; /// works like a RooAddPdf when plotted",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface function used by test statistics to freeze choice of range; /// for interpretation of fraction coefficients. Needed here because a RooSimultaneous; /// works like a RooAddPdf when plotted",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:113,Testability,test,test,113,"////////////////////////////////////////////////////////////////////////////////; /// Interface function used by test statistics to freeze choice of range; /// for interpretation of fraction coefficients. Needed here because a RooSimultaneous; /// works like a RooAddPdf when plotted",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:28,Modifiability,config,config,28,"// Return special generator config that can also do binned generation for selected states",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:28,Modifiability,config,config,28,"// Return regular generator config ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:3,Safety,Abort,Abort,3,"// Abort if we have only part of the servers",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:104,Integrability,interface,interface,104,"////////////////////////////////////////////////////////////////////////////////; /// Special generator interface for generation of 'global observables' -- for RooStats tools",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:26,Modifiability,variab,variables,26,"// Make set with clone of variables (placeholder for output)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:42,Modifiability,variab,variables,42,"// If there are any, generate only global variables defined by the pdf; // associated with this state and transfer values to output placeholder.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:4,Integrability,Wrap,Wraps,4,"/// Wraps the components of this RooSimultaneous in RooBinSamplingPdfs.; /// \param[in] data The dataset to be used in the eventual fit, used to figure; /// out the observables and whether the dataset is binned.; /// \param[in] precision Precision argument for all created RooBinSamplingPdfs.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:497,Deployability,integrat,integration,497,"/// Wraps the components of this RooSimultaneous in RooBinSamplingPdfs, with a; /// different precision parameter for each component.; /// \param[in] data The dataset to be used in the eventual fit, used to figure; /// out the observables and whether the dataset is binned.; /// \param[in] precisions The map that gives the precision argument for each; /// component in the RooSimultaneous. The keys are the pdf names. If; /// there is no value for a given component, it will not use the bin; /// integration. Otherwise, the value has the same meaning than in; /// the IntegrateBins() command argument for RooAbsPdf::fitTo().; /// \param[in] useCategoryNames If this flag is set, the category names will be; /// used to look up the precision in the precisions map instead of; /// the pdf names.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:569,Deployability,Integrat,IntegrateBins,569,"/// Wraps the components of this RooSimultaneous in RooBinSamplingPdfs, with a; /// different precision parameter for each component.; /// \param[in] data The dataset to be used in the eventual fit, used to figure; /// out the observables and whether the dataset is binned.; /// \param[in] precisions The map that gives the precision argument for each; /// component in the RooSimultaneous. The keys are the pdf names. If; /// there is no value for a given component, it will not use the bin; /// integration. Otherwise, the value has the same meaning than in; /// the IntegrateBins() command argument for RooAbsPdf::fitTo().; /// \param[in] useCategoryNames If this flag is set, the category names will be; /// used to look up the precision in the precisions map instead of; /// the pdf names.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:4,Integrability,Wrap,Wraps,4,"/// Wraps the components of this RooSimultaneous in RooBinSamplingPdfs, with a; /// different precision parameter for each component.; /// \param[in] data The dataset to be used in the eventual fit, used to figure; /// out the observables and whether the dataset is binned.; /// \param[in] precisions The map that gives the precision argument for each; /// component in the RooSimultaneous. The keys are the pdf names. If; /// there is no value for a given component, it will not use the bin; /// integration. Otherwise, the value has the same meaning than in; /// the IntegrateBins() command argument for RooAbsPdf::fitTo().; /// \param[in] useCategoryNames If this flag is set, the category names will be; /// used to look up the precision in the precisions map instead of; /// the pdf names.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:497,Integrability,integrat,integration,497,"/// Wraps the components of this RooSimultaneous in RooBinSamplingPdfs, with a; /// different precision parameter for each component.; /// \param[in] data The dataset to be used in the eventual fit, used to figure; /// out the observables and whether the dataset is binned.; /// \param[in] precisions The map that gives the precision argument for each; /// component in the RooSimultaneous. The keys are the pdf names. If; /// there is no value for a given component, it will not use the bin; /// integration. Otherwise, the value has the same meaning than in; /// the IntegrateBins() command argument for RooAbsPdf::fitTo().; /// \param[in] useCategoryNames If this flag is set, the category names will be; /// used to look up the precision in the precisions map instead of; /// the pdf names.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:569,Integrability,Integrat,IntegrateBins,569,"/// Wraps the components of this RooSimultaneous in RooBinSamplingPdfs, with a; /// different precision parameter for each component.; /// \param[in] data The dataset to be used in the eventual fit, used to figure; /// out the observables and whether the dataset is binned.; /// \param[in] precisions The map that gives the precision argument for each; /// component in the RooSimultaneous. The keys are the pdf names. If; /// there is no value for a given component, it will not use the bin; /// integration. Otherwise, the value has the same meaning than in; /// the IntegrateBins() command argument for RooAbsPdf::fitTo().; /// \param[in] useCategoryNames If this flag is set, the category names will be; /// used to look up the precision in the precisions map instead of; /// the pdf names.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:154,Modifiability,inherit,inherit,154,"// Note that the index category of a RooSimultaneous can only be of type; // RooCategory or RooSuperCategory, because these are the only classes that; // inherit from RooAbsCategoryLValue.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:452,Performance,perform,performance,452,"// We can only prefix the observables after everything related the; // compiling of the compute graph for the normalization set is done. This; // is because of a subtlety in conditional RooProdPdfs, which stores the; // normalization sets for the individual pdfs in RooArgSets that are; // disconnected from the computation graph, so we have no control over; // them. An alternative would be to use recursive server re-direction,; // but this has more performance overhead.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimultaneous.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:3381,Deployability,configurat,configurations,3381,"osen state that evaluates; /// to \f$ 1 - \sum_i(a_i) \f$ where \f$ a_i \f$ are all other specializations. For example,; /// given a category \f$ c \f$ with the states `""A"",""B"",""C"",""D""`, the specification; /// ```; /// SplitParamConstrained(""m"",""c"",""D""); /// ```; /// will create the parameters \f$ m_A,m_B,m_C \f$ and a formula expression \f$ m_D \f$; /// that evaluates to \f$ (1-(m_A+m_B+m_C)) \f$. Constrained splits can also be; /// specified in the product of categories. In that case, the name of the; /// remainder state follows the syntax `""{State1;State2}""`, where `State1` and; /// `State2` are the state names of the two spitting categories.; ///; /// ## Splitting multiple PDFs; /// The examples so far deal with a single prototype PDF. It is also; /// possible to build with multiple prototype PDFs by specifying a; /// mapping between the prototype to use and the names of states of; /// a ""master"" splitting category. To specify these configurations,; /// an intermediate `MultiBuildConfig` must be composed with all; /// the necessary specifications. This, for example,; /// ```; /// RooSimWSTool::MultiBuildConfig mbc(""mc"");; /// mbc.addPdf(""I"",""G"",SplitParam(""m,s"",""c""));; /// mbc.addPdf(""II,III"",""F"",SplitParam(""a"",""c,d""));; /// ```; /// configures a build with two prototype PDFs \f$ G \f$ and \f$ F \f$.; /// Prototype \f$ G \f$ is used for state `""I""` of the master split category; /// `mc` and prototype \f$ F \f$ is used for states `""II""` and `""III""` of the; /// master split category `mc`. Furthermore, the parameters \f$ m,s \f$ of; /// prototype \f$ G \f$ are split; /// in category \f$ c \f$ while the parameter \f$ a \f$ of prototype \f$ F \f$ is split in; /// the product of the categories \f$ c \f$ and \f$ d \f$. The actual build is then; /// performed by passing the build configuration to RooSimWSTool, *e.g.*,; /// ```; /// wst.build(""MASTER"", mbc);; /// ```; /// By default, a specialisation is built for each permutation of; /// states of the splitting categorie",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:4237,Deployability,configurat,configuration,4237,", the name of the; /// remainder state follows the syntax `""{State1;State2}""`, where `State1` and; /// `State2` are the state names of the two spitting categories.; ///; /// ## Splitting multiple PDFs; /// The examples so far deal with a single prototype PDF. It is also; /// possible to build with multiple prototype PDFs by specifying a; /// mapping between the prototype to use and the names of states of; /// a ""master"" splitting category. To specify these configurations,; /// an intermediate `MultiBuildConfig` must be composed with all; /// the necessary specifications. This, for example,; /// ```; /// RooSimWSTool::MultiBuildConfig mbc(""mc"");; /// mbc.addPdf(""I"",""G"",SplitParam(""m,s"",""c""));; /// mbc.addPdf(""II,III"",""F"",SplitParam(""a"",""c,d""));; /// ```; /// configures a build with two prototype PDFs \f$ G \f$ and \f$ F \f$.; /// Prototype \f$ G \f$ is used for state `""I""` of the master split category; /// `mc` and prototype \f$ F \f$ is used for states `""II""` and `""III""` of the; /// master split category `mc`. Furthermore, the parameters \f$ m,s \f$ of; /// prototype \f$ G \f$ are split; /// in category \f$ c \f$ while the parameter \f$ a \f$ of prototype \f$ F \f$ is split in; /// the product of the categories \f$ c \f$ and \f$ d \f$. The actual build is then; /// performed by passing the build configuration to RooSimWSTool, *e.g.*,; /// ```; /// wst.build(""MASTER"", mbc);; /// ```; /// By default, a specialisation is built for each permutation of; /// states of the splitting categories that are used. It is possible; /// to restrict the building of specialised PDFs to a subset of states; /// by adding a restriction on the number of states to build as follows:; /// ```; /// mbc.restrictBuild(""c"",""A,B"");; /// ```; /// The restrictBuild method can be called multiple times, but at most; /// once for each splitting category in use. For simple builds with a single; /// prototype, restriction can be specified with a Restrict() argument; /// on the build command line.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:1157,Integrability,depend,depending,1157,"ject: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooSimWSTool; /// The RooSimWSTool is a tool operating on RooWorkspace objects that; /// can clone PDFs into a series of variations that are joined together; /// into a RooSimultaneous PDF.; ///; /// ## Splitting a single PDF; /// The simplest use case is to take a workspace PDF as prototype and; /// ""split"" a parameter of that PDF into two specialized parameters; /// depending on a category in the dataset.; ///; /// For example, given a Gaussian; /// PDF \f$ G(x \,|\, m,s) \f$ we want to construct a \f$ G_a(x \,|\, m_a,s) \f$ and a \f$ G_b(x \,|\, m_b,s) \f$; /// with different mean parameters to be fit to a dataset with observables; /// \f$ (x,c) \f$ where \f$ c \f$ is a category with states 'a' and 'b'.; ///; /// Using RooSimWSTool, one can create a simultaneous PDF from \f$ G_a \f$ and \f$ G_b \f$; /// from \f$ G \f$ with the following commands:; /// ```; /// RooSimWSTool wst(wspace);; /// wst.build(""G_sim"", ""G"", SplitParam(""m"",""c""));; /// ```; ///; /// #### Splitting using a product category; /// From this simple example one can go to builds of arbitrary complexity; /// by specifying multiple SplitParam arguments on multiple parameters; /// involving multiple splitting categories. Splits can also be performed; /// in the product of multiple categories, *i.e.*,; /// ```; /// ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:3381,Modifiability,config,configurations,3381,"osen state that evaluates; /// to \f$ 1 - \sum_i(a_i) \f$ where \f$ a_i \f$ are all other specializations. For example,; /// given a category \f$ c \f$ with the states `""A"",""B"",""C"",""D""`, the specification; /// ```; /// SplitParamConstrained(""m"",""c"",""D""); /// ```; /// will create the parameters \f$ m_A,m_B,m_C \f$ and a formula expression \f$ m_D \f$; /// that evaluates to \f$ (1-(m_A+m_B+m_C)) \f$. Constrained splits can also be; /// specified in the product of categories. In that case, the name of the; /// remainder state follows the syntax `""{State1;State2}""`, where `State1` and; /// `State2` are the state names of the two spitting categories.; ///; /// ## Splitting multiple PDFs; /// The examples so far deal with a single prototype PDF. It is also; /// possible to build with multiple prototype PDFs by specifying a; /// mapping between the prototype to use and the names of states of; /// a ""master"" splitting category. To specify these configurations,; /// an intermediate `MultiBuildConfig` must be composed with all; /// the necessary specifications. This, for example,; /// ```; /// RooSimWSTool::MultiBuildConfig mbc(""mc"");; /// mbc.addPdf(""I"",""G"",SplitParam(""m,s"",""c""));; /// mbc.addPdf(""II,III"",""F"",SplitParam(""a"",""c,d""));; /// ```; /// configures a build with two prototype PDFs \f$ G \f$ and \f$ F \f$.; /// Prototype \f$ G \f$ is used for state `""I""` of the master split category; /// `mc` and prototype \f$ F \f$ is used for states `""II""` and `""III""` of the; /// master split category `mc`. Furthermore, the parameters \f$ m,s \f$ of; /// prototype \f$ G \f$ are split; /// in category \f$ c \f$ while the parameter \f$ a \f$ of prototype \f$ F \f$ is split in; /// the product of the categories \f$ c \f$ and \f$ d \f$. The actual build is then; /// performed by passing the build configuration to RooSimWSTool, *e.g.*,; /// ```; /// wst.build(""MASTER"", mbc);; /// ```; /// By default, a specialisation is built for each permutation of; /// states of the splitting categorie",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:3688,Modifiability,config,configures,3688,"; /// will create the parameters \f$ m_A,m_B,m_C \f$ and a formula expression \f$ m_D \f$; /// that evaluates to \f$ (1-(m_A+m_B+m_C)) \f$. Constrained splits can also be; /// specified in the product of categories. In that case, the name of the; /// remainder state follows the syntax `""{State1;State2}""`, where `State1` and; /// `State2` are the state names of the two spitting categories.; ///; /// ## Splitting multiple PDFs; /// The examples so far deal with a single prototype PDF. It is also; /// possible to build with multiple prototype PDFs by specifying a; /// mapping between the prototype to use and the names of states of; /// a ""master"" splitting category. To specify these configurations,; /// an intermediate `MultiBuildConfig` must be composed with all; /// the necessary specifications. This, for example,; /// ```; /// RooSimWSTool::MultiBuildConfig mbc(""mc"");; /// mbc.addPdf(""I"",""G"",SplitParam(""m,s"",""c""));; /// mbc.addPdf(""II,III"",""F"",SplitParam(""a"",""c,d""));; /// ```; /// configures a build with two prototype PDFs \f$ G \f$ and \f$ F \f$.; /// Prototype \f$ G \f$ is used for state `""I""` of the master split category; /// `mc` and prototype \f$ F \f$ is used for states `""II""` and `""III""` of the; /// master split category `mc`. Furthermore, the parameters \f$ m,s \f$ of; /// prototype \f$ G \f$ are split; /// in category \f$ c \f$ while the parameter \f$ a \f$ of prototype \f$ F \f$ is split in; /// the product of the categories \f$ c \f$ and \f$ d \f$. The actual build is then; /// performed by passing the build configuration to RooSimWSTool, *e.g.*,; /// ```; /// wst.build(""MASTER"", mbc);; /// ```; /// By default, a specialisation is built for each permutation of; /// states of the splitting categories that are used. It is possible; /// to restrict the building of specialised PDFs to a subset of states; /// by adding a restriction on the number of states to build as follows:; /// ```; /// mbc.restrictBuild(""c"",""A,B"");; /// ```; /// The restrictBuild method ca",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:4237,Modifiability,config,configuration,4237,", the name of the; /// remainder state follows the syntax `""{State1;State2}""`, where `State1` and; /// `State2` are the state names of the two spitting categories.; ///; /// ## Splitting multiple PDFs; /// The examples so far deal with a single prototype PDF. It is also; /// possible to build with multiple prototype PDFs by specifying a; /// mapping between the prototype to use and the names of states of; /// a ""master"" splitting category. To specify these configurations,; /// an intermediate `MultiBuildConfig` must be composed with all; /// the necessary specifications. This, for example,; /// ```; /// RooSimWSTool::MultiBuildConfig mbc(""mc"");; /// mbc.addPdf(""I"",""G"",SplitParam(""m,s"",""c""));; /// mbc.addPdf(""II,III"",""F"",SplitParam(""a"",""c,d""));; /// ```; /// configures a build with two prototype PDFs \f$ G \f$ and \f$ F \f$.; /// Prototype \f$ G \f$ is used for state `""I""` of the master split category; /// `mc` and prototype \f$ F \f$ is used for states `""II""` and `""III""` of the; /// master split category `mc`. Furthermore, the parameters \f$ m,s \f$ of; /// prototype \f$ G \f$ are split; /// in category \f$ c \f$ while the parameter \f$ a \f$ of prototype \f$ F \f$ is split in; /// the product of the categories \f$ c \f$ and \f$ d \f$. The actual build is then; /// performed by passing the build configuration to RooSimWSTool, *e.g.*,; /// ```; /// wst.build(""MASTER"", mbc);; /// ```; /// By default, a specialisation is built for each permutation of; /// states of the splitting categories that are used. It is possible; /// to restrict the building of specialised PDFs to a subset of states; /// by adding a restriction on the number of states to build as follows:; /// ```; /// mbc.restrictBuild(""c"",""A,B"");; /// ```; /// The restrictBuild method can be called multiple times, but at most; /// once for each splitting category in use. For simple builds with a single; /// prototype, restriction can be specified with a Restrict() argument; /// on the build command line.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:2010,Performance,perform,performed,2010,"t use case is to take a workspace PDF as prototype and; /// ""split"" a parameter of that PDF into two specialized parameters; /// depending on a category in the dataset.; ///; /// For example, given a Gaussian; /// PDF \f$ G(x \,|\, m,s) \f$ we want to construct a \f$ G_a(x \,|\, m_a,s) \f$ and a \f$ G_b(x \,|\, m_b,s) \f$; /// with different mean parameters to be fit to a dataset with observables; /// \f$ (x,c) \f$ where \f$ c \f$ is a category with states 'a' and 'b'.; ///; /// Using RooSimWSTool, one can create a simultaneous PDF from \f$ G_a \f$ and \f$ G_b \f$; /// from \f$ G \f$ with the following commands:; /// ```; /// RooSimWSTool wst(wspace);; /// wst.build(""G_sim"", ""G"", SplitParam(""m"",""c""));; /// ```; ///; /// #### Splitting using a product category; /// From this simple example one can go to builds of arbitrary complexity; /// by specifying multiple SplitParam arguments on multiple parameters; /// involving multiple splitting categories. Splits can also be performed; /// in the product of multiple categories, *i.e.*,; /// ```; /// wst.build(""G_sim"", ""G"", SplitParam(""m"",""c,d""));; /// ```; /// splits the parameter \f$ m \f$ in the product of the states of \f$ c \f$ and; /// \f$ d \f$.; ///; /// #### Constrained split; /// Another possibility; /// is the ""constrained"" split, which clones the parameter for all but one state; /// and inserts a formula specialization in a chosen state that evaluates; /// to \f$ 1 - \sum_i(a_i) \f$ where \f$ a_i \f$ are all other specializations. For example,; /// given a category \f$ c \f$ with the states `""A"",""B"",""C"",""D""`, the specification; /// ```; /// SplitParamConstrained(""m"",""c"",""D""); /// ```; /// will create the parameters \f$ m_A,m_B,m_C \f$ and a formula expression \f$ m_D \f$; /// that evaluates to \f$ (1-(m_A+m_B+m_C)) \f$. Constrained splits can also be; /// specified in the product of categories. In that case, the name of the; /// remainder state follows the syntax `""{State1;State2}""`, where `State1` and; /// `State",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:4206,Performance,perform,performed,4206,", the name of the; /// remainder state follows the syntax `""{State1;State2}""`, where `State1` and; /// `State2` are the state names of the two spitting categories.; ///; /// ## Splitting multiple PDFs; /// The examples so far deal with a single prototype PDF. It is also; /// possible to build with multiple prototype PDFs by specifying a; /// mapping between the prototype to use and the names of states of; /// a ""master"" splitting category. To specify these configurations,; /// an intermediate `MultiBuildConfig` must be composed with all; /// the necessary specifications. This, for example,; /// ```; /// RooSimWSTool::MultiBuildConfig mbc(""mc"");; /// mbc.addPdf(""I"",""G"",SplitParam(""m,s"",""c""));; /// mbc.addPdf(""II,III"",""F"",SplitParam(""a"",""c,d""));; /// ```; /// configures a build with two prototype PDFs \f$ G \f$ and \f$ F \f$.; /// Prototype \f$ G \f$ is used for state `""I""` of the master split category; /// `mc` and prototype \f$ F \f$ is used for states `""II""` and `""III""` of the; /// master split category `mc`. Furthermore, the parameters \f$ m,s \f$ of; /// prototype \f$ G \f$ are split; /// in category \f$ c \f$ while the parameter \f$ a \f$ of prototype \f$ F \f$ is split in; /// the product of the categories \f$ c \f$ and \f$ d \f$. The actual build is then; /// performed by passing the build configuration to RooSimWSTool, *e.g.*,; /// ```; /// wst.build(""MASTER"", mbc);; /// ```; /// By default, a specialisation is built for each permutation of; /// states of the splitting categories that are used. It is possible; /// to restrict the building of specialised PDFs to a subset of states; /// by adding a restriction on the number of states to build as follows:; /// ```; /// mbc.restrictBuild(""c"",""A,B"");; /// ```; /// The restrictBuild method can be called multiple times, but at most; /// once for each splitting category in use. For simple builds with a single; /// prototype, restriction can be specified with a Restrict() argument; /// on the build command line.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:1021,Usability,simpl,simplest,1021,"ject: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooSimWSTool; /// The RooSimWSTool is a tool operating on RooWorkspace objects that; /// can clone PDFs into a series of variations that are joined together; /// into a RooSimultaneous PDF.; ///; /// ## Splitting a single PDF; /// The simplest use case is to take a workspace PDF as prototype and; /// ""split"" a parameter of that PDF into two specialized parameters; /// depending on a category in the dataset.; ///; /// For example, given a Gaussian; /// PDF \f$ G(x \,|\, m,s) \f$ we want to construct a \f$ G_a(x \,|\, m_a,s) \f$ and a \f$ G_b(x \,|\, m_b,s) \f$; /// with different mean parameters to be fit to a dataset with observables; /// \f$ (x,c) \f$ where \f$ c \f$ is a category with states 'a' and 'b'.; ///; /// Using RooSimWSTool, one can create a simultaneous PDF from \f$ G_a \f$ and \f$ G_b \f$; /// from \f$ G \f$ with the following commands:; /// ```; /// RooSimWSTool wst(wspace);; /// wst.build(""G_sim"", ""G"", SplitParam(""m"",""c""));; /// ```; ///; /// #### Splitting using a product category; /// From this simple example one can go to builds of arbitrary complexity; /// by specifying multiple SplitParam arguments on multiple parameters; /// involving multiple splitting categories. Splits can also be performed; /// in the product of multiple categories, *i.e.*,; /// ```; /// ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:1813,Usability,simpl,simple,1813," RooWorkspace objects that; /// can clone PDFs into a series of variations that are joined together; /// into a RooSimultaneous PDF.; ///; /// ## Splitting a single PDF; /// The simplest use case is to take a workspace PDF as prototype and; /// ""split"" a parameter of that PDF into two specialized parameters; /// depending on a category in the dataset.; ///; /// For example, given a Gaussian; /// PDF \f$ G(x \,|\, m,s) \f$ we want to construct a \f$ G_a(x \,|\, m_a,s) \f$ and a \f$ G_b(x \,|\, m_b,s) \f$; /// with different mean parameters to be fit to a dataset with observables; /// \f$ (x,c) \f$ where \f$ c \f$ is a category with states 'a' and 'b'.; ///; /// Using RooSimWSTool, one can create a simultaneous PDF from \f$ G_a \f$ and \f$ G_b \f$; /// from \f$ G \f$ with the following commands:; /// ```; /// RooSimWSTool wst(wspace);; /// wst.build(""G_sim"", ""G"", SplitParam(""m"",""c""));; /// ```; ///; /// #### Splitting using a product category; /// From this simple example one can go to builds of arbitrary complexity; /// by specifying multiple SplitParam arguments on multiple parameters; /// involving multiple splitting categories. Splits can also be performed; /// in the product of multiple categories, *i.e.*,; /// ```; /// wst.build(""G_sim"", ""G"", SplitParam(""m"",""c,d""));; /// ```; /// splits the parameter \f$ m \f$ in the product of the states of \f$ c \f$ and; /// \f$ d \f$.; ///; /// #### Constrained split; /// Another possibility; /// is the ""constrained"" split, which clones the parameter for all but one state; /// and inserts a formula specialization in a chosen state that evaluates; /// to \f$ 1 - \sum_i(a_i) \f$ where \f$ a_i \f$ are all other specializations. For example,; /// given a category \f$ c \f$ with the states `""A"",""B"",""C"",""D""`, the specification; /// ```; /// SplitParamConstrained(""m"",""c"",""D""); /// ```; /// will create the parameters \f$ m_A,m_B,m_C \f$ and a formula expression \f$ m_D \f$; /// that evaluates to \f$ (1-(m_A+m_B+m_C)) \f$. Constrained ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:4783,Usability,simpl,simple,4783,", the name of the; /// remainder state follows the syntax `""{State1;State2}""`, where `State1` and; /// `State2` are the state names of the two spitting categories.; ///; /// ## Splitting multiple PDFs; /// The examples so far deal with a single prototype PDF. It is also; /// possible to build with multiple prototype PDFs by specifying a; /// mapping between the prototype to use and the names of states of; /// a ""master"" splitting category. To specify these configurations,; /// an intermediate `MultiBuildConfig` must be composed with all; /// the necessary specifications. This, for example,; /// ```; /// RooSimWSTool::MultiBuildConfig mbc(""mc"");; /// mbc.addPdf(""I"",""G"",SplitParam(""m,s"",""c""));; /// mbc.addPdf(""II,III"",""F"",SplitParam(""a"",""c,d""));; /// ```; /// configures a build with two prototype PDFs \f$ G \f$ and \f$ F \f$.; /// Prototype \f$ G \f$ is used for state `""I""` of the master split category; /// `mc` and prototype \f$ F \f$ is used for states `""II""` and `""III""` of the; /// master split category `mc`. Furthermore, the parameters \f$ m,s \f$ of; /// prototype \f$ G \f$ are split; /// in category \f$ c \f$ while the parameter \f$ a \f$ of prototype \f$ F \f$ is split in; /// the product of the categories \f$ c \f$ and \f$ d \f$. The actual build is then; /// performed by passing the build configuration to RooSimWSTool, *e.g.*,; /// ```; /// wst.build(""MASTER"", mbc);; /// ```; /// By default, a specialisation is built for each permutation of; /// states of the splitting categories that are used. It is possible; /// to restrict the building of specialised PDFs to a subset of states; /// by adding a restriction on the number of states to build as follows:; /// ```; /// mbc.restrictBuild(""c"",""A,B"");; /// ```; /// The restrictBuild method can be called multiple times, but at most; /// once for each splitting category in use. For simple builds with a single; /// prototype, restriction can be specified with a Restrict() argument; /// on the build command line.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:258,Modifiability,config,configure,258,"////////////////////////////////////////////////////////////////////////////////; /// Build a RooSimultaneous PDF with name simPdfName from cloning specializations of protytpe PDF protoPdfName.; /// Use the provided BuildConfig or MultiBuildConfig object to configure the build",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:130,Availability,error,errors,130,"////////////////////////////////////////////////////////////////////////////////; /// Validate build configuration. If not syntax errors or missing objects are found,; /// return an ObjBuildConfig in which all names are replaced with object pointers.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:101,Deployability,configurat,configuration,101,"////////////////////////////////////////////////////////////////////////////////; /// Validate build configuration. If not syntax errors or missing objects are found,; /// return an ObjBuildConfig in which all names are replaced with object pointers.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:101,Modifiability,config,configuration,101,"////////////////////////////////////////////////////////////////////////////////; /// Validate build configuration. If not syntax errors or missing objects are found,; /// return an ObjBuildConfig in which all names are replaced with object pointers.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:86,Security,Validat,Validate,86,"////////////////////////////////////////////////////////////////////////////////; /// Validate build configuration. If not syntax errors or missing objects are found,; /// return an ObjBuildConfig in which all names are replaced with object pointers.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:40,Modifiability,config,config,40,"// Create empty object version of build config",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:14,Modifiability,variab,variable,14,"// Check that variable with given name exists in workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:20,Modifiability,variab,variable,20,"// Check that given variable is indeed related to given p.d.f",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:75,Integrability,depend,depend,75,"// Check if composite splitCatSet does not contain category functions that depend on other categories used in the same split",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:21,Modifiability,config,config,21,"// Fill object build config with object split rule",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:17,Deployability,configurat,configurations,17,"// For multi-pdf configurations, check that the master index state name associated with this p.d.f exists as a state in the master category",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:17,Modifiability,config,configurations,17,"// For multi-pdf configurations, check that the master index state name associated with this p.d.f exists as a state in the master category",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:113,Security,validat,validation,113,"////////////////////////////////////////////////////////////////////////////////; /// Internal build driver from validation ObjBuildConfig.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:96,Integrability,depend,depends,96,"// First build manually the specializations of all non-remainder states, as the remainder state depends on these",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:123,Deployability,configurat,configuration,123,"////////////////////////////////////////////////////////////////////////////////; /// Add prototype p.d.f pdfName to build configuration with associated split rules 'sr'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:123,Modifiability,config,configuration,123,"////////////////////////////////////////////////////////////////////////////////; /// Add prototype p.d.f pdfName to build configuration with associated split rules 'sr'",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:102,Deployability,configurat,configuration,102,"////////////////////////////////////////////////////////////////////////////////; /// Construct build configuration from single prototype 'pdfName' and list of arguments; /// that can be passed to RooSimWSTool::build() method. This routine parses SplitParam(); /// SplitParamConstrained() and Restrict() arguments.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:232,Integrability,rout,routine,232,"////////////////////////////////////////////////////////////////////////////////; /// Construct build configuration from single prototype 'pdfName' and list of arguments; /// that can be passed to RooSimWSTool::build() method. This routine parses SplitParam(); /// SplitParamConstrained() and Restrict() arguments.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:102,Modifiability,config,configuration,102,"////////////////////////////////////////////////////////////////////////////////; /// Construct build configuration from single prototype 'pdfName' and list of arguments; /// that can be passed to RooSimWSTool::build() method. This routine parses SplitParam(); /// SplitParamConstrained() and Restrict() arguments.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:147,Deployability,configurat,configuration,147,"////////////////////////////////////////////////////////////////////////////////; /// Constructor to make BuildConfig from legacy RooSimPdfBuilder configuration; /// Empty for now",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:147,Modifiability,config,configuration,147,"////////////////////////////////////////////////////////////////////////////////; /// Constructor to make BuildConfig from legacy RooSimPdfBuilder configuration; /// Empty for now",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:218,Deployability,configurat,configuration,218,"////////////////////////////////////////////////////////////////////////////////; /// Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; /// and split rules 'sr' to configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:95,Integrability,rout,routine,95,"////////////////////////////////////////////////////////////////////////////////; /// Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; /// and split rules 'sr' to configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:218,Modifiability,config,configuration,218,"////////////////////////////////////////////////////////////////////////////////; /// Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; /// and split rules 'sr' to configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:123,Deployability,configurat,configuration,123,"////////////////////////////////////////////////////////////////////////////////; /// Construct MultiBuildConfig for build configuration with multiple prototype p.d.f.s; /// masterIndexCat is the name of the master index category that decides which; /// prototype is used.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:123,Modifiability,config,configuration,123,"////////////////////////////////////////////////////////////////////////////////; /// Construct MultiBuildConfig for build configuration with multiple prototype p.d.f.s; /// masterIndexCat is the name of the master index category that decides which; /// prototype is used.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:121,Deployability,configurat,configuration,121,"////////////////////////////////////////////////////////////////////////////////; /// Print details of a validated build configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:121,Modifiability,config,configuration,121,"////////////////////////////////////////////////////////////////////////////////; /// Print details of a validated build configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:105,Security,validat,validated,105,"////////////////////////////////////////////////////////////////////////////////; /// Print details of a validated build configuration",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:37,Modifiability,config,config,37,"// --- Dump contents of object build config ---",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:3,Performance,Perform,Perform,3,"// Perform syntax check. Warn about any meta parameters other than $SplitParam, $SplitParamConstrained, $Restrict and $Verbose",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:27,Modifiability,config,config,27,"// First make a multibuild config from the master index cat",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooSimWSTool.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx:1039,Modifiability,variab,variable,1039,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; //; // RooStreamParser is a utility class to parse istreams into tokens and optionally; // convert them into basic types (double,int,string); //; // The general tokenizing philosophy is that there are two kinds of tokens: value; // and punctuation. The former are variable length, the latter always; // one character. A token is terminated if one of the following conditions; // occur; // - space character found (' ',tab,newline); // - change of token type (value -> punctuation or vv); // - end of fixed-length token (punctuation only); // - start or end of quoted string; //; // The parser is aware of floating point notation and will assign leading; // minus signs, decimal points etc to a value token when this is obvious; // from the context. The definition of what is punctuation can be redefined.; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooStreamParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx:136,Availability,error,errorPrefix,136,"////////////////////////////////////////////////////////////////////////////////; /// Construct parser on given input stream. Use given errorPrefix to; /// prefix any parsing error messages",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooStreamParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx:175,Availability,error,error,175,"////////////////////////////////////////////////////////////////////////////////; /// Construct parser on given input stream. Use given errorPrefix to; /// prefix any parsing error messages",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooStreamParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx:181,Integrability,message,messages,181,"////////////////////////////////////////////////////////////////////////////////; /// Construct parser on given input stream. Use given errorPrefix to; /// prefix any parsing error messages",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooStreamParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx:158,Availability,error,error,158,"////////////////////////////////////////////////////////////////////////////////; /// Read the next token and convert it to a double. Returns true; /// if an error occurred in reading or conversion",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooStreamParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx:151,Availability,error,error,151,"////////////////////////////////////////////////////////////////////////////////; /// Read a token and convert it to an Int_t. Returns true; /// if an error occurred in reading or conversion",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooStreamParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx:139,Availability,error,error,139,"////////////////////////////////////////////////////////////////////////////////; /// Convert given string to an Int_t. Returns true if an error; /// occurred in conversion",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooStreamParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx:126,Availability,error,error,126,"////////////////////////////////////////////////////////////////////////////////; /// Read a string token. Returns true if an error occurred in reading; /// or conversion. If a the read token is enclosed in quotation; /// marks those are stripped in the returned value",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooStreamParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStringVar.cxx:91,Performance,cache,cache,91,"////////////////////////////////////////////////////////////////////////////////; /// Copy cache of another RooAbsArg to our cache; ///; /// Warning: This function copies the cached values of source,; /// it is the callers responsibility to make sure the cache is clean",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooStringVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStringVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStringVar.cxx:125,Performance,cache,cache,125,"////////////////////////////////////////////////////////////////////////////////; /// Copy cache of another RooAbsArg to our cache; ///; /// Warning: This function copies the cached values of source,; /// it is the callers responsibility to make sure the cache is clean",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooStringVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStringVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStringVar.cxx:175,Performance,cache,cached,175,"////////////////////////////////////////////////////////////////////////////////; /// Copy cache of another RooAbsArg to our cache; ///; /// Warning: This function copies the cached values of source,; /// it is the callers responsibility to make sure the cache is clean",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooStringVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStringVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStringVar.cxx:255,Performance,cache,cache,255,"////////////////////////////////////////////////////////////////////////////////; /// Copy cache of another RooAbsArg to our cache; ///; /// Warning: This function copies the cached values of source,; /// it is the callers responsibility to make sure the cache is clean",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooStringVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStringVar.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStudyManager.cxx:71,Safety,detect,detects,71,"// CloseProgressDialog does not do anything when run without GUI. This detects; // whether the proof instance is still there and deletes it if that is the case.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooStudyManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStudyManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx:2155,Deployability,release,releases,2155,"le RooTrace.cxx; \class RooTrace; \ingroup Roofitcore. Controls the memory tracing hooks in all RooFit; objects. When tracing is active, a table of live RooFit objects; is kept that can be queried at any time. In verbose mode, messages; are printed in addition at the construction and destruction of; each object. Usage example:; \code{.cpp}; void exampleRooTrace(); {; using namespace RooFit;. // Activate RooFit memory tracing; RooTrace::active(true);; ; // Construct gauss(x,m,s); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar m(""m"", ""m"", 0, -10, 10);; RooRealVar s(""s"", ""s"", 1, -10, 10);; RooGaussian gauss(""g"", ""g"", x, m, s);; ; // Show dump of all RooFit object in memory; RooTrace::dump();; ; // Activate verbose mode; RooTrace::verbose(true);; ; // Construct poly(x,p0); RooRealVar p0(""p0"", ""p0"", 0.01, 0., 1.);; RooPolynomial poly(""p"", ""p"", x, p0);; ; // Put marker in trace list for future reference; RooTrace::mark();; ; // Construct model = f*gauss(x) + (1-f)*poly(x); RooRealVar f(""f"", ""f"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgSet(gauss, poly), f);; ; // Show object added to memory since marker; RooTrace::printObjectCounts();; ; // Since verbose mode is still on, you will see messages; // pertaining to destructor calls of all RooFit objects; // made in this macro; //; // A call to RooTrace::dump() at the end of this macro; // should show that there a no RooFit object left in memory; }; \endcode. \note In the ROOT releases, the RooTrace is disabled at compile time and the; example above will not print any objects. If you are an advanced developer who; wants to use the RooTrace, you need to recompile ROOT after changing the; `TRACE_CREATE` and `TRACE_DESTROY` macros in RooTrace.h to call the RooTrace; functions:. \code{.cpp}; #define TRACE_CREATE RooTrace::create(this);; #define TRACE_DESTROY RooTrace::destroy(this);; \endcode. However, as ROOT is not build with this by default, the RooTrace is not tested; and there is no guarantee that this works.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTrace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx:930,Integrability,message,messages,930,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooTrace.cxx; \class RooTrace; \ingroup Roofitcore. Controls the memory tracing hooks in all RooFit; objects. When tracing is active, a table of live RooFit objects; is kept that can be queried at any time. In verbose mode, messages; are printed in addition at the construction and destruction of; each object. Usage example:; \code{.cpp}; void exampleRooTrace(); {; using namespace RooFit;. // Activate RooFit memory tracing; RooTrace::active(true);; ; // Construct gauss(x,m,s); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar m(""m"", ""m"", 0, -10, 10);; RooRealVar s(""s"", ""s"", 1, -10, 10);; RooGaussian gauss(""g"", ""g"", x, m, s);; ; // Show dump of all RooFit object in memory; RooTrace::dump();; ; // Activate verbose mode; RooTrace::verbose(true);; ; // Construct poly(x,p0); RooRealVar p0(""p0"", ""p0"", 0.01, 0., 1.);; RooPolynomial poly(""p"", ""p"", x, p0);; ; // Put marker in trace list for future reference; RooTrace::mark();; ; // Construct model = f*gauss(x) + (1-f)*poly(x); RooRealVar f(""f"", ""f"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgSet(gauss, poly), f);; ; // Show object added to memory since marker; RooTrace::printObjectCounts();; ; // Since verbose mode is still on, you will see messages; // pertaining to destructor calls of all RooFit objects; // made in this macro",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTrace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx:1913,Integrability,message,messages,1913,"le RooTrace.cxx; \class RooTrace; \ingroup Roofitcore. Controls the memory tracing hooks in all RooFit; objects. When tracing is active, a table of live RooFit objects; is kept that can be queried at any time. In verbose mode, messages; are printed in addition at the construction and destruction of; each object. Usage example:; \code{.cpp}; void exampleRooTrace(); {; using namespace RooFit;. // Activate RooFit memory tracing; RooTrace::active(true);; ; // Construct gauss(x,m,s); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar m(""m"", ""m"", 0, -10, 10);; RooRealVar s(""s"", ""s"", 1, -10, 10);; RooGaussian gauss(""g"", ""g"", x, m, s);; ; // Show dump of all RooFit object in memory; RooTrace::dump();; ; // Activate verbose mode; RooTrace::verbose(true);; ; // Construct poly(x,p0); RooRealVar p0(""p0"", ""p0"", 0.01, 0., 1.);; RooPolynomial poly(""p"", ""p"", x, p0);; ; // Put marker in trace list for future reference; RooTrace::mark();; ; // Construct model = f*gauss(x) + (1-f)*poly(x); RooRealVar f(""f"", ""f"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgSet(gauss, poly), f);; ; // Show object added to memory since marker; RooTrace::printObjectCounts();; ; // Since verbose mode is still on, you will see messages; // pertaining to destructor calls of all RooFit objects; // made in this macro; //; // A call to RooTrace::dump() at the end of this macro; // should show that there a no RooFit object left in memory; }; \endcode. \note In the ROOT releases, the RooTrace is disabled at compile time and the; example above will not print any objects. If you are an advanced developer who; wants to use the RooTrace, you need to recompile ROOT after changing the; `TRACE_CREATE` and `TRACE_DESTROY` macros in RooTrace.h to call the RooTrace; functions:. \code{.cpp}; #define TRACE_CREATE RooTrace::create(this);; #define TRACE_DESTROY RooTrace::destroy(this);; \endcode. However, as ROOT is not build with this by default, the RooTrace is not tested; and there is no guarantee that this works.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTrace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx:2648,Testability,test,tested,2648,"le RooTrace.cxx; \class RooTrace; \ingroup Roofitcore. Controls the memory tracing hooks in all RooFit; objects. When tracing is active, a table of live RooFit objects; is kept that can be queried at any time. In verbose mode, messages; are printed in addition at the construction and destruction of; each object. Usage example:; \code{.cpp}; void exampleRooTrace(); {; using namespace RooFit;. // Activate RooFit memory tracing; RooTrace::active(true);; ; // Construct gauss(x,m,s); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar m(""m"", ""m"", 0, -10, 10);; RooRealVar s(""s"", ""s"", 1, -10, 10);; RooGaussian gauss(""g"", ""g"", x, m, s);; ; // Show dump of all RooFit object in memory; RooTrace::dump();; ; // Activate verbose mode; RooTrace::verbose(true);; ; // Construct poly(x,p0); RooRealVar p0(""p0"", ""p0"", 0.01, 0., 1.);; RooPolynomial poly(""p"", ""p"", x, p0);; ; // Put marker in trace list for future reference; RooTrace::mark();; ; // Construct model = f*gauss(x) + (1-f)*poly(x); RooRealVar f(""f"", ""f"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgSet(gauss, poly), f);; ; // Show object added to memory since marker; RooTrace::printObjectCounts();; ; // Since verbose mode is still on, you will see messages; // pertaining to destructor calls of all RooFit objects; // made in this macro; //; // A call to RooTrace::dump() at the end of this macro; // should show that there a no RooFit object left in memory; }; \endcode. \note In the ROOT releases, the RooTrace is disabled at compile time and the; example above will not print any objects. If you are an advanced developer who; wants to use the RooTrace, you need to recompile ROOT after changing the; `TRACE_CREATE` and `TRACE_DESTROY` macros in RooTrace.h to call the RooTrace; functions:. \code{.cpp}; #define TRACE_CREATE RooTrace::create(this);; #define TRACE_DESTROY RooTrace::destroy(this);; \endcode. However, as ROOT is not build with this by default, the RooTrace is not tested; and there is no guarantee that this works.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTrace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx:105,Integrability,message,message,105,"////////////////////////////////////////////////////////////////////////////////; /// If flag is true, a message will be printed at each; /// object creation or deletion",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTrace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx:239,Integrability,message,message,239,"////////////////////////////////////////////////////////////////////////////////; /// Utility function to trigger zeroing of callgrind counters.; ///; /// Note that this function does _not_ do anything, other than optionally printing this message; /// To trigger callgrind zero counter action, run callgrind with; /// argument '--zero-before=RooTrace::callgrind_zero()' (include single quotes in cmdline)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTrace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx:239,Integrability,message,message,239,"////////////////////////////////////////////////////////////////////////////////; /// Utility function to trigger dumping of callgrind counters.; ///; /// Note that this function does _not_ do anything, other than optionally printing this message; /// To trigger callgrind dumping action, run callgrind with; /// argument '--dump-before=RooTrace::callgrind_dump()' (include single quotes in cmdline)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTrace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:896,Energy Efficiency,reduce,reduces,896,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooTreeDataStore.cxx; \class RooTreeDataStore; \ingroup Roofitcore. TTree-backed data storage. When a file is opened before; creating the data storage, the storage will be file-backed. This reduces memory; pressure because it allows storing the data in the file and reading it on demand.; For a completely memory-backed storage, which is faster than the file-backed storage,; RooVectorDataStore can be used. With tree-backed storage, the tree can be found in the file with the name; `RooTreeDataStore_name_title` for a dataset created as; `RooDataSet(""name"", ""title"", ...)`. \note A file needs to be opened **before** creating the data storage to enable file-backed; storage.; ```; TFile outputFile(""filename.root"", ""RECREATE"");; RooAbsData::setDefaultStorageType(RooAbsData::Tree);; RooDataSet mydata(...);; ```. One can also change between TTree- and std::vector-backed storage using; RooAbsData::convertToTreeStore() and; RooAbsData::convertToVectorStore().; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:51,Modifiability,variab,variables,51,"// Constructor from existing data set with list of variables that preserves the cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:80,Performance,cache,cache,80,"// Constructor from existing data set with list of variables that preserves the cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:29,Modifiability,variab,variables,29,"// WVE copy values of cached variables here!!!",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:22,Performance,cache,cached,22,"// WVE copy values of cached variables here!!!",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:172,Modifiability,variab,variable,172,"////////////////////////////////////////////////////////////////////////////////; /// Utility function for constructors; /// Return RooArgSet that is copy of allVars minus variable matching wgtName if specified",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:150,Modifiability,variab,variable,150,"////////////////////////////////////////////////////////////////////////////////; /// Utility function for constructors; /// Return pointer to weight variable if it is defined",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:122,Modifiability,variab,variables,122,"////////////////////////////////////////////////////////////////////////////////; /// Initialize cache of dataset: attach variables of cache ArgSet; /// to the corresponding TTree branches",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:97,Performance,cache,cache,97,"////////////////////////////////////////////////////////////////////////////////; /// Initialize cache of dataset: attach variables of cache ArgSet; /// to the corresponding TTree branches",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:135,Performance,cache,cache,135,"////////////////////////////////////////////////////////////////////////////////; /// Initialize cache of dataset: attach variables of cache ArgSet; /// to the corresponding TTree branches",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:26,Modifiability,variab,variables,26,"// iterate over the cache variables for this dataset",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:20,Performance,cache,cache,20,"// iterate over the cache variables for this dataset",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:155,Modifiability,variab,variables,155,"////////////////////////////////////////////////////////////////////////////////; /// One-time initialization common to all constructor forms. Attach; /// variables of internal ArgSet to the corresponding TTree branches",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:20,Performance,cache,cache,20,"// Recreate (empty) cache tree",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:15,Modifiability,variab,variable,15,"// Attach each variable to the dataset",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load values from tree 't' into this data collection, optionally; /// selecting events using the RooFormulaVar 'select'.; ///; /// The source tree 't' is cloned to not disturb its branch; /// structure when retrieving information from it.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:192,Availability,down,down,192,"// Make our local copy of the tree, so we can safely loop through it.; // We need a custom deleter, because if we don't deregister the Tree from the directory; // of the original, it tears it down at destruction time!",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:46,Safety,safe,safely,46,"// Make our local copy of the tree, so we can safely loop through it.; // We need a custom deleter, because if we don't deregister the Tree from the directory; // of the original, it tears it down at destruction time!",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:17,Modifiability,variab,variables,17,"// Clone list of variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load values from dataset 't' into this data collection, optionally; /// selecting events using 'select' RooFormulaVar; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface function to TTree::Fill",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load the n-th data point (n='index') in memory; /// and return a pointer to the internal RooArgSet; /// holding its coordinates.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:3,Deployability,Update,Update,3,"// Update current weight cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:25,Performance,cache,cache,25,"// Update current weight cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:29,Modifiability,variab,variable,29,"// Otherwise look for weight variable",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:62,Availability,error,error,62,"// We have a weight array, use that info; // Return symmetric error on current bin calculated either from Poisson statistics or from SumOfWeights",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:20,Modifiability,variab,variable,20,"// We have a weight variable, use that info",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:31,Availability,error,errors,31,"// Otherwise Calculate poisson errors",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:20,Modifiability,variab,variable,20,"// We have a weight variable, use that info",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:3,Usability,Simpl,Simple,3,"// Simple case varName = branchName",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:15,Availability,error,error,15,"// Process any error branch if existing",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:865,Modifiability,variab,variables,865,"////////////////////////////////////////////////////////////////////////////////; /// Add a new column to the data set which holds the pre-calculated values; /// of 'newVar'. This operation is only meaningful if 'newVar' is a derived; /// value.; ///; /// The return value points to the added element holding 'newVar's value; /// in the data collection. The element is always the corresponding fundamental; /// type of 'newVar' (e.g. a RooRealVar if 'newVar' is a RooFormulaVar); ///; /// Note: This function is explicitly NOT intended as a speed optimization; /// opportunity for the user. Components of complex PDFs that can be; /// precalculated with the dataset are automatically identified as such; /// and will be precalculated when fitting to a dataset; ///; /// By forcibly precalculating functions with non-trivial Jacobians,; /// or functions of multiple variables occurring in the data set,; /// using addColumn(), you may alter the outcome of the fit.; ///; /// Only in cases where such a modification of fit behaviour is intentional,; /// this function should be used.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:547,Performance,optimiz,optimization,547,"////////////////////////////////////////////////////////////////////////////////; /// Add a new column to the data set which holds the pre-calculated values; /// of 'newVar'. This operation is only meaningful if 'newVar' is a derived; /// value.; ///; /// The return value points to the added element holding 'newVar's value; /// in the data collection. The element is always the corresponding fundamental; /// type of 'newVar' (e.g. a RooRealVar if 'newVar' is a RooFormulaVar); ///; /// Note: This function is explicitly NOT intended as a speed optimization; /// opportunity for the user. Components of complex PDFs that can be; /// precalculated with the dataset are automatically identified as such; /// and will be precalculated when fitting to a dataset; ///; /// By forcibly precalculating functions with non-trivial Jacobians,; /// or functions of multiple variables occurring in the data set,; /// using addColumn(), you may alter the outcome of the fit.; ///; /// Only in cases where such a modification of fit behaviour is intentional,; /// this function should be used.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:3,Safety,Sanity check,Sanity check,3,"// Sanity check that the holder really is fundamental",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:9,Modifiability,variab,variable,9,"// Clone variable and attach to cloned tree",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:8,Modifiability,variab,variables,8,"// Copy variables from merge sets",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:36,Safety,avoid,avoid,36,"// Kahan's algorithm for summing to avoid loss of precision",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:36,Safety,avoid,avoid,36,"// Kahan's algorithm for summing to avoid loss of precision",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:86,Performance,Cache,Cache,86,"////////////////////////////////////////////////////////////////////////////////; /// Cache given RooAbsArgs with this tree: The tree is; /// given direct write access of the args internal cache; /// the args values is pre-calculated for all data points; /// in this data collection. Upon a get() call, the; /// internal cache of 'newVar' will be loaded with the; /// precalculated value and it's dirty flag will be cleared.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:189,Performance,cache,cache,189,"////////////////////////////////////////////////////////////////////////////////; /// Cache given RooAbsArgs with this tree: The tree is; /// given direct write access of the args internal cache; /// the args values is pre-calculated for all data points; /// in this data collection. Upon a get() call, the; /// internal cache of 'newVar' will be loaded with the; /// precalculated value and it's dirty flag will be cleared.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:321,Performance,cache,cache,321,"////////////////////////////////////////////////////////////////////////////////; /// Cache given RooAbsArgs with this tree: The tree is; /// given direct write access of the args internal cache; /// the args values is pre-calculated for all data points; /// in this data collection. Upon a get() call, the; /// internal cache of 'newVar' will be loaded with the; /// precalculated value and it's dirty flag will be cleared.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:347,Performance,load,loaded,347,"////////////////////////////////////////////////////////////////////////////////; /// Cache given RooAbsArgs with this tree: The tree is; /// given direct write access of the args internal cache; /// the args values is pre-calculated for all data points; /// in this data collection. Upon a get() call, the; /// internal cache of 'newVar' will be loaded with the; /// precalculated value and it's dirty flag will be cleared.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:161,Security,access,access,161,"////////////////////////////////////////////////////////////////////////////////; /// Cache given RooAbsArgs with this tree: The tree is; /// given direct write access of the args internal cache; /// the args values is pre-calculated for all data points; /// in this data collection. Upon a get() call, the; /// internal cache of 'newVar' will be loaded with the; /// precalculated value and it's dirty flag will be cleared.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:416,Usability,clear,cleared,416,"////////////////////////////////////////////////////////////////////////////////; /// Cache given RooAbsArgs with this tree: The tree is; /// given direct write access of the args internal cache; /// the args values is pre-calculated for all data points; /// in this data collection. Upon a get() call, the; /// internal cache of 'newVar' will be loaded with the; /// precalculated value and it's dirty flag will be cleared.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:114,Modifiability,variab,variables,114,"// WVE need to reset TTRee buffers to original datamembers here; //resetBuffers() ;; // Refill regular and cached variables of current tree from clone",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:107,Performance,cache,cached,107,"// WVE need to reset TTRee buffers to original datamembers here; //resetBuffers() ;; // Refill regular and cached variables of current tree from clone",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:23,Modifiability,variab,variables,23,"// Evaluate the cached variables and store the results",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:16,Performance,cache,cached,16,"// Evaluate the cached variables and store the results",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:113,Performance,cache,cached,113,"////////////////////////////////////////////////////////////////////////////////; /// Remove tree with values of cached observables; /// and clear list of cached observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:155,Performance,cache,cached,155,"////////////////////////////////////////////////////////////////////////////////; /// Remove tree with values of cached observables; /// and clear list of cached observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:141,Usability,clear,clear,141,"////////////////////////////////////////////////////////////////////////////////; /// Remove tree with values of cached observables; /// and clear list of cached observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:17,Performance,cache,cached,17,"// Empty list of cached functions",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:21,Performance,cache,cache,21,"// Delete & recreate cache tree",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface function to TTree::GetEntries",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface function to TTree::Reset",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface function to TTree::Fill",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface function to TTree::GetEntry",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:70,Performance,load,load,70,"// If the tree has not been deserialised automatically, it is time to load; // it now.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTreeDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:13,Performance,optimiz,optimized,13,"// Check for optimized basis functions",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:28,Deployability,update,update,28,"// Change basis pointer and update client-server link",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:14,Deployability,integrat,integration,14,"// Analytical integration capability of raw PDF",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:14,Integrability,integrat,integration,14,"// Analytical integration capability of raw PDF",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:14,Deployability,integrat,integration,14,"// Analytical integration capability of convoluted PDF",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:14,Integrability,integrat,integration,14,"// Analytical integration capability of convoluted PDF",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,Deployability,integrat,integrate,29,"// From asking WolframAlpha: integrate exp(-x/tau) over x.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,Integrability,integrat,integrate,29,"// From asking WolframAlpha: integrate exp(-x/tau) over x.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,Deployability,integrat,integrate,29,"// From asking WolframAlpha: integrate exp(-x/tau)* x / tau over x.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,Integrability,integrat,integrate,29,"// From asking WolframAlpha: integrate exp(-x/tau)* x / tau over x.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,Deployability,integrat,integrate,29,"// From asking WolframAlpha: integrate exp(-x/tau) * (x / tau)^2 over x.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,Integrability,integrat,integrate,29,"// From asking WolframAlpha: integrate exp(-x/tau) * (x / tau)^2 over x.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,Deployability,integrat,integrate,29,"// From asking WolframAlpha: integrate exp(-x/tau)*sin(x*m) over x.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,Integrability,integrat,integrate,29,"// From asking WolframAlpha: integrate exp(-x/tau)*sin(x*m) over x.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,Deployability,integrat,integrate,29,"// From asking WolframAlpha: integrate exp(-x/tau)*cos(x*m) over x.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,Integrability,integrat,integrate,29,"// From asking WolframAlpha: integrate exp(-x/tau)*cos(x*m) over x.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,Deployability,integrat,integrate,29,"// From asking WolframAlpha: integrate exp(-x/tau)*sinh(x*m/2) over x.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,Integrability,integrat,integrate,29,"// From asking WolframAlpha: integrate exp(-x/tau)*sinh(x*m/2) over x.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,Deployability,integrat,integrate,29,"// From asking WolframAlpha: integrate exp(-x/tau)*cosh(x*m/2) over x.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:29,Integrability,integrat,integrate,29,"// From asking WolframAlpha: integrate exp(-x/tau)*cosh(x*m/2) over x.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:3,Deployability,Integrat,Integrate,3,"// Integrate one of the basis functions. Takes a function that represents the; // indefinite integral, some parameters, and a flag that indicates whether the; // basis function is symmetric or antisymmetric. This information is used to; // evaluate the integrals for the ""Minus"" and ""Sum"" cases.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx:3,Integrability,Integrat,Integrate,3,"// Integrate one of the basis functions. Takes a function that represents the; // indefinite integral, some parameters, and a flag that indicates whether the; // basis function is symmetric or antisymmetric. This information is used to; // evaluate the integrals for the ""Minus"" and ""Sum"" cases.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooTruthModel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTruthModel.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:819,Performance,perform,performed,819,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2011, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooUnitTest.cxx; \class RooUnitTest; \ingroup Roofitcore. RooUnit test is an abstract base class for unit regression tests for; RooFit and RooStats tests performed in stressRooFit and stressRooStats; Implementations of this class must implement abstract method testCode(); which defines the regression test to be performed. Inside testCode(); the regression test can define objects on which the regression is performed.; These are:; Object | function; ----------------|------------; RooPlot | regPlot(); RooFitResult | regResult(); double | regValue(); RooTable | regTable(); TH1/2/3 | regTH(); RooWorkspace | regWS(); **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:978,Performance,perform,performed,978,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2011, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooUnitTest.cxx; \class RooUnitTest; \ingroup Roofitcore. RooUnit test is an abstract base class for unit regression tests for; RooFit and RooStats tests performed in stressRooFit and stressRooStats; Implementations of this class must implement abstract method testCode(); which defines the regression test to be performed. Inside testCode(); the regression test can define objects on which the regression is performed.; These are:; Object | function; ----------------|------------; RooPlot | regPlot(); RooFitResult | regResult(); double | regValue(); RooTable | regTable(); TH1/2/3 | regTH(); RooWorkspace | regWS(); **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:1074,Performance,perform,performed,1074,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2011, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooUnitTest.cxx; \class RooUnitTest; \ingroup Roofitcore. RooUnit test is an abstract base class for unit regression tests for; RooFit and RooStats tests performed in stressRooFit and stressRooStats; Implementations of this class must implement abstract method testCode(); which defines the regression test to be performed. Inside testCode(); the regression test can define objects on which the regression is performed.; These are:; Object | function; ----------------|------------; RooPlot | regPlot(); RooFitResult | regResult(); double | regValue(); RooTable | regTable(); TH1/2/3 | regTH(); RooWorkspace | regWS(); **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:731,Testability,test,test,731,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2011, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooUnitTest.cxx; \class RooUnitTest; \ingroup Roofitcore. RooUnit test is an abstract base class for unit regression tests for; RooFit and RooStats tests performed in stressRooFit and stressRooStats; Implementations of this class must implement abstract method testCode(); which defines the regression test to be performed. Inside testCode(); the regression test can define objects on which the regression is performed.; These are:; Object | function; ----------------|------------; RooPlot | regPlot(); RooFitResult | regResult(); double | regValue(); RooTable | regTable(); TH1/2/3 | regTH(); RooWorkspace | regWS(); **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:782,Testability,test,tests,782,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2011, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooUnitTest.cxx; \class RooUnitTest; \ingroup Roofitcore. RooUnit test is an abstract base class for unit regression tests for; RooFit and RooStats tests performed in stressRooFit and stressRooStats; Implementations of this class must implement abstract method testCode(); which defines the regression test to be performed. Inside testCode(); the regression test can define objects on which the regression is performed.; These are:; Object | function; ----------------|------------; RooPlot | regPlot(); RooFitResult | regResult(); double | regValue(); RooTable | regTable(); TH1/2/3 | regTH(); RooWorkspace | regWS(); **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:813,Testability,test,tests,813,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2011, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooUnitTest.cxx; \class RooUnitTest; \ingroup Roofitcore. RooUnit test is an abstract base class for unit regression tests for; RooFit and RooStats tests performed in stressRooFit and stressRooStats; Implementations of this class must implement abstract method testCode(); which defines the regression test to be performed. Inside testCode(); the regression test can define objects on which the regression is performed.; These are:; Object | function; ----------------|------------; RooPlot | regPlot(); RooFitResult | regResult(); double | regValue(); RooTable | regTable(); TH1/2/3 | regTH(); RooWorkspace | regWS(); **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:926,Testability,test,testCode,926,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2011, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooUnitTest.cxx; \class RooUnitTest; \ingroup Roofitcore. RooUnit test is an abstract base class for unit regression tests for; RooFit and RooStats tests performed in stressRooFit and stressRooStats; Implementations of this class must implement abstract method testCode(); which defines the regression test to be performed. Inside testCode(); the regression test can define objects on which the regression is performed.; These are:; Object | function; ----------------|------------; RooPlot | regPlot(); RooFitResult | regResult(); double | regValue(); RooTable | regTable(); TH1/2/3 | regTH(); RooWorkspace | regWS(); **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:967,Testability,test,test,967,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2011, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooUnitTest.cxx; \class RooUnitTest; \ingroup Roofitcore. RooUnit test is an abstract base class for unit regression tests for; RooFit and RooStats tests performed in stressRooFit and stressRooStats; Implementations of this class must implement abstract method testCode(); which defines the regression test to be performed. Inside testCode(); the regression test can define objects on which the regression is performed.; These are:; Object | function; ----------------|------------; RooPlot | regPlot(); RooFitResult | regResult(); double | regValue(); RooTable | regTable(); TH1/2/3 | regTH(); RooWorkspace | regWS(); **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:996,Testability,test,testCode,996,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2011, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooUnitTest.cxx; \class RooUnitTest; \ingroup Roofitcore. RooUnit test is an abstract base class for unit regression tests for; RooFit and RooStats tests performed in stressRooFit and stressRooStats; Implementations of this class must implement abstract method testCode(); which defines the regression test to be performed. Inside testCode(); the regression test can define objects on which the regression is performed.; These are:; Object | function; ----------------|------------; RooPlot | regPlot(); RooFitResult | regResult(); double | regValue(); RooTable | regTable(); TH1/2/3 | regTH(); RooWorkspace | regWS(); **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:1023,Testability,test,test,1023,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2011, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooUnitTest.cxx; \class RooUnitTest; \ingroup Roofitcore. RooUnit test is an abstract base class for unit regression tests for; RooFit and RooStats tests performed in stressRooFit and stressRooStats; Implementations of this class must implement abstract method testCode(); which defines the regression test to be performed. Inside testCode(); the regression test can define objects on which the regression is performed.; These are:; Object | function; ----------------|------------; RooPlot | regPlot(); RooFitResult | regResult(); double | regValue(); RooTable | regTable(); TH1/2/3 | regTH(); RooWorkspace | regWS(); **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:55,Modifiability,variab,variable,55,"// Since ROOT 6.28, the RooPlot doesn't clone the plot variable by default; // anymore. This is a problem for registering the RooPlots, because they; // need to survive without dangling pointers even after the RooUnitTest is; // done. For that reason, we ask the RooPlot to create an internal plot; // variable clone for itself.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:302,Modifiability,variab,variable,302,"// Since ROOT 6.28, the RooPlot doesn't clone the plot variable by default; // anymore. This is a problem for registering the RooPlots, because they; // need to survive without dangling pointers even after the RooUnitTest is; // done. For that reason, we ask the RooPlot to create an internal plot; // variable clone for itself.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:32,Testability,benchmark,benchmark,32,"// Comparison mode; // Retrieve benchmark",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:49,Safety,avoid,avoid,49,"// Delete RooPlot when comparison is finished to avoid noise in leak checking",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:32,Testability,benchmark,benchmark,32,"// Comparison mode; // Retrieve benchmark",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:54,Safety,avoid,avoid,54,"// Delete RooFitResult when comparison is finished to avoid noise in leak checking",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:32,Testability,benchmark,benchmark,32,"// Comparison mode; // Retrieve benchmark",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:32,Testability,benchmark,benchmark,32,"// Comparison mode; // Retrieve benchmark",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:50,Safety,avoid,avoid,50,"// Delete RooTable when comparison is finished to avoid noise in leak checking",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:32,Testability,benchmark,benchmark,32,"// Comparison mode; // Retrieve benchmark",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:45,Safety,avoid,avoid,45,"// Delete TH1 when comparison is finished to avoid noise in leak checking",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx:62,Testability,test,test,62,"// Reset random generator seed to make results independent of test ordering",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooUnitTest.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooUnitTest.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:1299,Performance,load,loading,1299,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooVectorDataStore.cxx; \class RooVectorDataStore; \ingroup Roofitcore. Uses `std::vector` to store data columns. Each of these vectors; is associated to an instance of a RooAbsReal, whose values it represents. Those; RooAbsReal are the observables of the dataset.; In addition to the observables, a data column can be bound to a different instance; of a RooAbsReal (e.g., the column ""x"" can be bound to the observable ""x"" of a computation; graph using attachBuffers()). In this case, a get() operation writes the value of; the requested column into the bound real. As a faster alternative to loading values one-by-one, one can use the function getBatches(),; which returns spans pointing directly to the data.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:172,Modifiability,variab,variable,172,"////////////////////////////////////////////////////////////////////////////////; /// Utility function for constructors; /// Return RooArgSet that is copy of allVars minus variable matching wgtName if specified",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:150,Modifiability,variab,variable,150,"////////////////////////////////////////////////////////////////////////////////; /// Utility function for constructors; /// Return pointer to weight variable if it is defined",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:164,Modifiability,variab,variables,164,"////////////////////////////////////////////////////////////////////////////////; /// Clone constructor, must connect internal storage to given new external set of variables.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface function to TTree::Fill",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:46,Safety,avoid,avoid,46,"// use Kahan's algorithm to sum up weights to avoid loss of precision",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:132,Modifiability,variab,variables,132,"////////////////////////////////////////////////////////////////////////////////; /// Load the n-th data point (n='index') into the variables of this dataset,; /// and return a pointer to the RooArgSet that holds them.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load the n-th data point (n='index') into the variables of this dataset,; /// and return a pointer to the RooArgSet that holds them.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:3,Deployability,Update,Update,3,"// Update current weight cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:25,Performance,cache,cache,25,"// Update current weight cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:97,Availability,error,error,97,"////////////////////////////////////////////////////////////////////////////////; /// Return the error of the current weight.; /// @param[in] etype Switch between simple Poisson or sum-of-weights statistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:163,Usability,simpl,simple,163,"////////////////////////////////////////////////////////////////////////////////; /// Return the error of the current weight.; /// @param[in] etype Switch between simple Poisson or sum-of-weights statistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:62,Availability,error,error,62,"// We have a weight array, use that info; // Return symmetric error on current bin calculated either from Poisson statistics or from SumOfWeights",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:20,Modifiability,variab,variable,20,"// We have a weight variable, use that info",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:31,Availability,error,errors,31,"// Otherwise Calculate poisson errors",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:20,Modifiability,variab,variable,20,"// We have a weight variable, use that info",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:3,Performance,Load,Load,3,"// Load values from dataset 't' into this data collection, optionally; // selecting events using 'select' RooFormulaVar; //; // Redirect formula servers to source data row",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:865,Modifiability,variab,variables,865,"////////////////////////////////////////////////////////////////////////////////; /// Add a new column to the data set which holds the pre-calculated values; /// of 'newVar'. This operation is only meaningful if 'newVar' is a derived; /// value.; ///; /// The return value points to the added element holding 'newVar's value; /// in the data collection. The element is always the corresponding fundamental; /// type of 'newVar' (e.g. a RooRealVar if 'newVar' is a RooFormulaVar); ///; /// Note: This function is explicitly NOT intended as a speed optimization; /// opportunity for the user. Components of complex PDFs that can be; /// precalculated with the dataset are automatically identified as such; /// and will be precalculated when fitting to a dataset; ///; /// By forcibly precalculating functions with non-trivial Jacobians,; /// or functions of multiple variables occurring in the data set,; /// using addColumn(), you may alter the outcome of the fit.; ///; /// Only in cases where such a modification of fit behaviour is intentional,; /// this function should be used.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:547,Performance,optimiz,optimization,547,"////////////////////////////////////////////////////////////////////////////////; /// Add a new column to the data set which holds the pre-calculated values; /// of 'newVar'. This operation is only meaningful if 'newVar' is a derived; /// value.; ///; /// The return value points to the added element holding 'newVar's value; /// in the data collection. The element is always the corresponding fundamental; /// type of 'newVar' (e.g. a RooRealVar if 'newVar' is a RooFormulaVar); ///; /// Note: This function is explicitly NOT intended as a speed optimization; /// opportunity for the user. Components of complex PDFs that can be; /// precalculated with the dataset are automatically identified as such; /// and will be precalculated when fitting to a dataset; ///; /// By forcibly precalculating functions with non-trivial Jacobians,; /// or functions of multiple variables occurring in the data set,; /// using addColumn(), you may alter the outcome of the fit.; ///; /// Only in cases where such a modification of fit behaviour is intentional,; /// this function should be used.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:3,Safety,Sanity check,Sanity check,3,"// Sanity check that the holder really is fundamental",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:9,Modifiability,variab,variable,9,"// Clone variable and attach to cloned tree",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:8,Modifiability,variab,variables,8,"// Copy variables from merge sets",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:86,Performance,Cache,Cache,86,"////////////////////////////////////////////////////////////////////////////////; /// Cache given RooAbsArgs: The tree is; /// given direct write access of the args internal cache; /// the args values is pre-calculated for all data points; /// in this data collection. Upon a get() call, the; /// internal cache of 'newVar' will be loaded with the; /// precalculated value and it's dirty flag will be cleared.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:174,Performance,cache,cache,174,"////////////////////////////////////////////////////////////////////////////////; /// Cache given RooAbsArgs: The tree is; /// given direct write access of the args internal cache; /// the args values is pre-calculated for all data points; /// in this data collection. Upon a get() call, the; /// internal cache of 'newVar' will be loaded with the; /// precalculated value and it's dirty flag will be cleared.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:306,Performance,cache,cache,306,"////////////////////////////////////////////////////////////////////////////////; /// Cache given RooAbsArgs: The tree is; /// given direct write access of the args internal cache; /// the args values is pre-calculated for all data points; /// in this data collection. Upon a get() call, the; /// internal cache of 'newVar' will be loaded with the; /// precalculated value and it's dirty flag will be cleared.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:332,Performance,load,loaded,332,"////////////////////////////////////////////////////////////////////////////////; /// Cache given RooAbsArgs: The tree is; /// given direct write access of the args internal cache; /// the args values is pre-calculated for all data points; /// in this data collection. Upon a get() call, the; /// internal cache of 'newVar' will be loaded with the; /// precalculated value and it's dirty flag will be cleared.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:146,Security,access,access,146,"////////////////////////////////////////////////////////////////////////////////; /// Cache given RooAbsArgs: The tree is; /// given direct write access of the args internal cache; /// the args values is pre-calculated for all data points; /// in this data collection. Upon a get() call, the; /// internal cache of 'newVar' will be loaded with the; /// precalculated value and it's dirty flag will be cleared.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:401,Usability,clear,cleared,401,"////////////////////////////////////////////////////////////////////////////////; /// Cache given RooAbsArgs: The tree is; /// given direct write access of the args internal cache; /// the args values is pre-calculated for all data points; /// in this data collection. Upon a get() call, the; /// internal cache of 'newVar' will be loaded with the; /// precalculated value and it's dirty flag will be cleared.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:19,Performance,cache,cache,19,"// Delete previous cache, if any",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:81,Integrability,depend,dependence,81,"// Reorder cached elements. First constant nodes, then tracked nodes in order of dependence; // Step 1 - split in constant and tracked",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:11,Performance,cache,cached,11,"// Reorder cached elements. First constant nodes, then tracked nodes in order of dependence; // Step 1 - split in constant and tracked",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:29,Integrability,depend,depends,29,"// Explicitly check that arg depends on any of the observables, if this; // is not the case, skip it, as inclusion would result in repeated; // calculation of a function that has the same value for every event; // in the likelihood",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:36,Safety,avoid,avoids,36,"//LM: exclude same comparison. This avoids an issue when using sort in MacOS versions",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:105,Performance,Cache,Cache-and-Tracked,105,"// WVE need to prune tracking entries _below_ constant nodes as the're not needed; // cout << ""Number of Cache-and-Tracked args are "" << trackArgs.size() << endl ;; // cout << ""Compound ordered cache parameters = "" << endl ;; // orderedArgs.Print(""v"") ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:194,Performance,cache,cache,194,"// WVE need to prune tracking entries _below_ constant nodes as the're not needed; // cout << ""Number of Cache-and-Tracked args are "" << trackArgs.size() << endl ;; // cout << ""Compound ordered cache parameters = "" << endl ;; // orderedArgs.Print(""v"") ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:9,Modifiability,variab,variable,9,"// Clone variable and attach to cloned tree",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:32,Performance,cache,cacheArgs,32,"// cout << ""RooVectorDataStore::cacheArgs() cached node "" << arg->GetName() << "" has a normalization set specification CATNormSet = "" << catNset << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:44,Performance,cache,cached,44,"// cout << ""RooVectorDataStore::cacheArgs() cached node "" << arg->GetName() << "" has a normalization set specification CATNormSet = "" << catNset << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:32,Performance,cache,cacheArgs,32,"// cout << ""RooVectorDataStore::cacheArgs() cached node "" << arg->GetName() << "" has a conditional observable set specification CATCondSet = "" << catCset << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:44,Performance,cache,cached,44,"// cout << ""RooVectorDataStore::cacheArgs() cached node "" << arg->GetName() << "" has a conditional observable set specification CATCondSet = "" << catCset << endl ;",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:121,Performance,cache,cacheArgs,121,"// now construct normalization set for component from cset/nset spec; // if (normSet) {; // cout << ""RooVectorDaraStore::cacheArgs() component "" << arg->GetName() << "" has custom normalization set "" << *normSet << endl ;; // }",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:10,Performance,cache,caches,10,"// Refill caches of elements that require recalculation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:122,Modifiability,variab,variables,122,"////////////////////////////////////////////////////////////////////////////////; /// Initialize cache of dataset: attach variables of cache ArgSet; /// to the corresponding TTree branches",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:97,Performance,cache,cache,97,"////////////////////////////////////////////////////////////////////////////////; /// Initialize cache of dataset: attach variables of cache ArgSet; /// to the corresponding TTree branches",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:135,Performance,cache,cache,135,"////////////////////////////////////////////////////////////////////////////////; /// Initialize cache of dataset: attach variables of cache ArgSet; /// to the corresponding TTree branches",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:24,Performance,cache,cache,24,"// Only applicable if a cache exists",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:81,Modifiability,variab,variables,81,"// Clone constructor, must connect internal storage to given new external set of variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:49,Performance,load,load,49,"// If a buffer is attached, i.e. we are ready to load into a RooAbsReal outside of our dataset,; // we can directly map our spans to this real.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:35,Performance,cache,cached,35,"/// Trigger a recomputation of the cached weight sums. Meant for use by RooFit; /// dataset converter functions such as the NumPy converter functions; /// implemented as pythonizations.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:57,Usability,simpl,simple,57,"/// Exports all arrays in this RooVectorDataStore into a simple datastructure; /// to be used by RooFit internal export functions.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooVectorDataStore.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:1825,Availability,error,errors,1825,"thors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooWorkspace.cxx; \class RooWorkspace; \ingroup Roofitcore. Persistable container for RooFit projects. A workspace; can contain and own variables, p.d.f.s, functions and datasets. All objects; that live in the workspace are owned by the workspace. The `import()` method; enforces consistency of objects upon insertion into the workspace (e.g. no; duplicate object with the same name are allowed) and makes sure all objects; in the workspace are connected to each other. Easy accessor methods like; `pdf()`, `var()` and `data()` allow to refer to the contents of the workspace by; object name. The entire RooWorkspace can be saved into a ROOT TFile and organises; the consistent streaming of its contents without duplication.; If a RooWorkspace contains custom classes, i.e. classes not in the; ROOT distribution, portability of workspaces can be enhanced by; storing the source code of those classes in the workspace as well.; This process is also organized by the workspace through the; `importClassCode()` method. ### Seemingly random crashes when reading large workspaces; When reading or loading workspaces with deeply nested PDFs, one can encounter; ouf-of-memory errors if the stack size is too small. This manifests in crashes; at seemingly random locations, or in the process silently ending.; Unfortunately, ROOT neither recover from this situation, nor warn or give useful; instructions. When suspecting to have run out of stack memory, check; ```; ulimit -s; ```; and try reading again.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:1986,Availability,recover,recover,1986,"thors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooWorkspace.cxx; \class RooWorkspace; \ingroup Roofitcore. Persistable container for RooFit projects. A workspace; can contain and own variables, p.d.f.s, functions and datasets. All objects; that live in the workspace are owned by the workspace. The `import()` method; enforces consistency of objects upon insertion into the workspace (e.g. no; duplicate object with the same name are allowed) and makes sure all objects; in the workspace are connected to each other. Easy accessor methods like; `pdf()`, `var()` and `data()` allow to refer to the contents of the workspace by; object name. The entire RooWorkspace can be saved into a ROOT TFile and organises; the consistent streaming of its contents without duplication.; If a RooWorkspace contains custom classes, i.e. classes not in the; ROOT distribution, portability of workspaces can be enhanced by; storing the source code of those classes in the workspace as well.; This process is also organized by the workspace through the; `importClassCode()` method. ### Seemingly random crashes when reading large workspaces; When reading or loading workspaces with deeply nested PDFs, one can encounter; ouf-of-memory errors if the stack size is too small. This manifests in crashes; at seemingly random locations, or in the process silently ending.; Unfortunately, ROOT neither recover from this situation, nor warn or give useful; instructions. When suspecting to have run out of stack memory, check; ```; ulimit -s; ```; and try reading again.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:792,Modifiability,variab,variables,792,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooWorkspace.cxx; \class RooWorkspace; \ingroup Roofitcore. Persistable container for RooFit projects. A workspace; can contain and own variables, p.d.f.s, functions and datasets. All objects; that live in the workspace are owned by the workspace. The `import()` method; enforces consistency of objects upon insertion into the workspace (e.g. no; duplicate object with the same name are allowed) and makes sure all objects; in the workspace are connected to each other. Easy accessor methods like; `pdf()`, `var()` and `data()` allow to refer to the contents of the workspace by; object name. The entire RooWorkspace can be saved into a ROOT TFile and organises; the consistent streaming of its contents without duplication.; If a RooWorkspace contains custom classes, i.e. classes not in the; ROOT distribution, portability of workspaces can be enhanced by; storing the source code of those classes in the workspace as well.; This process is also organized by the workspace through the; `importClassCode()` method. ### Seemingly random crashes when reading large workspaces; When reading or loading workspaces with deeply nested PDFs, one can encounter; ouf-of-memory errors if the stack size is too small. This manifests in crashes; at seemingly random locations, or in the process silently ending.; Unfortunately, ROOT neither recover from th",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:1469,Modifiability,portab,portability,1469,"thors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooWorkspace.cxx; \class RooWorkspace; \ingroup Roofitcore. Persistable container for RooFit projects. A workspace; can contain and own variables, p.d.f.s, functions and datasets. All objects; that live in the workspace are owned by the workspace. The `import()` method; enforces consistency of objects upon insertion into the workspace (e.g. no; duplicate object with the same name are allowed) and makes sure all objects; in the workspace are connected to each other. Easy accessor methods like; `pdf()`, `var()` and `data()` allow to refer to the contents of the workspace by; object name. The entire RooWorkspace can be saved into a ROOT TFile and organises; the consistent streaming of its contents without duplication.; If a RooWorkspace contains custom classes, i.e. classes not in the; ROOT distribution, portability of workspaces can be enhanced by; storing the source code of those classes in the workspace as well.; This process is also organized by the workspace through the; `importClassCode()` method. ### Seemingly random crashes when reading large workspaces; When reading or loading workspaces with deeply nested PDFs, one can encounter; ouf-of-memory errors if the stack size is too small. This manifests in crashes; at seemingly random locations, or in the process silently ending.; Unfortunately, ROOT neither recover from this situation, nor warn or give useful; instructions. When suspecting to have run out of stack memory, check; ```; ulimit -s; ```; and try reading again.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:1502,Modifiability,enhance,enhanced,1502,"thors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooWorkspace.cxx; \class RooWorkspace; \ingroup Roofitcore. Persistable container for RooFit projects. A workspace; can contain and own variables, p.d.f.s, functions and datasets. All objects; that live in the workspace are owned by the workspace. The `import()` method; enforces consistency of objects upon insertion into the workspace (e.g. no; duplicate object with the same name are allowed) and makes sure all objects; in the workspace are connected to each other. Easy accessor methods like; `pdf()`, `var()` and `data()` allow to refer to the contents of the workspace by; object name. The entire RooWorkspace can be saved into a ROOT TFile and organises; the consistent streaming of its contents without duplication.; If a RooWorkspace contains custom classes, i.e. classes not in the; ROOT distribution, portability of workspaces can be enhanced by; storing the source code of those classes in the workspace as well.; This process is also organized by the workspace through the; `importClassCode()` method. ### Seemingly random crashes when reading large workspaces; When reading or loading workspaces with deeply nested PDFs, one can encounter; ouf-of-memory errors if the stack size is too small. This manifests in crashes; at seemingly random locations, or in the process silently ending.; Unfortunately, ROOT neither recover from this situation, nor warn or give useful; instructions. When suspecting to have run out of stack memory, check; ```; ulimit -s; ```; and try reading again.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:1748,Performance,load,loading,1748,"thors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooWorkspace.cxx; \class RooWorkspace; \ingroup Roofitcore. Persistable container for RooFit projects. A workspace; can contain and own variables, p.d.f.s, functions and datasets. All objects; that live in the workspace are owned by the workspace. The `import()` method; enforces consistency of objects upon insertion into the workspace (e.g. no; duplicate object with the same name are allowed) and makes sure all objects; in the workspace are connected to each other. Easy accessor methods like; `pdf()`, `var()` and `data()` allow to refer to the contents of the workspace by; object name. The entire RooWorkspace can be saved into a ROOT TFile and organises; the consistent streaming of its contents without duplication.; If a RooWorkspace contains custom classes, i.e. classes not in the; ROOT distribution, portability of workspaces can be enhanced by; storing the source code of those classes in the workspace as well.; This process is also organized by the workspace through the; `importClassCode()` method. ### Seemingly random crashes when reading large workspaces; When reading or loading workspaces with deeply nested PDFs, one can encounter; ouf-of-memory errors if the stack size is too small. This manifests in crashes; at seemingly random locations, or in the process silently ending.; Unfortunately, ROOT neither recover from this situation, nor warn or give useful; instructions. When suspecting to have run out of stack memory, check; ```; ulimit -s; ```; and try reading again.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:1986,Safety,recover,recover,1986,"thors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooWorkspace.cxx; \class RooWorkspace; \ingroup Roofitcore. Persistable container for RooFit projects. A workspace; can contain and own variables, p.d.f.s, functions and datasets. All objects; that live in the workspace are owned by the workspace. The `import()` method; enforces consistency of objects upon insertion into the workspace (e.g. no; duplicate object with the same name are allowed) and makes sure all objects; in the workspace are connected to each other. Easy accessor methods like; `pdf()`, `var()` and `data()` allow to refer to the contents of the workspace by; object name. The entire RooWorkspace can be saved into a ROOT TFile and organises; the consistent streaming of its contents without duplication.; If a RooWorkspace contains custom classes, i.e. classes not in the; ROOT distribution, portability of workspaces can be enhanced by; storing the source code of those classes in the workspace as well.; This process is also organized by the workspace through the; `importClassCode()` method. ### Seemingly random crashes when reading large workspaces; When reading or loading workspaces with deeply nested PDFs, one can encounter; ouf-of-memory errors if the stack size is too small. This manifests in crashes; at seemingly random locations, or in the process silently ending.; Unfortunately, ROOT neither recover from this situation, nor warn or give useful; instructions. When suspecting to have run out of stack memory, check; ```; ulimit -s; ```; and try reading again.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:1131,Security,access,accessor,1131,"thors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooWorkspace.cxx; \class RooWorkspace; \ingroup Roofitcore. Persistable container for RooFit projects. A workspace; can contain and own variables, p.d.f.s, functions and datasets. All objects; that live in the workspace are owned by the workspace. The `import()` method; enforces consistency of objects upon insertion into the workspace (e.g. no; duplicate object with the same name are allowed) and makes sure all objects; in the workspace are connected to each other. Easy accessor methods like; `pdf()`, `var()` and `data()` allow to refer to the contents of the workspace by; object name. The entire RooWorkspace can be saved into a ROOT TFile and organises; the consistent streaming of its contents without duplication.; If a RooWorkspace contains custom classes, i.e. classes not in the; ROOT distribution, portability of workspaces can be enhanced by; storing the source code of those classes in the workspace as well.; This process is also organized by the workspace through the; `importClassCode()` method. ### Seemingly random crashes when reading large workspaces; When reading or loading workspaces with deeply nested PDFs, one can encounter; ouf-of-memory errors if the stack size is too small. This manifests in crashes; at seemingly random locations, or in the process silently ending.; Unfortunately, ROOT neither recover from this situation, nor warn or give useful; instructions. When suspecting to have run out of stack memory, check; ```; ulimit -s; ```; and try reading again.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:90,Performance,cache,cache,90,"// Infer from a RooArgSet name whether this set is used internally by; // RooWorkspace to cache things.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:661,Availability,error,error,661,"////////////////////////////////////////////////////////////////////////////////; /// Import a RooAbsArg object, e.g. function, p.d.f or variable into the workspace. This import function clones the input argument and will; /// own the clone. If a composite object is offered for import, e.g. a p.d.f with parameters and observables, the; /// complete tree of objects is imported. If any of the _variables_ of a composite object (parameters/observables) are already; /// in the workspace the imported p.d.f. is connected to the already existing variables. If any of the _function_ objects (p.d.f, formulas); /// to be imported already exists in the workspace an error message is printed and the import of the entire tree of objects is cancelled.; /// Several optional arguments can be provided to modify the import procedure.; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `RenameConflictNodes(const char* suffix)` <td> Add suffix to branch node name if name conflicts with existing node in workspace; /// <tr><td> `RenameAllNodes(const char* suffix)` <td> Add suffix to all branch node names including top level node.; /// <tr><td> `RenameAllVariables(const char* suffix)` <td> Add suffix to all variables of objects being imported.; /// <tr><td> `RenameAllVariablesExcept(const char* suffix, const char* exceptionList)` <td> Add suffix to all variables names, except ones listed; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Rename a single variable as specified upon import.; /// <tr><td> `RecycleConflictNodes()` <td> If any of the function objects to be imported already exist in the name space, connect the; /// imported expression to the already existing nodes.; /// \attention Use with care! If function definitions do not match, this alters the definition of your function upon import; ///; /// <tr><td> `Silence()` <td> Do not issue any info message; /// </table>; ///; /// The RenameConflictNodes, RenameNodes and RecycleConflictNodes a",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:667,Integrability,message,message,667,"////////////////////////////////////////////////////////////////////////////////; /// Import a RooAbsArg object, e.g. function, p.d.f or variable into the workspace. This import function clones the input argument and will; /// own the clone. If a composite object is offered for import, e.g. a p.d.f with parameters and observables, the; /// complete tree of objects is imported. If any of the _variables_ of a composite object (parameters/observables) are already; /// in the workspace the imported p.d.f. is connected to the already existing variables. If any of the _function_ objects (p.d.f, formulas); /// to be imported already exists in the workspace an error message is printed and the import of the entire tree of objects is cancelled.; /// Several optional arguments can be provided to modify the import procedure.; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `RenameConflictNodes(const char* suffix)` <td> Add suffix to branch node name if name conflicts with existing node in workspace; /// <tr><td> `RenameAllNodes(const char* suffix)` <td> Add suffix to all branch node names including top level node.; /// <tr><td> `RenameAllVariables(const char* suffix)` <td> Add suffix to all variables of objects being imported.; /// <tr><td> `RenameAllVariablesExcept(const char* suffix, const char* exceptionList)` <td> Add suffix to all variables names, except ones listed; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Rename a single variable as specified upon import.; /// <tr><td> `RecycleConflictNodes()` <td> If any of the function objects to be imported already exist in the name space, connect the; /// imported expression to the already existing nodes.; /// \attention Use with care! If function definitions do not match, this alters the definition of your function upon import; ///; /// <tr><td> `Silence()` <td> Do not issue any info message; /// </table>; ///; /// The RenameConflictNodes, RenameNodes and RecycleConflictNodes a",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:1906,Integrability,message,message,1906,"ters and observables, the; /// complete tree of objects is imported. If any of the _variables_ of a composite object (parameters/observables) are already; /// in the workspace the imported p.d.f. is connected to the already existing variables. If any of the _function_ objects (p.d.f, formulas); /// to be imported already exists in the workspace an error message is printed and the import of the entire tree of objects is cancelled.; /// Several optional arguments can be provided to modify the import procedure.; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `RenameConflictNodes(const char* suffix)` <td> Add suffix to branch node name if name conflicts with existing node in workspace; /// <tr><td> `RenameAllNodes(const char* suffix)` <td> Add suffix to all branch node names including top level node.; /// <tr><td> `RenameAllVariables(const char* suffix)` <td> Add suffix to all variables of objects being imported.; /// <tr><td> `RenameAllVariablesExcept(const char* suffix, const char* exceptionList)` <td> Add suffix to all variables names, except ones listed; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Rename a single variable as specified upon import.; /// <tr><td> `RecycleConflictNodes()` <td> If any of the function objects to be imported already exist in the name space, connect the; /// imported expression to the already existing nodes.; /// \attention Use with care! If function definitions do not match, this alters the definition of your function upon import; ///; /// <tr><td> `Silence()` <td> Do not issue any info message; /// </table>; ///; /// The RenameConflictNodes, RenameNodes and RecycleConflictNodes arguments are mutually exclusive. The RenameVariable argument can be repeated; /// as often as necessary to rename multiple variables. Alternatively, a single RenameVariable argument can be given with; /// two comma separated lists.; /// \note From python, use `Import()`, since `import` is a reserved keyword.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:137,Modifiability,variab,variable,137,"////////////////////////////////////////////////////////////////////////////////; /// Import a RooAbsArg object, e.g. function, p.d.f or variable into the workspace. This import function clones the input argument and will; /// own the clone. If a composite object is offered for import, e.g. a p.d.f with parameters and observables, the; /// complete tree of objects is imported. If any of the _variables_ of a composite object (parameters/observables) are already; /// in the workspace the imported p.d.f. is connected to the already existing variables. If any of the _function_ objects (p.d.f, formulas); /// to be imported already exists in the workspace an error message is printed and the import of the entire tree of objects is cancelled.; /// Several optional arguments can be provided to modify the import procedure.; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `RenameConflictNodes(const char* suffix)` <td> Add suffix to branch node name if name conflicts with existing node in workspace; /// <tr><td> `RenameAllNodes(const char* suffix)` <td> Add suffix to all branch node names including top level node.; /// <tr><td> `RenameAllVariables(const char* suffix)` <td> Add suffix to all variables of objects being imported.; /// <tr><td> `RenameAllVariablesExcept(const char* suffix, const char* exceptionList)` <td> Add suffix to all variables names, except ones listed; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Rename a single variable as specified upon import.; /// <tr><td> `RecycleConflictNodes()` <td> If any of the function objects to be imported already exist in the name space, connect the; /// imported expression to the already existing nodes.; /// \attention Use with care! If function definitions do not match, this alters the definition of your function upon import; ///; /// <tr><td> `Silence()` <td> Do not issue any info message; /// </table>; ///; /// The RenameConflictNodes, RenameNodes and RecycleConflictNodes a",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:544,Modifiability,variab,variables,544,"////////////////////////////////////////////////////////////////////////////////; /// Import a RooAbsArg object, e.g. function, p.d.f or variable into the workspace. This import function clones the input argument and will; /// own the clone. If a composite object is offered for import, e.g. a p.d.f with parameters and observables, the; /// complete tree of objects is imported. If any of the _variables_ of a composite object (parameters/observables) are already; /// in the workspace the imported p.d.f. is connected to the already existing variables. If any of the _function_ objects (p.d.f, formulas); /// to be imported already exists in the workspace an error message is printed and the import of the entire tree of objects is cancelled.; /// Several optional arguments can be provided to modify the import procedure.; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `RenameConflictNodes(const char* suffix)` <td> Add suffix to branch node name if name conflicts with existing node in workspace; /// <tr><td> `RenameAllNodes(const char* suffix)` <td> Add suffix to all branch node names including top level node.; /// <tr><td> `RenameAllVariables(const char* suffix)` <td> Add suffix to all variables of objects being imported.; /// <tr><td> `RenameAllVariablesExcept(const char* suffix, const char* exceptionList)` <td> Add suffix to all variables names, except ones listed; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Rename a single variable as specified upon import.; /// <tr><td> `RecycleConflictNodes()` <td> If any of the function objects to be imported already exist in the name space, connect the; /// imported expression to the already existing nodes.; /// \attention Use with care! If function definitions do not match, this alters the definition of your function upon import; ///; /// <tr><td> `Silence()` <td> Do not issue any info message; /// </table>; ///; /// The RenameConflictNodes, RenameNodes and RecycleConflictNodes a",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:1214,Modifiability,variab,variables,1214,"s the input argument and will; /// own the clone. If a composite object is offered for import, e.g. a p.d.f with parameters and observables, the; /// complete tree of objects is imported. If any of the _variables_ of a composite object (parameters/observables) are already; /// in the workspace the imported p.d.f. is connected to the already existing variables. If any of the _function_ objects (p.d.f, formulas); /// to be imported already exists in the workspace an error message is printed and the import of the entire tree of objects is cancelled.; /// Several optional arguments can be provided to modify the import procedure.; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `RenameConflictNodes(const char* suffix)` <td> Add suffix to branch node name if name conflicts with existing node in workspace; /// <tr><td> `RenameAllNodes(const char* suffix)` <td> Add suffix to all branch node names including top level node.; /// <tr><td> `RenameAllVariables(const char* suffix)` <td> Add suffix to all variables of objects being imported.; /// <tr><td> `RenameAllVariablesExcept(const char* suffix, const char* exceptionList)` <td> Add suffix to all variables names, except ones listed; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Rename a single variable as specified upon import.; /// <tr><td> `RecycleConflictNodes()` <td> If any of the function objects to be imported already exist in the name space, connect the; /// imported expression to the already existing nodes.; /// \attention Use with care! If function definitions do not match, this alters the definition of your function upon import; ///; /// <tr><td> `Silence()` <td> Do not issue any info message; /// </table>; ///; /// The RenameConflictNodes, RenameNodes and RecycleConflictNodes arguments are mutually exclusive. The RenameVariable argument can be repeated; /// as often as necessary to rename multiple variables. Alternatively, a single RenameVariable argument can be giv",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:1362,Modifiability,variab,variables,1362,"ters and observables, the; /// complete tree of objects is imported. If any of the _variables_ of a composite object (parameters/observables) are already; /// in the workspace the imported p.d.f. is connected to the already existing variables. If any of the _function_ objects (p.d.f, formulas); /// to be imported already exists in the workspace an error message is printed and the import of the entire tree of objects is cancelled.; /// Several optional arguments can be provided to modify the import procedure.; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `RenameConflictNodes(const char* suffix)` <td> Add suffix to branch node name if name conflicts with existing node in workspace; /// <tr><td> `RenameAllNodes(const char* suffix)` <td> Add suffix to all branch node names including top level node.; /// <tr><td> `RenameAllVariables(const char* suffix)` <td> Add suffix to all variables of objects being imported.; /// <tr><td> `RenameAllVariablesExcept(const char* suffix, const char* exceptionList)` <td> Add suffix to all variables names, except ones listed; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Rename a single variable as specified upon import.; /// <tr><td> `RecycleConflictNodes()` <td> If any of the function objects to be imported already exist in the name space, connect the; /// imported expression to the already existing nodes.; /// \attention Use with care! If function definitions do not match, this alters the definition of your function upon import; ///; /// <tr><td> `Silence()` <td> Do not issue any info message; /// </table>; ///; /// The RenameConflictNodes, RenameNodes and RecycleConflictNodes arguments are mutually exclusive. The RenameVariable argument can be repeated; /// as often as necessary to rename multiple variables. Alternatively, a single RenameVariable argument can be given with; /// two comma separated lists.; /// \note From python, use `Import()`, since `import` is a reserved keyword.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:1497,Modifiability,variab,variable,1497,"ters and observables, the; /// complete tree of objects is imported. If any of the _variables_ of a composite object (parameters/observables) are already; /// in the workspace the imported p.d.f. is connected to the already existing variables. If any of the _function_ objects (p.d.f, formulas); /// to be imported already exists in the workspace an error message is printed and the import of the entire tree of objects is cancelled.; /// Several optional arguments can be provided to modify the import procedure.; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `RenameConflictNodes(const char* suffix)` <td> Add suffix to branch node name if name conflicts with existing node in workspace; /// <tr><td> `RenameAllNodes(const char* suffix)` <td> Add suffix to all branch node names including top level node.; /// <tr><td> `RenameAllVariables(const char* suffix)` <td> Add suffix to all variables of objects being imported.; /// <tr><td> `RenameAllVariablesExcept(const char* suffix, const char* exceptionList)` <td> Add suffix to all variables names, except ones listed; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Rename a single variable as specified upon import.; /// <tr><td> `RecycleConflictNodes()` <td> If any of the function objects to be imported already exist in the name space, connect the; /// imported expression to the already existing nodes.; /// \attention Use with care! If function definitions do not match, this alters the definition of your function upon import; ///; /// <tr><td> `Silence()` <td> Do not issue any info message; /// </table>; ///; /// The RenameConflictNodes, RenameNodes and RecycleConflictNodes arguments are mutually exclusive. The RenameVariable argument can be repeated; /// as often as necessary to rename multiple variables. Alternatively, a single RenameVariable argument can be given with; /// two comma separated lists.; /// \note From python, use `Import()`, since `import` is a reserved keyword.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:2124,Modifiability,variab,variables,2124,"ters and observables, the; /// complete tree of objects is imported. If any of the _variables_ of a composite object (parameters/observables) are already; /// in the workspace the imported p.d.f. is connected to the already existing variables. If any of the _function_ objects (p.d.f, formulas); /// to be imported already exists in the workspace an error message is printed and the import of the entire tree of objects is cancelled.; /// Several optional arguments can be provided to modify the import procedure.; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `RenameConflictNodes(const char* suffix)` <td> Add suffix to branch node name if name conflicts with existing node in workspace; /// <tr><td> `RenameAllNodes(const char* suffix)` <td> Add suffix to all branch node names including top level node.; /// <tr><td> `RenameAllVariables(const char* suffix)` <td> Add suffix to all variables of objects being imported.; /// <tr><td> `RenameAllVariablesExcept(const char* suffix, const char* exceptionList)` <td> Add suffix to all variables names, except ones listed; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Rename a single variable as specified upon import.; /// <tr><td> `RecycleConflictNodes()` <td> If any of the function objects to be imported already exist in the name space, connect the; /// imported expression to the already existing nodes.; /// \attention Use with care! If function definitions do not match, this alters the definition of your function upon import; ///; /// <tr><td> `Silence()` <td> Do not issue any info message; /// </table>; ///; /// The RenameConflictNodes, RenameNodes and RecycleConflictNodes arguments are mutually exclusive. The RenameVariable argument can be repeated; /// as often as necessary to rename multiple variables. Alternatively, a single RenameVariable argument can be given with; /// two comma separated lists.; /// \note From python, use `Import()`, since `import` is a reserved keyword.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:19,Testability,log,logic,19,"// Decode renaming logic into suffix string and boolean for conflictOnly mode",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:25,Modifiability,variab,variable,25,"// Process any change in variable names",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:59,Integrability,protocol,protocol,59,"// Terminate here if there are conflicts and no resolution protocol",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:76,Integrability,protocol,protocol,76,"// Mark all nodes to be imported for renaming following conflict resolution protocol",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:49,Usability,clear,clear,49,"// Rename all nodes already in the workspace to 'clear the way' for the imported nodes",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:25,Modifiability,variab,variable,25,"// Process any change in variable names",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:26,Modifiability,variab,variable,26,"// Process all changes in variable names",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:59,Integrability,protocol,protocol,59,"// Terminate here if there are conflicts and no resolution protocol",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:3,Performance,Perform,Perform,3,"// Perform any auxiliary imports at this point",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:62,Modifiability,variab,variables,62,"// Check if node is already in workspace (can only happen for variables or identical instances, unless RecycleConflictNodes is specified)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:609,Availability,error,errors,609,"////////////////////////////////////////////////////////////////////////////////; /// Import a dataset (RooDataSet or RooDataHist) into the workspace. The workspace will contain a copy of the data.; /// The dataset and its variables can be renamed upon insertion with the options below; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `Rename(const char* suffix)` <td> Rename dataset upon insertion; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Change names of observables in dataset upon insertion; /// <tr><td> `Silence` <td> Be quiet, except in case of errors; /// \note From python, use `Import()`, since `import` is a reserved keyword.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:223,Modifiability,variab,variables,223,"////////////////////////////////////////////////////////////////////////////////; /// Import a dataset (RooDataSet or RooDataHist) into the workspace. The workspace will contain a copy of the data.; /// The dataset and its variables can be renamed upon insertion with the options below; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `Rename(const char* suffix)` <td> Rename dataset upon insertion; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Change names of observables in dataset upon insertion; /// <tr><td> `Silence` <td> Be quiet, except in case of errors; /// \note From python, use `Import()`, since `import` is a reserved keyword.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:19,Testability,log,logic,19,"// Decode renaming logic into suffix string and boolean for conflictOnly mode",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:72,Performance,bottleneck,bottleneck,72,"// When the workspaces get larger, traversing the linked list becomes a bottleneck:",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:25,Modifiability,variab,variable,25,"// Process any change in variable names",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:34,Modifiability,variab,variable,34,"// Parse comma separated lists of variable name changes",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:24,Performance,cache,cache,24,"// Set expensive object cache of dataset internal buffers to that of workspace",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:253,Availability,error,error,253,"////////////////////////////////////////////////////////////////////////////////; /// Define a named RooArgSet with given constituents. If importMissing is true, any constituents; /// of aset that are not in the workspace will be imported, otherwise an error is returned; /// for missing components",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:39,Availability,error,error,39,"// If missing, either import or report error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:3,Deployability,Install,Install,3,"// Install named set",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:169,Availability,error,error,169,"// Define a named RooArgSet with given constituents. If importMissing is true, any constituents; // of aset that are not in the workspace will be imported, otherwise an error is returned; // for missing components; // Check if set was previously defined, if so print warning",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:3,Deployability,Install,Install,3,"// Install named set",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:39,Availability,error,error,39,"// If missing, either import or report error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:3,Deployability,Install,Install,3,"// Install named set",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:39,Availability,error,error,39,"// If missing, either import or report error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:3,Modifiability,Extend,Extend,3,"// Extend named set",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:29,Modifiability,sandbox,sandbox,29,"// Delete all objects in the sandbox",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:29,Testability,sandbox,sandbox,29,"// Delete all objects in the sandbox",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:11,Modifiability,sandbox,sandbox,11,"// Publish sandbox nodes in directory and/or CINT if requested",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:11,Testability,sandbox,sandbox,11,"// Publish sandbox nodes in directory and/or CINT if requested",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:41,Modifiability,sandbox,sandbox,41,"// Remove all committed objects from the sandbox",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:41,Testability,sandbox,sandbox,41,"// Remove all committed objects from the sandbox",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load the values and attributes of the parameters in the snapshot saved with; /// the given name",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:132,Modifiability,variab,variables,132,"////////////////////////////////////////////////////////////////////////////////; /// Return the RooArgSet containing a snapshot of variables contained in the workspace; ///; /// Note that the variables of the objects in the snapshots are **copies** of the; /// variables in the workspace. To load the values of a snapshot in the workspace; /// variables, use loadSnapshot() instead.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:193,Modifiability,variab,variables,193,"////////////////////////////////////////////////////////////////////////////////; /// Return the RooArgSet containing a snapshot of variables contained in the workspace; ///; /// Note that the variables of the objects in the snapshots are **copies** of the; /// variables in the workspace. To load the values of a snapshot in the workspace; /// variables, use loadSnapshot() instead.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:262,Modifiability,variab,variables,262,"////////////////////////////////////////////////////////////////////////////////; /// Return the RooArgSet containing a snapshot of variables contained in the workspace; ///; /// Note that the variables of the objects in the snapshots are **copies** of the; /// variables in the workspace. To load the values of a snapshot in the workspace; /// variables, use loadSnapshot() instead.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:345,Modifiability,variab,variables,345,"////////////////////////////////////////////////////////////////////////////////; /// Return the RooArgSet containing a snapshot of variables contained in the workspace; ///; /// Note that the variables of the objects in the snapshots are **copies** of the; /// variables in the workspace. To load the values of a snapshot in the workspace; /// variables, use loadSnapshot() instead.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:293,Performance,load,load,293,"////////////////////////////////////////////////////////////////////////////////; /// Return the RooArgSet containing a snapshot of variables contained in the workspace; ///; /// Note that the variables of the objects in the snapshots are **copies** of the; /// variables in the workspace. To load the values of a snapshot in the workspace; /// variables, use loadSnapshot() instead.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:360,Performance,load,loadSnapshot,360,"////////////////////////////////////////////////////////////////////////////////; /// Return the RooArgSet containing a snapshot of variables contained in the workspace; ///; /// Note that the variables of the objects in the snapshots are **copies** of the; /// variables in the workspace. To load the values of a snapshot in the workspace; /// variables, use loadSnapshot() instead.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:107,Modifiability,variab,variable,107,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve real-valued variable (RooRealVar) with given name. A null pointer is returned if not found",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:104,Modifiability,variab,variable,104,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve discrete variable (RooCategory) with given name. A null pointer is returned if not found",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:106,Modifiability,variab,variable,106,"////////////////////////////////////////////////////////////////////////////////; /// Return set with all variable objects",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:51,Modifiability,variab,variables,51,"// Split list of components in pdfs, functions and variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:51,Modifiability,variab,variables,51,"// Split list of components in pdfs, functions and variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:51,Modifiability,variab,variables,51,"// Split list of components in pdfs, functions and variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:51,Modifiability,variab,variables,51,"// Split list of components in pdfs, functions and variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:51,Modifiability,variab,variables,51,"// Split list of components in pdfs, functions and variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:51,Modifiability,variab,variables,51,"// Split list of components in pdfs, functions and variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:22,Integrability,wrap,wrapper,22,"// If found object is wrapper, return payload",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:583,Availability,error,error,583,"////////////////////////////////////////////////////////////////////////////////; /// Import code of class 'tc' into the repository. If code is already in repository it is only imported; /// again if doReplace is false. The names and location of the source files is determined from the information; /// in TClass. If no location is found in the TClass information, the files are searched in the workspace; /// search path, defined by addClassDeclImportDir() and addClassImplImportDir() for declaration and implementation; /// files respectively. If files cannot be found, abort with error status, otherwise update the internal; /// class-to-file map and import the contents of the files, if they are not imported yet.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:607,Deployability,update,update,607,"////////////////////////////////////////////////////////////////////////////////; /// Import code of class 'tc' into the repository. If code is already in repository it is only imported; /// again if doReplace is false. The names and location of the source files is determined from the information; /// in TClass. If no location is found in the TClass information, the files are searched in the workspace; /// search path, defined by addClassDeclImportDir() and addClassImplImportDir() for declaration and implementation; /// files respectively. If files cannot be found, abort with error status, otherwise update the internal; /// class-to-file map and import the contents of the files, if they are not imported yet.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:572,Safety,abort,abort,572,"////////////////////////////////////////////////////////////////////////////////; /// Import code of class 'tc' into the repository. If code is already in repository it is only imported; /// again if doReplace is false. The names and location of the source files is determined from the information; /// in TClass. If no location is found in the TClass information, the files are searched in the workspace; /// search path, defined by addClassDeclImportDir() and addClassImplImportDir() for declaration and implementation; /// files respectively. If files cannot be found, abort with error status, otherwise update the internal; /// class-to-file map and import the contents of the files, if they are not imported yet.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:43,Integrability,interface,interface,43,"// Retrieve file names through ROOT TClass interface",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:194,Integrability,interface,interface,194,"// Require that class meets technical criteria to be persistable (i.e it has a default constructor); // (We also need a default constructor of abstract classes, but cannot check that through is interface; // as TClass::HasDefaultCtor only returns true for callable default constructors)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:55,Safety,abort,abort,55,"// Header file cannot be found anywhere, warn user and abort operation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:63,Safety,abort,abort,63,"// Implementation file cannot be found anywhere, warn user and abort operation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:3,Safety,Abort,Abort,3,"// Abort import if declaration file cannot be opened",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:3,Safety,Abort,Abort,3,"// Abort import if implementation file cannot be opened",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:14,Modifiability,rewrite,rewrite,14,"// Explicitly rewrite include of own declaration file to string; // any directory prefixes, copy all other lines verbatim in stl string",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:450,Availability,error,error,450,"////////////////////////////////////////////////////////////////////////////////; /// Create transient TDirectory representation of this workspace. This directory; /// will appear as a subdirectory of the directory that contains the workspace; /// and will have the name of the workspace suffixed with ""Dir"". The TDirectory; /// interface is read-only. Any attempt to insert objects into the workspace; /// directory representation will result in an error message. Note that some; /// ROOT object like TH1 automatically insert themselves into the current directory; /// when constructed. This will give error messages when done in a workspace; /// directory.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:603,Availability,error,error,603,"////////////////////////////////////////////////////////////////////////////////; /// Create transient TDirectory representation of this workspace. This directory; /// will appear as a subdirectory of the directory that contains the workspace; /// and will have the name of the workspace suffixed with ""Dir"". The TDirectory; /// interface is read-only. Any attempt to insert objects into the workspace; /// directory representation will result in an error message. Note that some; /// ROOT object like TH1 automatically insert themselves into the current directory; /// when constructed. This will give error messages when done in a workspace; /// directory.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:329,Integrability,interface,interface,329,"////////////////////////////////////////////////////////////////////////////////; /// Create transient TDirectory representation of this workspace. This directory; /// will appear as a subdirectory of the directory that contains the workspace; /// and will have the name of the workspace suffixed with ""Dir"". The TDirectory; /// interface is read-only. Any attempt to insert objects into the workspace; /// directory representation will result in an error message. Note that some; /// ROOT object like TH1 automatically insert themselves into the current directory; /// when constructed. This will give error messages when done in a workspace; /// directory.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:456,Integrability,message,message,456,"////////////////////////////////////////////////////////////////////////////////; /// Create transient TDirectory representation of this workspace. This directory; /// will appear as a subdirectory of the directory that contains the workspace; /// and will have the name of the workspace suffixed with ""Dir"". The TDirectory; /// interface is read-only. Any attempt to insert objects into the workspace; /// directory representation will result in an error message. Note that some; /// ROOT object like TH1 automatically insert themselves into the current directory; /// when constructed. This will give error messages when done in a workspace; /// directory.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:609,Integrability,message,messages,609,"////////////////////////////////////////////////////////////////////////////////; /// Create transient TDirectory representation of this workspace. This directory; /// will appear as a subdirectory of the directory that contains the workspace; /// and will have the name of the workspace suffixed with ""Dir"". The TDirectory; /// interface is read-only. Any attempt to insert objects into the workspace; /// directory representation will result in an error message. Note that some; /// ROOT object like TH1 automatically insert themselves into the current directory; /// when constructed. This will give error messages when done in a workspace; /// directory.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:375,Availability,error,error,375,"////////////////////////////////////////////////////////////////////////////////; /// Import a clone of a generic TObject into workspace generic object container. Imported; /// object can be retrieved by name through the obj() method. The object is cloned upon; /// importation and the input argument does not need to live beyond the import call; ///; /// Returns true if an error has occurred.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:580,Availability,error,error,580,"////////////////////////////////////////////////////////////////////////////////; /// Import a clone of a generic TObject into workspace generic object container.; /// The imported object will be stored under the given alias name rather than its; /// own name. Imported object can be retrieved its alias name through the obj() method.; /// The object is cloned upon importation and the input argument does not need to live beyond the import call; /// This method is mostly useful for importing objects that do not have a settable name such as TMatrix; ///; /// Returns true if an error has occurred.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:22,Integrability,wrap,wrapper,22,"// If found object is wrapper, return payload",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:51,Modifiability,variab,variables,51,"// Split list of components in pdfs, functions and variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:319,Availability,error,errors,319,"////////////////////////////////////////////////////////////////////////////////; /// Custom streamer for the workspace. Stream contents of workspace; /// and code repository. When reading, read code repository first; /// and compile missing classes before proceeding with streaming; /// of workspace contents to avoid errors.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:313,Safety,avoid,avoid,313,"////////////////////////////////////////////////////////////////////////////////; /// Custom streamer for the workspace. Stream contents of workspace; /// and code repository. When reading, read code repository first; /// and compile missing classes before proceeding with streaming; /// of workspace contents to avoid errors.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:3,Performance,Perform,Perform,3,"// Perform any pass-2 schema evolution here",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:25,Performance,cache,cache,25,"// Make expensive object cache of all objects point to intermal copy.; // Somehow this doesn't work OK automatically",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:3,Deployability,update,update,3,"// update CRC32 with new data; // use precomputed table, rather than computing it on the fly",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:19,Security,checksum,checksum,19,"// Calculate crc32 checksum on given string",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:379,Availability,error,error,379,"////////////////////////////////////////////////////////////////////////////////; /// For all classes in the workspace for which no class definition is; /// found in the ROOT class table extract source code stored in code; /// repository into temporary directory set by; /// setClassFileExportDir(), compile classes and link them with; /// current ROOT session. If a compilation error occurs print; /// instructions for user how to fix errors and recover workspace and; /// abort import procedure.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:436,Availability,error,errors,436,"////////////////////////////////////////////////////////////////////////////////; /// For all classes in the workspace for which no class definition is; /// found in the ROOT class table extract source code stored in code; /// repository into temporary directory set by; /// setClassFileExportDir(), compile classes and link them with; /// current ROOT session. If a compilation error occurs print; /// instructions for user how to fix errors and recover workspace and; /// abort import procedure.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:447,Availability,recover,recover,447,"////////////////////////////////////////////////////////////////////////////////; /// For all classes in the workspace for which no class definition is; /// found in the ROOT class table extract source code stored in code; /// repository into temporary directory set by; /// setClassFileExportDir(), compile classes and link them with; /// current ROOT session. If a compilation error occurs print; /// instructions for user how to fix errors and recover workspace and; /// abort import procedure.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:447,Safety,recover,recover,447,"////////////////////////////////////////////////////////////////////////////////; /// For all classes in the workspace for which no class definition is; /// found in the ROOT class table extract source code stored in code; /// repository into temporary directory set by; /// setClassFileExportDir(), compile classes and link them with; /// current ROOT session. If a compilation error occurs print; /// instructions for user how to fix errors and recover workspace and; /// abort import procedure.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:474,Safety,abort,abort,474,"////////////////////////////////////////////////////////////////////////////////; /// For all classes in the workspace for which no class definition is; /// found in the ROOT class table extract source code stored in code; /// repository into temporary directory set by; /// setClassFileExportDir(), compile classes and link them with; /// current ROOT session. If a compilation error occurs print; /// instructions for user how to fix errors and recover workspace and; /// abort import procedure.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:36,Performance,load,load,36,"// If class is already known, don't load",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:95,Security,access,access,95,"////////////////////////////////////////////////////////////////////////////////; /// Internal access to TDirectory append method",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:106,Integrability,interface,interface,106,"////////////////////////////////////////////////////////////////////////////////; /// Overload TDirectory interface method to prohibit insertion of objects in read-only directory workspace representation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:106,Integrability,interface,interface,106,"////////////////////////////////////////////////////////////////////////////////; /// Overload TDirectory interface method to prohibit insertion of objects in read-only directory workspace representation",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:46,Performance,cache,cache,46,"// If the set is used internally by RooFit to cache parameters or; // constraints, it is invalidated by object removal. We will keep track; // of its name to remove the cache set later.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:169,Performance,cache,cache,169,"// If the set is used internally by RooFit to cache parameters or; // constraints, it is invalidated by object removal. We will keep track; // of its name to remove the cache set later.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWorkspace.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWrapperPdf.cxx:885,Integrability,wrap,wrapper,885,"// Author: Stephan Hageboeck, CERN 12 Sep 2019; /*****************************************************************************; * RooFit; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2019, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; * \class RooWrapperPdf; * The RooWrapperPdf is a class that can be used to convert a function into a PDF.; *; * During construction, a RooAbsReal has to be passed. When this function is evaluated, the wrapper pdf will; * in addition evaluate its integral, and normalise the returned value. It will further ensure that negative; * return values are clipped at zero.; *; * Functions calls such as analytical integral requests or plot sampling hints are simply forwarded to the RooAbsReal; * that was passed in the constructor.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWrapperPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWrapperPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWrapperPdf.cxx:1135,Usability,simpl,simply,1135,"// Author: Stephan Hageboeck, CERN 12 Sep 2019; /*****************************************************************************; * RooFit; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2019, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; * \class RooWrapperPdf; * The RooWrapperPdf is a class that can be used to convert a function into a PDF.; *; * During construction, a RooAbsReal has to be passed. When this function is evaluated, the wrapper pdf will; * in addition evaluate its integral, and normalise the returned value. It will further ensure that negative; * return values are clipped at zero.; *; * Functions calls such as analytical integral requests or plot sampling hints are simply forwarded to the RooAbsReal; * that was passed in the constructor.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooWrapperPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWrapperPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:906,Availability,error,errors,906,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooXYChi2Var; /// RooXYChi2Var implements a simple chi^2 calculation from an unbinned; /// dataset with values x,y with errors on y (and optionally on x) and a function.; /// The function can be either a RooAbsReal, or an extended RooAbsPdf where; /// the function value is calculated as the probability density times the; /// expected number of events.; /// The chi^2 is calculated as; /// ```; ///; /// / (Data[y]-) - func \+2; /// Sum[point] | ------------------ |; /// \ Data[ErrY] /; /// ```; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:1008,Modifiability,extend,extended,1008,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooXYChi2Var; /// RooXYChi2Var implements a simple chi^2 calculation from an unbinned; /// dataset with values x,y with errors on y (and optionally on x) and a function.; /// The function can be either a RooAbsReal, or an extended RooAbsPdf where; /// the function value is calculated as the probability density times the; /// expected number of events.; /// The chi^2 is calculated as; /// ```; ///; /// / (Data[y]-) - func \+2; /// Sum[point] | ------------------ |; /// \ Data[ErrY] /; /// ```; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:830,Usability,simpl,simple,830,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooXYChi2Var; /// RooXYChi2Var implements a simple chi^2 calculation from an unbinned; /// dataset with values x,y with errors on y (and optionally on x) and a function.; /// The function can be either a RooAbsReal, or an extended RooAbsPdf where; /// the function value is calculated as the probability density times the; /// expected number of events.; /// The chi^2 is calculated as; /// ```; ///; /// / (Data[y]-) - func \+2; /// Sum[point] | ------------------ |; /// \ Data[ErrY] /; /// ```; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:502,Availability,error,error,502,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where the weight is interpreted; /// as the Y value and the weight error is interpreted as the Y value error. The weight must have an; /// non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:538,Availability,error,error,538,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where the weight is interpreted; /// as the Y value and the weight error is interpreted as the Y value error. The weight must have an; /// non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:583,Availability,error,error,583,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where the weight is interpreted; /// as the Y value and the weight error is interpreted as the Y value error. The weight must have an; /// non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:674,Availability,error,errors,674,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where the weight is interpreted; /// as the Y value and the weight error is interpreted as the Y value error. The weight must have an; /// non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:822,Availability,error,error,822,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where the weight is interpreted; /// as the Y value and the weight error is interpreted as the Y value error. The weight must have an; /// non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:994,Availability,error,errors,994,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where the weight is interpreted; /// as the Y value and the weight error is interpreted as the Y value error. The weight must have an; /// non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:1080,Availability,error,error,1080,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where the weight is interpreted; /// as the Y value and the weight error is interpreted as the Y value error. The weight must have an; /// non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:200,Modifiability,extend,extendable,200,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where the weight is interpreted; /// as the Y value and the weight error is interpreted as the Y value error. The weight must have an; /// non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:525,Availability,error,error,525,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset.; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where given yvar is interpreted; /// as the Y value. The Y variable must have a non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:616,Availability,error,errors,616,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset.; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where given yvar is interpreted; /// as the Y value. The Y variable must have a non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:764,Availability,error,error,764,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset.; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where given yvar is interpreted; /// as the Y value. The Y variable must have a non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:936,Availability,error,errors,936,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset.; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where given yvar is interpreted; /// as the Y value. The Y variable must have a non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:1022,Availability,error,error,1022,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset.; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where given yvar is interpreted; /// as the Y value. The Y variable must have a non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:201,Modifiability,extend,extendable,201,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset.; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where given yvar is interpreted; /// as the Y value. The Y variable must have a non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:495,Modifiability,variab,variable,495,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset.; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where given yvar is interpreted; /// as the Y value. The Y variable must have a non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:11,Testability,test,tests,11,"// If this tests statistic is not a ""Slave"" in the RooAbsOptTestStatistic; // framework, it doesn't do any actual computation and no initialization is; // needed. It would not even work, because _funcObsSet would be a nullptr.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:218,Availability,avail,available,218,"// Define alternate numeric integrator configuration for bin integration; // We expect bin contents to very only very slowly so a non-adaptive; // Gauss-Kronrod integrator is expected to perform well (if RooFitMore is available)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:28,Deployability,integrat,integrator,28,"// Define alternate numeric integrator configuration for bin integration; // We expect bin contents to very only very slowly so a non-adaptive; // Gauss-Kronrod integrator is expected to perform well (if RooFitMore is available)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:39,Deployability,configurat,configuration,39,"// Define alternate numeric integrator configuration for bin integration; // We expect bin contents to very only very slowly so a non-adaptive; // Gauss-Kronrod integrator is expected to perform well (if RooFitMore is available)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:61,Deployability,integrat,integration,61,"// Define alternate numeric integrator configuration for bin integration; // We expect bin contents to very only very slowly so a non-adaptive; // Gauss-Kronrod integrator is expected to perform well (if RooFitMore is available)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:161,Deployability,integrat,integrator,161,"// Define alternate numeric integrator configuration for bin integration; // We expect bin contents to very only very slowly so a non-adaptive; // Gauss-Kronrod integrator is expected to perform well (if RooFitMore is available)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:134,Energy Efficiency,adapt,adaptive,134,"// Define alternate numeric integrator configuration for bin integration; // We expect bin contents to very only very slowly so a non-adaptive; // Gauss-Kronrod integrator is expected to perform well (if RooFitMore is available)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:28,Integrability,integrat,integrator,28,"// Define alternate numeric integrator configuration for bin integration; // We expect bin contents to very only very slowly so a non-adaptive; // Gauss-Kronrod integrator is expected to perform well (if RooFitMore is available)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:61,Integrability,integrat,integration,61,"// Define alternate numeric integrator configuration for bin integration; // We expect bin contents to very only very slowly so a non-adaptive; // Gauss-Kronrod integrator is expected to perform well (if RooFitMore is available)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:161,Integrability,integrat,integrator,161,"// Define alternate numeric integrator configuration for bin integration; // We expect bin contents to very only very slowly so a non-adaptive; // Gauss-Kronrod integrator is expected to perform well (if RooFitMore is available)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:39,Modifiability,config,configuration,39,"// Define alternate numeric integrator configuration for bin integration; // We expect bin contents to very only very slowly so a non-adaptive; // Gauss-Kronrod integrator is expected to perform well (if RooFitMore is available)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:134,Modifiability,adapt,adaptive,134,"// Define alternate numeric integrator configuration for bin integration; // We expect bin contents to very only very slowly so a non-adaptive; // Gauss-Kronrod integrator is expected to perform well (if RooFitMore is available)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:187,Performance,perform,perform,187,"// Define alternate numeric integrator configuration for bin integration; // We expect bin contents to very only very slowly so a non-adaptive; // Gauss-Kronrod integrator is expected to perform well (if RooFitMore is available)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:109,Deployability,integrat,integrator,109,"////////////////////////////////////////////////////////////////////////////////; /// Initialize bin content integrator",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:109,Integrability,integrat,integrator,109,"////////////////////////////////////////////////////////////////////////////////; /// Initialize bin content integrator",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:121,Availability,error,error,121,"////////////////////////////////////////////////////////////////////////////////; /// Calculate contribution to internal error due to error on 'x' coordinates; /// at point i",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:134,Availability,error,error,134,"////////////////////////////////////////////////////////////////////////////////; /// Calculate contribution to internal error due to error on 'x' coordinates; /// at point i",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:115,Availability,error,error,115,"// cout << ""xerrHi = "" << xerrHi << "" xerrLo = "" << xerrLo << "" slope = "" << slope << std::endl ;; // Asymmetric X error, decide which one to use",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:15,Availability,error,error,15,"// Use right X error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:14,Availability,error,error,14,"// Use left X error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:147,Availability,error,error,147,"// cout << var << "" "" ;; // var->Print() ;; // cout << var->GetName() << "" xerr = "" << xerr << "" slope = "" << slope << std::endl ;; // Symmetric X error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:369,Availability,error,error,369,"////////////////////////////////////////////////////////////////////////////////; /// Return function value requested bu present configuration; ///; /// If integration is required, the function value integrated; /// over the bin volume divided by the bin volume is returned,; /// otherwise the value at the bin center is returned.; /// The bin volume is defined by the error on the 'X' coordinates; ///; /// If an extended p.d.f. is used as function, its value is; /// also multiplied by the expected number of events here",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:129,Deployability,configurat,configuration,129,"////////////////////////////////////////////////////////////////////////////////; /// Return function value requested bu present configuration; ///; /// If integration is required, the function value integrated; /// over the bin volume divided by the bin volume is returned,; /// otherwise the value at the bin center is returned.; /// The bin volume is defined by the error on the 'X' coordinates; ///; /// If an extended p.d.f. is used as function, its value is; /// also multiplied by the expected number of events here",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:156,Deployability,integrat,integration,156,"////////////////////////////////////////////////////////////////////////////////; /// Return function value requested bu present configuration; ///; /// If integration is required, the function value integrated; /// over the bin volume divided by the bin volume is returned,; /// otherwise the value at the bin center is returned.; /// The bin volume is defined by the error on the 'X' coordinates; ///; /// If an extended p.d.f. is used as function, its value is; /// also multiplied by the expected number of events here",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:200,Deployability,integrat,integrated,200,"////////////////////////////////////////////////////////////////////////////////; /// Return function value requested bu present configuration; ///; /// If integration is required, the function value integrated; /// over the bin volume divided by the bin volume is returned,; /// otherwise the value at the bin center is returned.; /// The bin volume is defined by the error on the 'X' coordinates; ///; /// If an extended p.d.f. is used as function, its value is; /// also multiplied by the expected number of events here",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:156,Integrability,integrat,integration,156,"////////////////////////////////////////////////////////////////////////////////; /// Return function value requested bu present configuration; ///; /// If integration is required, the function value integrated; /// over the bin volume divided by the bin volume is returned,; /// otherwise the value at the bin center is returned.; /// The bin volume is defined by the error on the 'X' coordinates; ///; /// If an extended p.d.f. is used as function, its value is; /// also multiplied by the expected number of events here",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:200,Integrability,integrat,integrated,200,"////////////////////////////////////////////////////////////////////////////////; /// Return function value requested bu present configuration; ///; /// If integration is required, the function value integrated; /// over the bin volume divided by the bin volume is returned,; /// otherwise the value at the bin center is returned.; /// The bin volume is defined by the error on the 'X' coordinates; ///; /// If an extended p.d.f. is used as function, its value is; /// also multiplied by the expected number of events here",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:129,Modifiability,config,configuration,129,"////////////////////////////////////////////////////////////////////////////////; /// Return function value requested bu present configuration; ///; /// If integration is required, the function value integrated; /// over the bin volume divided by the bin volume is returned,; /// otherwise the value at the bin center is returned.; /// The bin volume is defined by the error on the 'X' coordinates; ///; /// If an extended p.d.f. is used as function, its value is; /// also multiplied by the expected number of events here",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:414,Modifiability,extend,extended,414,"////////////////////////////////////////////////////////////////////////////////; /// Return function value requested bu present configuration; ///; /// If integration is required, the function value integrated; /// over the bin volume divided by the bin volume is returned,; /// otherwise the value at the bin center is returned.; /// The bin volume is defined by the error on the 'X' coordinates; ///; /// If an extended p.d.f. is used as function, its value is; /// also multiplied by the expected number of events here",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:22,Availability,error,error,22,"// Get data value and error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:22,Availability,error,error,22,"// Calculate external error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:23,Availability,error,error,23,"// Pick upper or lower error bar depending on sign of external error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:63,Availability,error,error,63,"// Pick upper or lower error bar depending on sign of external error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:33,Integrability,depend,depending,33,"// Pick upper or lower error bar depending on sign of external error",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:28,Availability,error,error,28,"// Add contributions due to error in x coordinates",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:52,Performance,optimiz,optimized,52,"// Inform base class that observable yvar cannot be optimized away from the dataset",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:15,Availability,error,error,15,"// The default error level for MINUIT error analysis for a chi^2 is 1.0",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:38,Availability,error,error,38,"// The default error level for MINUIT error analysis for a chi^2 is 1.0",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:43,Deployability,integrat,integration,43,"// Disable function (component) caching if integration is requested as the function; // will be evaluated at coordinates other than the points in the dataset",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:43,Integrability,integrat,integration,43,"// Disable function (component) caching if integration is requested as the function; // will be evaluated at coordinates other than the points in the dataset",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:31,Modifiability,extend,extended,31,"///< Is the input function and extended p.d.f.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:8,Deployability,integrat,integration,8,"///< Is integration over the bin volume requested",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:8,Integrability,integrat,integration,8,"///< Is integration over the bin volume requested",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:7,Modifiability,variab,variable,7,"///< Y variable if so designated",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:13,Deployability,integrat,integrator,13,"///< Numeric integrator configuration for integration of function over bin",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:24,Deployability,configurat,configuration,24,"///< Numeric integrator configuration for integration of function over bin",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:42,Deployability,integrat,integration,42,"///< Numeric integrator configuration for integration of function over bin",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:13,Integrability,integrat,integrator,13,"///< Numeric integrator configuration for integration of function over bin",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:42,Integrability,integrat,integration,42,"///< Numeric integrator configuration for integration of function over bin",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:24,Modifiability,config,configuration,24,"///< Numeric integrator configuration for integration of function over bin",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooXYChi2Var.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/EvalContext.cxx:6,Safety,avoid,avoid,6,"// To avoid deleted move assignment.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/EvalContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/EvalContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/EvalContext.cxx:165,Energy Efficiency,reduce,reducer,165,"/// \brief Sets the output value with an offset.; ///; /// This function sets the output value with an offset for the given argument.; /// It should only be used in reducer nodes. Depending on the current; /// OffsetMode, the result will either be just the value, the value minus the; /// offset, of just the offset.; ///; /// \param arg Pointer to the RooAbsArg object.; /// \param val The value to be set.; /// \param offset The offset value.; ///; /// \throws std::runtime_error if the argument is not a reducer node.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/EvalContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/EvalContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/EvalContext.cxx:507,Energy Efficiency,reduce,reducer,507,"/// \brief Sets the output value with an offset.; ///; /// This function sets the output value with an offset for the given argument.; /// It should only be used in reducer nodes. Depending on the current; /// OffsetMode, the result will either be just the value, the value minus the; /// offset, of just the offset.; ///; /// \param arg Pointer to the RooAbsArg object.; /// \param val The value to be set.; /// \param offset The offset value.; ///; /// \throws std::runtime_error if the argument is not a reducer node.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/EvalContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/EvalContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/EvalContext.cxx:180,Integrability,Depend,Depending,180,"/// \brief Sets the output value with an offset.; ///; /// This function sets the output value with an offset for the given argument.; /// It should only be used in reducer nodes. Depending on the current; /// OffsetMode, the result will either be just the value, the value minus the; /// offset, of just the offset.; ///; /// \param arg Pointer to the RooAbsArg object.; /// \param val The value to be set.; /// \param offset The offset value.; ///; /// \throws std::runtime_error if the argument is not a reducer node.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/EvalContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/EvalContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:634,Energy Efficiency,schedul,schedules,634,"/*; * Project: RooFit; * Authors:; * Jonas Rembser, CERN 2021; * Emmanouil Michalainas, CERN 2021; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file Evaluator.cxx; \class RooFit::Evaluator; \ingroup Roofitcore. Evaluates a RooAbsReal object in other ways than recursive graph; traversal. Currently, it is being used for evaluating a RooAbsReal object and; supplying the value to the minimizer, during a fit. The class scans the; dependencies and schedules the computations in a secure and efficient way. The; computations take place in the RooBatchCompute library and can be carried off; by either the CPU or a CUDA-supporting GPU. The Evaluator class takes care; of data transfers. An instance of this class is created every time; RooAbsPdf::fitTo() is called and gets destroyed when the fitting ends.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:677,Energy Efficiency,efficient,efficient,677,"/*; * Project: RooFit; * Authors:; * Jonas Rembser, CERN 2021; * Emmanouil Michalainas, CERN 2021; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file Evaluator.cxx; \class RooFit::Evaluator; \ingroup Roofitcore. Evaluates a RooAbsReal object in other ways than recursive graph; traversal. Currently, it is being used for evaluating a RooAbsReal object and; supplying the value to the minimizer, during a fit. The class scans the; dependencies and schedules the computations in a secure and efficient way. The; computations take place in the RooBatchCompute library and can be carried off; by either the CPU or a CUDA-supporting GPU. The Evaluator class takes care; of data transfers. An instance of this class is created every time; RooAbsPdf::fitTo() is called and gets destroyed when the fitting ends.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:617,Integrability,depend,dependencies,617,"/*; * Project: RooFit; * Authors:; * Jonas Rembser, CERN 2021; * Emmanouil Michalainas, CERN 2021; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file Evaluator.cxx; \class RooFit::Evaluator; \ingroup Roofitcore. Evaluates a RooAbsReal object in other ways than recursive graph; traversal. Currently, it is being used for evaluating a RooAbsReal object and; supplying the value to the minimizer, during a fit. The class scans the; dependencies and schedules the computations in a secure and efficient way. The; computations take place in the RooBatchCompute library and can be carried off; by either the CPU or a CUDA-supporting GPU. The Evaluator class takes care; of data transfers. An instance of this class is created every time; RooAbsPdf::fitTo() is called and gets destroyed when the fitting ends.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:666,Security,secur,secure,666,"/*; * Project: RooFit; * Authors:; * Jonas Rembser, CERN 2021; * Emmanouil Michalainas, CERN 2021; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file Evaluator.cxx; \class RooFit::Evaluator; \ingroup Roofitcore. Evaluates a RooAbsReal object in other ways than recursive graph; traversal. Currently, it is being used for evaluating a RooAbsReal object and; supplying the value to the minimizer, during a fit. The class scans the; dependencies and schedules the computations in a secure and efficient way. The; computations take place in the RooBatchCompute library and can be carried off; by either the CPU or a CUDA-supporting GPU. The Evaluator class takes care; of data transfers. An instance of this class is created every time; RooAbsPdf::fitTo() is called and gets destroyed when the fitting ends.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:6,Safety,avoid,avoid,6,"// To avoid deleted move assignment.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:32,Integrability,message,message,32,"// We have to exit early if the message stream is not active. Otherwise it's; // possible that this function skips logging because it thinks it has; // already logged, but actually it didn't.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:115,Testability,log,logging,115,"// We have to exit early if the message stream is not active. Otherwise it's; // possible that this function skips logging because it thinks it has; // already logged, but actually it didn't.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:160,Testability,log,logged,160,"// We have to exit early if the message stream is not active. Otherwise it's; // possible that this function skips logging because it thinks it has; // already logged, but actually it didn't.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:16,Testability,log,logging,16,"// Don't repeat logging architecture info if the useGPU option didn't change",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:59,Deployability,release,release,59,"/// Check the servers of a node that has been computed and release its; /// resources if they are no longer needed.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:19,Testability,log,logging,19,"// Some checks and logging of used architectures",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:133,Modifiability,variab,variable,133,"// For simplicity, we put the data on both host and device for; // now. This could be optimized by inspecting the clients of the; // variable.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:86,Performance,optimiz,optimized,86,"// For simplicity, we put the data on both host and device for; // now. This could be optimized by inspecting the clients of the; // variable.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:7,Usability,simpl,simplicity,7,"// For simplicity, we put the data on both host and device for; // now. This could be optimized by inspecting the clients of the; // variable.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:243,Testability,test,test,243,"// In principle we don't need dirty flag propagation because the driver; // takes care of deciding which node needs to be re-evaluated. However,; // disabling it also for scalar mode results in very long fitting times; // for specific models (test 14 in stressRooFit), which still needs to be; // understood. TODO.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:14,Modifiability,variab,variable,14,"/// Process a variable in the computation graph. This is a separate non-inlined; /// function such that we can see in performance profiles how long this takes.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:118,Performance,perform,performance,118,"/// Process a variable in the computation graph. This is a separate non-inlined; /// function such that we can see in performance profiles how long this takes.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:118,Performance,perform,performance,118,"/// Flags all the clients of a given node dirty. This is a separate non-inlined; /// function such that we can see in performance profiles how long this takes.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:18,Availability,avail,available,18,"// if no CPU node available sleep for a while to save CPU usage",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:107,Integrability,depend,depend,107,"/// Assign a node to be computed in the GPU. Scan it's clients and also assign them; /// in case they only depend on GPU nodes.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:358,Energy Efficiency,efficient,efficiently,358,"/// Gets all the parameters of the RooAbsReal. This is in principle not; /// necessary, because we can always ask the RooAbsReal itself, but the; /// Evaluator has the cached information to get the answer quicker.; /// Therefore, this is not meant to be used in general, just where it matters.; /// \warning If we find another solution to get the parameters efficiently,; /// this function might be removed without notice.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:168,Performance,cache,cached,168,"/// Gets all the parameters of the RooAbsReal. This is in principle not; /// necessary, because we can always ask the RooAbsReal itself, but the; /// Evaluator has the cached information to get the answer quicker.; /// Therefore, this is not meant to be used in general, just where it matters.; /// \warning If we find another solution to get the parameters efficiently,; /// this function might be removed without notice.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:139,Deployability,update,updates,139,"/// \brief Sets the offset mode for evaluation.; ///; /// This function sets the offset mode for evaluation to the specified mode.; /// It updates the offset mode for both CPU and CUDA evaluation contexts.; ///; /// \param mode The offset mode to be set.; ///; /// \note This function marks reducer nodes as dirty if the offset mode is; /// changed, because only reducer nodes can use offsetting.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:291,Energy Efficiency,reduce,reducer,291,"/// \brief Sets the offset mode for evaluation.; ///; /// This function sets the offset mode for evaluation to the specified mode.; /// It updates the offset mode for both CPU and CUDA evaluation contexts.; ///; /// \param mode The offset mode to be set.; ///; /// \note This function marks reducer nodes as dirty if the offset mode is; /// changed, because only reducer nodes can use offsetting.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:363,Energy Efficiency,reduce,reducer,363,"/// \brief Sets the offset mode for evaluation.; ///; /// This function sets the offset mode for evaluation to the specified mode.; /// It updates the offset mode for both CPU and CUDA evaluation contexts.; ///; /// \param mode The offset mode to be set.; ///; /// \note This function marks reducer nodes as dirty if the offset mode is; /// changed, because only reducer nodes can use offsetting.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Evaluator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx:82,Performance,perform,performs,82,"/// @brief Gets the result for the given node using the node name. This node also performs the necessary; /// code generation through recursive calls to 'translate'. A call to this function modifies the already; /// existing code body.; /// @param key The node to get the result string for.; /// @return String representing the result of this node.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx:64,Performance,load,load,64,"// Now, recursively call translate into the current argument to load the correct result.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx:127,Modifiability,variab,variable,127,"/// @brief Adds the given string to the string block that will be emitted at the top of the squashed function. Useful; /// for variable declarations.; /// @param str The string to add to the global scope.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx:269,Modifiability,variab,variable,269,"/// @brief Since the squashed code represents all observables as a single flattened array, it is important; /// to keep track of the start index for a vector valued observable which can later be expanded to access the correct; /// element. For example, a vector valued variable x with 10 entries will be squashed to obs[start_idx + i].; /// @param key The name of the node representing the vector valued observable.; /// @param idx The start index (or relative position of the observable in the set of all observables).",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx:207,Security,access,access,207,"/// @brief Since the squashed code represents all observables as a single flattened array, it is important; /// to keep track of the start index for a vector valued observable which can later be expanded to access the correct; /// element. For example, a vector valued variable x with 10 entries will be squashed to obs[start_idx + i].; /// @param key The name of the node representing the vector valued observable.; /// @param idx The start index (or relative position of the observable in the set of all observables).",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx:370,Integrability,depend,dependent,370,"/// @brief A variation of the previous addToCodeBody that takes in a bool value that determines; /// if input is independent. This overload exists because there might other ways to determine if; /// a value/collection of values is scope independent.; /// @param in String to add to the squashed code.; /// @param isScopeIndep The value determining if the input is scope dependent.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx:223,Integrability,depend,dependent,223,"/// @brief Create a RAII scope for iterating over vector observables. You can't use the result of vector observables; /// outside these loop scopes.; /// @param in A pointer to the calling class, used to determine the loop dependent variables.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx:233,Modifiability,variab,variables,233,"/// @brief Create a RAII scope for iterating over vector observables. You can't use the result of vector observables; /// outside these loop scopes.; /// @param in A pointer to the calling class, used to determine the loop dependent variables.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx:49,Modifiability,variab,variable,49,"// TODO: we are using the size of the first loop variable to the the number; // of iterations, but it should be made sure that all loop vars are either; // scalar or have the same size.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx:35,Modifiability,variab,variable,35,"// Make sure that the name of this variable doesn't clash with other stuff",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx:33,Modifiability,variab,variables,33,"// clear the results of the loop variables if they were vector observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx:3,Usability,clear,clear,3,"// clear the results of the loop variables if they were vector observables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx:24,Modifiability,variab,variable,24,"/// @brief Get a unique variable name to be used in the generated code.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx:58,Integrability,depend,depends,58,"/// @brief A function to save an expression that includes/depends on the result of the input node.; /// @param in The node on which the valueToSave depends on/belongs to.; /// @param valueToSave The actual string value to save as a temporary.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx:148,Integrability,depend,depends,148,"/// @brief A function to save an expression that includes/depends on the result of the input node.; /// @param in The node on which the valueToSave depends on/belongs to.; /// @param valueToSave The actual string value to save as a temporary.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Detail/CodeSquashContext.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:1044,Availability,avail,available,1044,"/**; * \brief Namespace for new RooFit test statistic calculation.; *; * RooFit::TestStatistics contains a major refactoring of the RooAbsTestStatistic-RooAbsOptTestStatistic-RooNLLVar; * inheritance tree into:; * 1. statistics-based classes on the one hand;; * 2. calculation/evaluation/optimization based classes on the other hand.; *; * The likelihood is the central unit on the statistics side. The RooAbsL class is implemented for four kinds of; * likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like; * global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute; * their components in parallelizable chunks that can be used by the calculator classes as they see fit.; *; * On top of the likelihood classes, we also provide for convenience a likelihood builder buildLikelihood, as a free; * function in the namespace. This function analyzes the pdf and automatically constructs the proper likelihood, built; * up from the available RooAbsL subclasses.; *; * The calculator ""Wrapper"" classes are abstract interfaces. These can be implemented for different kinds of algorithms,; * or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based; * multi-processing implementation based on RooFit::MultiProcess. Other possible implementations could use the GPU or; * external tools like TensorFlow.; *; * The coupling of all these classes to RooMinimizer is made via the MinuitFcnGrad class, which owns the Wrappers that; * calculate the likelihood components.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:1096,Integrability,Wrap,Wrapper,1096,"/**; * \brief Namespace for new RooFit test statistic calculation.; *; * RooFit::TestStatistics contains a major refactoring of the RooAbsTestStatistic-RooAbsOptTestStatistic-RooNLLVar; * inheritance tree into:; * 1. statistics-based classes on the one hand;; * 2. calculation/evaluation/optimization based classes on the other hand.; *; * The likelihood is the central unit on the statistics side. The RooAbsL class is implemented for four kinds of; * likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like; * global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute; * their components in parallelizable chunks that can be used by the calculator classes as they see fit.; *; * On top of the likelihood classes, we also provide for convenience a likelihood builder buildLikelihood, as a free; * function in the namespace. This function analyzes the pdf and automatically constructs the proper likelihood, built; * up from the available RooAbsL subclasses.; *; * The calculator ""Wrapper"" classes are abstract interfaces. These can be implemented for different kinds of algorithms,; * or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based; * multi-processing implementation based on RooFit::MultiProcess. Other possible implementations could use the GPU or; * external tools like TensorFlow.; *; * The coupling of all these classes to RooMinimizer is made via the MinuitFcnGrad class, which owns the Wrappers that; * calculate the likelihood components.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:1126,Integrability,interface,interfaces,1126,"/**; * \brief Namespace for new RooFit test statistic calculation.; *; * RooFit::TestStatistics contains a major refactoring of the RooAbsTestStatistic-RooAbsOptTestStatistic-RooNLLVar; * inheritance tree into:; * 1. statistics-based classes on the one hand;; * 2. calculation/evaluation/optimization based classes on the other hand.; *; * The likelihood is the central unit on the statistics side. The RooAbsL class is implemented for four kinds of; * likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like; * global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute; * their components in parallelizable chunks that can be used by the calculator classes as they see fit.; *; * On top of the likelihood classes, we also provide for convenience a likelihood builder buildLikelihood, as a free; * function in the namespace. This function analyzes the pdf and automatically constructs the proper likelihood, built; * up from the available RooAbsL subclasses.; *; * The calculator ""Wrapper"" classes are abstract interfaces. These can be implemented for different kinds of algorithms,; * or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based; * multi-processing implementation based on RooFit::MultiProcess. Other possible implementations could use the GPU or; * external tools like TensorFlow.; *; * The coupling of all these classes to RooMinimizer is made via the MinuitFcnGrad class, which owns the Wrappers that; * calculate the likelihood components.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:1575,Integrability,Wrap,Wrappers,1575,"/**; * \brief Namespace for new RooFit test statistic calculation.; *; * RooFit::TestStatistics contains a major refactoring of the RooAbsTestStatistic-RooAbsOptTestStatistic-RooNLLVar; * inheritance tree into:; * 1. statistics-based classes on the one hand;; * 2. calculation/evaluation/optimization based classes on the other hand.; *; * The likelihood is the central unit on the statistics side. The RooAbsL class is implemented for four kinds of; * likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like; * global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute; * their components in parallelizable chunks that can be used by the calculator classes as they see fit.; *; * On top of the likelihood classes, we also provide for convenience a likelihood builder buildLikelihood, as a free; * function in the namespace. This function analyzes the pdf and automatically constructs the proper likelihood, built; * up from the available RooAbsL subclasses.; *; * The calculator ""Wrapper"" classes are abstract interfaces. These can be implemented for different kinds of algorithms,; * or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based; * multi-processing implementation based on RooFit::MultiProcess. Other possible implementations could use the GPU or; * external tools like TensorFlow.; *; * The coupling of all these classes to RooMinimizer is made via the MinuitFcnGrad class, which owns the Wrappers that; * calculate the likelihood components.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:113,Modifiability,refactor,refactoring,113,"/**; * \brief Namespace for new RooFit test statistic calculation.; *; * RooFit::TestStatistics contains a major refactoring of the RooAbsTestStatistic-RooAbsOptTestStatistic-RooNLLVar; * inheritance tree into:; * 1. statistics-based classes on the one hand;; * 2. calculation/evaluation/optimization based classes on the other hand.; *; * The likelihood is the central unit on the statistics side. The RooAbsL class is implemented for four kinds of; * likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like; * global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute; * their components in parallelizable chunks that can be used by the calculator classes as they see fit.; *; * On top of the likelihood classes, we also provide for convenience a likelihood builder buildLikelihood, as a free; * function in the namespace. This function analyzes the pdf and automatically constructs the proper likelihood, built; * up from the available RooAbsL subclasses.; *; * The calculator ""Wrapper"" classes are abstract interfaces. These can be implemented for different kinds of algorithms,; * or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based; * multi-processing implementation based on RooFit::MultiProcess. Other possible implementations could use the GPU or; * external tools like TensorFlow.; *; * The coupling of all these classes to RooMinimizer is made via the MinuitFcnGrad class, which owns the Wrappers that; * calculate the likelihood components.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:188,Modifiability,inherit,inheritance,188,"/**; * \brief Namespace for new RooFit test statistic calculation.; *; * RooFit::TestStatistics contains a major refactoring of the RooAbsTestStatistic-RooAbsOptTestStatistic-RooNLLVar; * inheritance tree into:; * 1. statistics-based classes on the one hand;; * 2. calculation/evaluation/optimization based classes on the other hand.; *; * The likelihood is the central unit on the statistics side. The RooAbsL class is implemented for four kinds of; * likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like; * global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute; * their components in parallelizable chunks that can be used by the calculator classes as they see fit.; *; * On top of the likelihood classes, we also provide for convenience a likelihood builder buildLikelihood, as a free; * function in the namespace. This function analyzes the pdf and automatically constructs the proper likelihood, built; * up from the available RooAbsL subclasses.; *; * The calculator ""Wrapper"" classes are abstract interfaces. These can be implemented for different kinds of algorithms,; * or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based; * multi-processing implementation based on RooFit::MultiProcess. Other possible implementations could use the GPU or; * external tools like TensorFlow.; *; * The coupling of all these classes to RooMinimizer is made via the MinuitFcnGrad class, which owns the Wrappers that; * calculate the likelihood components.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:1477,Modifiability,coupling,coupling,1477,"/**; * \brief Namespace for new RooFit test statistic calculation.; *; * RooFit::TestStatistics contains a major refactoring of the RooAbsTestStatistic-RooAbsOptTestStatistic-RooNLLVar; * inheritance tree into:; * 1. statistics-based classes on the one hand;; * 2. calculation/evaluation/optimization based classes on the other hand.; *; * The likelihood is the central unit on the statistics side. The RooAbsL class is implemented for four kinds of; * likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like; * global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute; * their components in parallelizable chunks that can be used by the calculator classes as they see fit.; *; * On top of the likelihood classes, we also provide for convenience a likelihood builder buildLikelihood, as a free; * function in the namespace. This function analyzes the pdf and automatically constructs the proper likelihood, built; * up from the available RooAbsL subclasses.; *; * The calculator ""Wrapper"" classes are abstract interfaces. These can be implemented for different kinds of algorithms,; * or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based; * multi-processing implementation based on RooFit::MultiProcess. Other possible implementations could use the GPU or; * external tools like TensorFlow.; *; * The coupling of all these classes to RooMinimizer is made via the MinuitFcnGrad class, which owns the Wrappers that; * calculate the likelihood components.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:288,Performance,optimiz,optimization,288,"/**; * \brief Namespace for new RooFit test statistic calculation.; *; * RooFit::TestStatistics contains a major refactoring of the RooAbsTestStatistic-RooAbsOptTestStatistic-RooNLLVar; * inheritance tree into:; * 1. statistics-based classes on the one hand;; * 2. calculation/evaluation/optimization based classes on the other hand.; *; * The likelihood is the central unit on the statistics side. The RooAbsL class is implemented for four kinds of; * likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like; * global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute; * their components in parallelizable chunks that can be used by the calculator classes as they see fit.; *; * On top of the likelihood classes, we also provide for convenience a likelihood builder buildLikelihood, as a free; * function in the namespace. This function analyzes the pdf and automatically constructs the proper likelihood, built; * up from the available RooAbsL subclasses.; *; * The calculator ""Wrapper"" classes are abstract interfaces. These can be implemented for different kinds of algorithms,; * or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based; * multi-processing implementation based on RooFit::MultiProcess. Other possible implementations could use the GPU or; * external tools like TensorFlow.; *; * The coupling of all these classes to RooMinimizer is made via the MinuitFcnGrad class, which owns the Wrappers that; * calculate the likelihood components.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:501,Performance,optimiz,optimization,501,"/**; * \brief Namespace for new RooFit test statistic calculation.; *; * RooFit::TestStatistics contains a major refactoring of the RooAbsTestStatistic-RooAbsOptTestStatistic-RooNLLVar; * inheritance tree into:; * 1. statistics-based classes on the one hand;; * 2. calculation/evaluation/optimization based classes on the other hand.; *; * The likelihood is the central unit on the statistics side. The RooAbsL class is implemented for four kinds of; * likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like; * global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute; * their components in parallelizable chunks that can be used by the calculator classes as they see fit.; *; * On top of the likelihood classes, we also provide for convenience a likelihood builder buildLikelihood, as a free; * function in the namespace. This function analyzes the pdf and automatically constructs the proper likelihood, built; * up from the available RooAbsL subclasses.; *; * The calculator ""Wrapper"" classes are abstract interfaces. These can be implemented for different kinds of algorithms,; * or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based; * multi-processing implementation based on RooFit::MultiProcess. Other possible implementations could use the GPU or; * external tools like TensorFlow.; *; * The coupling of all these classes to RooMinimizer is made via the MinuitFcnGrad class, which owns the Wrappers that; * calculate the likelihood components.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:1228,Performance,optimiz,optimization,1228,"/**; * \brief Namespace for new RooFit test statistic calculation.; *; * RooFit::TestStatistics contains a major refactoring of the RooAbsTestStatistic-RooAbsOptTestStatistic-RooNLLVar; * inheritance tree into:; * 1. statistics-based classes on the one hand;; * 2. calculation/evaluation/optimization based classes on the other hand.; *; * The likelihood is the central unit on the statistics side. The RooAbsL class is implemented for four kinds of; * likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like; * global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute; * their components in parallelizable chunks that can be used by the calculator classes as they see fit.; *; * On top of the likelihood classes, we also provide for convenience a likelihood builder buildLikelihood, as a free; * function in the namespace. This function analyzes the pdf and automatically constructs the proper likelihood, built; * up from the available RooAbsL subclasses.; *; * The calculator ""Wrapper"" classes are abstract interfaces. These can be implemented for different kinds of algorithms,; * or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based; * multi-processing implementation based on RooFit::MultiProcess. Other possible implementations could use the GPU or; * external tools like TensorFlow.; *; * The coupling of all these classes to RooMinimizer is made via the MinuitFcnGrad class, which owns the Wrappers that; * calculate the likelihood components.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:39,Testability,test,test,39,"/**; * \brief Namespace for new RooFit test statistic calculation.; *; * RooFit::TestStatistics contains a major refactoring of the RooAbsTestStatistic-RooAbsOptTestStatistic-RooNLLVar; * inheritance tree into:; * 1. statistics-based classes on the one hand;; * 2. calculation/evaluation/optimization based classes on the other hand.; *; * The likelihood is the central unit on the statistics side. The RooAbsL class is implemented for four kinds of; * likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like; * global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute; * their components in parallelizable chunks that can be used by the calculator classes as they see fit.; *; * On top of the likelihood classes, we also provide for convenience a likelihood builder buildLikelihood, as a free; * function in the namespace. This function analyzes the pdf and automatically constructs the proper likelihood, built; * up from the available RooAbsL subclasses.; *; * The calculator ""Wrapper"" classes are abstract interfaces. These can be implemented for different kinds of algorithms,; * or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based; * multi-processing implementation based on RooFit::MultiProcess. Other possible implementations could use the GPU or; * external tools like TensorFlow.; *; * The coupling of all these classes to RooMinimizer is made via the MinuitFcnGrad class, which owns the Wrappers that; * calculate the likelihood components.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:81,Testability,Test,TestStatistics,81,"/**; * \brief Namespace for new RooFit test statistic calculation.; *; * RooFit::TestStatistics contains a major refactoring of the RooAbsTestStatistic-RooAbsOptTestStatistic-RooNLLVar; * inheritance tree into:; * 1. statistics-based classes on the one hand;; * 2. calculation/evaluation/optimization based classes on the other hand.; *; * The likelihood is the central unit on the statistics side. The RooAbsL class is implemented for four kinds of; * likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like; * global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute; * their components in parallelizable chunks that can be used by the calculator classes as they see fit.; *; * On top of the likelihood classes, we also provide for convenience a likelihood builder buildLikelihood, as a free; * function in the namespace. This function analyzes the pdf and automatically constructs the proper likelihood, built; * up from the available RooAbsL subclasses.; *; * The calculator ""Wrapper"" classes are abstract interfaces. These can be implemented for different kinds of algorithms,; * or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based; * multi-processing implementation based on RooFit::MultiProcess. Other possible implementations could use the GPU or; * external tools like TensorFlow.; *; * The coupling of all these classes to RooMinimizer is made via the MinuitFcnGrad class, which owns the Wrappers that; * calculate the likelihood components.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:253,Integrability,depend,dependent,253,"/*; * \brief Extract a collection of subsidiary likelihoods from a pdf; *; * \param[in] pdf Raw pointer to the pdf; * \param[in] data Raw pointer to the dataset; * \param[in] constrained_parameters Set of parameters that are constrained. Pdf components dependent on these alone are; * added to the subsidiary likelihood.; * \param[in] external_constraints Set of external constraint pdfs, i.e. constraints; * not necessarily in the pdf itself. These are always added to the subsidiary likelihood.; * \param[in] global_observables; * Observables that have a constant value, independent of the dataset events. Pdf components dependent on these alone; * are added to the subsidiary likelihood. \note Overrides all other likelihood parameters (like those in \p; * constrained_parameters) if present.; * \param[in] global_observables_tag String that can be set as attribute in pdf; * components to indicate that it is a global observable. Can be used instead of or in addition to \p; * global_observables.; * \return A unique pointer to a RooSubsidiaryL that contains all terms in the pdf that can be; * calculated separately from the other components in the full likelihood.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:623,Integrability,depend,dependent,623,"/*; * \brief Extract a collection of subsidiary likelihoods from a pdf; *; * \param[in] pdf Raw pointer to the pdf; * \param[in] data Raw pointer to the dataset; * \param[in] constrained_parameters Set of parameters that are constrained. Pdf components dependent on these alone are; * added to the subsidiary likelihood.; * \param[in] external_constraints Set of external constraint pdfs, i.e. constraints; * not necessarily in the pdf itself. These are always added to the subsidiary likelihood.; * \param[in] global_observables; * Observables that have a constant value, independent of the dataset events. Pdf components dependent on these alone; * are added to the subsidiary likelihood. \note Overrides all other likelihood parameters (like those in \p; * constrained_parameters) if present.; * \param[in] global_observables_tag String that can be set as attribute in pdf; * components to indicate that it is a global observable. Can be used instead of or in addition to \p; * global_observables.; * \return A unique pointer to a RooSubsidiaryL that contains all terms in the pdf that can be; * calculated separately from the other components in the full likelihood.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:3,Usability,Simpl,Simplest,3,"// Simplest case: top-level of pdf is a RRSP",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:35,Energy Efficiency,adapt,adaptation,35,"// the rest of this function is an adaptation of RooAbsTestStatistic::initSimMode:",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:35,Modifiability,adapt,adaptation,35,"// the rest of this function is an adaptation of RooAbsTestStatistic::initSimMode:",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:67,Testability,test,test,67,"// note: this is valid for simultaneous likelihoods, not for other test statistic types (e.g. chi2) for which this; // should return true.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:3,Energy Efficiency,Allocate,Allocate,3,"// Allocate arrays",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:145,Energy Efficiency,reduce,reduces,145,"// Below here directly pass binnedPdf instead of PROD(binnedPdf,constraints) as constraints are evaluated; // elsewhere anyway and omitting them reduces model complexity and associated handling/cloning times",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:212,Availability,avail,available,212,"/*; * \brief Build a likelihood from a pdf + dataset, optionally with a subsidiary likelihood component.; *; * This function analyzes the pdf and automatically constructs the proper likelihood, built up from the available; * RooAbsL subclasses. In essence, this can give 8 conceptually different combinations, based on three questions:; * 1. Is it a simultaneous pdf?; * 2. Is the pdf binned?; * 3. Does the pdf have subsidiary terms?; * If questions 1 and 3 are answered negatively, this function will either return a RooBinnedL or RooUnbinnedL. In all; * other cases it returns a RooSumL, which will contain RooBinnedL and/or RooUnbinnedL component(s) and possibly a; * RooSubsidiaryL component with constraint terms.; *; * \return A unique pointer to a RooSubsidiaryL that contains all terms in; * the pdf that can be calculated separately from the other components in the full likelihood.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:15,Modifiability,extend,extended,15,"/// \param[in] extended Set extended term calculation on, off or use; /// RooAbsL::Extended::Auto to determine automatically based on the; /// pdf whether to activate or not.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:28,Modifiability,extend,extended,28,"/// \param[in] extended Set extended term calculation on, off or use; /// RooAbsL::Extended::Auto to determine automatically based on the; /// pdf whether to activate or not.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:83,Modifiability,Extend,Extended,83,"/// \param[in] extended Set extended term calculation on, off or use; /// RooAbsL::Extended::Auto to determine automatically based on the; /// pdf whether to activate or not.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:97,Integrability,depend,dependent,97,"/// \param[in] constrainedParameters Set of parameters that are constrained.; /// Pdf components dependent on these alone are added to the; /// subsidiary likelihood.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:128,Integrability,depend,dependent,128,"/// \param[in] globalObservables Observables that have a constant value,; /// independent of the dataset events. Pdf components dependent on; /// these alone are added to the subsidiary likelihood.; /// \note Overrides all other likelihood parameters (like those in; /// NLLFactory::ConstrainedParameters()) if present.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:118,Performance,cache,caches,118,"/** \class ConstantTermsOptimizer; *; * \brief Analyzes a function given a dataset/observables for constant terms and caches those in the dataset; *; * This optimizer should be used on a consistent combination of function (usually a pdf) and a dataset with observables.; * It then analyzes the function to find parts that can be precalculated because they are constant given the set of; * observables. These are cached inside the dataset and used in subsequent evaluations of the function on that dataset.; * The typical use case for this is inside likelihood minimization where many calls of the same pdf/dataset combination; * are made. \p norm_set must provide the normalization set of the function, which would typically be the set of; * observables in the dataset; this is used to make sure all object caches are created before analysis by evaluating the; * function on this set at the beginning of enableConstantTermsOptimization.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:157,Performance,optimiz,optimizer,157,"/** \class ConstantTermsOptimizer; *; * \brief Analyzes a function given a dataset/observables for constant terms and caches those in the dataset; *; * This optimizer should be used on a consistent combination of function (usually a pdf) and a dataset with observables.; * It then analyzes the function to find parts that can be precalculated because they are constant given the set of; * observables. These are cached inside the dataset and used in subsequent evaluations of the function on that dataset.; * The typical use case for this is inside likelihood minimization where many calls of the same pdf/dataset combination; * are made. \p norm_set must provide the normalization set of the function, which would typically be the set of; * observables in the dataset; this is used to make sure all object caches are created before analysis by evaluating the; * function on this set at the beginning of enableConstantTermsOptimization.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:412,Performance,cache,cached,412,"/** \class ConstantTermsOptimizer; *; * \brief Analyzes a function given a dataset/observables for constant terms and caches those in the dataset; *; * This optimizer should be used on a consistent combination of function (usually a pdf) and a dataset with observables.; * It then analyzes the function to find parts that can be precalculated because they are constant given the set of; * observables. These are cached inside the dataset and used in subsequent evaluations of the function on that dataset.; * The typical use case for this is inside likelihood minimization where many calls of the same pdf/dataset combination; * are made. \p norm_set must provide the normalization set of the function, which would typically be the set of; * observables in the dataset; this is used to make sure all object caches are created before analysis by evaluating the; * function on this set at the beginning of enableConstantTermsOptimization.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:807,Performance,cache,caches,807,"/** \class ConstantTermsOptimizer; *; * \brief Analyzes a function given a dataset/observables for constant terms and caches those in the dataset; *; * This optimizer should be used on a consistent combination of function (usually a pdf) and a dataset with observables.; * It then analyzes the function to find parts that can be precalculated because they are constant given the set of; * observables. These are cached inside the dataset and used in subsequent evaluations of the function on that dataset.; * The typical use case for this is inside likelihood minimization where many calls of the same pdf/dataset combination; * are made. \p norm_set must provide the normalization set of the function, which would typically be the set of; * observables in the dataset; this is used to make sure all object caches are created before analysis by evaluating the; * function on this set at the beginning of enableConstantTermsOptimization.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:32,Performance,cache,caches,32,"// Trigger create of all object caches now in nodes that have deferred object creation; // so that cache contents can be processed immediately",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:99,Performance,cache,cache,99,"// Trigger create of all object caches now in nodes that have deferred object creation; // so that cache contents can be processed immediately",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:18,Performance,optimiz,optimization,18,"// Apply tracking optimization here. Default strategy is to track components; // of RooAddPdfs and RooRealSumPdfs. If these components are a RooProdPdf; // or a RooProduct respectively, track the components of these products instead; // of the product term",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:7,Safety,safe,safety,7,"// Add safety check here - applyTrackingOpt will only be applied if present; // dataset is constructed in terms of a RooVectorDataStore",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:14,Performance,Cache,CacheAndTrack,14,"// Do not set CacheAndTrack on constant expressions",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:7,Performance,Cache,CacheAndTrack,7,"// Set CacheAndTrack flag on all remaining nodes",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:23,Integrability,depend,depend,23,"// Find all nodes that depend exclusively on constant parameters",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:3,Performance,Cache,Cache,3,"// Cache constant nodes with dataset - also cache entries corresponding to zero-weights in data when using; // BinnedLikelihood; // NOTE: we pass nullptr as cache-owner here, because we don't use the cacheOwner() anywhere in TestStatistics; // TODO: make sure this (nullptr) is always correct",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:44,Performance,cache,cache,44,"// Cache constant nodes with dataset - also cache entries corresponding to zero-weights in data when using; // BinnedLikelihood; // NOTE: we pass nullptr as cache-owner here, because we don't use the cacheOwner() anywhere in TestStatistics; // TODO: make sure this (nullptr) is always correct",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:157,Performance,cache,cache-owner,157,"// Cache constant nodes with dataset - also cache entries corresponding to zero-weights in data when using; // BinnedLikelihood; // NOTE: we pass nullptr as cache-owner here, because we don't use the cacheOwner() anywhere in TestStatistics; // TODO: make sure this (nullptr) is always correct",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:200,Performance,cache,cacheOwner,200,"// Cache constant nodes with dataset - also cache entries corresponding to zero-weights in data when using; // BinnedLikelihood; // NOTE: we pass nullptr as cache-owner here, because we don't use the cacheOwner() anywhere in TestStatistics; // TODO: make sure this (nullptr) is always correct",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:225,Testability,Test,TestStatistics,225,"// Cache constant nodes with dataset - also cache entries corresponding to zero-weights in data when using; // BinnedLikelihood; // NOTE: we pass nullptr as cache-owner here, because we don't use the cacheOwner() anywhere in TestStatistics; // TODO: make sure this (nullptr) is always correct",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:11,Performance,cache,cached,11,"// Put all cached nodes in AClean value caching mode so that their evaluate() is never called",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:14,Performance,cache,cache,14,"// Delete the cache",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:32,Performance,cache,caches,32,"// Trigger create of all object caches now in nodes that have deferred object creation; // so that cache contents can be processed immediately",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:99,Performance,cache,cache,99,"// Trigger create of all object caches now in nodes that have deferred object creation; // so that cache contents can be processed immediately",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:45,Integrability,depend,depend,45,"// Set value caching mode for all nodes that depend on any of the observables to ADirty",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.h:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/ConstantTermsOptimizer.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:3,Integrability,SYNCHRONIZ,SYNCHRONIZATION,3,"// SYNCHRONIZATION FROM WORKERS TO MASTER",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:7,Integrability,SYNCHRONIZ,SYNCHRONIZATION,7,"// END SYNCHRONIZATION FROM WORKERS TO MASTER; // SYNCHRONIZATION FROM MASTER TO WORKERS (STATE)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:50,Integrability,SYNCHRONIZ,SYNCHRONIZATION,50,"// END SYNCHRONIZATION FROM WORKERS TO MASTER; // SYNCHRONIZATION FROM MASTER TO WORKERS (STATE)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:8,Performance,optimiz,optimization,8,"// TODO optimization: only send changed parameters (now sending all)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:54,Deployability,update,update,54,"// note: the next call must stay after the (possible) update of the offset, because it; // calls the likelihood function, so the offset must be correct at this point",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:7,Integrability,SYNCHRONIZ,SYNCHRONIZATION,7,"// END SYNCHRONIZATION FROM MASTER TO WORKERS (STATE); ///////////////////////////////////////////////////////////////////////////////; /// Calculation stuff (mostly duplicates of RooGradMinimizerFcn code):",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:16,Performance,queue,queue,16,"// master fills queue with tasks",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.h:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientJob.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:161,Integrability,interface,interface,161,"/** \class LikelihoodGradientWrapper; * \brief Virtual base class for implementation of likelihood gradient calculation strategies; *; * This class provides the interface necessary for RooMinimizer (through MinuitFcnGrad) to get the likelihood gradient; * values it needs for fitting the pdf to the data. The strategy by which these values are obtained is up to the; * implementer of this class. Its intended purpose was mainly to allow for parallel calculation strategies.; *; * \note The class is not intended for use by end-users. We recommend to either use RooMinimizer with a RooAbsL derived; * likelihood object, or to use a higher level entry point like RooAbsPdf::fitTo() or RooAbsPdf::createNLL().; */; /*; * \param[in] likelihood Shared pointer to the likelihood that must be evaluated; * \param[in] calculation_is_clean Shared pointer to the object that keeps track of what has been evaluated for the; * current parameter set provided by Minuit. This information can be used by different calculators, so must be shared; * between them. \param[in] minimizer Raw pointer to the minimizer that owns the MinuitFcnGrad object that owns this; * wrapper object.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:1150,Integrability,wrap,wrapper,1150,"/** \class LikelihoodGradientWrapper; * \brief Virtual base class for implementation of likelihood gradient calculation strategies; *; * This class provides the interface necessary for RooMinimizer (through MinuitFcnGrad) to get the likelihood gradient; * values it needs for fitting the pdf to the data. The strategy by which these values are obtained is up to the; * implementer of this class. Its intended purpose was mainly to allow for parallel calculation strategies.; *; * \note The class is not intended for use by end-users. We recommend to either use RooMinimizer with a RooAbsL derived; * likelihood object, or to use a higher level entry point like RooAbsPdf::fitTo() or RooAbsPdf::createNLL().; */; /*; * \param[in] likelihood Shared pointer to the likelihood that must be evaluated; * \param[in] calculation_is_clean Shared pointer to the object that keeps track of what has been evaluated for the; * current parameter set provided by Minuit. This information can be used by different calculators, so must be shared; * between them. \param[in] minimizer Raw pointer to the minimizer that owns the MinuitFcnGrad object that owns this; * wrapper object.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx:283,Modifiability,variab,variables,283,"// This is a separate function (instead of just in ctor) for historical reasons.; // Its predecessor RooRealMPFE::initVars() was used from multiple ctors, but also; // from RooRealMPFE::constOptimizeTestStatistic at the end, which makes sense,; // because it might change the set of variables. We may at some point want to do; // this here as well.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx:238,Integrability,message,message,238,"// TODO: Check with Wouter why he uses copyCache in MPFE; makes it very difficult to extend, because; // copyCache is protected (so must be friend). Moved setting value to if-block below.; // _saveVars[ix].copyCache(&_vars[ix]);; // send message to queue (which will relay to workers)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx:85,Modifiability,extend,extend,85,"// TODO: Check with Wouter why he uses copyCache in MPFE; makes it very difficult to extend, because; // copyCache is protected (so must be friend). Moved setting value to if-block below.; // _saveVars[ix].copyCache(&_vars[ix]);; // send message to queue (which will relay to workers)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx:249,Performance,queue,queue,249,"// TODO: Check with Wouter why he uses copyCache in MPFE; makes it very difficult to extend, because; // copyCache is protected (so must be friend). Moved setting value to if-block below.; // _saveVars[ix].copyCache(&_vars[ix]);; // send message to queue (which will relay to workers)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx:60,Integrability,rout,route,60,"// always send Job id first! This is used in worker_loop to route the; // update_state call to the correct Job.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx:3,Deployability,update,update,3,"// update parameters that changed since last calculation (or creation if first time)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx:16,Performance,queue,queue,16,"// master fills queue with tasks",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx:14,Testability,LOG,LOGISTICS,14,"// --- RESULT LOGISTICS ---",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx:9,Availability,error,error,9,"// Clear error list on local side",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx:3,Usability,Clear,Clear,3,"// Clear error list on local side",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx:21,Testability,LOG,LOGISTICS,21,"// --- END OF RESULT LOGISTICS ---",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.h:14,Testability,LOG,LOGISTICS,14,"// --- RESULT LOGISTICS ---",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodJob.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.h:54,Integrability,message,message,54,"// job ID must always be the first part of any result message/type",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodJob.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.h:3,Modifiability,Variab,Variables,3,"// Variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodJob.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.h:11,Modifiability,variab,variables,11,"// Copy of variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodJob.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.h:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodJob.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodSerial.cxx:278,Testability,Test,TestStatistics,278,"/** \class LikelihoodSerial; * \brief Serial likelihood calculation strategy implementation; *; * This class serves as a baseline reference implementation of the LikelihoodWrapper. It reimplements the previous; * RooNLLVar ""BulkPartition"" single CPU strategy in the new RooFit::TestStatistics framework.; *; * \note The class is not intended for use by end-users. We recommend to either use RooMinimizer with a RooAbsL derived; * likelihood object, or to use a higher level entry point like RooAbsPdf::fitTo() or RooAbsPdf::createNLL().; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodSerial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodSerial.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodSerial.cxx:341,Modifiability,variab,variables,341,"/// \brief Helper function for the constructor.; ///; /// This is a separate function (instead of just in ctor) for historical reasons.; /// Its predecessor RooRealMPFE::initVars() was used from multiple ctors, but also; /// from RooRealMPFE::constOptimizeTestStatistic at the end, which makes sense,; /// because it might change the set of variables. We may at some point want to do; /// this here as well.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodSerial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodSerial.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodSerial.cxx:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodSerial.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodSerial.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodSerial.h:5,Modifiability,Variab,Variables,5,"///< Variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodSerial.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodSerial.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodSerial.h:13,Modifiability,variab,variables,13,"///< Copy of variables",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodSerial.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodSerial.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodSerial.h:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodSerial.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodSerial.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodWrapper.cxx:144,Integrability,interface,interface,144,"/** \class LikelihoodWrapper; * \brief Virtual base class for implementation of likelihood calculation strategies; *; * This class provides the interface necessary for RooMinimizer (through MinuitFcnGrad) to get the likelihood values it; * needs for fitting the pdf to the data. The strategy by which these values are obtained is up to the implementer of; * this class. Its intended purpose was mainly to allow for parallel calculation strategies, but serial strategies are; * possible too, as illustrated in LikelihoodSerial.; *; * \note The class is not intended for use by end-users. We recommend to either use RooMinimizer with a RooAbsL derived; * likelihood object, or to use a higher level entry point like RooAbsPdf::fitTo() or RooAbsPdf::createNLL().; */; /*; * \param[in] likelihood Shared pointer to the likelihood that must be evaluated; * \param[in] calculation_is_clean Shared pointer to the object that keeps track of what has been evaluated for the; * current parameter set provided by Minuit. This information can be used by different calculators, so must be shared; * between them.; */",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodWrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodWrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodWrapper.cxx:3,Usability,Clear,Clear,3,"// Clear offsets if feature is disabled so that it is recalculated next time it is enabled",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodWrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodWrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodWrapper.cxx:81,Energy Efficiency,reduce,reduce,81,"// Note: we leave out here the check for whether the calculated value is zero to reduce complexity, which; // RooNLLVar does do at this (equivalent) point. Instead, we check whether the offset is zero when; // subtracting it in evaluations.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodWrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodWrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodWrapper.cxx:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/LikelihoodWrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodWrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:72,Integrability,interface,interface,72,"// namespace; /** \class MinuitFcnGrad; *; * \brief Minuit-RooMinimizer interface which synchronizes parameter data and coordinates evaluation of likelihood; * (gradient) values; *; * This class provides an interface between RooFit and Minuit. It synchronizes parameter values from Minuit, calls; * calculator classes to evaluate likelihood and likelihood gradient values and returns them to Minuit. The Wrapper; * objects do the actual calculations. These are constructed inside the MinuitFcnGrad constructor using the RooAbsL; * likelihood passed in to the constructor, usually directly from RooMinimizer, with which this class is intimately; * coupled, being a RooAbsMinimizerFcn implementation. MinuitFcnGrad inherits from ROOT::Math::IMultiGradFunction as; * well, which allows it to be used as the FCN and GRAD parameters Minuit expects.; *; * \note The class is not intended for use by end-users. We recommend to either use RooMinimizer with a RooAbsL derived; * likelihood object, or to use a higher level entry point like RooAbsPdf::fitTo() or RooAbsPdf::createNLL().; */; /// \param[in] absL The input likelihood.; /// \param[in] context RooMinimizer that creates and owns this class.; /// \param[in] parameters The vector of ParameterSettings objects that describe the parameters used in the Minuit; /// \param[in] likelihoodMode Lmode; /// \param[in] likelihoodGradientMode Lgrad; /// \param[in] verbose true for verbose output; /// Fitter. Note that these must match the set used in the Fitter used by \p context! It can be passed in from; /// RooMinimizer with fitter()->Config().ParamsSettings().",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:88,Integrability,synchroniz,synchronizes,88,"// namespace; /** \class MinuitFcnGrad; *; * \brief Minuit-RooMinimizer interface which synchronizes parameter data and coordinates evaluation of likelihood; * (gradient) values; *; * This class provides an interface between RooFit and Minuit. It synchronizes parameter values from Minuit, calls; * calculator classes to evaluate likelihood and likelihood gradient values and returns them to Minuit. The Wrapper; * objects do the actual calculations. These are constructed inside the MinuitFcnGrad constructor using the RooAbsL; * likelihood passed in to the constructor, usually directly from RooMinimizer, with which this class is intimately; * coupled, being a RooAbsMinimizerFcn implementation. MinuitFcnGrad inherits from ROOT::Math::IMultiGradFunction as; * well, which allows it to be used as the FCN and GRAD parameters Minuit expects.; *; * \note The class is not intended for use by end-users. We recommend to either use RooMinimizer with a RooAbsL derived; * likelihood object, or to use a higher level entry point like RooAbsPdf::fitTo() or RooAbsPdf::createNLL().; */; /// \param[in] absL The input likelihood.; /// \param[in] context RooMinimizer that creates and owns this class.; /// \param[in] parameters The vector of ParameterSettings objects that describe the parameters used in the Minuit; /// \param[in] likelihoodMode Lmode; /// \param[in] likelihoodGradientMode Lgrad; /// \param[in] verbose true for verbose output; /// Fitter. Note that these must match the set used in the Fitter used by \p context! It can be passed in from; /// RooMinimizer with fitter()->Config().ParamsSettings().",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:207,Integrability,interface,interface,207,"// namespace; /** \class MinuitFcnGrad; *; * \brief Minuit-RooMinimizer interface which synchronizes parameter data and coordinates evaluation of likelihood; * (gradient) values; *; * This class provides an interface between RooFit and Minuit. It synchronizes parameter values from Minuit, calls; * calculator classes to evaluate likelihood and likelihood gradient values and returns them to Minuit. The Wrapper; * objects do the actual calculations. These are constructed inside the MinuitFcnGrad constructor using the RooAbsL; * likelihood passed in to the constructor, usually directly from RooMinimizer, with which this class is intimately; * coupled, being a RooAbsMinimizerFcn implementation. MinuitFcnGrad inherits from ROOT::Math::IMultiGradFunction as; * well, which allows it to be used as the FCN and GRAD parameters Minuit expects.; *; * \note The class is not intended for use by end-users. We recommend to either use RooMinimizer with a RooAbsL derived; * likelihood object, or to use a higher level entry point like RooAbsPdf::fitTo() or RooAbsPdf::createNLL().; */; /// \param[in] absL The input likelihood.; /// \param[in] context RooMinimizer that creates and owns this class.; /// \param[in] parameters The vector of ParameterSettings objects that describe the parameters used in the Minuit; /// \param[in] likelihoodMode Lmode; /// \param[in] likelihoodGradientMode Lgrad; /// \param[in] verbose true for verbose output; /// Fitter. Note that these must match the set used in the Fitter used by \p context! It can be passed in from; /// RooMinimizer with fitter()->Config().ParamsSettings().",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:247,Integrability,synchroniz,synchronizes,247,"// namespace; /** \class MinuitFcnGrad; *; * \brief Minuit-RooMinimizer interface which synchronizes parameter data and coordinates evaluation of likelihood; * (gradient) values; *; * This class provides an interface between RooFit and Minuit. It synchronizes parameter values from Minuit, calls; * calculator classes to evaluate likelihood and likelihood gradient values and returns them to Minuit. The Wrapper; * objects do the actual calculations. These are constructed inside the MinuitFcnGrad constructor using the RooAbsL; * likelihood passed in to the constructor, usually directly from RooMinimizer, with which this class is intimately; * coupled, being a RooAbsMinimizerFcn implementation. MinuitFcnGrad inherits from ROOT::Math::IMultiGradFunction as; * well, which allows it to be used as the FCN and GRAD parameters Minuit expects.; *; * \note The class is not intended for use by end-users. We recommend to either use RooMinimizer with a RooAbsL derived; * likelihood object, or to use a higher level entry point like RooAbsPdf::fitTo() or RooAbsPdf::createNLL().; */; /// \param[in] absL The input likelihood.; /// \param[in] context RooMinimizer that creates and owns this class.; /// \param[in] parameters The vector of ParameterSettings objects that describe the parameters used in the Minuit; /// \param[in] likelihoodMode Lmode; /// \param[in] likelihoodGradientMode Lgrad; /// \param[in] verbose true for verbose output; /// Fitter. Note that these must match the set used in the Fitter used by \p context! It can be passed in from; /// RooMinimizer with fitter()->Config().ParamsSettings().",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:404,Integrability,Wrap,Wrapper,404,"// namespace; /** \class MinuitFcnGrad; *; * \brief Minuit-RooMinimizer interface which synchronizes parameter data and coordinates evaluation of likelihood; * (gradient) values; *; * This class provides an interface between RooFit and Minuit. It synchronizes parameter values from Minuit, calls; * calculator classes to evaluate likelihood and likelihood gradient values and returns them to Minuit. The Wrapper; * objects do the actual calculations. These are constructed inside the MinuitFcnGrad constructor using the RooAbsL; * likelihood passed in to the constructor, usually directly from RooMinimizer, with which this class is intimately; * coupled, being a RooAbsMinimizerFcn implementation. MinuitFcnGrad inherits from ROOT::Math::IMultiGradFunction as; * well, which allows it to be used as the FCN and GRAD parameters Minuit expects.; *; * \note The class is not intended for use by end-users. We recommend to either use RooMinimizer with a RooAbsL derived; * likelihood object, or to use a higher level entry point like RooAbsPdf::fitTo() or RooAbsPdf::createNLL().; */; /// \param[in] absL The input likelihood.; /// \param[in] context RooMinimizer that creates and owns this class.; /// \param[in] parameters The vector of ParameterSettings objects that describe the parameters used in the Minuit; /// \param[in] likelihoodMode Lmode; /// \param[in] likelihoodGradientMode Lgrad; /// \param[in] verbose true for verbose output; /// Fitter. Note that these must match the set used in the Fitter used by \p context! It can be passed in from; /// RooMinimizer with fitter()->Config().ParamsSettings().",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:713,Modifiability,inherit,inherits,713,"// namespace; /** \class MinuitFcnGrad; *; * \brief Minuit-RooMinimizer interface which synchronizes parameter data and coordinates evaluation of likelihood; * (gradient) values; *; * This class provides an interface between RooFit and Minuit. It synchronizes parameter values from Minuit, calls; * calculator classes to evaluate likelihood and likelihood gradient values and returns them to Minuit. The Wrapper; * objects do the actual calculations. These are constructed inside the MinuitFcnGrad constructor using the RooAbsL; * likelihood passed in to the constructor, usually directly from RooMinimizer, with which this class is intimately; * coupled, being a RooAbsMinimizerFcn implementation. MinuitFcnGrad inherits from ROOT::Math::IMultiGradFunction as; * well, which allows it to be used as the FCN and GRAD parameters Minuit expects.; *; * \note The class is not intended for use by end-users. We recommend to either use RooMinimizer with a RooAbsL derived; * likelihood object, or to use a higher level entry point like RooAbsPdf::fitTo() or RooAbsPdf::createNLL().; */; /// \param[in] absL The input likelihood.; /// \param[in] context RooMinimizer that creates and owns this class.; /// \param[in] parameters The vector of ParameterSettings objects that describe the parameters used in the Minuit; /// \param[in] likelihoodMode Lmode; /// \param[in] likelihoodGradientMode Lgrad; /// \param[in] verbose true for verbose output; /// Fitter. Note that these must match the set used in the Fitter used by \p context! It can be passed in from; /// RooMinimizer with fitter()->Config().ParamsSettings().",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:1585,Modifiability,Config,Config,1585,"// namespace; /** \class MinuitFcnGrad; *; * \brief Minuit-RooMinimizer interface which synchronizes parameter data and coordinates evaluation of likelihood; * (gradient) values; *; * This class provides an interface between RooFit and Minuit. It synchronizes parameter values from Minuit, calls; * calculator classes to evaluate likelihood and likelihood gradient values and returns them to Minuit. The Wrapper; * objects do the actual calculations. These are constructed inside the MinuitFcnGrad constructor using the RooAbsL; * likelihood passed in to the constructor, usually directly from RooMinimizer, with which this class is intimately; * coupled, being a RooAbsMinimizerFcn implementation. MinuitFcnGrad inherits from ROOT::Math::IMultiGradFunction as; * well, which allows it to be used as the FCN and GRAD parameters Minuit expects.; *; * \note The class is not intended for use by end-users. We recommend to either use RooMinimizer with a RooAbsL derived; * likelihood object, or to use a higher level entry point like RooAbsPdf::fitTo() or RooAbsPdf::createNLL().; */; /// \param[in] absL The input likelihood.; /// \param[in] context RooMinimizer that creates and owns this class.; /// \param[in] parameters The vector of ParameterSettings objects that describe the parameters used in the Minuit; /// \param[in] likelihoodMode Lmode; /// \param[in] likelihoodGradientMode Lgrad; /// \param[in] verbose true for verbose output; /// Fitter. Note that these must match the set used in the Fitter used by \p context! It can be passed in from; /// RooMinimizer with fitter()->Config().ParamsSettings().",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:77,Deployability,update,updated,77,"/// Make sure the offsets are up to date; ///; /// If the offsets need to be updated, this function triggers a likelihood evaluation.; /// The likelihood will make sure the offset is set correctly in their shared_ptr; /// offsets object, that is also shared with possible other LikelihoodWrapper members; /// of MinuitFcnGrad and also the LikelihoodGradientWrapper member. Other necessary; /// synchronization steps are also performed from the Wrapper child classes (e.g.; /// sending the values to workers from MultiProcess::Jobs).",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:394,Integrability,synchroniz,synchronization,394,"/// Make sure the offsets are up to date; ///; /// If the offsets need to be updated, this function triggers a likelihood evaluation.; /// The likelihood will make sure the offset is set correctly in their shared_ptr; /// offsets object, that is also shared with possible other LikelihoodWrapper members; /// of MinuitFcnGrad and also the LikelihoodGradientWrapper member. Other necessary; /// synchronization steps are also performed from the Wrapper child classes (e.g.; /// sending the values to workers from MultiProcess::Jobs).",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:444,Integrability,Wrap,Wrapper,444,"/// Make sure the offsets are up to date; ///; /// If the offsets need to be updated, this function triggers a likelihood evaluation.; /// The likelihood will make sure the offset is set correctly in their shared_ptr; /// offsets object, that is also shared with possible other LikelihoodWrapper members; /// of MinuitFcnGrad and also the LikelihoodGradientWrapper member. Other necessary; /// synchronization steps are also performed from the Wrapper child classes (e.g.; /// sending the values to workers from MultiProcess::Jobs).",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:425,Performance,perform,performed,425,"/// Make sure the offsets are up to date; ///; /// If the offsets need to be updated, this function triggers a likelihood evaluation.; /// The likelihood will make sure the offset is set correctly in their shared_ptr; /// offsets object, that is also shared with possible other LikelihoodWrapper members; /// of MinuitFcnGrad and also the LikelihoodGradientWrapper member. Other necessary; /// synchronization steps are also performed from the Wrapper child classes (e.g.; /// sending the values to workers from MultiProcess::Jobs).",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:12,Testability,log,logging,12,"// Optional logging",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:2558,Deployability,update,updated,2558,"ue, Minuit will pass ""internal""; /// values to Gradient. These cannot be synced with this function's RooFit parameters using; /// SetPdfParamVal, unless a manual transformation step is performed in advance. However, they do need to be passed; /// on to the gradient calculator, since indeed we expect values there to be in ""internal"" space. However, this is; /// calculator dependent. Note that in the current MinuitFcnGrad implementation we do not actually allow for; /// calculators in ""external"" (i.e. regular RooFit parameter space) values, since; /// MinuitFcnGrad::returnsInMinuit2ParameterSpace is hardcoded to true. This should in a future version be changed so; /// that the calculator (the wrapper) is queried for this information.; /// Because some gradient calculators may also use the regular RooFit parameters (e.g. for calculating the likelihood's; /// value itself), this information is also passed on to the gradient wrapper. Vice versa, when updated ""internal""; /// parameters are passed to Gradient, the likelihood may be affected as well. Even though a; /// transformation from internal to ""external"" may be necessary before the values can be used, the likelihood can at; /// least log that its parameter values are possibly no longer in sync with those of the gradient.; ///; /// The second twist is that the Minuit external parameters may still be different from the ones used in RooFit. This; /// happens when Minuit tries out values that lay outside the RooFit parameter's range(s). RooFit's setVal (called; /// inside SetPdfParamVal) then clips the RooAbsArg's value to one of the range limits, instead of setting it to the; /// value Minuit intended. When this happens, i.e. syncParameterValuesFromMinuitCalls is called with; /// minuit_internal = false and the values do not match the previous values stored in _minuitInternalX *but* the; /// values after SetPdfParamVal did not get set to the intended value, the _minuitInternalRooFitXMismatch flag is; /// set. This infor",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:475,Integrability,depend,depends,475,"/// Minuit calls (via FcnAdapters etc) DoEval or Gradient with a set of parameters x.; /// This function syncs these values to the proper places in RooFit.; ///; /// The first twist, and reason this function is more complicated than one may imagine, is that Minuit internally uses a; /// transformed parameter space to account for parameter boundaries. Whether we receive these Minuit ""internal""; /// parameter values or ""regular""/untransformed RooFit parameter space values depends on the situation.; /// - The values that arrive here via DoEval are always ""normal"" parameter values, since Minuit transforms these; /// back into regular space before passing to DoEval (see MnUserFcn::operator() which wraps the Fcn(Gradient)Base; /// in ModularFunctionMinimizer::Minimize and is used for direct function calls from that point on in the minimizer).; /// These can thus always be safely synced with this function's RooFit parameters using SetPdfParamVal.; /// - The values that arrive here via Gradient will be in internal coordinates if that is; /// what this class expects, and indeed this is the case for MinuitFcnGrad's current implementation. This is; /// communicated to Minuit via MinuitFcnGrad::returnsInMinuit2ParameterSpace. Inside Minuit, that function determines; /// whether this class's gradient calculator is wrapped inside a AnalyticalGradientCalculator, to which Minuit passes; /// ""external"" parameter values, or as an ExternalInternalGradientCalculator, which gets ""internal"" parameter values.; /// Long story short: when MinuitFcnGrad::returnsInMinuit2ParameterSpace() returns true, Minuit will pass ""internal""; /// values to Gradient. These cannot be synced with this function's RooFit parameters using; /// SetPdfParamVal, unless a manual transformation step is performed in advance. However, they do need to be passed; /// on to the gradient calculator, since indeed we expect values there to be in ""internal"" space. However, this is; /// calculator dependent. Note that in the c",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:702,Integrability,wrap,wraps,702,"/// Minuit calls (via FcnAdapters etc) DoEval or Gradient with a set of parameters x.; /// This function syncs these values to the proper places in RooFit.; ///; /// The first twist, and reason this function is more complicated than one may imagine, is that Minuit internally uses a; /// transformed parameter space to account for parameter boundaries. Whether we receive these Minuit ""internal""; /// parameter values or ""regular""/untransformed RooFit parameter space values depends on the situation.; /// - The values that arrive here via DoEval are always ""normal"" parameter values, since Minuit transforms these; /// back into regular space before passing to DoEval (see MnUserFcn::operator() which wraps the Fcn(Gradient)Base; /// in ModularFunctionMinimizer::Minimize and is used for direct function calls from that point on in the minimizer).; /// These can thus always be safely synced with this function's RooFit parameters using SetPdfParamVal.; /// - The values that arrive here via Gradient will be in internal coordinates if that is; /// what this class expects, and indeed this is the case for MinuitFcnGrad's current implementation. This is; /// communicated to Minuit via MinuitFcnGrad::returnsInMinuit2ParameterSpace. Inside Minuit, that function determines; /// whether this class's gradient calculator is wrapped inside a AnalyticalGradientCalculator, to which Minuit passes; /// ""external"" parameter values, or as an ExternalInternalGradientCalculator, which gets ""internal"" parameter values.; /// Long story short: when MinuitFcnGrad::returnsInMinuit2ParameterSpace() returns true, Minuit will pass ""internal""; /// values to Gradient. These cannot be synced with this function's RooFit parameters using; /// SetPdfParamVal, unless a manual transformation step is performed in advance. However, they do need to be passed; /// on to the gradient calculator, since indeed we expect values there to be in ""internal"" space. However, this is; /// calculator dependent. Note that in the c",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:1323,Integrability,wrap,wrapped,1323,"these Minuit ""internal""; /// parameter values or ""regular""/untransformed RooFit parameter space values depends on the situation.; /// - The values that arrive here via DoEval are always ""normal"" parameter values, since Minuit transforms these; /// back into regular space before passing to DoEval (see MnUserFcn::operator() which wraps the Fcn(Gradient)Base; /// in ModularFunctionMinimizer::Minimize and is used for direct function calls from that point on in the minimizer).; /// These can thus always be safely synced with this function's RooFit parameters using SetPdfParamVal.; /// - The values that arrive here via Gradient will be in internal coordinates if that is; /// what this class expects, and indeed this is the case for MinuitFcnGrad's current implementation. This is; /// communicated to Minuit via MinuitFcnGrad::returnsInMinuit2ParameterSpace. Inside Minuit, that function determines; /// whether this class's gradient calculator is wrapped inside a AnalyticalGradientCalculator, to which Minuit passes; /// ""external"" parameter values, or as an ExternalInternalGradientCalculator, which gets ""internal"" parameter values.; /// Long story short: when MinuitFcnGrad::returnsInMinuit2ParameterSpace() returns true, Minuit will pass ""internal""; /// values to Gradient. These cannot be synced with this function's RooFit parameters using; /// SetPdfParamVal, unless a manual transformation step is performed in advance. However, they do need to be passed; /// on to the gradient calculator, since indeed we expect values there to be in ""internal"" space. However, this is; /// calculator dependent. Note that in the current MinuitFcnGrad implementation we do not actually allow for; /// calculators in ""external"" (i.e. regular RooFit parameter space) values, since; /// MinuitFcnGrad::returnsInMinuit2ParameterSpace is hardcoded to true. This should in a future version be changed so; /// that the calculator (the wrapper) is queried for this information.; /// Because some gradient calcu",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:1972,Integrability,depend,dependent,1972," The values that arrive here via Gradient will be in internal coordinates if that is; /// what this class expects, and indeed this is the case for MinuitFcnGrad's current implementation. This is; /// communicated to Minuit via MinuitFcnGrad::returnsInMinuit2ParameterSpace. Inside Minuit, that function determines; /// whether this class's gradient calculator is wrapped inside a AnalyticalGradientCalculator, to which Minuit passes; /// ""external"" parameter values, or as an ExternalInternalGradientCalculator, which gets ""internal"" parameter values.; /// Long story short: when MinuitFcnGrad::returnsInMinuit2ParameterSpace() returns true, Minuit will pass ""internal""; /// values to Gradient. These cannot be synced with this function's RooFit parameters using; /// SetPdfParamVal, unless a manual transformation step is performed in advance. However, they do need to be passed; /// on to the gradient calculator, since indeed we expect values there to be in ""internal"" space. However, this is; /// calculator dependent. Note that in the current MinuitFcnGrad implementation we do not actually allow for; /// calculators in ""external"" (i.e. regular RooFit parameter space) values, since; /// MinuitFcnGrad::returnsInMinuit2ParameterSpace is hardcoded to true. This should in a future version be changed so; /// that the calculator (the wrapper) is queried for this information.; /// Because some gradient calculators may also use the regular RooFit parameters (e.g. for calculating the likelihood's; /// value itself), this information is also passed on to the gradient wrapper. Vice versa, when updated ""internal""; /// parameters are passed to Gradient, the likelihood may be affected as well. Even though a; /// transformation from internal to ""external"" may be necessary before the values can be used, the likelihood can at; /// least log that its parameter values are possibly no longer in sync with those of the gradient.; ///; /// The second twist is that the Minuit external parameters may s",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:2298,Integrability,wrap,wrapper,2298,"hether this class's gradient calculator is wrapped inside a AnalyticalGradientCalculator, to which Minuit passes; /// ""external"" parameter values, or as an ExternalInternalGradientCalculator, which gets ""internal"" parameter values.; /// Long story short: when MinuitFcnGrad::returnsInMinuit2ParameterSpace() returns true, Minuit will pass ""internal""; /// values to Gradient. These cannot be synced with this function's RooFit parameters using; /// SetPdfParamVal, unless a manual transformation step is performed in advance. However, they do need to be passed; /// on to the gradient calculator, since indeed we expect values there to be in ""internal"" space. However, this is; /// calculator dependent. Note that in the current MinuitFcnGrad implementation we do not actually allow for; /// calculators in ""external"" (i.e. regular RooFit parameter space) values, since; /// MinuitFcnGrad::returnsInMinuit2ParameterSpace is hardcoded to true. This should in a future version be changed so; /// that the calculator (the wrapper) is queried for this information.; /// Because some gradient calculators may also use the regular RooFit parameters (e.g. for calculating the likelihood's; /// value itself), this information is also passed on to the gradient wrapper. Vice versa, when updated ""internal""; /// parameters are passed to Gradient, the likelihood may be affected as well. Even though a; /// transformation from internal to ""external"" may be necessary before the values can be used, the likelihood can at; /// least log that its parameter values are possibly no longer in sync with those of the gradient.; ///; /// The second twist is that the Minuit external parameters may still be different from the ones used in RooFit. This; /// happens when Minuit tries out values that lay outside the RooFit parameter's range(s). RooFit's setVal (called; /// inside SetPdfParamVal) then clips the RooAbsArg's value to one of the range limits, instead of setting it to the; /// value Minuit intended. When ",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:2532,Integrability,wrap,wrapper,2532,"""internal"" parameter values.; /// Long story short: when MinuitFcnGrad::returnsInMinuit2ParameterSpace() returns true, Minuit will pass ""internal""; /// values to Gradient. These cannot be synced with this function's RooFit parameters using; /// SetPdfParamVal, unless a manual transformation step is performed in advance. However, they do need to be passed; /// on to the gradient calculator, since indeed we expect values there to be in ""internal"" space. However, this is; /// calculator dependent. Note that in the current MinuitFcnGrad implementation we do not actually allow for; /// calculators in ""external"" (i.e. regular RooFit parameter space) values, since; /// MinuitFcnGrad::returnsInMinuit2ParameterSpace is hardcoded to true. This should in a future version be changed so; /// that the calculator (the wrapper) is queried for this information.; /// Because some gradient calculators may also use the regular RooFit parameters (e.g. for calculating the likelihood's; /// value itself), this information is also passed on to the gradient wrapper. Vice versa, when updated ""internal""; /// parameters are passed to Gradient, the likelihood may be affected as well. Even though a; /// transformation from internal to ""external"" may be necessary before the values can be used, the likelihood can at; /// least log that its parameter values are possibly no longer in sync with those of the gradient.; ///; /// The second twist is that the Minuit external parameters may still be different from the ones used in RooFit. This; /// happens when Minuit tries out values that lay outside the RooFit parameter's range(s). RooFit's setVal (called; /// inside SetPdfParamVal) then clips the RooAbsArg's value to one of the range limits, instead of setting it to the; /// value Minuit intended. When this happens, i.e. syncParameterValuesFromMinuitCalls is called with; /// minuit_internal = false and the values do not match the previous values stored in _minuitInternalX *but* the; /// values after Set",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:1783,Performance,perform,performed,1783,"; /// in ModularFunctionMinimizer::Minimize and is used for direct function calls from that point on in the minimizer).; /// These can thus always be safely synced with this function's RooFit parameters using SetPdfParamVal.; /// - The values that arrive here via Gradient will be in internal coordinates if that is; /// what this class expects, and indeed this is the case for MinuitFcnGrad's current implementation. This is; /// communicated to Minuit via MinuitFcnGrad::returnsInMinuit2ParameterSpace. Inside Minuit, that function determines; /// whether this class's gradient calculator is wrapped inside a AnalyticalGradientCalculator, to which Minuit passes; /// ""external"" parameter values, or as an ExternalInternalGradientCalculator, which gets ""internal"" parameter values.; /// Long story short: when MinuitFcnGrad::returnsInMinuit2ParameterSpace() returns true, Minuit will pass ""internal""; /// values to Gradient. These cannot be synced with this function's RooFit parameters using; /// SetPdfParamVal, unless a manual transformation step is performed in advance. However, they do need to be passed; /// on to the gradient calculator, since indeed we expect values there to be in ""internal"" space. However, this is; /// calculator dependent. Note that in the current MinuitFcnGrad implementation we do not actually allow for; /// calculators in ""external"" (i.e. regular RooFit parameter space) values, since; /// MinuitFcnGrad::returnsInMinuit2ParameterSpace is hardcoded to true. This should in a future version be changed so; /// that the calculator (the wrapper) is queried for this information.; /// Because some gradient calculators may also use the regular RooFit parameters (e.g. for calculating the likelihood's; /// value itself), this information is also passed on to the gradient wrapper. Vice versa, when updated ""internal""; /// parameters are passed to Gradient, the likelihood may be affected as well. Even though a; /// transformation from internal to ""external"" may be nec",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:879,Safety,safe,safely,879,"/// Minuit calls (via FcnAdapters etc) DoEval or Gradient with a set of parameters x.; /// This function syncs these values to the proper places in RooFit.; ///; /// The first twist, and reason this function is more complicated than one may imagine, is that Minuit internally uses a; /// transformed parameter space to account for parameter boundaries. Whether we receive these Minuit ""internal""; /// parameter values or ""regular""/untransformed RooFit parameter space values depends on the situation.; /// - The values that arrive here via DoEval are always ""normal"" parameter values, since Minuit transforms these; /// back into regular space before passing to DoEval (see MnUserFcn::operator() which wraps the Fcn(Gradient)Base; /// in ModularFunctionMinimizer::Minimize and is used for direct function calls from that point on in the minimizer).; /// These can thus always be safely synced with this function's RooFit parameters using SetPdfParamVal.; /// - The values that arrive here via Gradient will be in internal coordinates if that is; /// what this class expects, and indeed this is the case for MinuitFcnGrad's current implementation. This is; /// communicated to Minuit via MinuitFcnGrad::returnsInMinuit2ParameterSpace. Inside Minuit, that function determines; /// whether this class's gradient calculator is wrapped inside a AnalyticalGradientCalculator, to which Minuit passes; /// ""external"" parameter values, or as an ExternalInternalGradientCalculator, which gets ""internal"" parameter values.; /// Long story short: when MinuitFcnGrad::returnsInMinuit2ParameterSpace() returns true, Minuit will pass ""internal""; /// values to Gradient. These cannot be synced with this function's RooFit parameters using; /// SetPdfParamVal, unless a manual transformation step is performed in advance. However, they do need to be passed; /// on to the gradient calculator, since indeed we expect values there to be in ""internal"" space. However, this is; /// calculator dependent. Note that in the c",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:2800,Testability,log,log,2800,"ransformation step is performed in advance. However, they do need to be passed; /// on to the gradient calculator, since indeed we expect values there to be in ""internal"" space. However, this is; /// calculator dependent. Note that in the current MinuitFcnGrad implementation we do not actually allow for; /// calculators in ""external"" (i.e. regular RooFit parameter space) values, since; /// MinuitFcnGrad::returnsInMinuit2ParameterSpace is hardcoded to true. This should in a future version be changed so; /// that the calculator (the wrapper) is queried for this information.; /// Because some gradient calculators may also use the regular RooFit parameters (e.g. for calculating the likelihood's; /// value itself), this information is also passed on to the gradient wrapper. Vice versa, when updated ""internal""; /// parameters are passed to Gradient, the likelihood may be affected as well. Even though a; /// transformation from internal to ""external"" may be necessary before the values can be used, the likelihood can at; /// least log that its parameter values are possibly no longer in sync with those of the gradient.; ///; /// The second twist is that the Minuit external parameters may still be different from the ones used in RooFit. This; /// happens when Minuit tries out values that lay outside the RooFit parameter's range(s). RooFit's setVal (called; /// inside SetPdfParamVal) then clips the RooAbsArg's value to one of the range limits, instead of setting it to the; /// value Minuit intended. When this happens, i.e. syncParameterValuesFromMinuitCalls is called with; /// minuit_internal = false and the values do not match the previous values stored in _minuitInternalX *but* the; /// values after SetPdfParamVal did not get set to the intended value, the _minuitInternalRooFitXMismatch flag is; /// set. This information can be used by calculators, if desired, for instance when a calculator does not want to make; /// use of the range information in the RooAbsArg parameters.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:225,Deployability,update,updated,225,"// Note: the return value of SetPdfParamVal does not always mean that the parameter's value in the RooAbsReal; // changed since last time! If the value was out of range bin, setVal was still called, but the value was not; // updated.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:215,Testability,log,log,215,"// The above is why we need _minuitExternalX. The _minuitExternalX vector can also be passed to; // LikelihoodWrappers, if needed, but typically they will make use of the RooFit parameters directly. However,; // we log in the flag below whether they are different so that calculators can use this information.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.h:68,Integrability,synchroniz,synchronization,68,"/// Overridden from RooAbsMinimizerFcn to include gradient strategy synchronization.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.h:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:22,Security,access,access,22,"// complete class for access in constOptimizeTestStatistic",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:38,Testability,test,testing,38,"// concrete classes in getParameters (testing, remove later)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:426,Modifiability,extend,extended,426,"/// Constructor that clones the pdf/data and owns those cloned copies.; ///; /// This constructor is used for classes that need a pdf/data clone (RooBinnedL and RooUnbinnedL).; ///; /// \param in Struct containing raw pointers to the pdf and dataset that are to be cloned.; /// \param N_events The number of events in this likelihood's dataset.; /// \param N_components The number of components in the likelihood.; /// \param extended Set extended term calculation on, off or use Extended::Auto to determine automatically based on the; /// pdf whether to activate or not.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:439,Modifiability,extend,extended,439,"/// Constructor that clones the pdf/data and owns those cloned copies.; ///; /// This constructor is used for classes that need a pdf/data clone (RooBinnedL and RooUnbinnedL).; ///; /// \param in Struct containing raw pointers to the pdf and dataset that are to be cloned.; /// \param N_events The number of events in this likelihood's dataset.; /// \param N_components The number of components in the likelihood.; /// \param extended Set extended term calculation on, off or use Extended::Auto to determine automatically based on the; /// pdf whether to activate or not.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:480,Modifiability,Extend,Extended,480,"/// Constructor that clones the pdf/data and owns those cloned copies.; ///; /// This constructor is used for classes that need a pdf/data clone (RooBinnedL and RooUnbinnedL).; ///; /// \param in Struct containing raw pointers to the pdf and dataset that are to be cloned.; /// \param N_events The number of events in this likelihood's dataset.; /// \param N_components The number of components in the likelihood.; /// \param extended Set extended term calculation on, off or use Extended::Auto to determine automatically based on the; /// pdf whether to activate or not.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:503,Modifiability,extend,extended,503,"/// Constructor that does not clone pdf/data and uses the shared_ptr aliasing constructor to make it non-owning.; ///; /// This constructor is used for classes where a reference to the external pdf/dataset is good enough (RooSumL and; /// RooSubsidiaryL).; ///; /// \param inpdf Raw pointer to the pdf.; /// \param indata Raw pointer to the dataset.; /// \param N_events The number of events in this likelihood's dataset.; /// \param N_components The number of components in the likelihood.; /// \param extended Set extended term calculation on, off or use Extended::Auto to determine automatically based on the; /// pdf whether to activate or not.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:516,Modifiability,extend,extended,516,"/// Constructor that does not clone pdf/data and uses the shared_ptr aliasing constructor to make it non-owning.; ///; /// This constructor is used for classes where a reference to the external pdf/dataset is good enough (RooSumL and; /// RooSubsidiaryL).; ///; /// \param inpdf Raw pointer to the pdf.; /// \param indata Raw pointer to the dataset.; /// \param N_events The number of events in this likelihood's dataset.; /// \param N_components The number of components in the likelihood.; /// \param extended Set extended term calculation on, off or use Extended::Auto to determine automatically based on the; /// pdf whether to activate or not.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:557,Modifiability,Extend,Extended,557,"/// Constructor that does not clone pdf/data and uses the shared_ptr aliasing constructor to make it non-owning.; ///; /// This constructor is used for classes where a reference to the external pdf/dataset is good enough (RooSumL and; /// RooSubsidiaryL).; ///; /// \param inpdf Raw pointer to the pdf.; /// \param indata Raw pointer to the dataset.; /// \param N_events The number of events in this likelihood's dataset.; /// \param N_components The number of components in the likelihood.; /// \param extended Set extended term calculation on, off or use Extended::Auto to determine automatically based on the; /// pdf whether to activate or not.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:59,Modifiability,parameteriz,parameterized,59,"// Expand list of observables with any observables used in parameterized ranges",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:243,Integrability,depend,dependents,243,"// ******************************************************************; // *** PART 2 *** Clone and adjust incoming data, attach to PDF *; // ******************************************************************; // Check if the fit ranges of the dependents in the data and in the FUNC are consistent",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:301,Availability,mask,mask,301,"// ******************************************************************; // *** PART 3 *** Make adjustments for fit ranges, if specified *; // ******************************************************************; // TODO; // Jonas R.: The following code is commented out, because the functionality; // to mask out-of-range entries with `RooDataHist::cacheValidEntries` has; // been removed from the RooDataHist. If you want to implement ranged fits; // properly, please create a RooDataHist for the requested range with; // `RooDataHist::reduce`.; //// If dataset is binned, activate caching of bins that are invalid because they're outside the; //// updated range definition (WVE need to add virtual interface here); // RooDataHist *tmph = dynamic_cast<RooDataHist *>(data_.get());; // if (tmph) {; // tmph->cacheValidEntries();; //}; // This is deferred from part 2 - but must happen after part 3 - otherwise invalid bins cannot be properly marked in; // cacheValidEntries",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:647,Deployability,update,updated,647,"// ******************************************************************; // *** PART 3 *** Make adjustments for fit ranges, if specified *; // ******************************************************************; // TODO; // Jonas R.: The following code is commented out, because the functionality; // to mask out-of-range entries with `RooDataHist::cacheValidEntries` has; // been removed from the RooDataHist. If you want to implement ranged fits; // properly, please create a RooDataHist for the requested range with; // `RooDataHist::reduce`.; //// If dataset is binned, activate caching of bins that are invalid because they're outside the; //// updated range definition (WVE need to add virtual interface here); // RooDataHist *tmph = dynamic_cast<RooDataHist *>(data_.get());; // if (tmph) {; // tmph->cacheValidEntries();; //}; // This is deferred from part 2 - but must happen after part 3 - otherwise invalid bins cannot be properly marked in; // cacheValidEntries",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:534,Energy Efficiency,reduce,reduce,534,"// ******************************************************************; // *** PART 3 *** Make adjustments for fit ranges, if specified *; // ******************************************************************; // TODO; // Jonas R.: The following code is commented out, because the functionality; // to mask out-of-range entries with `RooDataHist::cacheValidEntries` has; // been removed from the RooDataHist. If you want to implement ranged fits; // properly, please create a RooDataHist for the requested range with; // `RooDataHist::reduce`.; //// If dataset is binned, activate caching of bins that are invalid because they're outside the; //// updated range definition (WVE need to add virtual interface here); // RooDataHist *tmph = dynamic_cast<RooDataHist *>(data_.get());; // if (tmph) {; // tmph->cacheValidEntries();; //}; // This is deferred from part 2 - but must happen after part 3 - otherwise invalid bins cannot be properly marked in; // cacheValidEntries",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:697,Integrability,interface,interface,697,"// ******************************************************************; // *** PART 3 *** Make adjustments for fit ranges, if specified *; // ******************************************************************; // TODO; // Jonas R.: The following code is commented out, because the functionality; // to mask out-of-range entries with `RooDataHist::cacheValidEntries` has; // been removed from the RooDataHist. If you want to implement ranged fits; // properly, please create a RooDataHist for the requested range with; // `RooDataHist::reduce`.; //// If dataset is binned, activate caching of bins that are invalid because they're outside the; //// updated range definition (WVE need to add virtual interface here); // RooDataHist *tmph = dynamic_cast<RooDataHist *>(data_.get());; // if (tmph) {; // tmph->cacheValidEntries();; //}; // This is deferred from part 2 - but must happen after part 3 - otherwise invalid bins cannot be properly marked in; // cacheValidEntries",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:346,Performance,cache,cacheValidEntries,346,"// ******************************************************************; // *** PART 3 *** Make adjustments for fit ranges, if specified *; // ******************************************************************; // TODO; // Jonas R.: The following code is commented out, because the functionality; // to mask out-of-range entries with `RooDataHist::cacheValidEntries` has; // been removed from the RooDataHist. If you want to implement ranged fits; // properly, please create a RooDataHist for the requested range with; // `RooDataHist::reduce`.; //// If dataset is binned, activate caching of bins that are invalid because they're outside the; //// updated range definition (WVE need to add virtual interface here); // RooDataHist *tmph = dynamic_cast<RooDataHist *>(data_.get());; // if (tmph) {; // tmph->cacheValidEntries();; //}; // This is deferred from part 2 - but must happen after part 3 - otherwise invalid bins cannot be properly marked in; // cacheValidEntries",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:805,Performance,cache,cacheValidEntries,805,"// ******************************************************************; // *** PART 3 *** Make adjustments for fit ranges, if specified *; // ******************************************************************; // TODO; // Jonas R.: The following code is commented out, because the functionality; // to mask out-of-range entries with `RooDataHist::cacheValidEntries` has; // been removed from the RooDataHist. If you want to implement ranged fits; // properly, please create a RooDataHist for the requested range with; // `RooDataHist::reduce`.; //// If dataset is binned, activate caching of bins that are invalid because they're outside the; //// updated range definition (WVE need to add virtual interface here); // RooDataHist *tmph = dynamic_cast<RooDataHist *>(data_.get());; // if (tmph) {; // tmph->cacheValidEntries();; //}; // This is deferred from part 2 - but must happen after part 3 - otherwise invalid bins cannot be properly marked in; // cacheValidEntries",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:953,Performance,cache,cacheValidEntries,953,"// ******************************************************************; // *** PART 3 *** Make adjustments for fit ranges, if specified *; // ******************************************************************; // TODO; // Jonas R.: The following code is commented out, because the functionality; // to mask out-of-range entries with `RooDataHist::cacheValidEntries` has; // been removed from the RooDataHist. If you want to implement ranged fits; // properly, please create a RooDataHist for the requested range with; // `RooDataHist::reduce`.; //// If dataset is binned, activate caching of bins that are invalid because they're outside the; //// updated range definition (WVE need to add virtual interface here); // RooDataHist *tmph = dynamic_cast<RooDataHist *>(data_.get());; // if (tmph) {; // tmph->cacheValidEntries();; //}; // This is deferred from part 2 - but must happen after part 3 - otherwise invalid bins cannot be properly marked in; // cacheValidEntries",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:354,Performance,optimiz,optimization,354,"// *********************************************************************; // *** PART 4 *** Adjust normalization range for projected observables *; // *********************************************************************; // TODO; // *********************************************************************; // *** PART 4 *** Finalization and activation of optimization *; // *********************************************************************; // optimization steps (copied from ROATS::optimizeCaching)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:447,Performance,optimiz,optimization,447,"// *********************************************************************; // *** PART 4 *** Adjust normalization range for projected observables *; // *********************************************************************; // TODO; // *********************************************************************; // *** PART 4 *** Finalization and activation of optimization *; // *********************************************************************; // optimization steps (copied from ROATS::optimizeCaching)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:486,Performance,optimiz,optimizeCaching,486,"// *********************************************************************; // *** PART 4 *** Adjust normalization range for projected observables *; // *********************************************************************; // TODO; // *********************************************************************; // *** PART 4 *** Finalization and activation of optimization *; // *********************************************************************; // optimization steps (copied from ROATS::optimizeCaching)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:45,Integrability,depend,depend,45,"// Set value caching mode for all nodes that depend on any of the observables to ADirty",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:28,Deployability,update,update,28,"// Request a forcible cache update of all cached nodes",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:22,Performance,cache,cache,22,"// Request a forcible cache update of all cached nodes",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:42,Performance,cache,cached,42,"// Request a forcible cache update of all cached nodes",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:591,Modifiability,extend,extended,591,"/*; * Project: RooFit; * Authors:; * PB, Patrick Bos, Netherlands eScience Center, p.bos@esciencecenter.nl; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file RooBinnedL.cxx; \class RooBinnedL; \ingroup Roofitcore. Implements a -log(likelihood) calculation from a dataset; (assumed to be binned) and a PDF. The NLL is calculated as; \f[; \sum_\mathrm{data} -\log( \mathrm{pdf}(x_\mathrm{data})); \f]; In extended mode, a; \f$ N_\mathrm{expect} - N_\mathrm{observed}*log(N_\mathrm{expect}) \f$ term is added.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:416,Testability,log,log,416,"/*; * Project: RooFit; * Authors:; * PB, Patrick Bos, Netherlands eScience Center, p.bos@esciencecenter.nl; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file RooBinnedL.cxx; \class RooBinnedL; \ingroup Roofitcore. Implements a -log(likelihood) calculation from a dataset; (assumed to be binned) and a PDF. The NLL is calculated as; \f[; \sum_\mathrm{data} -\log( \mathrm{pdf}(x_\mathrm{data})); \f]; In extended mode, a; \f$ N_\mathrm{expect} - N_\mathrm{observed}*log(N_\mathrm{expect}) \f$ term is added.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:546,Testability,log,log,546,"/*; * Project: RooFit; * Authors:; * PB, Patrick Bos, Netherlands eScience Center, p.bos@esciencecenter.nl; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file RooBinnedL.cxx; \class RooBinnedL; \ingroup Roofitcore. Implements a -log(likelihood) calculation from a dataset; (assumed to be binned) and a PDF. The NLL is calculated as; \f[; \sum_\mathrm{data} -\log( \mathrm{pdf}(x_\mathrm{data})); \f]; In extended mode, a; \f$ N_\mathrm{expect} - N_\mathrm{observed}*log(N_\mathrm{expect}) \f$ term is added.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:653,Testability,log,log,653,"/*; * Project: RooFit; * Authors:; * PB, Patrick Bos, Netherlands eScience Center, p.bos@esciencecenter.nl; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file RooBinnedL.cxx; \class RooBinnedL; \ingroup Roofitcore. Implements a -log(likelihood) calculation from a dataset; (assumed to be binned) and a PDF. The NLL is calculated as; \f[; \sum_\mathrm{data} -\log( \mathrm{pdf}(x_\mathrm{data})); \f]; In extended mode, a; \f$ N_\mathrm{expect} - N_\mathrm{observed}*log(N_\mathrm{expect}) \f$ term is added.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:16,Performance,cache,cache,16,"// Retrieve and cache bin widths needed to convert unnormalized binned pdf values back to yields; // The Active label will disable pdf integral calculations",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:225,Modifiability,extend,extended,225,"//////////////////////////////////////////////////////////////////////////////////; /// Calculate and return likelihood on subset of data from firstEvent to lastEvent; /// processed with a step size of 'stepSize'. If this an extended likelihood and; /// and the zero event is processed the extended term is added to the return; /// likelihood.; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:290,Modifiability,extend,extended,290,"//////////////////////////////////////////////////////////////////////////////////; /// Calculate and return likelihood on subset of data from firstEvent to lastEvent; /// processed with a step size of 'stepSize'. If this an extended likelihood and; /// and the zero event is processed the extended term is added to the return; /// likelihood.; //",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:246,Availability,toler,tolerate,246,"// Throughout the calculation, we use Kahan's algorithm for summing to; // prevent loss of precision - this is a factor four more expensive than; // straight addition, but since evaluating the PDF is usually much more; // expensive than that, we tolerate the additional cost...",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:13,Testability,log,log,13,"// Calculate log(Poisson(N|mu) for this bin",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:9,Availability,error,error,9,"// Catch error condition: data present where zero events are predicted",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:61,Safety,predict,predicted,61,"// Catch error condition: data present where zero events are predicted",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:129,Deployability,update,update,129,"// Special handling of this case since log(Poisson(0,0)=0 but can't be calculated with usual log-formula; // since log(mu)=0. No update of result is required since term=0.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:39,Testability,log,log,39,"// Special handling of this case since log(Poisson(0,0)=0 but can't be calculated with usual log-formula; // since log(mu)=0. No update of result is required since term=0.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:93,Testability,log,log-formula,93,"// Special handling of this case since log(Poisson(0,0)=0 but can't be calculated with usual log-formula; // since log(mu)=0. No update of result is required since term=0.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:115,Testability,log,log,115,"// Special handling of this case since log(Poisson(0,0)=0 but can't be calculated with usual log-formula; // since log(mu)=0. No update of result is required since term=0.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:96,Testability,log,log,96,"// If part of simultaneous PDF normalize probability over; // number of simultaneous PDFs: -sum(log(p/n)) = -sum(log(p)) + N*log(n)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:113,Testability,log,log,113,"// If part of simultaneous PDF normalize probability over; // number of simultaneous PDFs: -sum(log(p/n)) = -sum(log(p)) + N*log(n)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:125,Testability,log,log,125,"// If part of simultaneous PDF normalize probability over; // number of simultaneous PDFs: -sum(log(p/n)) = -sum(log(p)) + N*log(n)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:54,Performance,cache,caches,54,"// At the end of the first full calculation, wire the caches",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx:72,Integrability,wrap,wraps,72,"/** \class RooRealL; * \ingroup Roofitcore; *; * \brief RooAbsReal that wraps RooAbsL likelihoods for use in RooFit outside of the RooMinimizer context; *; * This class provides a simple wrapper to evaluate RooAbsL derived likelihood objects like a regular RooFit real value.; * Whereas the RooAbsL objects are meant to be used within the context of minimization, RooRealL can be used in any; * RooFit context, like plotting. The value can be accessed through getVal(), like with other RooFit real variables.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooRealL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx:187,Integrability,wrap,wrapper,187,"/** \class RooRealL; * \ingroup Roofitcore; *; * \brief RooAbsReal that wraps RooAbsL likelihoods for use in RooFit outside of the RooMinimizer context; *; * This class provides a simple wrapper to evaluate RooAbsL derived likelihood objects like a regular RooFit real value.; * Whereas the RooAbsL objects are meant to be used within the context of minimization, RooRealL can be used in any; * RooFit context, like plotting. The value can be accessed through getVal(), like with other RooFit real variables.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooRealL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx:498,Modifiability,variab,variables,498,"/** \class RooRealL; * \ingroup Roofitcore; *; * \brief RooAbsReal that wraps RooAbsL likelihoods for use in RooFit outside of the RooMinimizer context; *; * This class provides a simple wrapper to evaluate RooAbsL derived likelihood objects like a regular RooFit real value.; * Whereas the RooAbsL objects are meant to be used within the context of minimization, RooRealL can be used in any; * RooFit context, like plotting. The value can be accessed through getVal(), like with other RooFit real variables.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooRealL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx:443,Security,access,accessed,443,"/** \class RooRealL; * \ingroup Roofitcore; *; * \brief RooAbsReal that wraps RooAbsL likelihoods for use in RooFit outside of the RooMinimizer context; *; * This class provides a simple wrapper to evaluate RooAbsL derived likelihood objects like a regular RooFit real value.; * Whereas the RooAbsL objects are meant to be used within the context of minimization, RooRealL can be used in any; * RooFit context, like plotting. The value can be accessed through getVal(), like with other RooFit real variables.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooRealL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx:180,Usability,simpl,simple,180,"/** \class RooRealL; * \ingroup Roofitcore; *; * \brief RooAbsReal that wraps RooAbsL likelihoods for use in RooFit outside of the RooMinimizer context; *; * This class provides a simple wrapper to evaluate RooAbsL derived likelihood objects like a regular RooFit real value.; * Whereas the RooAbsL objects are meant to be used within the context of minimization, RooRealL can be used in any; * RooFit context, like plotting. The value can be accessed through getVal(), like with other RooFit real variables.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooRealL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx:30,Modifiability,variab,variables,30,"// Transfer values from proxy variables to internal variables of likelihood",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooRealL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx:52,Modifiability,variab,variables,52,"// Transfer values from proxy variables to internal variables of likelihood",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooRealL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooRealL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSubsidiaryL.cxx:445,Testability,log,log,445,"/*; * Project: RooFit; * Authors:; * PB, Patrick Bos, Netherlands eScience Center, p.bos@esciencecenter.nl; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file RooSubsidiaryL.cxx; \class RooSubsidiaryL; \ingroup Roofitcore. \brief Calculates the sum of the -(log) likelihoods of a set of RooAbsPdf objects that represent; subsidiary or constraint functions. This class is used to gather all subsidiary PDF terms from the component PDFs of RooSumL likelihoods and calculate the; composite -log(L). Such subsidiary terms can be marked using RooFit::Constrain arguments to RooAbsPdf::fitTo() or; RooAbsPdf::createNLL(). Subsidiary terms are summed separately for increased numerical stability, since these terms are often small and cause; numerical variances in their original PDFs, whereas by summing as one separate subsidiary collective term, it is; numerically very stable. \note When a subsidiary PDF is part of multiple component PDFs, it will only be summed once in this class! This doesn't; change the derivative of the log likelihood (which is what matters in fitting the likelihood), but does change the; value of the (log-)likelihood itself.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSubsidiaryL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSubsidiaryL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSubsidiaryL.cxx:675,Testability,log,log,675,"/*; * Project: RooFit; * Authors:; * PB, Patrick Bos, Netherlands eScience Center, p.bos@esciencecenter.nl; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file RooSubsidiaryL.cxx; \class RooSubsidiaryL; \ingroup Roofitcore. \brief Calculates the sum of the -(log) likelihoods of a set of RooAbsPdf objects that represent; subsidiary or constraint functions. This class is used to gather all subsidiary PDF terms from the component PDFs of RooSumL likelihoods and calculate the; composite -log(L). Such subsidiary terms can be marked using RooFit::Constrain arguments to RooAbsPdf::fitTo() or; RooAbsPdf::createNLL(). Subsidiary terms are summed separately for increased numerical stability, since these terms are often small and cause; numerical variances in their original PDFs, whereas by summing as one separate subsidiary collective term, it is; numerically very stable. \note When a subsidiary PDF is part of multiple component PDFs, it will only be summed once in this class! This doesn't; change the derivative of the log likelihood (which is what matters in fitting the likelihood), but does change the; value of the (log-)likelihood itself.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSubsidiaryL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSubsidiaryL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSubsidiaryL.cxx:1211,Testability,log,log,1211,"/*; * Project: RooFit; * Authors:; * PB, Patrick Bos, Netherlands eScience Center, p.bos@esciencecenter.nl; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file RooSubsidiaryL.cxx; \class RooSubsidiaryL; \ingroup Roofitcore. \brief Calculates the sum of the -(log) likelihoods of a set of RooAbsPdf objects that represent; subsidiary or constraint functions. This class is used to gather all subsidiary PDF terms from the component PDFs of RooSumL likelihoods and calculate the; composite -log(L). Such subsidiary terms can be marked using RooFit::Constrain arguments to RooAbsPdf::fitTo() or; RooAbsPdf::createNLL(). Subsidiary terms are summed separately for increased numerical stability, since these terms are often small and cause; numerical variances in their original PDFs, whereas by summing as one separate subsidiary collective term, it is; numerically very stable. \note When a subsidiary PDF is part of multiple component PDFs, it will only be summed once in this class! This doesn't; change the derivative of the log likelihood (which is what matters in fitting the likelihood), but does change the; value of the (log-)likelihood itself.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSubsidiaryL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSubsidiaryL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSubsidiaryL.cxx:1312,Testability,log,log,1312,"/*; * Project: RooFit; * Authors:; * PB, Patrick Bos, Netherlands eScience Center, p.bos@esciencecenter.nl; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file RooSubsidiaryL.cxx; \class RooSubsidiaryL; \ingroup Roofitcore. \brief Calculates the sum of the -(log) likelihoods of a set of RooAbsPdf objects that represent; subsidiary or constraint functions. This class is used to gather all subsidiary PDF terms from the component PDFs of RooSumL likelihoods and calculate the; composite -log(L). Such subsidiary terms can be marked using RooFit::Constrain arguments to RooAbsPdf::fitTo() or; RooAbsPdf::createNLL(). Subsidiary terms are summed separately for increased numerical stability, since these terms are often small and cause; numerical variances in their original PDFs, whereas by summing as one separate subsidiary collective term, it is; numerically very stable. \note When a subsidiary PDF is part of multiple component PDFs, it will only be summed once in this class! This doesn't; change the derivative of the log likelihood (which is what matters in fitting the likelihood), but does change the; value of the (log-)likelihood itself.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSubsidiaryL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSubsidiaryL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSubsidiaryL.cxx:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSubsidiaryL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSubsidiaryL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:629,Modifiability,extend,extended,629,"/** \class RooSumL; * \ingroup Roofitcore; *; * \brief Likelihood class that sums over multiple -log components; *; * The likelihood is often a product of components, for instance when fitting simultaneous pdfs, but also when using; * subsidiary pdfs. Hence, the negative log likelihood that we, in fact, calculate is often a sum over these components.; * This sum is implemented by this class.; **/; /// \param[in] pdf Raw pointer to the pdf; will not be cloned in this object.; /// \param[in] data Raw pointer to the dataset; will not be cloned in this object.; /// \param[in] components The component likelihoods.; /// \param extended Set extended term calculation on, off or use Extended::Auto to determine automatically based on the; /// pdf whether to activate or not. \warning components must be passed with std::move, otherwise it cannot be moved into; /// the RooSumL because of the unique_ptr! \note The number of events in RooSumL is that of the full dataset. Components; /// will have their own number of events that may be more relevant.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:642,Modifiability,extend,extended,642,"/** \class RooSumL; * \ingroup Roofitcore; *; * \brief Likelihood class that sums over multiple -log components; *; * The likelihood is often a product of components, for instance when fitting simultaneous pdfs, but also when using; * subsidiary pdfs. Hence, the negative log likelihood that we, in fact, calculate is often a sum over these components.; * This sum is implemented by this class.; **/; /// \param[in] pdf Raw pointer to the pdf; will not be cloned in this object.; /// \param[in] data Raw pointer to the dataset; will not be cloned in this object.; /// \param[in] components The component likelihoods.; /// \param extended Set extended term calculation on, off or use Extended::Auto to determine automatically based on the; /// pdf whether to activate or not. \warning components must be passed with std::move, otherwise it cannot be moved into; /// the RooSumL because of the unique_ptr! \note The number of events in RooSumL is that of the full dataset. Components; /// will have their own number of events that may be more relevant.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:683,Modifiability,Extend,Extended,683,"/** \class RooSumL; * \ingroup Roofitcore; *; * \brief Likelihood class that sums over multiple -log components; *; * The likelihood is often a product of components, for instance when fitting simultaneous pdfs, but also when using; * subsidiary pdfs. Hence, the negative log likelihood that we, in fact, calculate is often a sum over these components.; * This sum is implemented by this class.; **/; /// \param[in] pdf Raw pointer to the pdf; will not be cloned in this object.; /// \param[in] data Raw pointer to the dataset; will not be cloned in this object.; /// \param[in] components The component likelihoods.; /// \param extended Set extended term calculation on, off or use Extended::Auto to determine automatically based on the; /// pdf whether to activate or not. \warning components must be passed with std::move, otherwise it cannot be moved into; /// the RooSumL because of the unique_ptr! \note The number of events in RooSumL is that of the full dataset. Components; /// will have their own number of events that may be more relevant.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:97,Testability,log,log,97,"/** \class RooSumL; * \ingroup Roofitcore; *; * \brief Likelihood class that sums over multiple -log components; *; * The likelihood is often a product of components, for instance when fitting simultaneous pdfs, but also when using; * subsidiary pdfs. Hence, the negative log likelihood that we, in fact, calculate is often a sum over these components.; * This sum is implemented by this class.; **/; /// \param[in] pdf Raw pointer to the pdf; will not be cloned in this object.; /// \param[in] data Raw pointer to the dataset; will not be cloned in this object.; /// \param[in] components The component likelihoods.; /// \param extended Set extended term calculation on, off or use Extended::Auto to determine automatically based on the; /// pdf whether to activate or not. \warning components must be passed with std::move, otherwise it cannot be moved into; /// the RooSumL because of the unique_ptr! \note The number of events in RooSumL is that of the full dataset. Components; /// will have their own number of events that may be more relevant.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:272,Testability,log,log,272,"/** \class RooSumL; * \ingroup Roofitcore; *; * \brief Likelihood class that sums over multiple -log components; *; * The likelihood is often a product of components, for instance when fitting simultaneous pdfs, but also when using; * subsidiary pdfs. Hence, the negative log likelihood that we, in fact, calculate is often a sum over these components.; * This sum is implemented by this class.; **/; /// \param[in] pdf Raw pointer to the pdf; will not be cloned in this object.; /// \param[in] data Raw pointer to the dataset; will not be cloned in this object.; /// \param[in] components The component likelihoods.; /// \param extended Set extended term calculation on, off or use Extended::Auto to determine automatically based on the; /// pdf whether to activate or not. \warning components must be passed with std::move, otherwise it cannot be moved into; /// the RooSumL because of the unique_ptr! \note The number of events in RooSumL is that of the full dataset. Components; /// will have their own number of events that may be more relevant.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:894,Availability,error,error,894,"// Developer note on the std::move() warning above:; //; // The point here was that you don't want to clone RooAbsL's too much, because they contain clones of the pdf and; // dataset that may have been mangled for optimization. You probably don't want to be doing that all the time, although; // it is a premature optimization, since we haven't timed its impact. That is the motivation behind using unique_ptrs; // for the components. The way the classes are built, the RooSumL doesn't care about what components it gets, so by; // definition it cannot create them internally, so they have to be passed in somehow. Forcing the user to call the; // function with a std::move is a way to make them fully realize that their local components will be destroyed and the; // contents moved into the RooSumL.; //; // We could change the type to an rvalue reference to make it clearer from the compiler error that std::move is; // necessary, instead of the obscure error that you get now. Compare the compiler error messages from these two types:; //; //#include <vector>; //#include <memory>; //#include <cstdio>; //; // struct Clear {; // Clear(std::vector<std::unique_ptr<int>>&& vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // struct Obscure {; // Obscure(std::vector<std::unique_ptr<int>> vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // int main() {; // std::vector<std::unique_ptr<int>> vec;; // vec.emplace_back(new int(4));; // Clear thing(vec);; // Obscure thingy(vec);; //}; /// \note Compared to the RooAbsTestStatistic implementation that this was taken from, we leave out Hybrid and; /// SimComponents interleaving support here. This should be implemented by a calculator (i.e. LikelihoodWrapper or; /// LikelihoodGradientWrapper derived class), if desired.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:956,Availability,error,error,956,"// Developer note on the std::move() warning above:; //; // The point here was that you don't want to clone RooAbsL's too much, because they contain clones of the pdf and; // dataset that may have been mangled for optimization. You probably don't want to be doing that all the time, although; // it is a premature optimization, since we haven't timed its impact. That is the motivation behind using unique_ptrs; // for the components. The way the classes are built, the RooSumL doesn't care about what components it gets, so by; // definition it cannot create them internally, so they have to be passed in somehow. Forcing the user to call the; // function with a std::move is a way to make them fully realize that their local components will be destroyed and the; // contents moved into the RooSumL.; //; // We could change the type to an rvalue reference to make it clearer from the compiler error that std::move is; // necessary, instead of the obscure error that you get now. Compare the compiler error messages from these two types:; //; //#include <vector>; //#include <memory>; //#include <cstdio>; //; // struct Clear {; // Clear(std::vector<std::unique_ptr<int>>&& vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // struct Obscure {; // Obscure(std::vector<std::unique_ptr<int>> vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // int main() {; // std::vector<std::unique_ptr<int>> vec;; // vec.emplace_back(new int(4));; // Clear thing(vec);; // Obscure thingy(vec);; //}; /// \note Compared to the RooAbsTestStatistic implementation that this was taken from, we leave out Hybrid and; /// SimComponents interleaving support here. This should be implemented by a calculator (i.e. LikelihoodWrapper or; /// LikelihoodGradientWrapper derived class), if desired.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:1001,Availability,error,error,1001,"// Developer note on the std::move() warning above:; //; // The point here was that you don't want to clone RooAbsL's too much, because they contain clones of the pdf and; // dataset that may have been mangled for optimization. You probably don't want to be doing that all the time, although; // it is a premature optimization, since we haven't timed its impact. That is the motivation behind using unique_ptrs; // for the components. The way the classes are built, the RooSumL doesn't care about what components it gets, so by; // definition it cannot create them internally, so they have to be passed in somehow. Forcing the user to call the; // function with a std::move is a way to make them fully realize that their local components will be destroyed and the; // contents moved into the RooSumL.; //; // We could change the type to an rvalue reference to make it clearer from the compiler error that std::move is; // necessary, instead of the obscure error that you get now. Compare the compiler error messages from these two types:; //; //#include <vector>; //#include <memory>; //#include <cstdio>; //; // struct Clear {; // Clear(std::vector<std::unique_ptr<int>>&& vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // struct Obscure {; // Obscure(std::vector<std::unique_ptr<int>> vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // int main() {; // std::vector<std::unique_ptr<int>> vec;; // vec.emplace_back(new int(4));; // Clear thing(vec);; // Obscure thingy(vec);; //}; /// \note Compared to the RooAbsTestStatistic implementation that this was taken from, we leave out Hybrid and; /// SimComponents interleaving support here. This should be implemented by a calculator (i.e. LikelihoodWrapper or; /// LikelihoodGradientWrapper derived class), if desired.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:1007,Integrability,message,messages,1007,"// Developer note on the std::move() warning above:; //; // The point here was that you don't want to clone RooAbsL's too much, because they contain clones of the pdf and; // dataset that may have been mangled for optimization. You probably don't want to be doing that all the time, although; // it is a premature optimization, since we haven't timed its impact. That is the motivation behind using unique_ptrs; // for the components. The way the classes are built, the RooSumL doesn't care about what components it gets, so by; // definition it cannot create them internally, so they have to be passed in somehow. Forcing the user to call the; // function with a std::move is a way to make them fully realize that their local components will be destroyed and the; // contents moved into the RooSumL.; //; // We could change the type to an rvalue reference to make it clearer from the compiler error that std::move is; // necessary, instead of the obscure error that you get now. Compare the compiler error messages from these two types:; //; //#include <vector>; //#include <memory>; //#include <cstdio>; //; // struct Clear {; // Clear(std::vector<std::unique_ptr<int>>&& vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // struct Obscure {; // Obscure(std::vector<std::unique_ptr<int>> vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // int main() {; // std::vector<std::unique_ptr<int>> vec;; // vec.emplace_back(new int(4));; // Clear thing(vec);; // Obscure thingy(vec);; //}; /// \note Compared to the RooAbsTestStatistic implementation that this was taken from, we leave out Hybrid and; /// SimComponents interleaving support here. This should be implemented by a calculator (i.e. LikelihoodWrapper or; /// LikelihoodGradientWrapper derived class), if desired.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:214,Performance,optimiz,optimization,214,"// Developer note on the std::move() warning above:; //; // The point here was that you don't want to clone RooAbsL's too much, because they contain clones of the pdf and; // dataset that may have been mangled for optimization. You probably don't want to be doing that all the time, although; // it is a premature optimization, since we haven't timed its impact. That is the motivation behind using unique_ptrs; // for the components. The way the classes are built, the RooSumL doesn't care about what components it gets, so by; // definition it cannot create them internally, so they have to be passed in somehow. Forcing the user to call the; // function with a std::move is a way to make them fully realize that their local components will be destroyed and the; // contents moved into the RooSumL.; //; // We could change the type to an rvalue reference to make it clearer from the compiler error that std::move is; // necessary, instead of the obscure error that you get now. Compare the compiler error messages from these two types:; //; //#include <vector>; //#include <memory>; //#include <cstdio>; //; // struct Clear {; // Clear(std::vector<std::unique_ptr<int>>&& vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // struct Obscure {; // Obscure(std::vector<std::unique_ptr<int>> vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // int main() {; // std::vector<std::unique_ptr<int>> vec;; // vec.emplace_back(new int(4));; // Clear thing(vec);; // Obscure thingy(vec);; //}; /// \note Compared to the RooAbsTestStatistic implementation that this was taken from, we leave out Hybrid and; /// SimComponents interleaving support here. This should be implemented by a calculator (i.e. LikelihoodWrapper or; /// LikelihoodGradientWrapper derived class), if desired.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:314,Performance,optimiz,optimization,314,"// Developer note on the std::move() warning above:; //; // The point here was that you don't want to clone RooAbsL's too much, because they contain clones of the pdf and; // dataset that may have been mangled for optimization. You probably don't want to be doing that all the time, although; // it is a premature optimization, since we haven't timed its impact. That is the motivation behind using unique_ptrs; // for the components. The way the classes are built, the RooSumL doesn't care about what components it gets, so by; // definition it cannot create them internally, so they have to be passed in somehow. Forcing the user to call the; // function with a std::move is a way to make them fully realize that their local components will be destroyed and the; // contents moved into the RooSumL.; //; // We could change the type to an rvalue reference to make it clearer from the compiler error that std::move is; // necessary, instead of the obscure error that you get now. Compare the compiler error messages from these two types:; //; //#include <vector>; //#include <memory>; //#include <cstdio>; //; // struct Clear {; // Clear(std::vector<std::unique_ptr<int>>&& vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // struct Obscure {; // Obscure(std::vector<std::unique_ptr<int>> vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // int main() {; // std::vector<std::unique_ptr<int>> vec;; // vec.emplace_back(new int(4));; // Clear thing(vec);; // Obscure thingy(vec);; //}; /// \note Compared to the RooAbsTestStatistic implementation that this was taken from, we leave out Hybrid and; /// SimComponents interleaving support here. This should be implemented by a calculator (i.e. LikelihoodWrapper or; /// LikelihoodGradientWrapper derived class), if desired.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:868,Usability,clear,clearer,868,"// Developer note on the std::move() warning above:; //; // The point here was that you don't want to clone RooAbsL's too much, because they contain clones of the pdf and; // dataset that may have been mangled for optimization. You probably don't want to be doing that all the time, although; // it is a premature optimization, since we haven't timed its impact. That is the motivation behind using unique_ptrs; // for the components. The way the classes are built, the RooSumL doesn't care about what components it gets, so by; // definition it cannot create them internally, so they have to be passed in somehow. Forcing the user to call the; // function with a std::move is a way to make them fully realize that their local components will be destroyed and the; // contents moved into the RooSumL.; //; // We could change the type to an rvalue reference to make it clearer from the compiler error that std::move is; // necessary, instead of the obscure error that you get now. Compare the compiler error messages from these two types:; //; //#include <vector>; //#include <memory>; //#include <cstdio>; //; // struct Clear {; // Clear(std::vector<std::unique_ptr<int>>&& vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // struct Obscure {; // Obscure(std::vector<std::unique_ptr<int>> vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // int main() {; // std::vector<std::unique_ptr<int>> vec;; // vec.emplace_back(new int(4));; // Clear thing(vec);; // Obscure thingy(vec);; //}; /// \note Compared to the RooAbsTestStatistic implementation that this was taken from, we leave out Hybrid and; /// SimComponents interleaving support here. This should be implemented by a calculator (i.e. LikelihoodWrapper or; /// LikelihoodGradientWrapper derived class), if desired.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:1120,Usability,Clear,Clear,1120,"// Developer note on the std::move() warning above:; //; // The point here was that you don't want to clone RooAbsL's too much, because they contain clones of the pdf and; // dataset that may have been mangled for optimization. You probably don't want to be doing that all the time, although; // it is a premature optimization, since we haven't timed its impact. That is the motivation behind using unique_ptrs; // for the components. The way the classes are built, the RooSumL doesn't care about what components it gets, so by; // definition it cannot create them internally, so they have to be passed in somehow. Forcing the user to call the; // function with a std::move is a way to make them fully realize that their local components will be destroyed and the; // contents moved into the RooSumL.; //; // We could change the type to an rvalue reference to make it clearer from the compiler error that std::move is; // necessary, instead of the obscure error that you get now. Compare the compiler error messages from these two types:; //; //#include <vector>; //#include <memory>; //#include <cstdio>; //; // struct Clear {; // Clear(std::vector<std::unique_ptr<int>>&& vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // struct Obscure {; // Obscure(std::vector<std::unique_ptr<int>> vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // int main() {; // std::vector<std::unique_ptr<int>> vec;; // vec.emplace_back(new int(4));; // Clear thing(vec);; // Obscure thingy(vec);; //}; /// \note Compared to the RooAbsTestStatistic implementation that this was taken from, we leave out Hybrid and; /// SimComponents interleaving support here. This should be implemented by a calculator (i.e. LikelihoodWrapper or; /// LikelihoodGradientWrapper derived class), if desired.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:1132,Usability,Clear,Clear,1132,"// Developer note on the std::move() warning above:; //; // The point here was that you don't want to clone RooAbsL's too much, because they contain clones of the pdf and; // dataset that may have been mangled for optimization. You probably don't want to be doing that all the time, although; // it is a premature optimization, since we haven't timed its impact. That is the motivation behind using unique_ptrs; // for the components. The way the classes are built, the RooSumL doesn't care about what components it gets, so by; // definition it cannot create them internally, so they have to be passed in somehow. Forcing the user to call the; // function with a std::move is a way to make them fully realize that their local components will be destroyed and the; // contents moved into the RooSumL.; //; // We could change the type to an rvalue reference to make it clearer from the compiler error that std::move is; // necessary, instead of the obscure error that you get now. Compare the compiler error messages from these two types:; //; //#include <vector>; //#include <memory>; //#include <cstdio>; //; // struct Clear {; // Clear(std::vector<std::unique_ptr<int>>&& vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // struct Obscure {; // Obscure(std::vector<std::unique_ptr<int>> vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // int main() {; // std::vector<std::unique_ptr<int>> vec;; // vec.emplace_back(new int(4));; // Clear thing(vec);; // Obscure thingy(vec);; //}; /// \note Compared to the RooAbsTestStatistic implementation that this was taken from, we leave out Hybrid and; /// SimComponents interleaving support here. This should be implemented by a calculator (i.e. LikelihoodWrapper or; /// LikelihoodGradientWrapper derived class), if desired.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:1603,Usability,Clear,Clear,1603,"// Developer note on the std::move() warning above:; //; // The point here was that you don't want to clone RooAbsL's too much, because they contain clones of the pdf and; // dataset that may have been mangled for optimization. You probably don't want to be doing that all the time, although; // it is a premature optimization, since we haven't timed its impact. That is the motivation behind using unique_ptrs; // for the components. The way the classes are built, the RooSumL doesn't care about what components it gets, so by; // definition it cannot create them internally, so they have to be passed in somehow. Forcing the user to call the; // function with a std::move is a way to make them fully realize that their local components will be destroyed and the; // contents moved into the RooSumL.; //; // We could change the type to an rvalue reference to make it clearer from the compiler error that std::move is; // necessary, instead of the obscure error that you get now. Compare the compiler error messages from these two types:; //; //#include <vector>; //#include <memory>; //#include <cstdio>; //; // struct Clear {; // Clear(std::vector<std::unique_ptr<int>>&& vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // struct Obscure {; // Obscure(std::vector<std::unique_ptr<int>> vec) : vec_(std::move(vec)) {; // printf(""number is %d"", *vec_[0]);; // }; //; // std::vector<std::unique_ptr<int>> vec_;; //};; //; // int main() {; // std::vector<std::unique_ptr<int>> vec;; // vec.emplace_back(new int(4));; // Clear thing(vec);; // Obscure thingy(vec);; //}; /// \note Compared to the RooAbsTestStatistic implementation that this was taken from, we leave out Hybrid and; /// SimComponents interleaving support here. This should be implemented by a calculator (i.e. LikelihoodWrapper or; /// LikelihoodGradientWrapper derived class), if desired.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:586,Modifiability,extend,extended,586,"/*; * Project: RooFit; * Authors:; * PB, Patrick Bos, Netherlands eScience Center, p.bos@esciencecenter.nl; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file RooUnbinnedL.cxx; \class RooUnbinnedL; \ingroup Roofitcore. A -log(likelihood) calculation from a dataset; (assumed to be unbinned) and a PDF. The NLL is calculated as; \f[; \sum_\mathrm{data} -\log( \mathrm{pdf}(x_\mathrm{data})); \f]; In extended mode, a; \f$ N_\mathrm{expect} - N_\mathrm{observed}*log(N_\mathrm{expect}) \f$ term is added.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:409,Testability,log,log,409,"/*; * Project: RooFit; * Authors:; * PB, Patrick Bos, Netherlands eScience Center, p.bos@esciencecenter.nl; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file RooUnbinnedL.cxx; \class RooUnbinnedL; \ingroup Roofitcore. A -log(likelihood) calculation from a dataset; (assumed to be unbinned) and a PDF. The NLL is calculated as; \f[; \sum_\mathrm{data} -\log( \mathrm{pdf}(x_\mathrm{data})); \f]; In extended mode, a; \f$ N_\mathrm{expect} - N_\mathrm{observed}*log(N_\mathrm{expect}) \f$ term is added.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:541,Testability,log,log,541,"/*; * Project: RooFit; * Authors:; * PB, Patrick Bos, Netherlands eScience Center, p.bos@esciencecenter.nl; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file RooUnbinnedL.cxx; \class RooUnbinnedL; \ingroup Roofitcore. A -log(likelihood) calculation from a dataset; (assumed to be unbinned) and a PDF. The NLL is calculated as; \f[; \sum_\mathrm{data} -\log( \mathrm{pdf}(x_\mathrm{data})); \f]; In extended mode, a; \f$ N_\mathrm{expect} - N_\mathrm{observed}*log(N_\mathrm{expect}) \f$ term is added.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:648,Testability,log,log,648,"/*; * Project: RooFit; * Authors:; * PB, Patrick Bos, Netherlands eScience Center, p.bos@esciencecenter.nl; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file RooUnbinnedL.cxx; \class RooUnbinnedL; \ingroup Roofitcore. A -log(likelihood) calculation from a dataset; (assumed to be unbinned) and a PDF. The NLL is calculated as; \f[; \sum_\mathrm{data} -\log( \mathrm{pdf}(x_\mathrm{data})); \f]; In extended mode, a; \f$ N_\mathrm{expect} - N_\mathrm{observed}*log(N_\mathrm{expect}) \f$ term is added.; **/",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:31,Availability,error,errors,31,"// Some events with evaluation errors. Return ""badness"" of errors.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:59,Availability,error,errors,59,"// Some events with evaluation errors. Return ""badness"" of errors.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:31,Availability,error,errors,31,"// Some events with evaluation errors. Return ""badness"" of errors.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:59,Availability,error,errors,59,"// Some events with evaluation errors. Return ""badness"" of errors.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:239,Modifiability,extend,extended,239,"// namespace; //////////////////////////////////////////////////////////////////////////////////; /// Calculate and return likelihood on subset of data from firstEvent to lastEvent; /// processed with a step size of 'stepSize'. If this an extended likelihood and; /// and the zero event is processed the extended term is added to the return; /// likelihood.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:304,Modifiability,extend,extended,304,"// namespace; //////////////////////////////////////////////////////////////////////////////////; /// Calculate and return likelihood on subset of data from firstEvent to lastEvent; /// processed with a step size of 'stepSize'. If this an extended likelihood and; /// and the zero event is processed the extended term is added to the return; /// likelihood.; ///",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:246,Availability,toler,tolerate,246,"// Throughout the calculation, we use Kahan's algorithm for summing to; // prevent loss of precision - this is a factor four more expensive than; // straight addition, but since evaluating the PDF is usually much more; // expensive than that, we tolerate the additional cost...",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:91,Performance,optimiz,optimized,91,"// Here, we have a memory allocation that should be avoided when this; // code needs to be optimized.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:52,Safety,avoid,avoided,52,"// Here, we have a memory allocation that should be avoided when this; // code needs to be optimized.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:15,Modifiability,extend,extended,15,"// include the extended maximum likelihood term, if requested",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:96,Testability,log,log,96,"// If part of simultaneous PDF normalize probability over; // number of simultaneous PDFs: -sum(log(p/n)) = -sum(log(p)) + N*log(n)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:113,Testability,log,log,113,"// If part of simultaneous PDF normalize probability over; // number of simultaneous PDFs: -sum(log(p/n)) = -sum(log(p)) + N*log(n)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:125,Testability,log,log,125,"// If part of simultaneous PDF normalize probability over; // number of simultaneous PDFs: -sum(log(p/n)) = -sum(log(p)) + N*log(n)",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:54,Performance,cache,caches,54,"// At the end of the first full calculation, wire the caches. This doesn't; // need to be done in BatchMode with the RooFit driver.",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:13,Testability,Test,TestStatistics,13,"// namespace TestStatistics",MatchSource.CODE_COMMENT,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:92,Testability,test,test,92,"////////////////////////////////////////////////////////////////////////////////; /// Print test program number and its title",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:36,Availability,error,errors,36,"// Add dedicated logging stream for errors that will remain active in silent mode",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:17,Testability,log,logging,17,"// Add dedicated logging stream for errors that will remain active in silent mode",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:37,Testability,test,test,37,"// increment retVal for every failed test",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:907,Availability,error,errors,907,"R""(usage: stressRooFit [ options ]. -b <mode> : Perform every fit in the tests with the EvalBackend(<mode>) command argument, where <mode> is a string; -f <file> : use given reference file instead of default (""stressRooFit_ref.root""); -w : write reference file, instead of reading file and running comparison tests. -n N : Only run test with sequential number N instead of full suite of tests; -c : dump file stressRooFit_DEBUG.root to which results of both current result and reference for each failed test are written; -mc : memory check mode, no regression test are performed. Set this flag when running with valgrind; -min <name> : minimizer name (default is Minuit, not Minuit2); -vs : Use vector-based storage for all datasets (default is tree-based storage); -v/-vv : set verbose mode (show result of each regression test) or very verbose mode (show all roofit output as well); -q : quiet mode where errors are not logged; -d N : set ROOT gDebug flag to N; )""",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:48,Performance,Perform,Perform,48,"R""(usage: stressRooFit [ options ]. -b <mode> : Perform every fit in the tests with the EvalBackend(<mode>) command argument, where <mode> is a string; -f <file> : use given reference file instead of default (""stressRooFit_ref.root""); -w : write reference file, instead of reading file and running comparison tests. -n N : Only run test with sequential number N instead of full suite of tests; -c : dump file stressRooFit_DEBUG.root to which results of both current result and reference for each failed test are written; -mc : memory check mode, no regression test are performed. Set this flag when running with valgrind; -min <name> : minimizer name (default is Minuit, not Minuit2); -vs : Use vector-based storage for all datasets (default is tree-based storage); -v/-vv : set verbose mode (show result of each regression test) or very verbose mode (show all roofit output as well); -q : quiet mode where errors are not logged; -d N : set ROOT gDebug flag to N; )""",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:569,Performance,perform,performed,569,"R""(usage: stressRooFit [ options ]. -b <mode> : Perform every fit in the tests with the EvalBackend(<mode>) command argument, where <mode> is a string; -f <file> : use given reference file instead of default (""stressRooFit_ref.root""); -w : write reference file, instead of reading file and running comparison tests. -n N : Only run test with sequential number N instead of full suite of tests; -c : dump file stressRooFit_DEBUG.root to which results of both current result and reference for each failed test are written; -mc : memory check mode, no regression test are performed. Set this flag when running with valgrind; -min <name> : minimizer name (default is Minuit, not Minuit2); -vs : Use vector-based storage for all datasets (default is tree-based storage); -v/-vv : set verbose mode (show result of each regression test) or very verbose mode (show all roofit output as well); -q : quiet mode where errors are not logged; -d N : set ROOT gDebug flag to N; )""",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:73,Testability,test,tests,73,"R""(usage: stressRooFit [ options ]. -b <mode> : Perform every fit in the tests with the EvalBackend(<mode>) command argument, where <mode> is a string; -f <file> : use given reference file instead of default (""stressRooFit_ref.root""); -w : write reference file, instead of reading file and running comparison tests. -n N : Only run test with sequential number N instead of full suite of tests; -c : dump file stressRooFit_DEBUG.root to which results of both current result and reference for each failed test are written; -mc : memory check mode, no regression test are performed. Set this flag when running with valgrind; -min <name> : minimizer name (default is Minuit, not Minuit2); -vs : Use vector-based storage for all datasets (default is tree-based storage); -v/-vv : set verbose mode (show result of each regression test) or very verbose mode (show all roofit output as well); -q : quiet mode where errors are not logged; -d N : set ROOT gDebug flag to N; )""",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:309,Testability,test,tests,309,"R""(usage: stressRooFit [ options ]. -b <mode> : Perform every fit in the tests with the EvalBackend(<mode>) command argument, where <mode> is a string; -f <file> : use given reference file instead of default (""stressRooFit_ref.root""); -w : write reference file, instead of reading file and running comparison tests. -n N : Only run test with sequential number N instead of full suite of tests; -c : dump file stressRooFit_DEBUG.root to which results of both current result and reference for each failed test are written; -mc : memory check mode, no regression test are performed. Set this flag when running with valgrind; -min <name> : minimizer name (default is Minuit, not Minuit2); -vs : Use vector-based storage for all datasets (default is tree-based storage); -v/-vv : set verbose mode (show result of each regression test) or very verbose mode (show all roofit output as well); -q : quiet mode where errors are not logged; -d N : set ROOT gDebug flag to N; )""",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:332,Testability,test,test,332,"R""(usage: stressRooFit [ options ]. -b <mode> : Perform every fit in the tests with the EvalBackend(<mode>) command argument, where <mode> is a string; -f <file> : use given reference file instead of default (""stressRooFit_ref.root""); -w : write reference file, instead of reading file and running comparison tests. -n N : Only run test with sequential number N instead of full suite of tests; -c : dump file stressRooFit_DEBUG.root to which results of both current result and reference for each failed test are written; -mc : memory check mode, no regression test are performed. Set this flag when running with valgrind; -min <name> : minimizer name (default is Minuit, not Minuit2); -vs : Use vector-based storage for all datasets (default is tree-based storage); -v/-vv : set verbose mode (show result of each regression test) or very verbose mode (show all roofit output as well); -q : quiet mode where errors are not logged; -d N : set ROOT gDebug flag to N; )""",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:387,Testability,test,tests,387,"R""(usage: stressRooFit [ options ]. -b <mode> : Perform every fit in the tests with the EvalBackend(<mode>) command argument, where <mode> is a string; -f <file> : use given reference file instead of default (""stressRooFit_ref.root""); -w : write reference file, instead of reading file and running comparison tests. -n N : Only run test with sequential number N instead of full suite of tests; -c : dump file stressRooFit_DEBUG.root to which results of both current result and reference for each failed test are written; -mc : memory check mode, no regression test are performed. Set this flag when running with valgrind; -min <name> : minimizer name (default is Minuit, not Minuit2); -vs : Use vector-based storage for all datasets (default is tree-based storage); -v/-vv : set verbose mode (show result of each regression test) or very verbose mode (show all roofit output as well); -q : quiet mode where errors are not logged; -d N : set ROOT gDebug flag to N; )""",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:503,Testability,test,test,503,"R""(usage: stressRooFit [ options ]. -b <mode> : Perform every fit in the tests with the EvalBackend(<mode>) command argument, where <mode> is a string; -f <file> : use given reference file instead of default (""stressRooFit_ref.root""); -w : write reference file, instead of reading file and running comparison tests. -n N : Only run test with sequential number N instead of full suite of tests; -c : dump file stressRooFit_DEBUG.root to which results of both current result and reference for each failed test are written; -mc : memory check mode, no regression test are performed. Set this flag when running with valgrind; -min <name> : minimizer name (default is Minuit, not Minuit2); -vs : Use vector-based storage for all datasets (default is tree-based storage); -v/-vv : set verbose mode (show result of each regression test) or very verbose mode (show all roofit output as well); -q : quiet mode where errors are not logged; -d N : set ROOT gDebug flag to N; )""",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:560,Testability,test,test,560,"R""(usage: stressRooFit [ options ]. -b <mode> : Perform every fit in the tests with the EvalBackend(<mode>) command argument, where <mode> is a string; -f <file> : use given reference file instead of default (""stressRooFit_ref.root""); -w : write reference file, instead of reading file and running comparison tests. -n N : Only run test with sequential number N instead of full suite of tests; -c : dump file stressRooFit_DEBUG.root to which results of both current result and reference for each failed test are written; -mc : memory check mode, no regression test are performed. Set this flag when running with valgrind; -min <name> : minimizer name (default is Minuit, not Minuit2); -vs : Use vector-based storage for all datasets (default is tree-based storage); -v/-vv : set verbose mode (show result of each regression test) or very verbose mode (show all roofit output as well); -q : quiet mode where errors are not logged; -d N : set ROOT gDebug flag to N; )""",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:824,Testability,test,test,824,"R""(usage: stressRooFit [ options ]. -b <mode> : Perform every fit in the tests with the EvalBackend(<mode>) command argument, where <mode> is a string; -f <file> : use given reference file instead of default (""stressRooFit_ref.root""); -w : write reference file, instead of reading file and running comparison tests. -n N : Only run test with sequential number N instead of full suite of tests; -c : dump file stressRooFit_DEBUG.root to which results of both current result and reference for each failed test are written; -mc : memory check mode, no regression test are performed. Set this flag when running with valgrind; -min <name> : minimizer name (default is Minuit, not Minuit2); -vs : Use vector-based storage for all datasets (default is tree-based storage); -v/-vv : set verbose mode (show result of each regression test) or very verbose mode (show all roofit output as well); -q : quiet mode where errors are not logged; -d N : set ROOT gDebug flag to N; )""",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:922,Testability,log,logged,922,"R""(usage: stressRooFit [ options ]. -b <mode> : Perform every fit in the tests with the EvalBackend(<mode>) command argument, where <mode> is a string; -f <file> : use given reference file instead of default (""stressRooFit_ref.root""); -w : write reference file, instead of reading file and running comparison tests. -n N : Only run test with sequential number N instead of full suite of tests; -c : dump file stressRooFit_DEBUG.root to which results of both current result and reference for each failed test are written; -mc : memory check mode, no regression test are performed. Set this flag when running with valgrind; -min <name> : minimizer name (default is Minuit, not Minuit2); -vs : Use vector-based storage for all datasets (default is tree-based storage); -v/-vv : set verbose mode (show result of each regression test) or very verbose mode (show all roofit output as well); -q : quiet mode where errors are not logged; -d N : set ROOT gDebug flag to N; )""",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx:36,Deployability,update,update,36,"// Locate file name part in URL and update refFileName accordingly",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:61,Modifiability,variab,variables,61,"// S e t u p m o d e l; // ---------------------; // Declare variables x,mean,sigma with associated name, title, initial value and allowed range",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:151,Availability,error,error,151,"// P l o t a n d f i t a R o o D a t a H i s t; // ---------------------------------------------------; // Make plot of binned dataset showing Poisson error bars (RooFit default)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:209,Availability,error,error,209,"// P l o t a n d f i t a R o o D a t a H i s t w i t h i n t e r n a l e r r o r s; // ---------------------------------------------------------------------------------------------; // If histogram has custom error (i.e. its contents is does not originate from a Poisson process; // but e.g. is a sum of weighted events) you can data with symmetric 'sum-of-weights' error instead; // (same error bars as shown by ROOT)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:366,Availability,error,error,366,"// P l o t a n d f i t a R o o D a t a H i s t w i t h i n t e r n a l e r r o r s; // ---------------------------------------------------------------------------------------------; // If histogram has custom error (i.e. its contents is does not originate from a Poisson process; // but e.g. is a sum of weighted events) you can data with symmetric 'sum-of-weights' error instead; // (same error bars as shown by ROOT)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:390,Availability,error,error,390,"// P l o t a n d f i t a R o o D a t a H i s t w i t h i n t e r n a l e r r o r s; // ---------------------------------------------------------------------------------------------; // If histogram has custom error (i.e. its contents is does not originate from a Poisson process; // but e.g. is a sum of weighted events) you can data with symmetric 'sum-of-weights' error instead; // (same error bars as shown by ROOT)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:20,Availability,error,error,20,"// Please note that error bars shown (Poisson or SumW2) are for visualization only, the are NOT used; // in a maximum likelihood fit; //; // A (binned) ML fit will ALWAYS assume the Poisson error interpretation of data (the mathematical definition; // of likelihood does not take any external definition of errors). Data with non-unit weights can only be; // correctly fitted with a chi^2 fit (see rf602_chi2fit.C); ////////////////////////////////////////////////; // I m p o r t i n g R O O T T T r e e s //; ////////////////////////////////////////////////; // I m p o r t T T r e e i n t o a R o o D a t a S e t; // -----------------------------------------------------------",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:190,Availability,error,error,190,"// Please note that error bars shown (Poisson or SumW2) are for visualization only, the are NOT used; // in a maximum likelihood fit; //; // A (binned) ML fit will ALWAYS assume the Poisson error interpretation of data (the mathematical definition; // of likelihood does not take any external definition of errors). Data with non-unit weights can only be; // correctly fitted with a chi^2 fit (see rf602_chi2fit.C); ////////////////////////////////////////////////; // I m p o r t i n g R O O T T T r e e s //; ////////////////////////////////////////////////; // I m p o r t T T r e e i n t o a R o o D a t a S e t; // -----------------------------------------------------------",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:307,Availability,error,errors,307,"// Please note that error bars shown (Poisson or SumW2) are for visualization only, the are NOT used; // in a maximum likelihood fit; //; // A (binned) ML fit will ALWAYS assume the Poisson error interpretation of data (the mathematical definition; // of likelihood does not take any external definition of errors). Data with non-unit weights can only be; // correctly fitted with a chi^2 fit (see rf602_chi2fit.C); ////////////////////////////////////////////////; // I m p o r t i n g R O O T T T r e e s //; ////////////////////////////////////////////////; // I m p o r t T T r e e i n t o a R o o D a t a S e t; // -----------------------------------------------------------",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:186,Modifiability,variab,variables,186,"// B i n d R O O T : : M a t h : : b e t a _ p d f C f u n c t i o n; // -----------------------------------------------------------------------; // Bind pdf ROOT::Math::Beta with three variables as RooAbsPdf function; // exclude x=0 and x=1 points from range since beta_pdf diverges at x=0 and x=1; // when a < 1 and/or b <1",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:45,Modifiability,variab,variable,45,"// Plotting unbinned data with alternate and variable binnings",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:456,Modifiability,variab,variable,456,"// NB: Note that bin density for each bin is adjusted to that of default frame binning as shown; // in Y axis label (100 bins --> Events/0.4*Xaxis-dim) so that all bins represent a consistent density; // distribution; // S h o w m i x s t a t e a s y m m e t r y w i t h c u s t o m b i n n i n g; // ------------------------------------------------------------------------------------; // Make plot of dt distribution of data asymmetry in 'mixState' with variable binning; // Create binning object with range (-10,10)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:227,Testability,test,test,227,"// S h o w r e s i d u a l a n d p u l l d i s t s; // -------------------------------------------------------; // Construct a histogram with the residuals of the data w.r.t. the curve; // we set `useAverage` to false for this test because this was done for the reference histogram",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:110,Testability,test,test,110,"// Construct a histogram with the pulls of the data w.r.t the curve; // we set `useAverage` to false for this test because this was done for the reference histogram",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:41,Deployability,integrat,integration,41,"// Examples on normalization of p.d.f.s, integration of p.d.fs, construction of; // cumulative distribution functions from p.d.f.s in one dimension.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:41,Integrability,integrat,integration,41,"// Examples on normalization of p.d.f.s, integration of p.d.fs, construction of; // cumulative distribution functions from p.d.f.s in one dimension.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:3,Deployability,Configurat,Configuration,3,"// Configuration and customization of how numeric (partial) integrals; // are executed.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:3,Modifiability,Config,Configuration,3,"// Configuration and customization of how numeric (partial) integrals; // are executed.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:545,Deployability,integrat,integrate,545,"// A d j u s t g l o b a l 1 D i n t e g r a t i o n p r e c i s i o n; // ----------------------------------------------------------------------------; // Example: Change global precision for 1D integrals from 1e-7 to 1e-6; //; // The relative epsilon (change as fraction of current best integral estimate) and; // absolute epsilon (absolute change w.r.t last best integral estimate) can be specified; // separately. For most p.d.f integrals the relative change criterium is the most important,; // however for certain non-p.d.f functions that integrate out to zero a separate absolute; // change criterium is necessary to declare convergence of the integral; //; // NB: This change is for illustration only. In general the precision should be at least 1e-7; // for normalization integrals for MINUIT to succeed.; //",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:545,Integrability,integrat,integrate,545,"// A d j u s t g l o b a l 1 D i n t e g r a t i o n p r e c i s i o n; // ----------------------------------------------------------------------------; // Example: Change global precision for 1D integrals from 1e-7 to 1e-6; //; // The relative epsilon (change as fraction of current best integral estimate) and; // absolute epsilon (absolute change w.r.t last best integral estimate) can be specified; // separately. For most p.d.f integrals the relative change criterium is the most important,; // however for certain non-p.d.f functions that integrate out to zero a separate absolute; // change criterium is necessary to declare convergence of the integral; //; // NB: This change is for illustration only. In general the precision should be at least 1e-7; // for normalization integrals for MINUIT to succeed.; //",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:20,Deployability,integrat,integration,20,"// Disable analytic integration from demonstration purposes",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:20,Integrability,integrat,integration,20,"// Disable analytic integration from demonstration purposes",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:65,Deployability,integrat,integrator,65,"// Calculate integral over landau with default choice of numeric integrator",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:65,Integrability,integrat,integrator,65,"// Calculate integral over landau with default choice of numeric integrator",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:144,Deployability,configurat,configuration,144,"// S a m e w i t h c u s t o m c o n f i g u r a t i o n; // -----------------------------------------------------------; // Construct a custom configuration which uses the adaptive Gauss-Kronrod technique; // for closed 1D integrals",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:173,Energy Efficiency,adapt,adaptive,173,"// S a m e w i t h c u s t o m c o n f i g u r a t i o n; // -----------------------------------------------------------; // Construct a custom configuration which uses the adaptive Gauss-Kronrod technique; // for closed 1D integrals",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:144,Modifiability,config,configuration,144,"// S a m e w i t h c u s t o m c o n f i g u r a t i o n; // -----------------------------------------------------------; // Construct a custom configuration which uses the adaptive Gauss-Kronrod technique; // for closed 1D integrals",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:173,Modifiability,adapt,adaptive,173,"// S a m e w i t h c u s t o m c o n f i g u r a t i o n; // -----------------------------------------------------------; // Construct a custom configuration which uses the adaptive Gauss-Kronrod technique; // for closed 1D integrals",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:217,Deployability,integrat,integration,217,"// A d j u s t i n g d e f a u l t c o n f i g f o r a s p e c i f i c p d f; // -------------------------------------------------------------------------------------; // Another possibility: associate custom numeric integration configuration as default for object 'landau'",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:229,Deployability,configurat,configuration,229,"// A d j u s t i n g d e f a u l t c o n f i g f o r a s p e c i f i c p d f; // -------------------------------------------------------------------------------------; // Another possibility: associate custom numeric integration configuration as default for object 'landau'",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:217,Integrability,integrat,integration,217,"// A d j u s t i n g d e f a u l t c o n f i g f o r a s p e c i f i c p d f; // -------------------------------------------------------------------------------------; // Another possibility: associate custom numeric integration configuration as default for object 'landau'",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:229,Modifiability,config,configuration,229,"// A d j u s t i n g d e f a u l t c o n f i g f o r a s p e c i f i c p d f; // -------------------------------------------------------------------------------------; // Another possibility: associate custom numeric integration configuration as default for object 'landau'",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:49,Deployability,integrat,integrator,49,"// Calculate integral over landau custom numeric integrator specified as object default",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:49,Integrability,integrat,integrator,49,"// Calculate integral over landau custom numeric integrator specified as object default",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:17,Modifiability,extend,extended,17,"// Setting up an extended maximum likelihood fit.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:256,Modifiability,extend,extended,256,"/////////////////////; // M E T H O D 1 //; /////////////////////; // C o n s t r u c t e x t e n d e d c o m p o s i t e m o d e l; // -------------------------------------------------------------------; // Sum the composite signal and background into an extended pdf nsig*sig+nbkg*bkg",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:22,Modifiability,extend,extended,22,"// Fit model to data, extended ML term automatically included",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:172,Modifiability,extend,extended,172,"// S u m e x t e n d e d c o m p o n e n t s w i t h o u t c o e f s; // -------------------------------------------------------------------------; // Construct sum of two extended p.d.f. (no coefficients required)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:3,Modifiability,Extend,Extended,3,"// Extended maximum likelihood fit with alternate range definition; // for observed number of events.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:120,Modifiability,extend,extended,120,"// S u m e x t e n d e d c o m p o n e n t s; // ---------------------------------------------; // Construct sum of two extended p.d.f. (no coefficients required)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:20,Modifiability,extend,extended,20,"// Perform unbinned extended ML fit to data",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:3,Performance,Perform,Perform,3,"// Perform unbinned extended ML fit to data",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:143,Modifiability,Variab,Variables,143,"// B - p h y s i c s p d f w i t h t r u t h r e s o l u t i o n; // ---------------------------------------------------------------------; // Variables of decay p.d.f.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:111,Integrability,depend,depends,111,"// Multi-dimensional p.d.f.s through composition, e.g. substituting a; // p.d.f parameter with a function that depends on other observables; //; // pdf = gauss(x,f(y),s) with f(y) = a0 + a1*y",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:29,Availability,avail,available,29,"// Utility functions classes available for use in tailoring; // of composite (multidimensional) pdfs",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:3,Usability,Simpl,Simple,3,"// Simple uncorrelated multi-dimensional p.d.f.s; //; // pdf = gauss(x,mx,sx) * gauss(y,my,sy)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:201,Modifiability,variab,variables,201,"// C r e a t e c o m p o n e n t p d f s i n x a n d y; // ----------------------------------------------------------------; // Create two p.d.f.s gaussx(x,meanx,sigmax) gaussy(y,meany,sigmay) and its variables",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:66,Availability,error,errors,66,"// Complete example with use of conditional p.d.f. with per-event errors.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:61,Availability,error,error,61,"// Build a gaussian resolution model scaled by the per-event error = gauss(dt,bias,sigma*dterr)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:64,Deployability,integrat,integrating,64,"// Make projection of decay(dt|dterr) on dt.; //; // Instead of integrating out dterr, make a weighted average of curves; // at values dterr_i as given in the external dataset.; // (The true argument bins the data before projection to speed up the process)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:64,Integrability,integrat,integrating,64,"// Make projection of decay(dt|dterr) on dt.; //; // Instead of integrating out dterr, make a weighted average of curves; // at values dterr_i as given in the external dataset.; // (The true argument bins the data before projection to speed up the process)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:59,Availability,error,errors,59,"// Complete example with use of full p.d.f. with per-event errors.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:61,Availability,error,error,61,"// Build a gaussian resolution model scaled by the per-event error = gauss(dt,bias,sigma*dterr)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:41,Deployability,integrat,integration,41,"// Examples on normalization of p.d.f.s, integration of p.d.fs, construction of; // cumulative distribution functions from p.d.f.s in two dimensions.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:41,Integrability,integrat,integration,41,"// Examples on normalization of p.d.f.s, integration of p.d.fs, construction of; // cumulative distribution functions from p.d.f.s in two dimensions.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:49,Availability,error,errors,49,"// Generate BMixing data with above set of event errors",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:164,Deployability,integrat,integrated,164,"// P l o t f u l l d e c a y d i s t r i b u t i o n; // ----------------------------------------------------------; // Create frame, plot data and pdf projection (integrated over tagFlav and mixState)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:164,Integrability,integrat,integrated,164,"// P l o t f u l l d e c a y d i s t r i b u t i o n; // ----------------------------------------------------------; // Create frame, plot data and pdf projection (integrated over tagFlav and mixState)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:86,Deployability,integrat,integrated,86,"// Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate over data (integrated over tagFlav)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:86,Integrability,integrat,integrated,86,"// Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate over data (integrated over tagFlav)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:88,Deployability,integrat,integrated,88,"// Position slice in mixState at ""unmixed"" and plot slice of pdf in mixstate over data (integrated over tagFlav)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:88,Integrability,integrat,integrated,88,"// Position slice in mixState at ""unmixed"" and plot slice of pdf in mixstate over data (integrated over tagFlav)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:39,Deployability,continuous,continuous,39,"// Projecting p.d.f and data ranges in continuous observables.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:23,Deployability,integrat,integrating,23,"// Project model on x, integrating projected observables (y,z) only in ""sigRegion""",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:23,Integrability,integrat,integrating,23,"// Project model on x, integrating projected observables (y,z) only in ""sigRegion""",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:3,Performance,Perform,Performing,3,"// Performing fits in multiple (disjoint) ranges in one or more dimensions.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:173,Performance,Perform,Perform,173,"// P e r f o r m f i t s i n i n d i v i d u a l s i d e b a n d r e g i o n s; // -------------------------------------------------------------------------------------; // Perform fit in SideBand1 region (RooAddPdf coefficients will be interpreted in full range)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:3,Performance,Perform,Perform,3,"// Perform fit in SideBand2 region (RooAddPdf coefficients will be interpreted in full range)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:159,Performance,perform,perform,159,"// P e r f o r m f i t s i n j o i n t s i d e b a n d r e g i o n s; // -----------------------------------------------------------------------------; // Now perform fit to joint 'L-shaped' sideband region 'SB1|SB2'; // (RooAddPdf coefficients will be interpreted in full range)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:91,Deployability,integrat,integration,91,"// Working with parameterized ranges to define non-rectangular regions; // for fitting and integration.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:91,Integrability,integrat,integration,91,"// Working with parameterized ranges to define non-rectangular regions; // for fitting and integration.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:16,Modifiability,parameteriz,parameterized,16,"// Working with parameterized ranges to define non-rectangular regions; // for fitting and integration.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:251,Modifiability,parameteriz,parameterized,251,"// D e f i n e d n o n - r e c t a n g u l a r r e g i o n R i n ( x , y , z ); // -------------------------------------------------------------------------------------; //; // R = Z[0 - 0.1*Y^2] * Y[0.1*X - 0.9*X] * X[0 - 10]; //; // Construct range parameterized in ""R"" in y [ 0.1*x, 0.9*x ]",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:13,Modifiability,parameteriz,parameterized,13,"// Construct parameterized ranged ""R"" in z [ 0, 0.1*y^2 ]",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:93,Integrability,message,message,93,"// To remove the INFO:NumericIntegration output from the stressRooFit output,; // change the message level locally.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:16,Modifiability,parameteriz,parameterized,16,"// Working with parameterized ranges in a fit. This an example of a; // fit with an acceptance that changes per-event; //; // pdf = exp(-t/tau) with t[tmin,5]; //; // where t and tmin are both observables in the dataset",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:8,Modifiability,parameteriz,parameterized,8,"// Make parameterized range in t : [tmin,5]",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:58,Deployability,integrat,integration,58,"// Marginizalization of multi-dimensional p.d.f.s through integration.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:58,Integrability,integrat,integration,58,"// Marginizalization of multi-dimensional p.d.f.s through integration.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:168,Deployability,integrat,integration,168,"// C r e a t e p d f m ( x , y ) = g x ( x | y ) * g ( y ); // --------------------------------------------------------------; // Increase default precision of numeric integration; // as this exercise has high sensitivity to numeric integration precision",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:233,Deployability,integrat,integration,233,"// C r e a t e p d f m ( x , y ) = g x ( x | y ) * g ( y ); // --------------------------------------------------------------; // Increase default precision of numeric integration; // as this exercise has high sensitivity to numeric integration precision",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:168,Integrability,integrat,integration,168,"// C r e a t e p d f m ( x , y ) = g x ( x | y ) * g ( y ); // --------------------------------------------------------------; // Increase default precision of numeric integration; // as this exercise has high sensitivity to numeric integration precision",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:233,Integrability,integrat,integration,233,"// C r e a t e p d f m ( x , y ) = g x ( x | y ) * g ( y ); // --------------------------------------------------------------; // Increase default precision of numeric integration; // as this exercise has high sensitivity to numeric integration precision",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:62,Modifiability,enhance,enhanced,62,"// Using the likelihood ratio technique to construct a signal enhanced; // one-dimensional projection of a multi-dimensional p.d.f.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:248,Deployability,integrat,integrate,248,"// D e f i n e p r o j e c t e d s i g n a l l i k e l i h o o d r a t i o; // ----------------------------------------------------------------------------------; // Calculate projection of signal and total likelihood on (y,z) observables; // i.e. integrate signal and composite model over x",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:248,Integrability,integrat,integrate,248,"// D e f i n e p r o j e c t e d s i g n a l l i k e l i h o o d r a t i o; // ----------------------------------------------------------------------------------; // Calculate projection of signal and total likelihood on (y,z) observables; // i.e. integrate signal and composite model over x",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:17,Testability,log,log,17,"// Construct the log of the signal / signal+background probability",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:222,Deployability,integrat,integration,222,"// M a k e M C p r o j e c t i o n o f p d f w i t h s a m e L L r a t i o c u t; // ---------------------------------------------------------------------------------------------; // Generate large number of events for MC integration of pdf projection",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:222,Integrability,integrat,integration,222,"// M a k e M C p r o j e c t i o n o f p d f w i t h s a m e L L r a t i o c u t; // ---------------------------------------------------------------------------------------------; // Generate large number of events for MC integration of pdf projection",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:23,Deployability,integrat,integrating,23,"// Project model on x, integrating projected observables (y,z) with Monte Carlo technique; // on set of events with the same llratio cut as was applied to data",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:23,Integrability,integrat,integrating,23,"// Project model on x, integrating projected observables (y,z) with Monte Carlo technique; // on set of events with the same llratio cut as was applied to data",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:166,Integrability,interface,interface,166,"// Binned (RooDataHist) and unbinned datasets (RooDataSet) share; // many properties and inherit from a common abstract base class; // (RooAbsData), that provides an interface for all operations; // that can be performed regardless of the data format",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:89,Modifiability,inherit,inherit,89,"// Binned (RooDataHist) and unbinned datasets (RooDataSet) share; // many properties and inherit from a common abstract base class; // (RooAbsData), that provides an interface for all operations; // that can be performed regardless of the data format",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:211,Performance,perform,performed,211,"// Binned (RooDataHist) and unbinned datasets (RooDataSet) share; // many properties and inherit from a common abstract base class; // (RooAbsData), that provides an interface for all operations; // that can be performed regardless of the data format",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:89,Modifiability,variab,variables,89,"// Unlike RooAbsArgs (RooAbsPdf,RooFormulaVar,....) datasets are not attached to; // the variables they are constructed from. Instead they are attached to an internal; // clone of the supplied set of arguments; // Fill d with dummy values",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:133,Energy Efficiency,reduce,reduce,133,"// R e d u c i n g , A p p e n d i n g a n d M e r g i n g; // -------------------------------------------------------------; // The reduce() function returns a new dataset which is a subset of the original",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:260,Modifiability,variab,variables,260,"// O p e r a t i o n s o n b i n n e d d a t a s e t s; // ---------------------------------------------------------; // A binned dataset can be constructed empty, from an unbinned dataset, or; // from a ROOT native histogram (TH1,2,3); // The binning of real variables (like x,y) is done using their fit range; // 'get/setRange()' and number of specified fit bins 'get/setBins()'.; // Category dimensions of binned datasets get one bin per defined category state",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:46,Energy Efficiency,Reduce,Reduce,46,"// plot projection of 2D binned data on y; // Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; //; // All reduce() methods are interfaced in RooAbsData. All reduction techniques; // demonstrated on unbinned datasets can be applied to binned datasets as well.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:132,Energy Efficiency,reduce,reduce,132,"// plot projection of 2D binned data on y; // Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; //; // All reduce() methods are interfaced in RooAbsData. All reduction techniques; // demonstrated on unbinned datasets can be applied to binned datasets as well.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:153,Integrability,interface,interfaced,153,"// plot projection of 2D binned data on y; // Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; //; // All reduce() methods are interfaced in RooAbsData. All reduction techniques; // demonstrated on unbinned datasets can be applied to binned datasets as well.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:19,Modifiability,variab,variable,19,"// Add column with variable w to previously generated dataset",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:137,Availability,error,error,137,"// Fit quadratic polynomial to weighted data; // NOTE: Maximum likelihood fit to weighted data does in general; // NOT result in correct error estimates, unless individual; // event weights represent Poisson statistics themselves.; // In general, parameter error reflect precision of SumOfWeights; // events rather than NumEvents events. See comparisons below",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:257,Availability,error,error,257,"// Fit quadratic polynomial to weighted data; // NOTE: Maximum likelihood fit to weighted data does in general; // NOT result in correct error estimates, unless individual; // event weights represent Poisson statistics themselves.; // In general, parameter error reflect precision of SumOfWeights; // events rather than NumEvents events. See comparisons below",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:42,Availability,error,error,42,"// Plot data using sum-of-weights-squared error rather than Poisson errors",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:68,Availability,error,errors,68,"// Plot data using sum-of-weights-squared error rather than Poisson errors",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:68,Availability,error,errors,68,"// Perform chi2 fit to binned weighted dataset using sum-of-weights errors; //; // NB: Within the usual approximations of a chi2 fit, a chi2 fit to weighted; // data using sum-of-weights-squared errors does give correct error; // estimates",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:195,Availability,error,errors,195,"// Perform chi2 fit to binned weighted dataset using sum-of-weights errors; //; // NB: Within the usual approximations of a chi2 fit, a chi2 fit to weighted; // data using sum-of-weights-squared errors does give correct error; // estimates",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:220,Availability,error,error,220,"// Perform chi2 fit to binned weighted dataset using sum-of-weights errors; //; // NB: Within the usual approximations of a chi2 fit, a chi2 fit to weighted; // data using sum-of-weights-squared errors does give correct error; // estimates",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:3,Performance,Perform,Perform,3,"// Perform chi2 fit to binned weighted dataset using sum-of-weights errors; //; // NB: Within the usual approximations of a chi2 fit, a chi2 fit to weighted; // data using sum-of-weights-squared errors does give correct error; // estimates",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:402,Availability,error,error,402,"// C o m p a r e f i t r e s u l t s o f c h i 2 , M L f i t s t o ( u n ) w e i g h t e d d a t a; // ---------------------------------------------------------------------------------------------------------------; // Note that ML fit on 1Kevt of weighted data is closer to result of ML fit on 43Kevt of unweighted data; // than to 1Kevt of unweighted data, whereas the reference chi^2 fit with SumW2 error gives a result closer to; // that of an unbinned ML fit to 1Kevt of unweighted data.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:57,Modifiability,variab,variables,57,"// Working with RooCategory objects to describe discrete variables.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:360,Modifiability,variab,variable,360,"// C r e a t e a b i n n i n g r e a l - > c a t f u n c t i o n; // ----------------------------------------------------------------------; // A RooBinningCategory is a category function that maps bins of a (named) binning definition; // in a real-valued input observable observables to state names. The state names are automatically; // constructed from the variable name, the binning name and the bin number. If no binning name; // is specified the default binning is mapped",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:109,Performance,Perform,Perform,109,"// P e r f o r m a s i m u l t a n e o u s f i t; // ---------------------------------------------------; // Perform simultaneous fit of model to data and model_ctl to data_ctl",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:228,Deployability,integrat,integrated,228,"// Plot ""physics"" slice of simultaneous pdf.; // NBL You _must_ project the sample index category with data using ProjWData; // as a RooSimultaneous makes no prediction on the shape in the index category; // and can thus not be integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:228,Integrability,integrat,integrated,228,"// Plot ""physics"" slice of simultaneous pdf.; // NBL You _must_ project the sample index category with data using ProjWData; // as a RooSimultaneous makes no prediction on the shape in the index category; // and can thus not be integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:158,Safety,predict,prediction,158,"// Plot ""physics"" slice of simultaneous pdf.; // NBL You _must_ project the sample index category with data using ProjWData; // as a RooSimultaneous makes no prediction on the shape in the index category; // and can thus not be integrated",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:46,Usability,simpl,simple,46,"// Analytically convolved p.d.f.s; // Build a simple decay PDF",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:8,Testability,test,test,8,"// Make test plot and offer for comparison against ref plot",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:8,Testability,test,test,8,"// Make test plot and offer for comparison against ref plot",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:8,Testability,test,test,8,"// Make test plot and offer for comparison against ref plot",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:8,Testability,test,test,8,"// Make test plot and offer for comparison against ref plot",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:8,Testability,test,test,8,"// Make test plot and offer for comparison against ref plot",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:8,Testability,test,test,8,"// Make test plot and offer for comparison against ref plot",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:8,Testability,test,test,8,"// Make test plot and offer for comparison against ref plot",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:20,Integrability,interface,interface,20,"// Use RooMinimizer interface to minimize chi^2",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:33,Availability,error,error,33,"// Understanding and customizing error handling in likelihood evaluations.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:143,Availability,error,errors,143,"// Plot likelihood in m0 in range that includes problematic values; // In this configuration no messages are printed for likelihood evaluation errors,; // but if an likelihood value evaluates with error, the corresponding value; // on the curve will be set to the value given in EvalErrorValue().",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:197,Availability,error,error,197,"// Plot likelihood in m0 in range that includes problematic values; // In this configuration no messages are printed for likelihood evaluation errors,; // but if an likelihood value evaluates with error, the corresponding value; // on the curve will be set to the value given in EvalErrorValue().",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:79,Deployability,configurat,configuration,79,"// Plot likelihood in m0 in range that includes problematic values; // In this configuration no messages are printed for likelihood evaluation errors,; // but if an likelihood value evaluates with error, the corresponding value; // on the curve will be set to the value given in EvalErrorValue().",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:96,Integrability,message,messages,96,"// Plot likelihood in m0 in range that includes problematic values; // In this configuration no messages are printed for likelihood evaluation errors,; // but if an likelihood value evaluates with error, the corresponding value; // on the curve will be set to the value given in EvalErrorValue().",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:79,Modifiability,config,configuration,79,"// Plot likelihood in m0 in range that includes problematic values; // In this configuration no messages are printed for likelihood evaluation errors,; // but if an likelihood value evaluates with error, the corresponding value; // on the curve will be set to the value given in EvalErrorValue().",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:125,Performance,Perform,Perform,125,"// F i t p d f t o d a t a , s a v e f i t r e s u l t; // -------------------------------------------------------------; // Perform fit and save result",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:176,Availability,error,errors,176,"// C r e a t e d a t a s e t w i t h X a n d Y v a l u e s; // -------------------------------------------------------------------; // Make weighted XY dataset with asymmetric errors stored; // The StoreError() argument is essential as it makes; // the dataset store the error in addition to the values; // of the observables. If errors on one or more observables; // are asymmetric, one can store the asymmetric error; // using the StoreAsymError() argument",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:271,Availability,error,error,271,"// C r e a t e d a t a s e t w i t h X a n d Y v a l u e s; // -------------------------------------------------------------------; // Make weighted XY dataset with asymmetric errors stored; // The StoreError() argument is essential as it makes; // the dataset store the error in addition to the values; // of the observables. If errors on one or more observables; // are asymmetric, one can store the asymmetric error; // using the StoreAsymError() argument",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:330,Availability,error,errors,330,"// C r e a t e d a t a s e t w i t h X a n d Y v a l u e s; // -------------------------------------------------------------------; // Make weighted XY dataset with asymmetric errors stored; // The StoreError() argument is essential as it makes; // the dataset store the error in addition to the values; // of the observables. If errors on one or more observables; // are asymmetric, one can store the asymmetric error; // using the StoreAsymError() argument",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:413,Availability,error,error,413,"// C r e a t e d a t a s e t w i t h X a n d Y v a l u e s; // -------------------------------------------------------------------; // Make weighted XY dataset with asymmetric errors stored; // The StoreError() argument is essential as it makes; // the dataset store the error in addition to the values; // of the observables. If errors on one or more observables; // are asymmetric, one can store the asymmetric error; // using the StoreAsymError() argument",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:19,Availability,error,error,19,"// Set X value and error",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:19,Availability,error,error,19,"// Set Y value and error",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:27,Availability,error,errors,27,"// Fit chi^2 using X and Y errors",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:68,Availability,error,errors,68,"// Alternative: fit chi^2 integrating f(x) over ranges defined by X errors, rather; // than taking point at center of bin",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:26,Deployability,integrat,integrating,26,"// Alternative: fit chi^2 integrating f(x) over ranges defined by X errors, rather; // than taking point at center of bin",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:26,Integrability,integrat,integrating,26,"// Alternative: fit chi^2 integrating f(x) over ranges defined by X errors, rather; // than taking point at center of bin",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:149,Modifiability,variab,variables,149,"// C o n s t r u c t e f f i c i e n c y f u n c t i o n e ( x ); // -------------------------------------------------------------------; // Declare variables x,mean,sigma with associated name, title, initial value and allowed range",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:157,Modifiability,variab,variables,157,"// C o n s t r u c t e f f i c i e n c y f u n c t i o n e ( x , y ); // -----------------------------------------------------------------------; // Declare variables x,mean,sigma with associated name, title, initial value and allowed range",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:115,Availability,error,error,115,"// D e f i n e e f f i c i e n c y f u n c t i o n; // ---------------------------------------------------; // Use error function to simulate turn-on slope",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:54,Testability,test,test,54,"// very conservative, this is a numerically difficult test",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:124,Modifiability,variab,variable,124,"// C r e a t e i n t e r p o l a t i n g p d f; // -----------------------------------------------; // Create interpolation variable",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:60,Modifiability,variab,variable,60,"// Specify sampling density on observable and interpolation variable",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:100,Testability,log,log,100,"// S c a n - l o g ( L ) v s a l p h a; // -----------------------------------------; // Show scan -log(L) of dataset w.r.t alpha",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:178,Deployability,configurat,configuration,178,"// C r e a t e 1 - D k e r n e l e s t i m a t i o n p d f; // ---------------------------------------------------------------; // Create adaptive kernel estimation pdf. In this configuration the input data; // is mirrored over the boundaries to minimize edge effects in distribution; // that do not fall to zero towards the edges",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:138,Energy Efficiency,adapt,adaptive,138,"// C r e a t e 1 - D k e r n e l e s t i m a t i o n p d f; // ---------------------------------------------------------------; // Create adaptive kernel estimation pdf. In this configuration the input data; // is mirrored over the boundaries to minimize edge effects in distribution; // that do not fall to zero towards the edges",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:138,Modifiability,adapt,adaptive,138,"// C r e a t e 1 - D k e r n e l e s t i m a t i o n p d f; // ---------------------------------------------------------------; // Create adaptive kernel estimation pdf. In this configuration the input data; // is mirrored over the boundaries to minimize edge effects in distribution; // that do not fall to zero towards the edges",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:178,Modifiability,config,configuration,178,"// C r e a t e 1 - D k e r n e l e s t i m a t i o n p d f; // ---------------------------------------------------------------; // Create adaptive kernel estimation pdf. In this configuration the input data; // is mirrored over the boundaries to minimize edge effects in distribution; // that do not fall to zero towards the edges",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:6,Energy Efficiency,adapt,adaptive,6,"// An adaptive kernel estimation pdf on the same data without mirroring option; // for comparison",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:6,Modifiability,adapt,adaptive,6,"// An adaptive kernel estimation pdf on the same data without mirroring option; // for comparison",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:3,Energy Efficiency,Adapt,Adaptive,3,"// Adaptive kernel estimation pdf with increased bandwidth scale factor; // (promotes smoothness over detail preservation)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:3,Modifiability,Adapt,Adaptive,3,"// Adaptive kernel estimation pdf with increased bandwidth scale factor; // (promotes smoothness over detail preservation)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:141,Energy Efficiency,adapt,adaptive,141,"// C r e a t e 2 - D k e r n e l e s t i m a t i o n p d f; // ---------------------------------------------------------------; // Create 2D adaptive kernel estimation pdf with mirroring",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:141,Modifiability,adapt,adaptive,141,"// C r e a t e 2 - D k e r n e l e s t i m a t i o n p d f; // ---------------------------------------------------------------; // Create 2D adaptive kernel estimation pdf with mirroring",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:13,Energy Efficiency,adapt,adaptive,13,"// Create 2D adaptive kernel estimation pdf with mirroring and double bandwidth",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:13,Modifiability,adapt,adaptive,13,"// Create 2D adaptive kernel estimation pdf with mirroring and double bandwidth",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:32,Performance,perform,perform,32,"// A Toy Monte Carlo study that perform cycles of event generation and; // fittting.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:295,Availability,error,error,295,"// C r e a t e m a n a g e r; // ---------------------------; // Instantiate RooMCStudy manager on model with x as observable and given choice of fit options; //; // The Silence() option kills all messages below the PROGRESS level, leaving only a single message; // per sample executed, and any error message that occur during fitting; //; // The Extended() option has two effects:; // 1) The extended ML term is included in the likelihood and; // 2) A poisson fluctuation is introduced on the number of generated events; //; // The FitOptions() given here are passed to the fitting stage of each toy experiment.; // If Save() is specified, the fit result of each experiment is saved by the manager; //; // A Binned() option is added in this example to bin the data between generation and fitting; // to speed up the study at the expemse of some precision",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:197,Integrability,message,messages,197,"// C r e a t e m a n a g e r; // ---------------------------; // Instantiate RooMCStudy manager on model with x as observable and given choice of fit options; //; // The Silence() option kills all messages below the PROGRESS level, leaving only a single message; // per sample executed, and any error message that occur during fitting; //; // The Extended() option has two effects:; // 1) The extended ML term is included in the likelihood and; // 2) A poisson fluctuation is introduced on the number of generated events; //; // The FitOptions() given here are passed to the fitting stage of each toy experiment.; // If Save() is specified, the fit result of each experiment is saved by the manager; //; // A Binned() option is added in this example to bin the data between generation and fitting; // to speed up the study at the expemse of some precision",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:254,Integrability,message,message,254,"// C r e a t e m a n a g e r; // ---------------------------; // Instantiate RooMCStudy manager on model with x as observable and given choice of fit options; //; // The Silence() option kills all messages below the PROGRESS level, leaving only a single message; // per sample executed, and any error message that occur during fitting; //; // The Extended() option has two effects:; // 1) The extended ML term is included in the likelihood and; // 2) A poisson fluctuation is introduced on the number of generated events; //; // The FitOptions() given here are passed to the fitting stage of each toy experiment.; // If Save() is specified, the fit result of each experiment is saved by the manager; //; // A Binned() option is added in this example to bin the data between generation and fitting; // to speed up the study at the expemse of some precision",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:301,Integrability,message,message,301,"// C r e a t e m a n a g e r; // ---------------------------; // Instantiate RooMCStudy manager on model with x as observable and given choice of fit options; //; // The Silence() option kills all messages below the PROGRESS level, leaving only a single message; // per sample executed, and any error message that occur during fitting; //; // The Extended() option has two effects:; // 1) The extended ML term is included in the likelihood and; // 2) A poisson fluctuation is introduced on the number of generated events; //; // The FitOptions() given here are passed to the fitting stage of each toy experiment.; // If Save() is specified, the fit result of each experiment is saved by the manager; //; // A Binned() option is added in this example to bin the data between generation and fitting; // to speed up the study at the expemse of some precision",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:347,Modifiability,Extend,Extended,347,"// C r e a t e m a n a g e r; // ---------------------------; // Instantiate RooMCStudy manager on model with x as observable and given choice of fit options; //; // The Silence() option kills all messages below the PROGRESS level, leaving only a single message; // per sample executed, and any error message that occur during fitting; //; // The Extended() option has two effects:; // 1) The extended ML term is included in the likelihood and; // 2) A poisson fluctuation is introduced on the number of generated events; //; // The FitOptions() given here are passed to the fitting stage of each toy experiment.; // If Save() is specified, the fit result of each experiment is saved by the manager; //; // A Binned() option is added in this example to bin the data between generation and fitting; // to speed up the study at the expemse of some precision",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:393,Modifiability,extend,extended,393,"// C r e a t e m a n a g e r; // ---------------------------; // Instantiate RooMCStudy manager on model with x as observable and given choice of fit options; //; // The Silence() option kills all messages below the PROGRESS level, leaving only a single message; // per sample executed, and any error message that occur during fitting; //; // The Extended() option has two effects:; // 1) The extended ML term is included in the likelihood and; // 2) A poisson fluctuation is introduced on the number of generated events; //; // The FitOptions() given here are passed to the fitting stage of each toy experiment.; // If Save() is specified, the fit result of each experiment is saved by the manager; //; // A Binned() option is added in this example to bin the data between generation and fitting; // to speed up the study at the expemse of some precision",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:147,Availability,error,error,147,"// E x p l o r e r e s u l t s o f s t u d y; // ------------------------------------------------; // Make plots of the distributions of mean, the error on mean and the pull of mean",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:69,Deployability,configurat,configuration,69,"// Create study manager with separate generation and fit model. This configuration; // is set up to generate bad fits as the fit and generator model have different means; // and the mean parameter is not floating in the fit",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:69,Modifiability,config,configuration,69,"// Create study manager with separate generation and fit model. This configuration; // is set up to generate bad fits as the fit and generator model have different means; // and the mean parameter is not floating in the fit",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:65,Modifiability,Config,Configure,65,"// C r e a t e m a n a g e r; // ---------------------------; // Configure manager to perform binned extended likelihood fits (Binned(),Extended()) on data generated; // with a Poisson fluctuation on Nobs (Extended())",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:101,Modifiability,extend,extended,101,"// C r e a t e m a n a g e r; // ---------------------------; // Configure manager to perform binned extended likelihood fits (Binned(),Extended()) on data generated; // with a Poisson fluctuation on Nobs (Extended())",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:136,Modifiability,Extend,Extended,136,"// C r e a t e m a n a g e r; // ---------------------------; // Configure manager to perform binned extended likelihood fits (Binned(),Extended()) on data generated; // with a Poisson fluctuation on Nobs (Extended())",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:206,Modifiability,Extend,Extended,206,"// C r e a t e m a n a g e r; // ---------------------------; // Configure manager to perform binned extended likelihood fits (Binned(),Extended()) on data generated; // with a Poisson fluctuation on Nobs (Extended())",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:86,Performance,perform,perform,86,"// C r e a t e m a n a g e r; // ---------------------------; // Configure manager to perform binned extended likelihood fits (Binned(),Extended()) on data generated; // with a Poisson fluctuation on Nobs (Extended())",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:154,Testability,log,log,154,"// Add profile likelihood calculation of significance. Redo each; // fit while keeping parameter nsig fixed to zero. For each toy,; // the difference in -log(L) of both fits is stored, as well; // a simple significance interpretation of the delta(-logL); // using Dnll = 0.5 sigma^2",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:248,Testability,log,logL,248,"// Add profile likelihood calculation of significance. Redo each; // fit while keeping parameter nsig fixed to zero. For each toy,; // the difference in -log(L) of both fits is stored, as well; // a simple significance interpretation of the delta(-logL); // using Dnll = 0.5 sigma^2",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:199,Usability,simpl,simple,199,"// Add profile likelihood calculation of significance. Redo each; // fit while keeping parameter nsig fixed to zero. For each toy,; // the difference in -log(L) of both fits is stored, as well; // a simple significance interpretation of the delta(-logL); // using Dnll = 0.5 sigma^2",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:30,Testability,test,test,30,"// numerically very difficult test",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:107,Performance,Perform,Perform,107,"// S e t u p t o y s t u d y w i t h m o d e l; // ---------------------------------------------------; // Perform toy study with internal constraint on f; // RooMCStudy mcs(sumc,x,Constrain(f),Silence(),Binned(),FitOptions(PrintLevel(-1))) ;",MatchSource.CODE_COMMENT,roofit/roofitcore/test/stressRooFit_tests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testActionHelpers.cxx:4,Testability,Test,Test,4,"/// Test the action helpers that fill roofit datasets from RDataFrame.; ///; /// \date Mar 2021; /// \author Stephan Hageboeck (CERN)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testActionHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testActionHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testActionHelpers.cxx:20,Modifiability,variab,variables,20,"// We create RooFit variables that will represent the dataset.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testActionHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testActionHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testActionHelpers.cxx:9,Testability,test,test,9,"/// This test verifies that out-of-range events are correctly skipped,; /// consistent with the construction of a RooDataSet from a TTree.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testActionHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testActionHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testActionHelpers.cxx:17,Modifiability,variab,variable,17,"// Create RooFit variable",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testActionHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testActionHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testActionHelpers.cxx:73,Modifiability,variab,variable,73,"// Check if in the creation of the datasets, the entries outside the; // variable range were successfully discarded.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testActionHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testActionHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testActionHelpers.cxx:3,Usability,Simpl,Simple,3,"// Simple checks, just to check that the dataset was filled.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testActionHelpers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testActionHelpers.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGenericPdf.cxx:3,Testability,Test,Tests,3,"// Tests for the GenericPdf; // Authors: Stephan Hageboeck, CERN 05/2019; // Jonas Rembser, CERN 06/2022",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testGenericPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGenericPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGenericPdf.cxx:91,Deployability,integrat,integration,91,"// This RooGenericPdf should behave exactly the same as the exponential, only; // that the integration will be done numerically.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testGenericPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGenericPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGenericPdf.cxx:91,Integrability,integrat,integration,91,"// This RooGenericPdf should behave exactly the same as the exponential, only; // that the integration will be done numerically.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testGenericPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGenericPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGenericPdf.cxx:188,Deployability,integrat,integration,188,"// Check that the values with and without normalization are almost identical.; // They are not exactly identical for the normalized case, because the; // RooGenericPdf doesn't do analytic integration.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testGenericPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGenericPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGenericPdf.cxx:188,Integrability,integrat,integration,188,"// Check that the values with and without normalization are almost identical.; // They are not exactly identical for the normalized case, because the; // RooGenericPdf doesn't do analytic integration.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testGenericPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGenericPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGlobalObservables.cxx:3,Testability,Test,Tests,3,"// Tests for global observables; // Authors: Jonas Rembser, CERN 08/2021",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testGlobalObservables.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGlobalObservables.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGlobalObservables.cxx:17,Testability,Test,Test,17,"// namespace; // Test environment to verify that if we use the feature of storing global; // observables in a RooDataSet, we can reproduce the same fit results as when; // we track the global observables separately.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testGlobalObservables.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGlobalObservables.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGlobalObservables.cxx:11,Testability,log,log,11,"// silence log output",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testGlobalObservables.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGlobalObservables.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGlobalObservables.cxx:61,Testability,test,tests,61,"// the constraint pdfs, they are RooPoisson so we can't have tests that accidentally; // pass because of the symmetry of normalizing over x or mu",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testGlobalObservables.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testGlobalObservables.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:3,Testability,Test,Tests,3,"// Tests for the RooNaNPacker; // Authors: Stephan Hageboeck, CERN 04/2020",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:45,Availability,recover,recover,45,"// Test if we can pack floats into NaNs, and recover them.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:45,Safety,recover,recover,45,"// Test if we can pack floats into NaNs, and recover them.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:3,Testability,Test,Test,3,"// Test if we can pack floats into NaNs, and recover them.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:12,Usability,simpl,simple,12,"// Create a simple payload",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:12,Usability,simpl,simple,12,"// Create a simple payload",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:12,Usability,simpl,simple,12,"// Create a simple payload",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:72,Usability,simpl,simple,72,"// !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS); /// Fit a simple linear function, that starts in the negative.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:125,Availability,recover,recover,125,"/// Fit a parabola, where parameters are set up such that negative function values are obtained.; /// The minimiser needs to recover from that.; /// Test also that when recovery with NaN packing is switched off, the minimiser fails to recover.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:169,Availability,recover,recovery,169,"/// Fit a parabola, where parameters are set up such that negative function values are obtained.; /// The minimiser needs to recover from that.; /// Test also that when recovery with NaN packing is switched off, the minimiser fails to recover.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:235,Availability,recover,recover,235,"/// Fit a parabola, where parameters are set up such that negative function values are obtained.; /// The minimiser needs to recover from that.; /// Test also that when recovery with NaN packing is switched off, the minimiser fails to recover.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:125,Safety,recover,recover,125,"/// Fit a parabola, where parameters are set up such that negative function values are obtained.; /// The minimiser needs to recover from that.; /// Test also that when recovery with NaN packing is switched off, the minimiser fails to recover.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:169,Safety,recover,recovery,169,"/// Fit a parabola, where parameters are set up such that negative function values are obtained.; /// The minimiser needs to recover from that.; /// Test also that when recovery with NaN packing is switched off, the minimiser fails to recover.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:235,Safety,recover,recover,235,"/// Fit a parabola, where parameters are set up such that negative function values are obtained.; /// The minimiser needs to recover from that.; /// Test also that when recovery with NaN packing is switched off, the minimiser fails to recover.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:149,Testability,Test,Test,149,"/// Fit a parabola, where parameters are set up such that negative function values are obtained.; /// The minimiser needs to recover from that.; /// Test also that when recovery with NaN packing is switched off, the minimiser fails to recover.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:50,Availability,error,error,50,"// Note: we can't use Hesse or Minos. Without the error recovery, Minuit2; // would print errors that would cause the unit test to fail.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:56,Availability,recover,recovery,56,"// Note: we can't use Hesse or Minos. Without the error recovery, Minuit2; // would print errors that would cause the unit test to fail.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:90,Availability,error,errors,90,"// Note: we can't use Hesse or Minos. Without the error recovery, Minuit2; // would print errors that would cause the unit test to fail.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:56,Safety,recover,recovery,56,"// Note: we can't use Hesse or Minos. Without the error recovery, Minuit2; // would print errors that would cause the unit test to fail.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:123,Testability,test,test,123,"// Note: we can't use Hesse or Minos. Without the error recovery, Minuit2; // would print errors that would cause the unit test to fail.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:34,Availability,error,errors,34,"// We provoke a lot of evaluation errors in this test. Don't print those.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:49,Testability,test,test,49,"// We provoke a lot of evaluation errors in this test. Don't print those.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:159,Availability,error,error,159,"// In the past, when Minuit2 was not the default minimizer yet, there was; // also a check that the number of invalid NLL evaluations was reduced with; // the error recovery:; //; // EXPECT_LT(fitResultNew->numInvalidNLL(), fitResultOld->numInvalidNLL());; //; // However, Minuit2 takes less evaluations to realize that the minimization; // without error recovery is hopeless, resulting in less invalid NLL; // evaluations when the error recovery is off. Hence, the comparison is not; // meaningful and was commended out.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:165,Availability,recover,recovery,165,"// In the past, when Minuit2 was not the default minimizer yet, there was; // also a check that the number of invalid NLL evaluations was reduced with; // the error recovery:; //; // EXPECT_LT(fitResultNew->numInvalidNLL(), fitResultOld->numInvalidNLL());; //; // However, Minuit2 takes less evaluations to realize that the minimization; // without error recovery is hopeless, resulting in less invalid NLL; // evaluations when the error recovery is off. Hence, the comparison is not; // meaningful and was commended out.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:349,Availability,error,error,349,"// In the past, when Minuit2 was not the default minimizer yet, there was; // also a check that the number of invalid NLL evaluations was reduced with; // the error recovery:; //; // EXPECT_LT(fitResultNew->numInvalidNLL(), fitResultOld->numInvalidNLL());; //; // However, Minuit2 takes less evaluations to realize that the minimization; // without error recovery is hopeless, resulting in less invalid NLL; // evaluations when the error recovery is off. Hence, the comparison is not; // meaningful and was commended out.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:355,Availability,recover,recovery,355,"// In the past, when Minuit2 was not the default minimizer yet, there was; // also a check that the number of invalid NLL evaluations was reduced with; // the error recovery:; //; // EXPECT_LT(fitResultNew->numInvalidNLL(), fitResultOld->numInvalidNLL());; //; // However, Minuit2 takes less evaluations to realize that the minimization; // without error recovery is hopeless, resulting in less invalid NLL; // evaluations when the error recovery is off. Hence, the comparison is not; // meaningful and was commended out.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:432,Availability,error,error,432,"// In the past, when Minuit2 was not the default minimizer yet, there was; // also a check that the number of invalid NLL evaluations was reduced with; // the error recovery:; //; // EXPECT_LT(fitResultNew->numInvalidNLL(), fitResultOld->numInvalidNLL());; //; // However, Minuit2 takes less evaluations to realize that the minimization; // without error recovery is hopeless, resulting in less invalid NLL; // evaluations when the error recovery is off. Hence, the comparison is not; // meaningful and was commended out.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:438,Availability,recover,recovery,438,"// In the past, when Minuit2 was not the default minimizer yet, there was; // also a check that the number of invalid NLL evaluations was reduced with; // the error recovery:; //; // EXPECT_LT(fitResultNew->numInvalidNLL(), fitResultOld->numInvalidNLL());; //; // However, Minuit2 takes less evaluations to realize that the minimization; // without error recovery is hopeless, resulting in less invalid NLL; // evaluations when the error recovery is off. Hence, the comparison is not; // meaningful and was commended out.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:138,Energy Efficiency,reduce,reduced,138,"// In the past, when Minuit2 was not the default minimizer yet, there was; // also a check that the number of invalid NLL evaluations was reduced with; // the error recovery:; //; // EXPECT_LT(fitResultNew->numInvalidNLL(), fitResultOld->numInvalidNLL());; //; // However, Minuit2 takes less evaluations to realize that the minimization; // without error recovery is hopeless, resulting in less invalid NLL; // evaluations when the error recovery is off. Hence, the comparison is not; // meaningful and was commended out.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:165,Safety,recover,recovery,165,"// In the past, when Minuit2 was not the default minimizer yet, there was; // also a check that the number of invalid NLL evaluations was reduced with; // the error recovery:; //; // EXPECT_LT(fitResultNew->numInvalidNLL(), fitResultOld->numInvalidNLL());; //; // However, Minuit2 takes less evaluations to realize that the minimization; // without error recovery is hopeless, resulting in less invalid NLL; // evaluations when the error recovery is off. Hence, the comparison is not; // meaningful and was commended out.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:355,Safety,recover,recovery,355,"// In the past, when Minuit2 was not the default minimizer yet, there was; // also a check that the number of invalid NLL evaluations was reduced with; // the error recovery:; //; // EXPECT_LT(fitResultNew->numInvalidNLL(), fitResultOld->numInvalidNLL());; //; // However, Minuit2 takes less evaluations to realize that the minimization; // without error recovery is hopeless, resulting in less invalid NLL; // evaluations when the error recovery is off. Hence, the comparison is not; // meaningful and was commended out.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:438,Safety,recover,recovery,438,"// In the past, when Minuit2 was not the default minimizer yet, there was; // also a check that the number of invalid NLL evaluations was reduced with; // the error recovery:; //; // EXPECT_LT(fitResultNew->numInvalidNLL(), fitResultOld->numInvalidNLL());; //; // However, Minuit2 takes less evaluations to realize that the minimization; // without error recovery is hopeless, resulting in less invalid NLL; // evaluations when the error recovery is off. Hence, the comparison is not; // meaningful and was commended out.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:69,Availability,recover,recover,69,"/// Make coefficients of RooAddPdf sum to more than 1. Fitter should recover from this.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:69,Safety,recover,recover,69,"/// Make coefficients of RooAddPdf sum to more than 1. Fitter should recover from this.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:21,Availability,error,error,21,"// Only the fit with error recovery should have status zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:27,Availability,recover,recovery,27,"// Only the fit with error recovery should have status zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:27,Safety,recover,recovery,27,"// Only the fit with error recovery should have status zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:73,Availability,recover,recover,73,"/// Make coefficients of RooRealSumPdf sum to more than 1. Fitter should recover from this.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:73,Safety,recover,recover,73,"/// Make coefficients of RooRealSumPdf sum to more than 1. Fitter should recover from this.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:45,Availability,error,error,45,"// Note: we can't do Hesse here. Without the error recovery, Minuit2; // would print errors that would cause the unit test to fail.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:51,Availability,recover,recovery,51,"// Note: we can't do Hesse here. Without the error recovery, Minuit2; // would print errors that would cause the unit test to fail.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:85,Availability,error,errors,85,"// Note: we can't do Hesse here. Without the error recovery, Minuit2; // would print errors that would cause the unit test to fail.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:51,Safety,recover,recovery,51,"// Note: we can't do Hesse here. Without the error recovery, Minuit2; // would print errors that would cause the unit test to fail.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:118,Testability,test,test,118,"// Note: we can't do Hesse here. Without the error recovery, Minuit2; // would print errors that would cause the unit test to fail.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:21,Availability,error,error,21,"// Only the fit with error recovery should have status zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:27,Availability,recover,recovery,27,"// Only the fit with error recovery should have status zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx:27,Safety,recover,recovery,27,"// Only the fit with error recovery should have status zero.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testNaNPacker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testNaNPacker.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testProxiesAndCategories.cxx:3,Testability,Test,Tests,3,"// Tests for the RooTemplateProxy and RooCategory, and if they work together; // Author: Stephan Hageboeck, CERN 01/2019",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testProxiesAndCategories.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testProxiesAndCategories.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testProxiesAndCategories.cxx:3,Testability,Test,Test,3,"/* Test the reading of a simple mock category that has the states; * one = 0; * two = 1; * three = 2; * four = 3; * The ranges ""evens"" and ""odds"" for even and odd state names are defined.; * Now, we check that set ranges are read and written properly, and that; * sharing of those ranges works even after reading back.; * A mock file can be created as follows:; RooCategory cat(""cat"", ""a category""); cat.defineType(""one""); cat.defineType(""two""); cat.defineType(""three""); cat.defineType(""four""); cat.addToRange(""evens"", ""two,four""); cat.addToRange(""odds"", ""one,three""); RooDataSet data(""data"", ""a dataset with a category"", RooArgSet(cat)); data.fill(); TFile outfile(""/tmp/testCategories.root"", ""RECREATE""); outfile.WriteObject(&cat, ""catOrig""); outfile.WriteObject(&data, ""data""); */",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testProxiesAndCategories.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testProxiesAndCategories.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testProxiesAndCategories.cxx:32,Testability,mock,mock,32,"/* Test the reading of a simple mock category that has the states; * one = 0; * two = 1; * three = 2; * four = 3; * The ranges ""evens"" and ""odds"" for even and odd state names are defined.; * Now, we check that set ranges are read and written properly, and that; * sharing of those ranges works even after reading back.; * A mock file can be created as follows:; RooCategory cat(""cat"", ""a category""); cat.defineType(""one""); cat.defineType(""two""); cat.defineType(""three""); cat.defineType(""four""); cat.addToRange(""evens"", ""two,four""); cat.addToRange(""odds"", ""one,three""); RooDataSet data(""data"", ""a dataset with a category"", RooArgSet(cat)); data.fill(); TFile outfile(""/tmp/testCategories.root"", ""RECREATE""); outfile.WriteObject(&cat, ""catOrig""); outfile.WriteObject(&data, ""data""); */",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testProxiesAndCategories.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testProxiesAndCategories.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testProxiesAndCategories.cxx:324,Testability,mock,mock,324,"/* Test the reading of a simple mock category that has the states; * one = 0; * two = 1; * three = 2; * four = 3; * The ranges ""evens"" and ""odds"" for even and odd state names are defined.; * Now, we check that set ranges are read and written properly, and that; * sharing of those ranges works even after reading back.; * A mock file can be created as follows:; RooCategory cat(""cat"", ""a category""); cat.defineType(""one""); cat.defineType(""two""); cat.defineType(""three""); cat.defineType(""four""); cat.addToRange(""evens"", ""two,four""); cat.addToRange(""odds"", ""one,three""); RooDataSet data(""data"", ""a dataset with a category"", RooArgSet(cat)); data.fill(); TFile outfile(""/tmp/testCategories.root"", ""RECREATE""); outfile.WriteObject(&cat, ""catOrig""); outfile.WriteObject(&data, ""data""); */",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testProxiesAndCategories.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testProxiesAndCategories.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testProxiesAndCategories.cxx:672,Testability,test,testCategories,672,"/* Test the reading of a simple mock category that has the states; * one = 0; * two = 1; * three = 2; * four = 3; * The ranges ""evens"" and ""odds"" for even and odd state names are defined.; * Now, we check that set ranges are read and written properly, and that; * sharing of those ranges works even after reading back.; * A mock file can be created as follows:; RooCategory cat(""cat"", ""a category""); cat.defineType(""one""); cat.defineType(""two""); cat.defineType(""three""); cat.defineType(""four""); cat.addToRange(""evens"", ""two,four""); cat.addToRange(""odds"", ""one,three""); RooDataSet data(""data"", ""a dataset with a category"", RooArgSet(cat)); data.fill(); TFile outfile(""/tmp/testCategories.root"", ""RECREATE""); outfile.WriteObject(&cat, ""catOrig""); outfile.WriteObject(&data, ""data""); */",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testProxiesAndCategories.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testProxiesAndCategories.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testProxiesAndCategories.cxx:25,Usability,simpl,simple,25,"/* Test the reading of a simple mock category that has the states; * one = 0; * two = 1; * three = 2; * four = 3; * The ranges ""evens"" and ""odds"" for even and odd state names are defined.; * Now, we check that set ranges are read and written properly, and that; * sharing of those ranges works even after reading back.; * A mock file can be created as follows:; RooCategory cat(""cat"", ""a category""); cat.defineType(""one""); cat.defineType(""two""); cat.defineType(""three""); cat.defineType(""four""); cat.addToRange(""evens"", ""two,four""); cat.addToRange(""odds"", ""one,three""); RooDataSet data(""data"", ""a dataset with a category"", RooArgSet(cat)); data.fill(); TFile outfile(""/tmp/testCategories.root"", ""RECREATE""); outfile.WriteObject(&cat, ""catOrig""); outfile.WriteObject(&data, ""data""); */",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testProxiesAndCategories.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testProxiesAndCategories.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testProxiesAndCategories.cxx:36,Testability,test,test,36,"// Read a simple v6.20 workspace to test proxy schema evolution",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testProxiesAndCategories.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testProxiesAndCategories.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testProxiesAndCategories.cxx:10,Usability,simpl,simple,10,"// Read a simple v6.20 workspace to test proxy schema evolution",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testProxiesAndCategories.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testProxiesAndCategories.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx:3,Testability,Test,Tests,3,"// Tests for the RooAbsCollection and derived classes; // Authors: Stephan Hageboeck, CERN 05/2020",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx:11,Availability,error,error,11,"// Silence error to come next:",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx:25,Availability,error,error,25,"// Silence deduplication error messages",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx:31,Integrability,message,messages,31,"// Silence deduplication error messages",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx:25,Availability,error,error,25,"// Silence deduplication error messages",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx:31,Integrability,message,messages,31,"// Silence deduplication error messages",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx:37,Security,hash,hash,37,"// Renaming would invalidate the old hash map. Test that it gets regenerated correctly:",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx:47,Testability,Test,Test,47,"// Renaming would invalidate the old hash map. Test that it gets regenerated correctly:",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx:44,Deployability,update,updated,44,"// Test that both value and range have been updated correctly:",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx:3,Testability,Test,Test,3,"// Test that both value and range have been updated correctly:",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsCollection.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsCollection.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx:3,Testability,Test,Tests,3,"// Tests for RooAbsPdf; // Authors: Stephan Hageboeck, CERN 04/2020; // Jonas Rembser, CERN 04/2021",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx:31,Availability,error,errors,31,"// ROOT-10668: Asympt. correct errors don't work when title and name differ",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx:16,Availability,toler,tolerance,16,"// Set relative tolerance for errors to large value to only check for values",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx:30,Availability,error,errors,30,"// Set relative tolerance for errors to large value to only check for values",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx:821,Availability,avail,available,821,"// Test a conditional fit with batch mode; //; // In a conditional fit, it happens that the value normalization integrals can; // be different for every event because a pdf is conditional on another; // observable. That's why the integral also has to be evaluated with the batch; // interface in general.; //; // This test checks if the results of a conditional fit are the same for batch; // and scalar mode. It also verifies that for non-conditional fits, the batch; // mode recognizes that the integral only needs to be evaluated once. This is; // checked by hijacking the FastEvaluations log. If a RooRealIntegral is; // evaluated in batch mode and data size is greater than one, the batch mode; // will inform that a batched evaluation function is missing.; //; // This test is disabled if the legacy backend is not available, because then; // we don't have any reference to compare to.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx:283,Integrability,interface,interface,283,"// Test a conditional fit with batch mode; //; // In a conditional fit, it happens that the value normalization integrals can; // be different for every event because a pdf is conditional on another; // observable. That's why the integral also has to be evaluated with the batch; // interface in general.; //; // This test checks if the results of a conditional fit are the same for batch; // and scalar mode. It also verifies that for non-conditional fits, the batch; // mode recognizes that the integral only needs to be evaluated once. This is; // checked by hijacking the FastEvaluations log. If a RooRealIntegral is; // evaluated in batch mode and data size is greater than one, the batch mode; // will inform that a batched evaluation function is missing.; //; // This test is disabled if the legacy backend is not available, because then; // we don't have any reference to compare to.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx:3,Testability,Test,Test,3,"// Test a conditional fit with batch mode; //; // In a conditional fit, it happens that the value normalization integrals can; // be different for every event because a pdf is conditional on another; // observable. That's why the integral also has to be evaluated with the batch; // interface in general.; //; // This test checks if the results of a conditional fit are the same for batch; // and scalar mode. It also verifies that for non-conditional fits, the batch; // mode recognizes that the integral only needs to be evaluated once. This is; // checked by hijacking the FastEvaluations log. If a RooRealIntegral is; // evaluated in batch mode and data size is greater than one, the batch mode; // will inform that a batched evaluation function is missing.; //; // This test is disabled if the legacy backend is not available, because then; // we don't have any reference to compare to.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx:318,Testability,test,test,318,"// Test a conditional fit with batch mode; //; // In a conditional fit, it happens that the value normalization integrals can; // be different for every event because a pdf is conditional on another; // observable. That's why the integral also has to be evaluated with the batch; // interface in general.; //; // This test checks if the results of a conditional fit are the same for batch; // and scalar mode. It also verifies that for non-conditional fits, the batch; // mode recognizes that the integral only needs to be evaluated once. This is; // checked by hijacking the FastEvaluations log. If a RooRealIntegral is; // evaluated in batch mode and data size is greater than one, the batch mode; // will inform that a batched evaluation function is missing.; //; // This test is disabled if the legacy backend is not available, because then; // we don't have any reference to compare to.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx:592,Testability,log,log,592,"// Test a conditional fit with batch mode; //; // In a conditional fit, it happens that the value normalization integrals can; // be different for every event because a pdf is conditional on another; // observable. That's why the integral also has to be evaluated with the batch; // interface in general.; //; // This test checks if the results of a conditional fit are the same for batch; // and scalar mode. It also verifies that for non-conditional fits, the batch; // mode recognizes that the integral only needs to be evaluated once. This is; // checked by hijacking the FastEvaluations log. If a RooRealIntegral is; // evaluated in batch mode and data size is greater than one, the batch mode; // will inform that a batched evaluation function is missing.; //; // This test is disabled if the legacy backend is not available, because then; // we don't have any reference to compare to.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx:775,Testability,test,test,775,"// Test a conditional fit with batch mode; //; // In a conditional fit, it happens that the value normalization integrals can; // be different for every event because a pdf is conditional on another; // observable. That's why the integral also has to be evaluated with the batch; // interface in general.; //; // This test checks if the results of a conditional fit are the same for batch; // and scalar mode. It also verifies that for non-conditional fits, the batch; // mode recognizes that the integral only needs to be evaluated once. This is; // checked by hijacking the FastEvaluations log. If a RooRealIntegral is; // evaluated in batch mode and data size is greater than one, the batch mode; // will inform that a batched evaluation function is missing.; //; // This test is disabled if the legacy backend is not available, because then; // we don't have any reference to compare to.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx:13,Modifiability,extend,extended,13,"// model for extended fit",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx:17,Modifiability,extend,extended,17,"// loop over non-extended and extended fit",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx:30,Modifiability,extend,extended,30,"// loop over non-extended and extended fit",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx:17,Modifiability,extend,extended,17,"// loop over non-extended and extended fit",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx:30,Modifiability,extend,extended,30,"// loop over non-extended and extended fit",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx:125,Energy Efficiency,reduce,reduced,125,"// This test will crash if the cached normalization sets are not reset; // correctly after servers are redirected. This is a reduced version of a code; // provided in the ROOT forum that originally unveiled this problem:; // https://root-forum.cern.ch/t/problems-with-2d-simultaneous-fit/48249/4",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx:31,Performance,cache,cached,31,"// This test will crash if the cached normalization sets are not reset; // correctly after servers are redirected. This is a reduced version of a code; // provided in the ROOT forum that originally unveiled this problem:; // https://root-forum.cern.ch/t/problems-with-2d-simultaneous-fit/48249/4",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx:8,Testability,test,test,8,"// This test will crash if the cached normalization sets are not reset; // correctly after servers are redirected. This is a reduced version of a code; // provided in the ROOT forum that originally unveiled this problem:; // https://root-forum.cern.ch/t/problems-with-2d-simultaneous-fit/48249/4",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsReal.cxx:3,Testability,Test,Tests,3,"// Tests for RooAbsReal; // Authors: Stephan Hageboeck, CERN 05/2020; // Jonas Rembser, CERN 09/2022",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAbsReal.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAbsReal.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx:3,Testability,Test,Tests,3,"// Tests for RooAddPdf; // Authors: Jonas Rembser, CERN 07/2022",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAddPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx:4,Testability,Test,Test,4,"/// Test with the reproducer from GitHub issue #10988 that reported a caching; /// issues of RooAddPdf integrals.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAddPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx:63,Deployability,configurat,configurations,63,"/// Verify that the coefficient projection works for different configurations; /// of the RooAddPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAddPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx:63,Modifiability,config,configurations,63,"/// Verify that the coefficient projection works for different configurations; /// of the RooAddPdf.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAddPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx:99,Performance,cache,caches,99,"/// Verify that if we change the normalization set of a server to a RooAddPdf,; /// the projection caches in the RooAddPdf are cleared correctly.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAddPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx:127,Usability,clear,cleared,127,"/// Verify that if we change the normalization set of a server to a RooAddPdf,; /// the projection caches in the RooAddPdf are cleared correctly.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAddPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx:116,Performance,cache,cache,116,"// We first use the same normalization set to re-evaluate, then a different; // one to confuse to first trigger the cache and then have a another; // reference.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAddPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx:50,Energy Efficiency,reduce,reduced,50,"// If the normalization in the plot is right, the reduced chi-square of the; // the plot will be good (i.e. less than one) as the data was directly; // sampled from the model.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAddPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx:52,Integrability,depend,depends,52,"/// If you add components where each component only depends on a subset of the; /// union set of the observables, the RooAddPdf should understand that the; /// component is uniform in the missing observables. This is validated in the; /// following test for both the getVal() interface and evaluation with the; /// RooFit::Evaluator.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAddPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx:276,Integrability,interface,interface,276,"/// If you add components where each component only depends on a subset of the; /// union set of the observables, the RooAddPdf should understand that the; /// component is uniform in the missing observables. This is validated in the; /// following test for both the getVal() interface and evaluation with the; /// RooFit::Evaluator.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAddPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx:217,Security,validat,validated,217,"/// If you add components where each component only depends on a subset of the; /// union set of the observables, the RooAddPdf should understand that the; /// component is uniform in the missing observables. This is validated in the; /// following test for both the getVal() interface and evaluation with the; /// RooFit::Evaluator.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAddPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx:249,Testability,test,test,249,"/// If you add components where each component only depends on a subset of the; /// union set of the observables, the RooAddPdf should understand that the; /// component is uniform in the missing observables. This is validated in the; /// following test for both the getVal() interface and evaluation with the; /// RooFit::Evaluator.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAddPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx:45,Integrability,depend,depend,45,"// Define the PDFs such that they explicitly depend on only one of the; // observables each. This means the RooAddPdf needs to figure out itself; // that in the other dimensions (y for uniformX and x for uniformY), the; // distribution is implicitly uniform.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooAddPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooBinSamplingPdf.cxx:3,Testability,Test,Tests,3,"// Tests for the RooBinSamplingPdf; // Authors: Jonas Rembser, CERN 03/2022",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooBinSamplingPdf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooBinSamplingPdf.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx:3,Testability,Test,Tests,3,"// Tests for the RooCacheManager; // Author: Jonas Rembser, CERN, May 2021",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx:85,Performance,cache,cached,85,"// Test RooCacheManager::selectFromSet1 and RooCacheManager::selectFromSet2.; // the cached class doesn't matter for this test, it just has to be an object that the cache is going to own",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx:165,Performance,cache,cache,165,"// Test RooCacheManager::selectFromSet1 and RooCacheManager::selectFromSet2.; // the cached class doesn't matter for this test, it just has to be an object that the cache is going to own",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx:3,Testability,Test,Test,3,"// Test RooCacheManager::selectFromSet1 and RooCacheManager::selectFromSet2.; // the cached class doesn't matter for this test, it just has to be an object that the cache is going to own",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx:122,Testability,test,test,122,"// Test RooCacheManager::selectFromSet1 and RooCacheManager::selectFromSet2.; // the cached class doesn't matter for this test, it just has to be an object that the cache is going to own",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx:27,Integrability,wrap,wrapper,27,"// RooObjCacheManager is a wrapper around RooCacheManager",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx:41,Testability,test,testing,41,"// fill some vector with RooAbsReals for testing",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx:188,Testability,test,test,188,"// Every instance of a RooAbsCache or inherigin class that is the member of; // a RooFit arg is automatically added to the RooAbsArg::_cacheList data; // member by reference.; //; // This test makes sure that the _cacheList still has the correct pointers; // after reading back a RooFit model. Now that the RooAbsCache and child; // classes don't take part in the IO anymore it should be no problem, but in; // the past there were inconsistencies.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx:16,Performance,cache,cache,16,"// Check if the cache pointer actually points to a data member of the pdf.; // We can't get the actual address of the private _normMgr member, but we; // can still check if the cache points to a member by checking the range; // of the address.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx:177,Performance,cache,cache,177,"// Check if the cache pointer actually points to a data member of the pdf.; // We can't get the actual address of the private _normMgr member, but we; // can still check if the cache points to a member by checking the range; // of the address.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx:30,Performance,cache,cache,30,"// Same trick to check if the cache points to a pdf data member as above.",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCacheManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCacheManager.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCategory.cxx:3,Testability,Test,Tests,3,"// Tests for the RooCategory; // Author: Jonas Rembser, CERN 04/2021",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCategory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCategory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCategory.cxx:46,Performance,load,loads,46,"// GitHub issue 10278: RooDataSet incorrectly loads RooCategory values from TTree branch of type Short_t",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCategory.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCategory.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCollectionProxy.cxx:3,Testability,Test,Tests,3,"// Tests for RooAbsCollectionProxy; // Authors: Jonas Rembser, CERN 02/2022",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCollectionProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCollectionProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCollectionProxy.cxx:3,Testability,Test,Test,3,"// Test IO of RooSetProxy and RooListProxy if they were written to file before; // they became aliases for template specifications of RooCollectionProxy",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCollectionProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCollectionProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCurve.cxx:32,Deployability,integrat,integration,32,"// Cross-check to make sure the integration works correctly even if there is; // only one midpoint on the RooCurve. Covers GitHub issue #9838 (the reproducer; // in that issue was translated to this test).",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCurve.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCurve.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCurve.cxx:32,Integrability,integrat,integration,32,"// Cross-check to make sure the integration works correctly even if there is; // only one midpoint on the RooCurve. Covers GitHub issue #9838 (the reproducer; // in that issue was translated to this test).",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCurve.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCurve.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCurve.cxx:199,Testability,test,test,199,"// Cross-check to make sure the integration works correctly even if there is; // only one midpoint on the RooCurve. Covers GitHub issue #9838 (the reproducer; // in that issue was translated to this test).",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCurve.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCurve.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCurve.cxx:34,Deployability,integrat,integration,34,"// Silence the info about numeric integration because we don't care about it",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCurve.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCurve.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCurve.cxx:34,Integrability,integrat,integration,34,"// Silence the info about numeric integration because we don't care about it",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooCurve.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooCurve.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx:3,Testability,Test,Tests,3,"// Tests for the RooDataHist; // Authors: Stephan Hageboeck, CERN 01/2019; // Jonas Rembser, CERN 02/2021",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx:38,Deployability,integrat,integrated,38,"// The RooDataHit can be analytically integrated with the RooDataHist::sum(); // member functions. This functionality is used in the analytical; // integration capabilities of RooHistPdf and RooHistFunc. Therefore, to; // test these two classes at the same time, this tests validated; // RooDataHist::sum() via the RooHistPdf and RooHistFunc interfaces.; // The histograms for this example are kept simple such that one can easily; // calculate the expected values with a calculator.; // We first create an easy non-uniform histogram for the x variable so we; // can know what we expect as test results analytically. The histogram will; // have the following bins with contents:; // - bin1 [0.0, 1.0]: 3 counts (bin volume x counts = 3); // - bin2 [1.0, 3.0]: 1 count (bin volume x counts = 2); // - bin3 [3.0, 3.5]: 8 counts (bin volume x counts = 4)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx:148,Deployability,integrat,integration,148,"// The RooDataHit can be analytically integrated with the RooDataHist::sum(); // member functions. This functionality is used in the analytical; // integration capabilities of RooHistPdf and RooHistFunc. Therefore, to; // test these two classes at the same time, this tests validated; // RooDataHist::sum() via the RooHistPdf and RooHistFunc interfaces.; // The histograms for this example are kept simple such that one can easily; // calculate the expected values with a calculator.; // We first create an easy non-uniform histogram for the x variable so we; // can know what we expect as test results analytically. The histogram will; // have the following bins with contents:; // - bin1 [0.0, 1.0]: 3 counts (bin volume x counts = 3); // - bin2 [1.0, 3.0]: 1 count (bin volume x counts = 2); // - bin3 [3.0, 3.5]: 8 counts (bin volume x counts = 4)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx:38,Integrability,integrat,integrated,38,"// The RooDataHit can be analytically integrated with the RooDataHist::sum(); // member functions. This functionality is used in the analytical; // integration capabilities of RooHistPdf and RooHistFunc. Therefore, to; // test these two classes at the same time, this tests validated; // RooDataHist::sum() via the RooHistPdf and RooHistFunc interfaces.; // The histograms for this example are kept simple such that one can easily; // calculate the expected values with a calculator.; // We first create an easy non-uniform histogram for the x variable so we; // can know what we expect as test results analytically. The histogram will; // have the following bins with contents:; // - bin1 [0.0, 1.0]: 3 counts (bin volume x counts = 3); // - bin2 [1.0, 3.0]: 1 count (bin volume x counts = 2); // - bin3 [3.0, 3.5]: 8 counts (bin volume x counts = 4)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx:148,Integrability,integrat,integration,148,"// The RooDataHit can be analytically integrated with the RooDataHist::sum(); // member functions. This functionality is used in the analytical; // integration capabilities of RooHistPdf and RooHistFunc. Therefore, to; // test these two classes at the same time, this tests validated; // RooDataHist::sum() via the RooHistPdf and RooHistFunc interfaces.; // The histograms for this example are kept simple such that one can easily; // calculate the expected values with a calculator.; // We first create an easy non-uniform histogram for the x variable so we; // can know what we expect as test results analytically. The histogram will; // have the following bins with contents:; // - bin1 [0.0, 1.0]: 3 counts (bin volume x counts = 3); // - bin2 [1.0, 3.0]: 1 count (bin volume x counts = 2); // - bin3 [3.0, 3.5]: 8 counts (bin volume x counts = 4)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx:342,Integrability,interface,interfaces,342,"// The RooDataHit can be analytically integrated with the RooDataHist::sum(); // member functions. This functionality is used in the analytical; // integration capabilities of RooHistPdf and RooHistFunc. Therefore, to; // test these two classes at the same time, this tests validated; // RooDataHist::sum() via the RooHistPdf and RooHistFunc interfaces.; // The histograms for this example are kept simple such that one can easily; // calculate the expected values with a calculator.; // We first create an easy non-uniform histogram for the x variable so we; // can know what we expect as test results analytically. The histogram will; // have the following bins with contents:; // - bin1 [0.0, 1.0]: 3 counts (bin volume x counts = 3); // - bin2 [1.0, 3.0]: 1 count (bin volume x counts = 2); // - bin3 [3.0, 3.5]: 8 counts (bin volume x counts = 4)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx:544,Modifiability,variab,variable,544,"// The RooDataHit can be analytically integrated with the RooDataHist::sum(); // member functions. This functionality is used in the analytical; // integration capabilities of RooHistPdf and RooHistFunc. Therefore, to; // test these two classes at the same time, this tests validated; // RooDataHist::sum() via the RooHistPdf and RooHistFunc interfaces.; // The histograms for this example are kept simple such that one can easily; // calculate the expected values with a calculator.; // We first create an easy non-uniform histogram for the x variable so we; // can know what we expect as test results analytically. The histogram will; // have the following bins with contents:; // - bin1 [0.0, 1.0]: 3 counts (bin volume x counts = 3); // - bin2 [1.0, 3.0]: 1 count (bin volume x counts = 2); // - bin3 [3.0, 3.5]: 8 counts (bin volume x counts = 4)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx:274,Security,validat,validated,274,"// The RooDataHit can be analytically integrated with the RooDataHist::sum(); // member functions. This functionality is used in the analytical; // integration capabilities of RooHistPdf and RooHistFunc. Therefore, to; // test these two classes at the same time, this tests validated; // RooDataHist::sum() via the RooHistPdf and RooHistFunc interfaces.; // The histograms for this example are kept simple such that one can easily; // calculate the expected values with a calculator.; // We first create an easy non-uniform histogram for the x variable so we; // can know what we expect as test results analytically. The histogram will; // have the following bins with contents:; // - bin1 [0.0, 1.0]: 3 counts (bin volume x counts = 3); // - bin2 [1.0, 3.0]: 1 count (bin volume x counts = 2); // - bin3 [3.0, 3.5]: 8 counts (bin volume x counts = 4)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx
https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx:222,Testability,test,test,222,"// The RooDataHit can be analytically integrated with the RooDataHist::sum(); // member functions. This functionality is used in the analytical; // integration capabilities of RooHistPdf and RooHistFunc. Therefore, to; // test these two classes at the same time, this tests validated; // RooDataHist::sum() via the RooHistPdf and RooHistFunc interfaces.; // The histograms for this example are kept simple such that one can easily; // calculate the expected values with a calculator.; // We first create an easy non-uniform histogram for the x variable so we; // can know what we expect as test results analytically. The histogram will; // have the following bins with contents:; // - bin1 [0.0, 1.0]: 3 counts (bin volume x counts = 3); // - bin2 [1.0, 3.0]: 1 count (bin volume x counts = 2); // - bin3 [3.0, 3.5]: 8 counts (bin volume x counts = 4)",MatchSource.CODE_COMMENT,roofit/roofitcore/test/testRooDataHist.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooDataHist.cxx
