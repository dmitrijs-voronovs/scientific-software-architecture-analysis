id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://root.cern/doc/master/classTListOfDataMembers.html:9428,Security,hash,hash,9428,"s in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; virtual Bool_t IsEmpty () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; void ls (Option_t *option="""") const override;  List (ls) all objects in this collection. ;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the ",MatchSource.WIKI,doc/master/classTListOfDataMembers.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfDataMembers.html
https://root.cern/doc/master/classTListOfDataMembers.html:11010,Security,access,accessible,11010," MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Ch",MatchSource.WIKI,doc/master/classTListOfDataMembers.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfDataMembers.html
https://root.cern/doc/master/classTListOfDataMembers.html:18907,Security,access,accessible,18907,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TListOfDataMembers (const TListOfDataMembers &)=delete;  Whether the list should contain regular data members or only using decls or both. ;  ; void MapObject (TObject *obj);  Add a pair<id, object> to the map of data members and their ids. ;  ; TListOfDataMembers & operator= (const TListOfDataMembers &)=delete;  ; void Unma",MatchSource.WIKI,doc/master/classTListOfDataMembers.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfDataMembers.html
https://root.cern/doc/master/classTListOfDataMembers.html:28863,Security,hash,hash,28863,"cts unless the THashList is the owner (set via SetOwner()). ; Reimplemented from THashList.; Definition at line 160 of file TListOfDataMembers.cxx. ◆ DeclFileName(). static const char * TListOfDataMembers::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 102 of file TListOfDataMembers.h. ◆ Delete(). void TListOfDataMembers::Delete ; (; Option_t * ; option = """"). overridevirtual . Delete all TDataMember object files. ; Reimplemented from THashList.; Definition at line 171 of file TListOfDataMembers.cxx. ◆ Find(). TDictionary * TListOfDataMembers::Find ; (; DeclId_t ; id); const. Return (after creating it if necessary) the TDataMember describing the data member corresponding to the Decl 'id'. ; Definition at line 205 of file TListOfDataMembers.cxx. ◆ FindObject() [1/3]. TObject * THashList::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to a TString. ; Reimplemented from THashList.; Definition at line 51 of file THashList.cxx. ◆ FindObject() [2/3]. TObject * TListOfDataMembers::FindObject ; (; const char * ; name); const. overridevirtual . Specialize FindObject to do search for the a data member just by name or create it if its not already in the list. ; Reimplemented from THashList.; Definition at line 182 of file TListOfDataMembers.cxx. ◆ FindObject() [3/3]. TObject * THashList::FindObject ; (; const TObject * ; obj); const. overridevirtual . Find object using its hash value (returned by its Hash() member). ; Reimplemented from THashList.; Definition at line 52 of file THashList.cxx. ◆ Get() [1/2]. TDictionary * TListOfDataMembers::Get ; (; DataMemberInfo_t * ; info, . bool ; skipChecks = kFALSE . ). Return (after creating it if necessary) the TDataMember describing the data member corresponding to the Decl 'id'. ; The skipChecks flag controls the consistency checks performed inspecti",MatchSource.WIKI,doc/master/classTListOfDataMembers.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfDataMembers.html
https://root.cern/doc/master/classTListOfDataMembers.html:29468,Security,hash,hash,29468," TDictionary * TListOfDataMembers::Find ; (; DeclId_t ; id); const. Return (after creating it if necessary) the TDataMember describing the data member corresponding to the Decl 'id'. ; Definition at line 205 of file TListOfDataMembers.cxx. ◆ FindObject() [1/3]. TObject * THashList::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to a TString. ; Reimplemented from THashList.; Definition at line 51 of file THashList.cxx. ◆ FindObject() [2/3]. TObject * TListOfDataMembers::FindObject ; (; const char * ; name); const. overridevirtual . Specialize FindObject to do search for the a data member just by name or create it if its not already in the list. ; Reimplemented from THashList.; Definition at line 182 of file TListOfDataMembers.cxx. ◆ FindObject() [3/3]. TObject * THashList::FindObject ; (; const TObject * ; obj); const. overridevirtual . Find object using its hash value (returned by its Hash() member). ; Reimplemented from THashList.; Definition at line 52 of file THashList.cxx. ◆ Get() [1/2]. TDictionary * TListOfDataMembers::Get ; (; DataMemberInfo_t * ; info, . bool ; skipChecks = kFALSE . ). Return (after creating it if necessary) the TDataMember describing the data member corresponding to the Decl 'id'. ; The skipChecks flag controls the consistency checks performed inspecting the AST. In some cases, we explicitly alter the datamembers in the typesystem with respect to the AST and therefore we must not enforce consistency. ; Definition at line 273 of file TListOfDataMembers.cxx. ◆ Get() [2/2]. TDictionary * TListOfDataMembers::Get ; (; DeclId_t ; id). Return (after creating it if necessary) the TDataMember describing the data member corresponding to the Decl 'id'. ; Definition at line 216 of file TListOfDataMembers.cxx. ◆ GetClass(). TClass * TListOfDataMembers::GetClass ; (; ); const. inline . Definition at line 90 of file TListOfDataMembers.h.",MatchSource.WIKI,doc/master/classTListOfDataMembers.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfDataMembers.html
https://root.cern/doc/master/classTListOfDataMembers.html:31691,Security,hash,hash,31691,"mbers.h. ◆ IsLoaded(). Bool_t TListOfDataMembers::IsLoaded ; (; ); const. inline . Definition at line 79 of file TListOfDataMembers.h. ◆ Load(). void TListOfDataMembers::Load ; (; ). Load all the DataMembers known to the interpreter for the scope 'fClass' into this collection. ; Definition at line 399 of file TListOfDataMembers.cxx. ◆ MapObject(). void TListOfDataMembers::MapObject ; (; TObject * ; obj). private . Add a pair<id, object> to the map of data members and their ids. ; Definition at line 50 of file TListOfDataMembers.cxx. ◆ operator=(). TListOfDataMembers & TListOfDataMembers::operator= ; (; const TListOfDataMembers & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfDataMembers::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from THashList.; Definition at line 353 of file TListOfDataMembers.cxx. ◆ Remove() [1/2]. TObject * TListOfDataMembers::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from THashList.; Definition at line 366 of file TListOfDataMembers.cxx. ◆ Remove() [2/2]. TObject * TListOfDataMembers::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from THashList.; Definition at line 382 of file TListOfDataMembers.cxx. ◆ SetClass(). void TListOfDataMembers::SetClass ; (; TClass * ; cl). inline . Definition at line 91 of file TListOfDataMembers.h. ◆ Streamer(). void TListOfDataMembers::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TListOfDataMembers. ; Reimplemented from THashList.; Definition at line 484 of ",MatchSource.WIKI,doc/master/classTListOfDataMembers.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfDataMembers.html
https://root.cern/doc/master/classTListOfDataMembers.html:31709,Security,hash,hash,31709,"mbers.h. ◆ IsLoaded(). Bool_t TListOfDataMembers::IsLoaded ; (; ); const. inline . Definition at line 79 of file TListOfDataMembers.h. ◆ Load(). void TListOfDataMembers::Load ; (; ). Load all the DataMembers known to the interpreter for the scope 'fClass' into this collection. ; Definition at line 399 of file TListOfDataMembers.cxx. ◆ MapObject(). void TListOfDataMembers::MapObject ; (; TObject * ; obj). private . Add a pair<id, object> to the map of data members and their ids. ; Definition at line 50 of file TListOfDataMembers.cxx. ◆ operator=(). TListOfDataMembers & TListOfDataMembers::operator= ; (; const TListOfDataMembers & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfDataMembers::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from THashList.; Definition at line 353 of file TListOfDataMembers.cxx. ◆ Remove() [1/2]. TObject * TListOfDataMembers::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from THashList.; Definition at line 366 of file TListOfDataMembers.cxx. ◆ Remove() [2/2]. TObject * TListOfDataMembers::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from THashList.; Definition at line 382 of file TListOfDataMembers.cxx. ◆ SetClass(). void TListOfDataMembers::SetClass ; (; TClass * ; cl). inline . Definition at line 91 of file TListOfDataMembers.h. ◆ Streamer(). void TListOfDataMembers::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TListOfDataMembers. ; Reimplemented from THashList.; Definition at line 484 of ",MatchSource.WIKI,doc/master/classTListOfDataMembers.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfDataMembers.html
https://root.cern/doc/master/classTListOfDataMembers.html:31726,Security,hash,hash,31726," at line 79 of file TListOfDataMembers.h. ◆ Load(). void TListOfDataMembers::Load ; (; ). Load all the DataMembers known to the interpreter for the scope 'fClass' into this collection. ; Definition at line 399 of file TListOfDataMembers.cxx. ◆ MapObject(). void TListOfDataMembers::MapObject ; (; TObject * ; obj). private . Add a pair<id, object> to the map of data members and their ids. ; Definition at line 50 of file TListOfDataMembers.cxx. ◆ operator=(). TListOfDataMembers & TListOfDataMembers::operator= ; (; const TListOfDataMembers & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfDataMembers::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from THashList.; Definition at line 353 of file TListOfDataMembers.cxx. ◆ Remove() [1/2]. TObject * TListOfDataMembers::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from THashList.; Definition at line 366 of file TListOfDataMembers.cxx. ◆ Remove() [2/2]. TObject * TListOfDataMembers::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from THashList.; Definition at line 382 of file TListOfDataMembers.cxx. ◆ SetClass(). void TListOfDataMembers::SetClass ; (; TClass * ; cl). inline . Definition at line 91 of file TListOfDataMembers.h. ◆ Streamer(). void TListOfDataMembers::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TListOfDataMembers. ; Reimplemented from THashList.; Definition at line 484 of file TListOfDataMembers.cxx. ◆ StreamerNVirtual(). void TListOfDataMembers::StreamerNVirtual ",MatchSource.WIKI,doc/master/classTListOfDataMembers.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfDataMembers.html
https://root.cern/doc/master/classTListOfEnums.html:11878,Availability,error,error,11878,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:11967,Availability,error,error,11967,"leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTi",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:12122,Availability,error,error,12122," whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is kn",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:12419,Availability,error,error,12419,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:15896,Availability,error,error,15896," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName (",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:31024,Availability,avail,available,31024,"nums::IsLoaded ; (; ); const. inline . Definition at line 80 of file TListOfEnums.h. ◆ Load(). void TListOfEnums::Load ; (; ). private . Load all the DataMembers known to the interpreter for the scope 'fClass' into this collection. ; Definition at line 337 of file TListOfEnums.cxx. ◆ MapObject(). void TListOfEnums::MapObject ; (; TObject * ; obj). private . Add pair<id, object> to the map of functions and their ids. ; Definition at line 56 of file TListOfEnums.cxx. ◆ operator=(). TListOfEnums & TListOfEnums::operator= ; (; const TListOfEnums & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfEnums::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 293 of file TListOfEnums.cxx. ◆ Remove() [1/2]. TObject * TListOfEnums::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 305 of file TListOfEnums.cxx. ◆ Remove() [2/2]. TObject * TListOfEnums::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 321 of file TListOfEnums.cxx. ◆ SetClass(). void TListOfEnums::SetClass ; (; TClass * ; cl). inlineprivate . Definition at line 56 of file TListOfEnums.h. ◆ Streamer(). void TListOfEnums::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from THashList.; Reimplemented in TListOfE",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:11884,Integrability,message,message,11884,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:12425,Integrability,message,message,12425,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:13286,Integrability,message,message,13286,"ecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *a",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:15902,Integrability,message,message,15902," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName (",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:16275,Integrability,message,message,16275," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObj",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:29687,Integrability,rout,routine,29687,"ing its hash value (returned by its Hash() member). ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 52 of file THashList.cxx. ◆ FindUnloaded(). TEnum * TListOfEnums::FindUnloaded ; (; const char * ; name). inlineprotected . Definition at line 64 of file TListOfEnums.h. ◆ Get(). TEnum * TListOfEnums::Get ; (; DeclId_t ; id, . const char * ; name . ). protected . Return (after creating it if necessary) the TEnum describing the enum corresponding to the Decl 'id'. ; Definition at line 205 of file TListOfEnums.cxx. ◆ GetClass(). TClass * TListOfEnums::GetClass ; (; ); const. inlineprotected . Definition at line 62 of file TListOfEnums.h. ◆ GetIds(). TExMap * TListOfEnums::GetIds ; (; ). inlineprotected . Definition at line 63 of file TListOfEnums.h. ◆ GetObject(). TEnum * TListOfEnums::GetObject ; (; const char * ; name); const. virtual . Return an object from the list of enums if and only if is has already been loaded in the list. ; This is an internal routine. ; Reimplemented in TListOfEnumsWithLock.; Definition at line 268 of file TListOfEnums.cxx. ◆ IsA(). TClass * TListOfEnums::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 95 of file TListOfEnums.h. ◆ IsLoaded(). Bool_t TListOfEnums::IsLoaded ; (; ); const. inline . Definition at line 80 of file TListOfEnums.h. ◆ Load(). void TListOfEnums::Load ; (; ). private . Load all the DataMembers known to the interpreter for the scope 'fClass' into this collection. ; Definition at line 337 of file TListOfEnums.cxx. ◆ MapObject(). void TListOfEnums::MapObject ; (; TObject * ; obj). private . Add pair<id, object> to the map of functions and their ids. ; Definition at line 56 of file TListOfEnums.cxx. ◆ operator=(). TListOfEnums & TListOfEnums::operator= ; (; const TListOfEnums & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfEnums::RecursiveRemove ; (",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:618,Modifiability,inherit,inherited,618,". ROOT: TListOfEnums Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TListOfEnums Class Reference. ; A collection of TEnum objects designed for fast access given a DeclId_t and for keep track of TEnum that were described unloaded enum. ; Definition at line 32 of file TListOfEnums.h. Public Types; typedef TDictionary::DeclId_t DeclId_t;  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TListOfEnums (TClass *cl=nullptr);  Constructor. ;  ;  ~TListOfEnums () override;  Destructor. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAfter (TObjLink *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at location idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddBefore (TObjLin",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:687,Modifiability,inherit,inherited,687,". ROOT: TListOfEnums Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TListOfEnums Class Reference. ; A collection of TEnum objects designed for fast access given a DeclId_t and for keep track of TEnum that were described unloaded enum. ; Definition at line 32 of file TListOfEnums.h. Public Types; typedef TDictionary::DeclId_t DeclId_t;  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TListOfEnums (TClass *cl=nullptr);  Constructor. ;  ;  ~TListOfEnums () override;  Destructor. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAfter (TObjLink *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at location idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddBefore (TObjLin",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:794,Modifiability,inherit,inherited,794,". ROOT: TListOfEnums Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TListOfEnums Class Reference. ; A collection of TEnum objects designed for fast access given a DeclId_t and for keep track of TEnum that were described unloaded enum. ; Definition at line 32 of file TListOfEnums.h. Public Types; typedef TDictionary::DeclId_t DeclId_t;  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TListOfEnums (TClass *cl=nullptr);  Constructor. ;  ;  ~TListOfEnums () override;  Destructor. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAfter (TObjLink *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at location idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddBefore (TObjLin",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:3908,Modifiability,inherit,inherited,3908,"in the list. ;  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object using its hash value (returned by its Hash() member). ;  ; virtual TEnum * GetObject (const char *) const;  Return an object from the list of enums if and only if is has already been loaded in the list. ;  ; TClass * IsA () const override;  ; Bool_t IsLoaded () const;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thr",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:4967,Modifiability,inherit,inherited,4967,"t_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; TObject * First () const override;  Return the first object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * FirstLink () const;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Bool_t IsAscending ();  ; TObject * Last () const override;  Return the last object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * LastLink () const;  ; TIterator * MakeIterator",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:6355,Modifiability,inherit,inherited,6355,ect at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; TObject * First () const override;  Return the first object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * FirstLink () const;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Bool_t IsAscending ();  ; TObject * Last () const override;  Return the last object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * LastLink () const;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return a list iterator. ;  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; virtual Int_t GetLast () const;  Returns index of last object in collection. ;  ; virtual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this ,MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:7226,Modifiability,inherit,inherited,7226," Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; virtual Int_t GetLast () const;  Returns index of last object in collection. ;  ; virtual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIte",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:7572,Modifiability,inherit,inherit,7572,"tual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () con",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:10678,Modifiability,inherit,inherited,10678," Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *optio",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:11583,Modifiability,inherit,inheritance,11583," bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () con",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:13384,Modifiability,inherit,inherits,13384,"const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a ",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:13501,Modifiability,inherit,inherits,13501,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:16508,Modifiability,inherit,inherited,16508,"d StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:16721,Modifiability,inherit,inherited,16721,"d StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:16930,Modifiability,inherit,inherited,16930,"d StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:17625,Modifiability,inherit,inherited,17625,"tic Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; TEnu",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:18176,Modifiability,inherit,inherited,18176,"nt_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; TEnum * FindUnloaded (const char *name);  ; TEnum * Get (DeclId_t id, const char *name);  Return (after creating it if necessary) the TEnum describing the enum corresponding to the Decl 'id'. ;  ; TClass * GetClass () const;  ; TExMap * GetIds ();  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a ne",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:18969,Modifiability,inherit,inherited,18969," static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; TEnum * FindUnloaded (const char *name);  ; TEnum * Get (DeclId_t id, const char *name);  Return (after creating it if necessary) the TEnum describing the enum corresponding to the Decl 'id'. ;  ; TClass * GetClass () const;  ; TExMap * GetIds ();  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from T",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:19957,Modifiability,inherit,inherited,19957,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TListOfEnums (const TListOfEnums &)=delete;  Represent interpreter state when we last did a full load. ;  ; void Load ();  Load all the DataMembers known to the interpreter for the scope 'fClass' into this collection. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:20067,Modifiability,inherit,inherited,20067,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TListOfEnums (const TListOfEnums &)=delete;  Represent interpreter state when we last did a full load. ;  ; void Load ();  Load all the DataMembers known to the interpreter for the scope 'fClass' into this collection. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:20575,Modifiability,inherit,inherited,20575,"bjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TListOfEnums (const TListOfEnums &)=delete;  Represent interpreter state when we last did a full load. ;  ; void Load ();  Load all the DataMembers known to the interpreter for the scope 'fClass' into this collection. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions and their ids. ;  ; TListOfEnums & operator= (const TListOfEnums &)=delete;  ; void SetClass (TClass *cl);  ; void Unload ();  Mark 'all func' as being unloaded. ;  ; void Unload (TEnum *e);  Mark enum 'e' as being unloaded. ;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  Context of this list. Not owned. ;  ; Bool_t fIsLoaded;  Holder of TEnum for unloaded Enums. ;  ; ULong64_t fLastLoadMarker;  Mark whether Load was executed. ",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:21826,Modifiability,inherit,inherited,21826,"aded. ;  ; void Unload (TEnum *e);  Mark enum 'e' as being unloaded. ;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  Context of this list. Not owned. ;  ; Bool_t fIsLoaded;  Holder of TEnum for unloaded Enums. ;  ; ULong64_t fLastLoadMarker;  Mark whether Load was executed. ;  ; THashList * fUnloaded;  Map from DeclId_t to TEnum*. ;  . Friends; class TClass;  ; class TCling;  ; class TProtoClass;  ; class TROOT;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfEnums.h>. Inheritance diagram for TListOfEnums:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfEnums::DeclId_t. Definition at line 59 of file TListOfEnums.h. Constructor & Destructor Documentation. ◆ TListOfEnums() [1/2]. TListOfEnums::TListOfEnums ; (; const TListOfEnums & ; ). privatedelete . Represent interpreter state when we last did a full load. . ◆ TListOfEnums() [2/2]. TListOfEnu",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:21975,Modifiability,inherit,inherited,21975,"aded. ;  ; void Unload (TEnum *e);  Mark enum 'e' as being unloaded. ;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  Context of this list. Not owned. ;  ; Bool_t fIsLoaded;  Holder of TEnum for unloaded Enums. ;  ; ULong64_t fLastLoadMarker;  Mark whether Load was executed. ;  ; THashList * fUnloaded;  Map from DeclId_t to TEnum*. ;  . Friends; class TClass;  ; class TCling;  ; class TProtoClass;  ; class TROOT;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfEnums.h>. Inheritance diagram for TListOfEnums:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfEnums::DeclId_t. Definition at line 59 of file TListOfEnums.h. Constructor & Destructor Documentation. ◆ TListOfEnums() [1/2]. TListOfEnums::TListOfEnums ; (; const TListOfEnums & ; ). privatedelete . Represent interpreter state when we last did a full load. . ◆ TListOfEnums() [2/2]. TListOfEnu",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:22108,Modifiability,inherit,inherited,22108,"aded. ;  ; void Unload (TEnum *e);  Mark enum 'e' as being unloaded. ;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  Context of this list. Not owned. ;  ; Bool_t fIsLoaded;  Holder of TEnum for unloaded Enums. ;  ; ULong64_t fLastLoadMarker;  Mark whether Load was executed. ;  ; THashList * fUnloaded;  Map from DeclId_t to TEnum*. ;  . Friends; class TClass;  ; class TCling;  ; class TProtoClass;  ; class TROOT;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfEnums.h>. Inheritance diagram for TListOfEnums:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfEnums::DeclId_t. Definition at line 59 of file TListOfEnums.h. Constructor & Destructor Documentation. ◆ TListOfEnums() [1/2]. TListOfEnums::TListOfEnums ; (; const TListOfEnums & ; ). privatedelete . Represent interpreter state when we last did a full load. . ◆ TListOfEnums() [2/2]. TListOfEnu",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:22201,Modifiability,inherit,inherited,22201,"aded. ;  ; void Unload (TEnum *e);  Mark enum 'e' as being unloaded. ;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  Context of this list. Not owned. ;  ; Bool_t fIsLoaded;  Holder of TEnum for unloaded Enums. ;  ; ULong64_t fLastLoadMarker;  Mark whether Load was executed. ;  ; THashList * fUnloaded;  Map from DeclId_t to TEnum*. ;  . Friends; class TClass;  ; class TCling;  ; class TProtoClass;  ; class TROOT;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfEnums.h>. Inheritance diagram for TListOfEnums:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfEnums::DeclId_t. Definition at line 59 of file TListOfEnums.h. Constructor & Destructor Documentation. ◆ TListOfEnums() [1/2]. TListOfEnums::TListOfEnums ; (; const TListOfEnums & ; ). privatedelete . Represent interpreter state when we last did a full load. . ◆ TListOfEnums() [2/2]. TListOfEnu",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:22273,Modifiability,inherit,inherited,22273,"aded. ;  ; void Unload (TEnum *e);  Mark enum 'e' as being unloaded. ;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  Context of this list. Not owned. ;  ; Bool_t fIsLoaded;  Holder of TEnum for unloaded Enums. ;  ; ULong64_t fLastLoadMarker;  Mark whether Load was executed. ;  ; THashList * fUnloaded;  Map from DeclId_t to TEnum*. ;  . Friends; class TClass;  ; class TCling;  ; class TProtoClass;  ; class TROOT;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfEnums.h>. Inheritance diagram for TListOfEnums:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfEnums::DeclId_t. Definition at line 59 of file TListOfEnums.h. Constructor & Destructor Documentation. ◆ TListOfEnums() [1/2]. TListOfEnums::TListOfEnums ; (; const TListOfEnums & ; ). privatedelete . Represent interpreter state when we last did a full load. . ◆ TListOfEnums() [2/2]. TListOfEnu",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:22571,Modifiability,inherit,inherited,22571,"aded. ;  ; void Unload (TEnum *e);  Mark enum 'e' as being unloaded. ;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  Context of this list. Not owned. ;  ; Bool_t fIsLoaded;  Holder of TEnum for unloaded Enums. ;  ; ULong64_t fLastLoadMarker;  Mark whether Load was executed. ;  ; THashList * fUnloaded;  Map from DeclId_t to TEnum*. ;  . Friends; class TClass;  ; class TCling;  ; class TProtoClass;  ; class TROOT;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfEnums.h>. Inheritance diagram for TListOfEnums:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfEnums::DeclId_t. Definition at line 59 of file TListOfEnums.h. Constructor & Destructor Documentation. ◆ TListOfEnums() [1/2]. TListOfEnums::TListOfEnums ; (; const TListOfEnums & ; ). privatedelete . Represent interpreter state when we last did a full load. . ◆ TListOfEnums() [2/2]. TListOfEnu",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:22643,Modifiability,inherit,inherited,22643,"aded. ;  ; void Unload (TEnum *e);  Mark enum 'e' as being unloaded. ;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  Context of this list. Not owned. ;  ; Bool_t fIsLoaded;  Holder of TEnum for unloaded Enums. ;  ; ULong64_t fLastLoadMarker;  Mark whether Load was executed. ;  ; THashList * fUnloaded;  Map from DeclId_t to TEnum*. ;  . Friends; class TClass;  ; class TCling;  ; class TProtoClass;  ; class TROOT;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfEnums.h>. Inheritance diagram for TListOfEnums:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfEnums::DeclId_t. Definition at line 59 of file TListOfEnums.h. Constructor & Destructor Documentation. ◆ TListOfEnums() [1/2]. TListOfEnums::TListOfEnums ; (; const TListOfEnums & ; ). privatedelete . Represent interpreter state when we last did a full load. . ◆ TListOfEnums() [2/2]. TListOfEnu",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:3289,Performance,load,loaded,3289,"d object at the beginning of the list and also store option. ;  ; void AddLast (TObject *obj) override;  Add object at the end of the list. ;  ; void AddLast (TObject *obj, Option_t *opt) override;  Add object at the end of the list and also store option. ;  ; void Clear (Option_t *option) override;  Remove all objects from the list. ;  ; void Delete (Option_t *option="""") override;  Delete all TDataMember object files. ;  ; TEnum * Find (DeclId_t id) const;  Return the TEnum corresponding to the Decl 'id' or NULL if it does not exist. ;  ; TObject * FindObject (const char *) const override;  Specialize FindObject to do search for the a enum just by name or create it if its not already in the list. ;  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object using its hash value (returned by its Hash() member). ;  ; virtual TEnum * GetObject (const char *) const;  Return an object from the list of enums if and only if is has already been loaded in the list. ;  ; TClass * IsA () const override;  ; Bool_t IsLoaded () const;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a ",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:20283,Performance,perform,perform,20283,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TListOfEnums (const TListOfEnums &)=delete;  Represent interpreter state when we last did a full load. ;  ; void Load ();  Load all the DataMembers known to the interpreter for the scope 'fClass' into this collection. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:20882,Performance,load,load,20882,"t also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TListOfEnums (const TListOfEnums &)=delete;  Represent interpreter state when we last did a full load. ;  ; void Load ();  Load all the DataMembers known to the interpreter for the scope 'fClass' into this collection. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions and their ids. ;  ; TListOfEnums & operator= (const TListOfEnums &)=delete;  ; void SetClass (TClass *cl);  ; void Unload ();  Mark 'all func' as being unloaded. ;  ; void Unload (TEnum *e);  Mark enum 'e' as being unloaded. ;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  Context of this list. Not owned. ;  ; Bool_t fIsLoaded;  Holder of TEnum for unloaded Enums. ;  ; ULong64_t fLastLoadMarker;  Mark whether Load was executed. ;  ; THashList * fUnloaded;  Map from DeclId_t to TEnum*. ;  . Friends; class TClass;  ; class TCling;  ; class TProtoClass;  ; class TROOT;  . Additional Inherited Members;  Protected Ty",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:22315,Performance,cache,cache,22315,"aded. ;  ; void Unload (TEnum *e);  Mark enum 'e' as being unloaded. ;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  Context of this list. Not owned. ;  ; Bool_t fIsLoaded;  Holder of TEnum for unloaded Enums. ;  ; ULong64_t fLastLoadMarker;  Mark whether Load was executed. ;  ; THashList * fUnloaded;  Map from DeclId_t to TEnum*. ;  . Friends; class TClass;  ; class TCling;  ; class TProtoClass;  ; class TROOT;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfEnums.h>. Inheritance diagram for TListOfEnums:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfEnums::DeclId_t. Definition at line 59 of file TListOfEnums.h. Constructor & Destructor Documentation. ◆ TListOfEnums() [1/2]. TListOfEnums::TListOfEnums ; (; const TListOfEnums & ; ). privatedelete . Represent interpreter state when we last did a full load. . ◆ TListOfEnums() [2/2]. TListOfEnu",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:23199,Performance,load,load,23199,"  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfEnums.h>. Inheritance diagram for TListOfEnums:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfEnums::DeclId_t. Definition at line 59 of file TListOfEnums.h. Constructor & Destructor Documentation. ◆ TListOfEnums() [1/2]. TListOfEnums::TListOfEnums ; (; const TListOfEnums & ; ). privatedelete . Represent interpreter state when we last did a full load. . ◆ TListOfEnums() [2/2]. TListOfEnums::TListOfEnums ; (; TClass * ; cl = nullptr). Constructor. ; Definition at line 35 of file TListOfEnums.cxx. ◆ ~TListOfEnums(). TListOfEnums::~TListOfEnums ; (; ). override . Destructor. ; Definition at line 45 of file TListOfEnums.cxx. Member Function Documentation. ◆ AddAfter() [1/2]. void TListOfEnums::AddAfter ; (; const TObject * ; after, . TObject * ; obj . ). overridevirtual . Insert object after object after in the list. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 120 of file TListOfEnums.cxx. ◆ AddAfter() [2/2]. void TListOfEnums::AddAfter ; (; TObjLink * ; after, . TObject * ; obj . ). overridevirtual . Insert object after object after in the list. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 129 of file TListOfEnums.cxx. ◆ AddAt(). void TListOfEnums::AddAt ; (; TObject * ; obj, . Int_t ; idx . ). overridevirtual . ",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:29645,Performance,load,loaded,29645,"const TObject * ; obj); const. overridevirtual . Find object using its hash value (returned by its Hash() member). ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 52 of file THashList.cxx. ◆ FindUnloaded(). TEnum * TListOfEnums::FindUnloaded ; (; const char * ; name). inlineprotected . Definition at line 64 of file TListOfEnums.h. ◆ Get(). TEnum * TListOfEnums::Get ; (; DeclId_t ; id, . const char * ; name . ). protected . Return (after creating it if necessary) the TEnum describing the enum corresponding to the Decl 'id'. ; Definition at line 205 of file TListOfEnums.cxx. ◆ GetClass(). TClass * TListOfEnums::GetClass ; (; ); const. inlineprotected . Definition at line 62 of file TListOfEnums.h. ◆ GetIds(). TExMap * TListOfEnums::GetIds ; (; ). inlineprotected . Definition at line 63 of file TListOfEnums.h. ◆ GetObject(). TEnum * TListOfEnums::GetObject ; (; const char * ; name); const. virtual . Return an object from the list of enums if and only if is has already been loaded in the list. ; This is an internal routine. ; Reimplemented in TListOfEnumsWithLock.; Definition at line 268 of file TListOfEnums.cxx. ◆ IsA(). TClass * TListOfEnums::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 95 of file TListOfEnums.h. ◆ IsLoaded(). Bool_t TListOfEnums::IsLoaded ; (; ); const. inline . Definition at line 80 of file TListOfEnums.h. ◆ Load(). void TListOfEnums::Load ; (; ). private . Load all the DataMembers known to the interpreter for the scope 'fClass' into this collection. ; Definition at line 337 of file TListOfEnums.cxx. ◆ MapObject(). void TListOfEnums::MapObject ; (; TObject * ; obj). private . Add pair<id, object> to the map of functions and their ids. ; Definition at line 56 of file TListOfEnums.cxx. ◆ operator=(). TListOfEnums & TListOfEnums::operator= ; (; const TListOfEnums & ; ). privatedelet",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:4931,Safety,safe,safe,4931,"TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; TObject * First () const override;  Return the first object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * FirstLink () const;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Bool_t IsAscending ();  ; TObject * La",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:412,Security,access,access,412,". ROOT: TListOfEnums Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TListOfEnums Class Reference. ; A collection of TEnum objects designed for fast access given a DeclId_t and for keep track of TEnum that were described unloaded enum. ; Definition at line 32 of file TListOfEnums.h. Public Types; typedef TDictionary::DeclId_t DeclId_t;  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TListOfEnums (TClass *cl=nullptr);  Constructor. ;  ;  ~TListOfEnums () override;  Destructor. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAfter (TObjLink *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at location idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddBefore (TObjLin",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:3116,Security,hash,hash,3116," AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; void AddFirst (TObject *obj, Option_t *opt) override;  Add object at the beginning of the list and also store option. ;  ; void AddLast (TObject *obj) override;  Add object at the end of the list. ;  ; void AddLast (TObject *obj, Option_t *opt) override;  Add object at the end of the list and also store option. ;  ; void Clear (Option_t *option) override;  Remove all objects from the list. ;  ; void Delete (Option_t *option="""") override;  Delete all TDataMember object files. ;  ; TEnum * Find (DeclId_t id) const;  Return the TEnum corresponding to the Decl 'id' or NULL if it does not exist. ;  ; TObject * FindObject (const char *) const override;  Specialize FindObject to do search for the a enum just by name or create it if its not already in the list. ;  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object using its hash value (returned by its Hash() member). ;  ; virtual TEnum * GetObject (const char *) const;  Return an object from the list of enums if and only if is has already been loaded in the list. ;  ; TClass * IsA () const override;  ; Bool_t IsLoaded () const;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TC",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:4234,Security,hash,hashlist,4234,"n an object from the list of enums if and only if is has already been loaded in the list. ;  ; TClass * IsA () const override;  ; Bool_t IsLoaded () const;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *ob",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:4461,Security,hash,hash,4461,"j) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position i",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:4645,Security,hash,hash,4645,"ect from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; TObject * First () const override;  Return",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:4737,Security,hash,hashlist,4737," Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; TObject * First () const override;  Return the first object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * FirstLink () const;  ; TObject ** Get",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:4906,Security,access,access,4906,"TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; TObject * First () const override;  Return the first object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * FirstLink () const;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Bool_t IsAscending ();  ; TObject * La",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:8561,Security,hash,hash,8561,"s in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; virtual Bool_t IsEmpty () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; void ls (Option_t *option="""") const override;  List (ls) all objects in this collection. ;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the ",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:10143,Security,access,accessible,10143," MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Ch",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:18040,Security,access,accessible,18040,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; TEnum * FindUnloaded (const char *name);  ; TEnum * Get (DeclId_t id, const char *name);  Return (after creating it if necessary) the TEnum describing the enum corresponding to the Decl 'id'. ;  ; TClass * GetClass () const;  ; TExMap * GetIds ();  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:28360,Security,hash,hash,28360,"nition at line 95 of file TListOfEnums.h. ◆ Delete(). void TListOfEnums::Delete ; (; Option_t * ; option = """"). overridevirtual . Delete all TDataMember object files. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 168 of file TListOfEnums.cxx. ◆ Find(). TEnum * TListOfEnums::Find ; (; DeclId_t ; id); const. Return the TEnum corresponding to the Decl 'id' or NULL if it does not exist. ; Definition at line 179 of file TListOfEnums.cxx. ◆ FindObject() [1/3]. TObject * TListOfEnums::FindObject ; (; const char * ; name); const. overridevirtual . Specialize FindObject to do search for the a enum just by name or create it if its not already in the list. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 190 of file TListOfEnums.cxx. ◆ FindObject() [2/3]. TObject * THashList::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to a TString. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 51 of file THashList.cxx. ◆ FindObject() [3/3]. TObject * THashList::FindObject ; (; const TObject * ; obj); const. overridevirtual . Find object using its hash value (returned by its Hash() member). ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 52 of file THashList.cxx. ◆ FindUnloaded(). TEnum * TListOfEnums::FindUnloaded ; (; const char * ; name). inlineprotected . Definition at line 64 of file TListOfEnums.h. ◆ Get(). TEnum * TListOfEnums::Get ; (; DeclId_t ; id, . const char * ; name . ). protected . Return (after creating it if necessary) the TEnum describing the enum corresponding to the Decl 'id'. ; Definition at line 205 of file TListOfEnums.cxx. ◆ GetClass(). TClass * TListOfEnums::GetClass ; (; ); const. inlineprotected . Definition at line 62 of file TListOfEnums.h. ◆ GetIds(). TExMap * TListOf",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:28687,Security,hash,hash,28687," * TListOfEnums::Find ; (; DeclId_t ; id); const. Return the TEnum corresponding to the Decl 'id' or NULL if it does not exist. ; Definition at line 179 of file TListOfEnums.cxx. ◆ FindObject() [1/3]. TObject * TListOfEnums::FindObject ; (; const char * ; name); const. overridevirtual . Specialize FindObject to do search for the a enum just by name or create it if its not already in the list. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 190 of file TListOfEnums.cxx. ◆ FindObject() [2/3]. TObject * THashList::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to a TString. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 51 of file THashList.cxx. ◆ FindObject() [3/3]. TObject * THashList::FindObject ; (; const TObject * ; obj); const. overridevirtual . Find object using its hash value (returned by its Hash() member). ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 52 of file THashList.cxx. ◆ FindUnloaded(). TEnum * TListOfEnums::FindUnloaded ; (; const char * ; name). inlineprotected . Definition at line 64 of file TListOfEnums.h. ◆ Get(). TEnum * TListOfEnums::Get ; (; DeclId_t ; id, . const char * ; name . ). protected . Return (after creating it if necessary) the TEnum describing the enum corresponding to the Decl 'id'. ; Definition at line 205 of file TListOfEnums.cxx. ◆ GetClass(). TClass * TListOfEnums::GetClass ; (; ); const. inlineprotected . Definition at line 62 of file TListOfEnums.h. ◆ GetIds(). TExMap * TListOfEnums::GetIds ; (; ). inlineprotected . Definition at line 63 of file TListOfEnums.h. ◆ GetObject(). TEnum * TListOfEnums::GetObject ; (; const char * ; name); const. virtual . Return an object from the list of enums if and only if is has already been loaded in the list. ; This is an internal routine. ;",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:30971,Security,hash,hash,30971,"OfEnumsWithLock.; Definition at line 95 of file TListOfEnums.h. ◆ IsLoaded(). Bool_t TListOfEnums::IsLoaded ; (; ); const. inline . Definition at line 80 of file TListOfEnums.h. ◆ Load(). void TListOfEnums::Load ; (; ). private . Load all the DataMembers known to the interpreter for the scope 'fClass' into this collection. ; Definition at line 337 of file TListOfEnums.cxx. ◆ MapObject(). void TListOfEnums::MapObject ; (; TObject * ; obj). private . Add pair<id, object> to the map of functions and their ids. ; Definition at line 56 of file TListOfEnums.cxx. ◆ operator=(). TListOfEnums & TListOfEnums::operator= ; (; const TListOfEnums & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfEnums::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 293 of file TListOfEnums.cxx. ◆ Remove() [1/2]. TObject * TListOfEnums::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 305 of file TListOfEnums.cxx. ◆ Remove() [2/2]. TObject * TListOfEnums::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 321 of file TListOfEnums.cxx. ◆ SetClass(). void TListOfEnums::SetClass ; (; TClass * ; cl). inlineprivate . Definition at line 56 of file TListOfEnums.h. ◆ Streamer(). void TListOfEnums::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the col",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:30989,Security,hash,hash,30989,"OfEnumsWithLock.; Definition at line 95 of file TListOfEnums.h. ◆ IsLoaded(). Bool_t TListOfEnums::IsLoaded ; (; ); const. inline . Definition at line 80 of file TListOfEnums.h. ◆ Load(). void TListOfEnums::Load ; (; ). private . Load all the DataMembers known to the interpreter for the scope 'fClass' into this collection. ; Definition at line 337 of file TListOfEnums.cxx. ◆ MapObject(). void TListOfEnums::MapObject ; (; TObject * ; obj). private . Add pair<id, object> to the map of functions and their ids. ; Definition at line 56 of file TListOfEnums.cxx. ◆ operator=(). TListOfEnums & TListOfEnums::operator= ; (; const TListOfEnums & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfEnums::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 293 of file TListOfEnums.cxx. ◆ Remove() [1/2]. TObject * TListOfEnums::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 305 of file TListOfEnums.cxx. ◆ Remove() [2/2]. TObject * TListOfEnums::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 321 of file TListOfEnums.cxx. ◆ SetClass(). void TListOfEnums::SetClass ; (; TClass * ; cl). inlineprivate . Definition at line 56 of file TListOfEnums.h. ◆ Streamer(). void TListOfEnums::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the col",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnums.html:31006,Security,hash,hash,31006,"nums::IsLoaded ; (; ); const. inline . Definition at line 80 of file TListOfEnums.h. ◆ Load(). void TListOfEnums::Load ; (; ). private . Load all the DataMembers known to the interpreter for the scope 'fClass' into this collection. ; Definition at line 337 of file TListOfEnums.cxx. ◆ MapObject(). void TListOfEnums::MapObject ; (; TObject * ; obj). private . Add pair<id, object> to the map of functions and their ids. ; Definition at line 56 of file TListOfEnums.cxx. ◆ operator=(). TListOfEnums & TListOfEnums::operator= ; (; const TListOfEnums & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfEnums::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 293 of file TListOfEnums.cxx. ◆ Remove() [1/2]. TObject * TListOfEnums::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 305 of file TListOfEnums.cxx. ◆ Remove() [2/2]. TObject * TListOfEnums::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from THashList.; Reimplemented in TListOfEnumsWithLock.; Definition at line 321 of file TListOfEnums.cxx. ◆ SetClass(). void TListOfEnums::SetClass ; (; TClass * ; cl). inlineprivate . Definition at line 56 of file TListOfEnums.h. ◆ Streamer(). void TListOfEnums::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from THashList.; Reimplemented in TListOfE",MatchSource.WIKI,doc/master/classTListOfEnums.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:11109,Availability,error,error,11109,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:11198,Availability,error,error,11198,"leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTi",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:11353,Availability,error,error,11353," whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is kn",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:11650,Availability,error,error,11650,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:15127,Availability,error,error,15127," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TListOfEnums; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFil",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:31921,Availability,avail,available,31921,ile TListOfEnumsWithLock.cxx. ◆ LastLink(). TObjLink * TListOfEnumsWithLock::LastLink ; (; ); const. overridevirtual . Reimplemented from TList.; Definition at line 284 of file TListOfEnumsWithLock.cxx. ◆ MakeIterator(). TIterator * TListOfEnumsWithLock::MakeIterator ; (; Bool_t ; dir = kIterForward); const. overridevirtual . Return a list iterator. ; Reimplemented from TList.; Definition at line 220 of file TListOfEnumsWithLock.cxx. ◆ operator=(). TListOfEnumsWithLock & TListOfEnumsWithLock::operator= ; (; const TListOfEnumsWithLock & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfEnumsWithLock::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from TListOfEnums.; Definition at line 190 of file TListOfEnumsWithLock.cxx. ◆ Remove() [1/2]. TObject * TListOfEnumsWithLock::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from TListOfEnums.; Definition at line 201 of file TListOfEnumsWithLock.cxx. ◆ Remove() [2/2]. TObject * TListOfEnumsWithLock::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from TListOfEnums.; Definition at line 210 of file TListOfEnumsWithLock.cxx. ◆ Streamer(). void TListOfEnumsWithLock::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from TListOfEnums. ◆ StreamerNVirtual(). void TListOfEnumsWithLock::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 80 of file TListOfEnumsWithLock.h. Libraries for TListOfEnumsWithLock:,MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:30020,Energy Efficiency,allocate,allocated,30020,"thLock.cxx. ◆ GetLast(). Int_t TListOfEnumsWithLock::GetLast ; (; ); const. overridevirtual . Returns index of last object in collection. ; Returns -1 when no objects in collection. ; Reimplemented from TSeqCollection.; Definition at line 293 of file TListOfEnumsWithLock.cxx. ◆ GetObject(). TEnum * TListOfEnumsWithLock::GetObject ; (; const char * ; name); const. overridevirtual . Return an object from the list of enums if and only if is has already been loaded in the list. ; This is an internal routine. ; Reimplemented from TListOfEnums.; Definition at line 175 of file TListOfEnumsWithLock.cxx. ◆ GetObjectRef(). TObject ** TListOfEnumsWithLock::GetObjectRef ; (; const TObject * ; obj); const. overridevirtual . Return address of pointer to obj. ; Reimplemented from TList.; Definition at line 268 of file TListOfEnumsWithLock.cxx. ◆ GetSize(). Int_t TListOfEnumsWithLock::GetSize ; (; ); const. overridevirtual . Return the capacity of the collection, i.e. ; the current total amount of space that has been allocated so far. Same as Capacity. Use GetEntries to get the number of elements currently in the collection. ; Reimplemented from TCollection.; Definition at line 310 of file TListOfEnumsWithLock.cxx. ◆ IndexOf(). Int_t TListOfEnumsWithLock::IndexOf ; (; const TObject * ; obj); const. overridevirtual . Return index of object in collection. ; Returns -1 when object not found. Uses member IsEqual() to find object. ; Reimplemented from TSeqCollection.; Definition at line 301 of file TListOfEnumsWithLock.cxx. ◆ IsA(). TClass * TListOfEnumsWithLock::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TListOfEnums.; Definition at line 80 of file TListOfEnumsWithLock.h. ◆ Last(). TObject * TListOfEnumsWithLock::Last ; (; ); const. overridevirtual . Return the last object in the list. Returns 0 when list is empty. ; Reimplemented from TList.; Definition at line 276 of file TListOfEnumsWithLock.cxx. ◆ LastLink(). TObjLink * T",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:11115,Integrability,message,message,11115,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:11656,Integrability,message,message,11656,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:12517,Integrability,message,message,12517,"ecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *a",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:15133,Integrability,message,message,15133," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TListOfEnums; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFil",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:15506,Integrability,message,message,15506," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TListOfEnums; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Versio",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:29504,Integrability,rout,routine,29504,"Hash() member). ; Reimplemented from TListOfEnums.; Definition at line 165 of file TListOfEnumsWithLock.cxx. ◆ First(). TObject * TListOfEnumsWithLock::First ; (; ); const. overridevirtual . Return the first object in the list. Returns 0 when list is empty. ; Reimplemented from TList.; Definition at line 252 of file TListOfEnumsWithLock.cxx. ◆ FirstLink(). TObjLink * TListOfEnumsWithLock::FirstLink ; (; ); const. overridevirtual . Reimplemented from TList.; Definition at line 260 of file TListOfEnumsWithLock.cxx. ◆ GetLast(). Int_t TListOfEnumsWithLock::GetLast ; (; ); const. overridevirtual . Returns index of last object in collection. ; Returns -1 when no objects in collection. ; Reimplemented from TSeqCollection.; Definition at line 293 of file TListOfEnumsWithLock.cxx. ◆ GetObject(). TEnum * TListOfEnumsWithLock::GetObject ; (; const char * ; name); const. overridevirtual . Return an object from the list of enums if and only if is has already been loaded in the list. ; This is an internal routine. ; Reimplemented from TListOfEnums.; Definition at line 175 of file TListOfEnumsWithLock.cxx. ◆ GetObjectRef(). TObject ** TListOfEnumsWithLock::GetObjectRef ; (; const TObject * ; obj); const. overridevirtual . Return address of pointer to obj. ; Reimplemented from TList.; Definition at line 268 of file TListOfEnumsWithLock.cxx. ◆ GetSize(). Int_t TListOfEnumsWithLock::GetSize ; (; ); const. overridevirtual . Return the capacity of the collection, i.e. ; the current total amount of space that has been allocated so far. Same as Capacity. Use GetEntries to get the number of elements currently in the collection. ; Reimplemented from TCollection.; Definition at line 310 of file TListOfEnumsWithLock.cxx. ◆ IndexOf(). Int_t TListOfEnumsWithLock::IndexOf ; (; const TObject * ; obj); const. overridevirtual . Return index of object in collection. ; Returns -1 when object not found. Uses member IsEqual() to find object. ; Reimplemented from TSeqCollection.; Definition at line 301",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:3836,Modifiability,inherit,inherited,3836,"pointer to obj. ;  ; Int_t GetSize () const override;  Return the capacity of the collection, i.e. ;  ; Int_t IndexOf (const TObject *obj) const override;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; TObject * Last () const override;  Return the last object in the list. Returns 0 when list is empty. ;  ; TObjLink * LastLink () const override;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return a list iterator. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TListOfEnums;  TListOfEnums (TClass *cl=nullptr);  Constructor. ;  ;  ~TListOfEnums () override;  Destructor. ;  ; TEnum * Find (DeclId_t id) const;  Return the TEnum corresponding to the Decl 'id' or NULL if it does not exist. ;  ; Bool_t IsLoaded () const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListFor",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:4203,Modifiability,inherit,inherited,4203,"; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return a list iterator. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TListOfEnums;  TListOfEnums (TClass *cl=nullptr);  Constructor. ;  ;  ~TListOfEnums () override;  Destructor. ;  ; TEnum * Find (DeclId_t id) const;  Return the TEnum corresponding to the Decl 'id' or NULL if it does not exist. ;  ; Bool_t IsLoaded () const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access,",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:5262,Modifiability,inherit,inherited,5262,"t_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; Bool_t IsAscending ();  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; vir",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:5844,Modifiability,inherit,inherited,5844,"e THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; Bool_t IsAscending ();  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:6539,Modifiability,inherit,inherited,6539,"Option_t *opt);  ; Bool_t IsAscending ();  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIte",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:6885,Modifiability,inherit,inherit,6885,"d from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:9909,Modifiability,inherit,inherited,9909," Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *optio",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:10814,Modifiability,inherit,inheritance,10814," bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () con",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:12615,Modifiability,inherit,inherits,12615,"const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a ",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:12732,Modifiability,inherit,inherits,12732,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:15739,Modifiability,inherit,inherited,15739,"st char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TListOfEnums; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited fro",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:15955,Modifiability,inherit,inherited,15955,"st char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TListOfEnums; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited fro",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:16168,Modifiability,inherit,inherited,16168,"st char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TListOfEnums; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited fro",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:16377,Modifiability,inherit,inherited,16377,"st char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TListOfEnums; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited fro",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:17072,Modifiability,inherit,inherited,17072,"tic Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef TDictiona",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:17623,Modifiability,inherit,inherited,17623,"nt_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef TDictionary::DeclId_t DeclId_t;  . Private Member Functions;  TListOfEnumsWithLock (const TListOfEnumsWithLock &)=delete;  ; TListOfEnumsWithLock & operator= (const TListOfEnumsWithLock &)=delete;  . Additional Inherited Members;  Public Types inherited from TListOfEnums; typedef TDictionary::DeclId_t DeclId_t;  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000;",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:18376,Modifiability,inherit,inherited,18376,"bage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef TDictionary::DeclId_t DeclId_t;  . Private Member Functions;  TListOfEnumsWithLock (const TListOfEnumsWithLock &)=delete;  ; TListOfEnumsWithLock & operator= (const TListOfEnumsWithLock &)=delete;  . Additional Inherited Members;  Public Types inherited from TListOfEnums; typedef TDictionary::DeclId_t DeclId_t;  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:18462,Modifiability,inherit,inherited,18462,"bage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef TDictionary::DeclId_t DeclId_t;  . Private Member Functions;  TListOfEnumsWithLock (const TListOfEnumsWithLock &)=delete;  ; TListOfEnumsWithLock & operator= (const TListOfEnumsWithLock &)=delete;  . Additional Inherited Members;  Public Types inherited from TListOfEnums; typedef TDictionary::DeclId_t DeclId_t;  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:18531,Modifiability,inherit,inherited,18531,"bage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef TDictionary::DeclId_t DeclId_t;  . Private Member Functions;  TListOfEnumsWithLock (const TListOfEnumsWithLock &)=delete;  ; TListOfEnumsWithLock & operator= (const TListOfEnumsWithLock &)=delete;  . Additional Inherited Members;  Public Types inherited from TListOfEnums; typedef TDictionary::DeclId_t DeclId_t;  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:18638,Modifiability,inherit,inherited,18638,"bage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef TDictionary::DeclId_t DeclId_t;  . Private Member Functions;  TListOfEnumsWithLock (const TListOfEnumsWithLock &)=delete;  ; TListOfEnumsWithLock & operator= (const TListOfEnumsWithLock &)=delete;  . Additional Inherited Members;  Public Types inherited from TListOfEnums; typedef TDictionary::DeclId_t DeclId_t;  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:19279,Modifiability,inherit,inherited,19279,"kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TListOfEnums; TEnum * FindUnloaded (const char *name);  ; TEnum * Get (DeclId_t id, const char *name);  Return (after creating it if necessary) the TEnum describing the enum corresponding to the Decl 'id'. ;  ; TClass * GetClass () const;  ; TExMap * GetIds ();  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, c",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:19428,Modifiability,inherit,inherited,19428,"kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TListOfEnums; TEnum * FindUnloaded (const char *name);  ; TEnum * Get (DeclId_t id, const char *name);  Return (after creating it if necessary) the TEnum describing the enum corresponding to the Decl 'id'. ;  ; TClass * GetClass () const;  ; TExMap * GetIds ();  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, c",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:19561,Modifiability,inherit,inherited,19561,"kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TListOfEnums; TEnum * FindUnloaded (const char *name);  ; TEnum * Get (DeclId_t id, const char *name);  Return (after creating it if necessary) the TEnum describing the enum corresponding to the Decl 'id'. ;  ; TClass * GetClass () const;  ; TExMap * GetIds ();  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, c",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:19660,Modifiability,inherit,inherited,19660,"kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TListOfEnums; TEnum * FindUnloaded (const char *name);  ; TEnum * Get (DeclId_t id, const char *name);  Return (after creating it if necessary) the TEnum describing the enum corresponding to the Decl 'id'. ;  ; TClass * GetClass () const;  ; TExMap * GetIds ();  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, c",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:19968,Modifiability,inherit,inherited,19968,"1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TListOfEnums; TEnum * FindUnloaded (const char *name);  ; TEnum * Get (DeclId_t id, const char *name);  Return (after creating it if necessary) the TEnum describing the enum corresponding to the Decl 'id'. ;  ; TClass * GetClass () const;  ; TExMap * GetIds ();  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from T",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:20956,Modifiability,inherit,inherited,20956,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast; ",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:21066,Modifiability,inherit,inherited,21066,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast; ",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:21574,Modifiability,inherit,inherited,21574,"bjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfEnumsWithLock.h>. Inheritance diagram for TListOfEnumsWithLock:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfEnumsWithLock::DeclId_t. private . Definition at line 33 of file TListOfEnumsWithLock.h. Const",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:21779,Modifiability,inherit,inherited,21779,";  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfEnumsWithLock.h>. Inheritance diagram for TListOfEnumsWithLock:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfEnumsWithLock::DeclId_t. private . Definition at line 33 of file TListOfEnumsWithLock.h. Constructor & Destructor Documentation. ◆ TListOfEnumsWithLock() [1/2]. TListOfEnumsWithLock::TListOfEnumsWithLock ; (; const TListOfEnumsWithLock & ; ). privatedelete . ◆ TListOfEnumsWithLock() [2/2]. TListOfEnumsWithLock::TListOfEnumsWithLock ; (; TClass * ; cl = nullptr). Definition at line 32 of file TListOfEnumsWithLock.cxx. ◆ ~TListOfEnumsWithLock(). TListOfEnumsWithL",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:21851,Modifiability,inherit,inherited,21851,";  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfEnumsWithLock.h>. Inheritance diagram for TListOfEnumsWithLock:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfEnumsWithLock::DeclId_t. private . Definition at line 33 of file TListOfEnumsWithLock.h. Constructor & Destructor Documentation. ◆ TListOfEnumsWithLock() [1/2]. TListOfEnumsWithLock::TListOfEnumsWithLock ; (; const TListOfEnumsWithLock & ; ). privatedelete . ◆ TListOfEnumsWithLock() [2/2]. TListOfEnumsWithLock::TListOfEnumsWithLock ; (; TClass * ; cl = nullptr). Definition at line 32 of file TListOfEnumsWithLock.cxx. ◆ ~TListOfEnumsWithLock(). TListOfEnumsWithL",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:22149,Modifiability,inherit,inherited,22149,";  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfEnumsWithLock.h>. Inheritance diagram for TListOfEnumsWithLock:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfEnumsWithLock::DeclId_t. private . Definition at line 33 of file TListOfEnumsWithLock.h. Constructor & Destructor Documentation. ◆ TListOfEnumsWithLock() [1/2]. TListOfEnumsWithLock::TListOfEnumsWithLock ; (; const TListOfEnumsWithLock & ; ). privatedelete . ◆ TListOfEnumsWithLock() [2/2]. TListOfEnumsWithLock::TListOfEnumsWithLock ; (; TClass * ; cl = nullptr). Definition at line 32 of file TListOfEnumsWithLock.cxx. ◆ ~TListOfEnumsWithLock(). TListOfEnumsWithL",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:22221,Modifiability,inherit,inherited,22221,";  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfEnumsWithLock.h>. Inheritance diagram for TListOfEnumsWithLock:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfEnumsWithLock::DeclId_t. private . Definition at line 33 of file TListOfEnumsWithLock.h. Constructor & Destructor Documentation. ◆ TListOfEnumsWithLock() [1/2]. TListOfEnumsWithLock::TListOfEnumsWithLock ; (; const TListOfEnumsWithLock & ; ). privatedelete . ◆ TListOfEnumsWithLock() [2/2]. TListOfEnumsWithLock::TListOfEnumsWithLock ; (; TClass * ; cl = nullptr). Definition at line 32 of file TListOfEnumsWithLock.cxx. ◆ ~TListOfEnumsWithLock(). TListOfEnumsWithL",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:2722,Performance,load,loaded,2722,"ject obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; void Clear (Option_t *option) override;  Remove all objects from the list. ;  ; void Delete (Option_t *option="""") override;  Delete all TDataMember object files. ;  ; TObject * FindObject (const char *name) const override;  Specialize FindObject to do search for the a enum just by name or create it if its not already in the list. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object using its hash value (returned by its Hash() member). ;  ; TObject * First () const override;  Return the first object in the list. Returns 0 when list is empty. ;  ; TObjLink * FirstLink () const override;  ; Int_t GetLast () const override;  Returns index of last object in collection. ;  ; TEnum * GetObject (const char *) const override;  Return an object from the list of enums if and only if is has already been loaded in the list. ;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Int_t GetSize () const override;  Return the capacity of the collection, i.e. ;  ; Int_t IndexOf (const TObject *obj) const override;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; TObject * Last () const override;  Return the last object in the list. Returns 0 when list is empty. ;  ; TObjLink * LastLink () const override;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return a list iterator. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ; void Streamer (TBuffer &) ",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:21282,Performance,perform,perform,21282,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast; ",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:21893,Performance,cache,cache,21893,";  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfEnumsWithLock.h>. Inheritance diagram for TListOfEnumsWithLock:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfEnumsWithLock::DeclId_t. private . Definition at line 33 of file TListOfEnumsWithLock.h. Constructor & Destructor Documentation. ◆ TListOfEnumsWithLock() [1/2]. TListOfEnumsWithLock::TListOfEnumsWithLock ; (; const TListOfEnumsWithLock & ; ). privatedelete . ◆ TListOfEnumsWithLock() [2/2]. TListOfEnumsWithLock::TListOfEnumsWithLock ; (; TClass * ; cl = nullptr). Definition at line 32 of file TListOfEnumsWithLock.cxx. ◆ ~TListOfEnumsWithLock(). TListOfEnumsWithL",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:29462,Performance,load,loaded,29462,"idevirtual . Find object using its hash value (returned by its Hash() member). ; Reimplemented from TListOfEnums.; Definition at line 165 of file TListOfEnumsWithLock.cxx. ◆ First(). TObject * TListOfEnumsWithLock::First ; (; ); const. overridevirtual . Return the first object in the list. Returns 0 when list is empty. ; Reimplemented from TList.; Definition at line 252 of file TListOfEnumsWithLock.cxx. ◆ FirstLink(). TObjLink * TListOfEnumsWithLock::FirstLink ; (; ); const. overridevirtual . Reimplemented from TList.; Definition at line 260 of file TListOfEnumsWithLock.cxx. ◆ GetLast(). Int_t TListOfEnumsWithLock::GetLast ; (; ); const. overridevirtual . Returns index of last object in collection. ; Returns -1 when no objects in collection. ; Reimplemented from TSeqCollection.; Definition at line 293 of file TListOfEnumsWithLock.cxx. ◆ GetObject(). TEnum * TListOfEnumsWithLock::GetObject ; (; const char * ; name); const. overridevirtual . Return an object from the list of enums if and only if is has already been loaded in the list. ; This is an internal routine. ; Reimplemented from TListOfEnums.; Definition at line 175 of file TListOfEnumsWithLock.cxx. ◆ GetObjectRef(). TObject ** TListOfEnumsWithLock::GetObjectRef ; (; const TObject * ; obj); const. overridevirtual . Return address of pointer to obj. ; Reimplemented from TList.; Definition at line 268 of file TListOfEnumsWithLock.cxx. ◆ GetSize(). Int_t TListOfEnumsWithLock::GetSize ; (; ); const. overridevirtual . Return the capacity of the collection, i.e. ; the current total amount of space that has been allocated so far. Same as Capacity. Use GetEntries to get the number of elements currently in the collection. ; Reimplemented from TCollection.; Definition at line 310 of file TListOfEnumsWithLock.cxx. ◆ IndexOf(). Int_t TListOfEnumsWithLock::IndexOf ; (; const TObject * ; obj); const. overridevirtual . Return index of object in collection. ; Returns -1 when object not found. Uses member IsEqual() to find objec",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:5226,Safety,safe,safe,5226,"TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; Bool_t IsAscending ();  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in th",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:366,Security,access,access,366,". ROOT: TListOfEnumsWithLock Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Member Functions |; List of all members ; TListOfEnumsWithLock Class Reference. ; A collection of TEnum objects designed for fast access given a DeclId_t and for keep track of TEnum that were described unloaded enum. ; Definition at line 30 of file TListOfEnumsWithLock.h. Public Member Functions;  TListOfEnumsWithLock (TClass *cl=nullptr);  ;  ~TListOfEnumsWithLock () override;  Destructor. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAfter (TObjLink *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at location idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddBefore (TObjLink *before, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; void AddFirst (TObject *obj, Option_t *opt) override;  Add object at the beginning of the list and also store option. ;  ; void AddLast (TObject *obj) override;  Add object at the end of the list. ;  ; void AddLast (TObject *obj, Option_t *opt) override;  Add object at the end of the list and also store option. ;  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; void Clear (Option_t *option) override;  Remove all objects from the list. ;  ; void Delete (Option_t *op",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:2314,Security,hash,hash,2314,"bj, Option_t *opt) override;  Add object at the beginning of the list and also store option. ;  ; void AddLast (TObject *obj) override;  Add object at the end of the list. ;  ; void AddLast (TObject *obj, Option_t *opt) override;  Add object at the end of the list and also store option. ;  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; void Clear (Option_t *option) override;  Remove all objects from the list. ;  ; void Delete (Option_t *option="""") override;  Delete all TDataMember object files. ;  ; TObject * FindObject (const char *name) const override;  Specialize FindObject to do search for the a enum just by name or create it if its not already in the list. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object using its hash value (returned by its Hash() member). ;  ; TObject * First () const override;  Return the first object in the list. Returns 0 when list is empty. ;  ; TObjLink * FirstLink () const override;  ; Int_t GetLast () const override;  Returns index of last object in collection. ;  ; TEnum * GetObject (const char *) const override;  Return an object from the list of enums if and only if is has already been loaded in the list. ;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Int_t GetSize () const override;  Return the capacity of the collection, i.e. ;  ; Int_t IndexOf (const TObject *obj) const override;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; TObject * Last () const override;  Return the last object in the list. Returns 0 when list is empty. ;  ; TObjLink * LastLink () const override;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return a list i",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:4529,Security,hash,hashlist,4529,"move object from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TListOfEnums;  TListOfEnums (TClass *cl=nullptr);  Constructor. ;  ;  ~TListOfEnums () override;  Destructor. ;  ; TEnum * Find (DeclId_t id) const;  Return the TEnum corresponding to the Decl 'id' or NULL if it does not exist. ;  ; Bool_t IsLoaded () const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *ob",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:4756,Security,hash,hash,4756,"lection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TListOfEnums;  TListOfEnums (TClass *cl=nullptr);  Constructor. ;  ;  ~TListOfEnums () override;  Destructor. ;  ; TEnum * Find (DeclId_t id) const;  Return the TEnum corresponding to the Decl 'id' or NULL if it does not exist. ;  ; Bool_t IsLoaded () const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; Bool_t IsAscending ();  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:4940,Security,hash,hash,4940,"l=nullptr);  Constructor. ;  ;  ~TListOfEnums () override;  Destructor. ;  ; TEnum * Find (DeclId_t id) const;  Return the TEnum corresponding to the Decl 'id' or NULL if it does not exist. ;  ; Bool_t IsLoaded () const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; Bool_t IsAscending ();  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqC",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:5032,Security,hash,hashlist,5032," TEnum corresponding to the Decl 'id' or NULL if it does not exist. ;  ; Bool_t IsLoaded () const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; Bool_t IsAscending ();  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:5201,Security,access,access,5201,"TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; Bool_t IsAscending ();  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in th",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:7792,Security,hash,hash,7792," the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; virtual Bool_t IsEmpty () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; void ls (Option_t *option="""") const override;  List (ls) all objects in this collection. ;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the ",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:9374,Security,access,accessible,9374," MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Ch",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:17487,Security,access,accessible,17487,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef TDictionary::DeclId_t DeclId_t;  . Private Member Functions;  TListOfEnumsWithLock (const TListOfEnumsWithLock &)=delete;  ; TListOfEnumsWithLock & operator= (const TListOfEnumsWithLock &)=delete;  . Additional Inherited Members;  Public Types inherited from TListOfEnums; typedef TDictionary::DeclId_t DeclId_t;  ;  Public Types ",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:28468,Security,hash,hash,28468,"). ; Reimplemented from TListOfEnums.; Definition at line 137 of file TListOfEnumsWithLock.cxx. ◆ DeclFileName(). static const char * TListOfEnumsWithLock::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 80 of file TListOfEnumsWithLock.h. ◆ Delete(). void TListOfEnumsWithLock::Delete ; (; Option_t * ; option = """"). overridevirtual . Delete all TDataMember object files. ; Reimplemented from TListOfEnums.; Definition at line 146 of file TListOfEnumsWithLock.cxx. ◆ FindObject() [1/2]. TObject * TListOfEnumsWithLock::FindObject ; (; const char * ; name); const. overridevirtual . Specialize FindObject to do search for the a enum just by name or create it if its not already in the list. ; Reimplemented from TListOfEnums.; Definition at line 156 of file TListOfEnumsWithLock.cxx. ◆ FindObject() [2/2]. TObject * TListOfEnumsWithLock::FindObject ; (; const TObject * ; obj); const. overridevirtual . Find object using its hash value (returned by its Hash() member). ; Reimplemented from TListOfEnums.; Definition at line 165 of file TListOfEnumsWithLock.cxx. ◆ First(). TObject * TListOfEnumsWithLock::First ; (; ); const. overridevirtual . Return the first object in the list. Returns 0 when list is empty. ; Reimplemented from TList.; Definition at line 252 of file TListOfEnumsWithLock.cxx. ◆ FirstLink(). TObjLink * TListOfEnumsWithLock::FirstLink ; (; ); const. overridevirtual . Reimplemented from TList.; Definition at line 260 of file TListOfEnumsWithLock.cxx. ◆ GetLast(). Int_t TListOfEnumsWithLock::GetLast ; (; ); const. overridevirtual . Returns index of last object in collection. ; Returns -1 when no objects in collection. ; Reimplemented from TSeqCollection.; Definition at line 293 of file TListOfEnumsWithLock.cxx. ◆ GetObject(). TEnum * TListOfEnumsWithLock::GetObject ; (; const char * ; name); const. overridevirtual . Return an object from the list of enums if and only if is has already been loaded in the li",MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:31868,Security,hash,hash,31868, list. Returns 0 when list is empty. ; Reimplemented from TList.; Definition at line 276 of file TListOfEnumsWithLock.cxx. ◆ LastLink(). TObjLink * TListOfEnumsWithLock::LastLink ; (; ); const. overridevirtual . Reimplemented from TList.; Definition at line 284 of file TListOfEnumsWithLock.cxx. ◆ MakeIterator(). TIterator * TListOfEnumsWithLock::MakeIterator ; (; Bool_t ; dir = kIterForward); const. overridevirtual . Return a list iterator. ; Reimplemented from TList.; Definition at line 220 of file TListOfEnumsWithLock.cxx. ◆ operator=(). TListOfEnumsWithLock & TListOfEnumsWithLock::operator= ; (; const TListOfEnumsWithLock & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfEnumsWithLock::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from TListOfEnums.; Definition at line 190 of file TListOfEnumsWithLock.cxx. ◆ Remove() [1/2]. TObject * TListOfEnumsWithLock::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from TListOfEnums.; Definition at line 201 of file TListOfEnumsWithLock.cxx. ◆ Remove() [2/2]. TObject * TListOfEnumsWithLock::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from TListOfEnums.; Definition at line 210 of file TListOfEnumsWithLock.cxx. ◆ Streamer(). void TListOfEnumsWithLock::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from TListOfEnums. ◆ StreamerNVirtual(). void TListOfEnumsWithLock::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inlin,MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:31886,Security,hash,hash,31886, list. Returns 0 when list is empty. ; Reimplemented from TList.; Definition at line 276 of file TListOfEnumsWithLock.cxx. ◆ LastLink(). TObjLink * TListOfEnumsWithLock::LastLink ; (; ); const. overridevirtual . Reimplemented from TList.; Definition at line 284 of file TListOfEnumsWithLock.cxx. ◆ MakeIterator(). TIterator * TListOfEnumsWithLock::MakeIterator ; (; Bool_t ; dir = kIterForward); const. overridevirtual . Return a list iterator. ; Reimplemented from TList.; Definition at line 220 of file TListOfEnumsWithLock.cxx. ◆ operator=(). TListOfEnumsWithLock & TListOfEnumsWithLock::operator= ; (; const TListOfEnumsWithLock & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfEnumsWithLock::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from TListOfEnums.; Definition at line 190 of file TListOfEnumsWithLock.cxx. ◆ Remove() [1/2]. TObject * TListOfEnumsWithLock::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from TListOfEnums.; Definition at line 201 of file TListOfEnumsWithLock.cxx. ◆ Remove() [2/2]. TObject * TListOfEnumsWithLock::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from TListOfEnums.; Definition at line 210 of file TListOfEnumsWithLock.cxx. ◆ Streamer(). void TListOfEnumsWithLock::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from TListOfEnums. ◆ StreamerNVirtual(). void TListOfEnumsWithLock::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inlin,MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfEnumsWithLock.html:31903,Security,hash,hash,31903,ile TListOfEnumsWithLock.cxx. ◆ LastLink(). TObjLink * TListOfEnumsWithLock::LastLink ; (; ); const. overridevirtual . Reimplemented from TList.; Definition at line 284 of file TListOfEnumsWithLock.cxx. ◆ MakeIterator(). TIterator * TListOfEnumsWithLock::MakeIterator ; (; Bool_t ; dir = kIterForward); const. overridevirtual . Return a list iterator. ; Reimplemented from TList.; Definition at line 220 of file TListOfEnumsWithLock.cxx. ◆ operator=(). TListOfEnumsWithLock & TListOfEnumsWithLock::operator= ; (; const TListOfEnumsWithLock & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfEnumsWithLock::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from TListOfEnums.; Definition at line 190 of file TListOfEnumsWithLock.cxx. ◆ Remove() [1/2]. TObject * TListOfEnumsWithLock::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from TListOfEnums.; Definition at line 201 of file TListOfEnumsWithLock.cxx. ◆ Remove() [2/2]. TObject * TListOfEnumsWithLock::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from TListOfEnums.; Definition at line 210 of file TListOfEnumsWithLock.cxx. ◆ Streamer(). void TListOfEnumsWithLock::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from TListOfEnums. ◆ StreamerNVirtual(). void TListOfEnumsWithLock::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 80 of file TListOfEnumsWithLock.h. Libraries for TListOfEnumsWithLock:,MatchSource.WIKI,doc/master/classTListOfEnumsWithLock.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html
https://root.cern/doc/master/classTListOfFunctions.html:3904,Availability,avail,available,3904,"cts from the list. ;  ; void Delete (Option_t *option="""") override;  Delete all TFunction object files. ;  ; TFunction * Find (DeclId_t id) const;  Return the TMethod or TFunction describing the function corresponding to the Decl 'id'. ;  ; TObject * FindObject (const char *name) const override;  Specialize FindObject to do search for the a function just by name or create it if its not already in the list. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object using its hash value (returned by its Hash() member). ;  ; TObject * First () const override;  Return the first object in the list. Returns 0 when list is empty. ;  ; TObjLink * FirstLink () const override;  ; TFunction * Get (DeclId_t id);  Return (after creating it if necessary) the TMethod or TFunction describing the function corresponding to the Decl 'id'. ;  ; Int_t GetLast () const override;  Returns index of last object in collection. ;  ; virtual TList * GetListForObject (const char *name) const;  Return the set of overloads for this name, collecting all available ones. ;  ; virtual TList * GetListForObject (const TObject *obj) const;  Return the set of overloads for function obj, collecting all available ones. ;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Int_t GetSize () const override;  Return the capacity of the collection, i.e. ;  ; Int_t IndexOf (const TObject *obj) const override;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; TObject * Last () const override;  Return the last object in the list. Returns 0 when list is empty. ;  ; TObjLink * LastLink () const override;  ; void Load ();  Load all the functions known to the interpreter for the scope 'fClass' into this collection. ;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return a list iterator. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the ",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:4048,Availability,avail,available,4048,"nst;  Return the TMethod or TFunction describing the function corresponding to the Decl 'id'. ;  ; TObject * FindObject (const char *name) const override;  Specialize FindObject to do search for the a function just by name or create it if its not already in the list. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object using its hash value (returned by its Hash() member). ;  ; TObject * First () const override;  Return the first object in the list. Returns 0 when list is empty. ;  ; TObjLink * FirstLink () const override;  ; TFunction * Get (DeclId_t id);  Return (after creating it if necessary) the TMethod or TFunction describing the function corresponding to the Decl 'id'. ;  ; Int_t GetLast () const override;  Returns index of last object in collection. ;  ; virtual TList * GetListForObject (const char *name) const;  Return the set of overloads for this name, collecting all available ones. ;  ; virtual TList * GetListForObject (const TObject *obj) const;  Return the set of overloads for function obj, collecting all available ones. ;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Int_t GetSize () const override;  Return the capacity of the collection, i.e. ;  ; Int_t IndexOf (const TObject *obj) const override;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; TObject * Last () const override;  Return the last object in the list. Returns 0 when list is empty. ;  ; TObjLink * LastLink () const override;  ; void Load ();  Load all the functions known to the interpreter for the scope 'fClass' into this collection. ;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return a list iterator. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; TObject * ",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:12302,Availability,error,error,12302,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:12391,Availability,error,error,12391,"leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTi",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:12546,Availability,error,error,12546," whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is kn",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:12843,Availability,error,error,12843,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:16320,Availability,error,error,16320," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName (",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:19280,Availability,avail,available,19280,"; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TListOfFunctions (const TListOfFunctions &)=delete;  ; TList * GetListForObjectNonConst (const char *name);  Return the set of overloads for this name, collecting all available ones. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions and their ids. ;  ; TListOfFunctions & operator= (const TListOfFunctions &)=delete;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  ; ULong64_t fLastLoadMarker;  ; THashTable fOverloads;  ; THashList * fUnloaded;  . Friends; class TClass;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TOb",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:29849,Availability,avail,available,29849,"st ; (; ); const. overridevirtual . Return the first object in the list. Returns 0 when list is empty. ; Reimplemented from TList.; Definition at line 483 of file TListOfFunctions.cxx. ◆ FirstLink(). TObjLink * TListOfFunctions::FirstLink ; (; ); const. overridevirtual . Reimplemented from TList.; Definition at line 491 of file TListOfFunctions.cxx. ◆ Get(). TFunction * TListOfFunctions::Get ; (; DeclId_t ; id). Return (after creating it if necessary) the TMethod or TFunction describing the function corresponding to the Decl 'id'. ; Definition at line 262 of file TListOfFunctions.cxx. ◆ GetLast(). Int_t TListOfFunctions::GetLast ; (; ); const. overridevirtual . Returns index of last object in collection. ; Returns -1 when no objects in collection. ; Reimplemented from TSeqCollection.; Definition at line 524 of file TListOfFunctions.cxx. ◆ GetListForObject() [1/2]. TList * TListOfFunctions::GetListForObject ; (; const char * ; name); const. virtual . Return the set of overloads for this name, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 230 of file TListOfFunctions.cxx. ◆ GetListForObject() [2/2]. TList * TListOfFunctions::GetListForObject ; (; const TObject * ; obj); const. virtual . Return the set of overloads for function obj, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 239 of file TListOfFunctions.cxx. ◆ GetListForObjectNonConst(). TList * TListOfFunctions::GetListForObjectNonConst ; (; const char * ; name). private . Return the set of overloads for this name, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 191 of file TListOfFunctions.cxx. ◆ GetObjectRef(). TObject ** TListOfFunctions::GetObjectRef ; (; const TObject * ; obj); const. overridevirtual . Return address of pointer to obj. ; Reimplemented from TList.; Definition at line 499 of file TListOfFunctions.cxx. ◆ GetSize(). Int_t TListOfFunctions::GetSize ; (;",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:30142,Availability,avail,available,30142,"TList.; Definition at line 491 of file TListOfFunctions.cxx. ◆ Get(). TFunction * TListOfFunctions::Get ; (; DeclId_t ; id). Return (after creating it if necessary) the TMethod or TFunction describing the function corresponding to the Decl 'id'. ; Definition at line 262 of file TListOfFunctions.cxx. ◆ GetLast(). Int_t TListOfFunctions::GetLast ; (; ); const. overridevirtual . Returns index of last object in collection. ; Returns -1 when no objects in collection. ; Reimplemented from TSeqCollection.; Definition at line 524 of file TListOfFunctions.cxx. ◆ GetListForObject() [1/2]. TList * TListOfFunctions::GetListForObject ; (; const char * ; name); const. virtual . Return the set of overloads for this name, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 230 of file TListOfFunctions.cxx. ◆ GetListForObject() [2/2]. TList * TListOfFunctions::GetListForObject ; (; const TObject * ; obj); const. virtual . Return the set of overloads for function obj, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 239 of file TListOfFunctions.cxx. ◆ GetListForObjectNonConst(). TList * TListOfFunctions::GetListForObjectNonConst ; (; const char * ; name). private . Return the set of overloads for this name, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 191 of file TListOfFunctions.cxx. ◆ GetObjectRef(). TObject ** TListOfFunctions::GetObjectRef ; (; const TObject * ; obj); const. overridevirtual . Return address of pointer to obj. ; Reimplemented from TList.; Definition at line 499 of file TListOfFunctions.cxx. ◆ GetSize(). Int_t TListOfFunctions::GetSize ; (; ); const. overridevirtual . Return the capacity of the collection, i.e. ; the current total amount of space that has been allocated so far. Same as Capacity. Use GetEntries to get the number of elements currently in the collection. ; Reimplemented from TCollection.; Definition at line 541 o",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:30433,Availability,avail,available,30433,"ns.cxx. ◆ GetLast(). Int_t TListOfFunctions::GetLast ; (; ); const. overridevirtual . Returns index of last object in collection. ; Returns -1 when no objects in collection. ; Reimplemented from TSeqCollection.; Definition at line 524 of file TListOfFunctions.cxx. ◆ GetListForObject() [1/2]. TList * TListOfFunctions::GetListForObject ; (; const char * ; name); const. virtual . Return the set of overloads for this name, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 230 of file TListOfFunctions.cxx. ◆ GetListForObject() [2/2]. TList * TListOfFunctions::GetListForObject ; (; const TObject * ; obj); const. virtual . Return the set of overloads for function obj, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 239 of file TListOfFunctions.cxx. ◆ GetListForObjectNonConst(). TList * TListOfFunctions::GetListForObjectNonConst ; (; const char * ; name). private . Return the set of overloads for this name, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 191 of file TListOfFunctions.cxx. ◆ GetObjectRef(). TObject ** TListOfFunctions::GetObjectRef ; (; const TObject * ; obj); const. overridevirtual . Return address of pointer to obj. ; Reimplemented from TList.; Definition at line 499 of file TListOfFunctions.cxx. ◆ GetSize(). Int_t TListOfFunctions::GetSize ; (; ); const. overridevirtual . Return the capacity of the collection, i.e. ; the current total amount of space that has been allocated so far. Same as Capacity. Use GetEntries to get the number of elements currently in the collection. ; Reimplemented from TCollection.; Definition at line 541 of file TListOfFunctions.cxx. ◆ IndexOf(). Int_t TListOfFunctions::IndexOf ; (; const TObject * ; obj); const. overridevirtual . Return index of object in collection. ; Returns -1 when object not found. Uses member IsEqual() to find object. ; Reimplemented from TSeqCollection.; Definition at ",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:33178,Availability,avail,available,33178,"4 of file TListOfFunctions.cxx. ◆ MakeIterator(). TIterator * TListOfFunctions::MakeIterator ; (; Bool_t ; dir = kIterForward); const. overridevirtual . Return a list iterator. ; Reimplemented from TList.; Definition at line 451 of file TListOfFunctions.cxx. ◆ MapObject(). void TListOfFunctions::MapObject ; (; TObject * ; obj). private . Add pair<id, object> to the map of functions and their ids. ; Definition at line 51 of file TListOfFunctions.cxx. ◆ operator=(). TListOfFunctions & TListOfFunctions::operator= ; (; const TListOfFunctions & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfFunctions::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from THashList.; Definition at line 328 of file TListOfFunctions.cxx. ◆ Remove() [1/2]. TObject * TListOfFunctions::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from THashList.; Definition at line 341 of file TListOfFunctions.cxx. ◆ Remove() [2/2]. TObject * TListOfFunctions::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from THashList.; Definition at line 357 of file TListOfFunctions.cxx. ◆ Streamer(). void TListOfFunctions::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from THashList. ◆ StreamerNVirtual(). void TListOfFunctions::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 102 of file TListOfFunctions.h. ◆ Unload() [1/2]. void TListOfFunctions::Unload ; (; ). Mark 'all func' as bei",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:30950,Energy Efficiency,allocate,allocated,30950," of file TListOfFunctions.cxx. ◆ GetListForObject() [2/2]. TList * TListOfFunctions::GetListForObject ; (; const TObject * ; obj); const. virtual . Return the set of overloads for function obj, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 239 of file TListOfFunctions.cxx. ◆ GetListForObjectNonConst(). TList * TListOfFunctions::GetListForObjectNonConst ; (; const char * ; name). private . Return the set of overloads for this name, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 191 of file TListOfFunctions.cxx. ◆ GetObjectRef(). TObject ** TListOfFunctions::GetObjectRef ; (; const TObject * ; obj); const. overridevirtual . Return address of pointer to obj. ; Reimplemented from TList.; Definition at line 499 of file TListOfFunctions.cxx. ◆ GetSize(). Int_t TListOfFunctions::GetSize ; (; ); const. overridevirtual . Return the capacity of the collection, i.e. ; the current total amount of space that has been allocated so far. Same as Capacity. Use GetEntries to get the number of elements currently in the collection. ; Reimplemented from TCollection.; Definition at line 541 of file TListOfFunctions.cxx. ◆ IndexOf(). Int_t TListOfFunctions::IndexOf ; (; const TObject * ; obj); const. overridevirtual . Return index of object in collection. ; Returns -1 when object not found. Uses member IsEqual() to find object. ; Reimplemented from TSeqCollection.; Definition at line 532 of file TListOfFunctions.cxx. ◆ IsA(). TClass * TListOfFunctions::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from THashList.; Definition at line 102 of file TListOfFunctions.h. ◆ Last(). TObject * TListOfFunctions::Last ; (; ); const. overridevirtual . Return the last object in the list. Returns 0 when list is empty. ; Reimplemented from TList.; Definition at line 507 of file TListOfFunctions.cxx. ◆ LastLink(). TObjLink * TListOfFunctions::LastLink ; (;",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:12308,Integrability,message,message,12308,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:12849,Integrability,message,message,12849,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:13710,Integrability,message,message,13710,"ecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *a",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:16326,Integrability,message,message,16326," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName (",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:16699,Integrability,message,message,16699," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObj",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:612,Modifiability,inherit,inherited,612,". ROOT: TListOfFunctions Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TListOfFunctions Class Reference. ; A collection of TFunction objects designed for fast access given a DeclId_t and for keep track of TFunction that were described unloaded function. ; Definition at line 34 of file TListOfFunctions.h. Public Types; typedef TDictionary::DeclId_t DeclId_t;  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TListOfFunctions (TClass *cl);  Constructor. ;  ;  ~TListOfFunctions ();  Destructor. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAfter (TObjLink *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at location idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddBefore (TObjLink *before, TObj",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:681,Modifiability,inherit,inherited,681,". ROOT: TListOfFunctions Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TListOfFunctions Class Reference. ; A collection of TFunction objects designed for fast access given a DeclId_t and for keep track of TFunction that were described unloaded function. ; Definition at line 34 of file TListOfFunctions.h. Public Types; typedef TDictionary::DeclId_t DeclId_t;  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TListOfFunctions (TClass *cl);  Constructor. ;  ;  ~TListOfFunctions ();  Destructor. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAfter (TObjLink *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at location idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddBefore (TObjLink *before, TObj",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:788,Modifiability,inherit,inherited,788,". ROOT: TListOfFunctions Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TListOfFunctions Class Reference. ; A collection of TFunction objects designed for fast access given a DeclId_t and for keep track of TFunction that were described unloaded function. ; Definition at line 34 of file TListOfFunctions.h. Public Types; typedef TDictionary::DeclId_t DeclId_t;  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TListOfFunctions (TClass *cl);  Constructor. ;  ;  ~TListOfFunctions ();  Destructor. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAfter (TObjLink *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at location idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddBefore (TObjLink *before, TObj",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:5396,Modifiability,inherit,inherited,5396," list. Returns 0 when list is empty. ;  ; TObjLink * LastLink () const override;  ; void Load ();  Load all the functions known to the interpreter for the scope 'fClass' into this collection. ;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return a list iterator. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Unload ();  Mark 'all func' as being unloaded. ;  ; void Unload (TFunction *func);  Mark 'func' as being unloaded. ;  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Fun",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:6455,Modifiability,inherit,inherited,6455,"t_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; Bool_t IsAscending ();  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; vir",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:7037,Modifiability,inherit,inherited,7037,"e THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; Bool_t IsAscending ();  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:7732,Modifiability,inherit,inherited,7732,"Option_t *opt);  ; Bool_t IsAscending ();  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIte",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:8078,Modifiability,inherit,inherit,8078,"d from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:11102,Modifiability,inherit,inherited,11102," Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *optio",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:12007,Modifiability,inherit,inheritance,12007," bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () con",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:13808,Modifiability,inherit,inherits,13808,"const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a ",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:13925,Modifiability,inherit,inherits,13925,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:16932,Modifiability,inherit,inherited,16932,"d StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:17145,Modifiability,inherit,inherited,17145,"d StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:17354,Modifiability,inherit,inherited,17354,"d StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:18049,Modifiability,inherit,inherited,18049,"tic Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TList",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:18600,Modifiability,inherit,inherited,18600,"nt_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TListOfFunctions (const TListOfFunctions &)=delete;  ; TList * GetListForObjectNonConst (const char *name);  Return the set of overloads for this name, collecting all available ones. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions and their ids. ;  ; TListOfFunctions & operator= (const TListOfFunctions &)=delete;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  ; ULong64_t fLastLoadMarker;  ; THashTable fOverloads;  ; THashList * fUnlo",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:19784,Modifiability,inherit,inherited,19784,"SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TListOfFunctions (const TListOfFunctions &)=delete;  ; TList * GetListForObjectNonConst (const char *name);  Return the set of overloads for this name, collecting all available ones. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions and their ids. ;  ; TListOfFunctions & operator= (const TListOfFunctions &)=delete;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  ; ULong64_t fLastLoadMarker;  ; THashTable fOverloads;  ; THashList * fUnloaded;  . Friends; class TClass;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOpt",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:19933,Modifiability,inherit,inherited,19933,"SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TListOfFunctions (const TListOfFunctions &)=delete;  ; TList * GetListForObjectNonConst (const char *name);  Return the set of overloads for this name, collecting all available ones. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions and their ids. ;  ; TListOfFunctions & operator= (const TListOfFunctions &)=delete;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  ; ULong64_t fLastLoadMarker;  ; THashTable fOverloads;  ; THashList * fUnloaded;  . Friends; class TClass;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOpt",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:20066,Modifiability,inherit,inherited,20066,"SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TListOfFunctions (const TListOfFunctions &)=delete;  ; TList * GetListForObjectNonConst (const char *name);  Return the set of overloads for this name, collecting all available ones. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions and their ids. ;  ; TListOfFunctions & operator= (const TListOfFunctions &)=delete;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  ; ULong64_t fLastLoadMarker;  ; THashTable fOverloads;  ; THashList * fUnloaded;  . Friends; class TClass;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOpt",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:20165,Modifiability,inherit,inherited,20165,"SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TListOfFunctions (const TListOfFunctions &)=delete;  ; TList * GetListForObjectNonConst (const char *name);  Return the set of overloads for this name, collecting all available ones. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions and their ids. ;  ; TListOfFunctions & operator= (const TListOfFunctions &)=delete;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  ; ULong64_t fLastLoadMarker;  ; THashTable fOverloads;  ; THashList * fUnloaded;  . Friends; class TClass;  . Additional Inherited Members;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOpt",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:21153,Modifiability,inherit,inherited,21153,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast; ",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:21263,Modifiability,inherit,inherited,21263,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast; ",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:21771,Modifiability,inherit,inherited,21771,"bjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfFunctions.h>. Inheritance diagram for TListOfFunctions:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfFunctions::DeclId_t. Definition at line 53 of file TListOfFunctions.h. Constructor & Destructor Docume",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:21976,Modifiability,inherit,inherited,21976,";  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfFunctions.h>. Inheritance diagram for TListOfFunctions:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfFunctions::DeclId_t. Definition at line 53 of file TListOfFunctions.h. Constructor & Destructor Documentation. ◆ TListOfFunctions() [1/2]. TListOfFunctions::TListOfFunctions ; (; const TListOfFunctions & ; ). privatedelete . ◆ TListOfFunctions() [2/2]. TListOfFunctions::TListOfFunctions ; (; TClass * ; cl). Constructor. ; Definition at line 31 of file TListOfFunctions.cxx. ◆ ~TListOfFunctions(). TListOfFunctions::~TListOfFunctions ; (; ). Destructor. ; Definition at li",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:22048,Modifiability,inherit,inherited,22048,";  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfFunctions.h>. Inheritance diagram for TListOfFunctions:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfFunctions::DeclId_t. Definition at line 53 of file TListOfFunctions.h. Constructor & Destructor Documentation. ◆ TListOfFunctions() [1/2]. TListOfFunctions::TListOfFunctions ; (; const TListOfFunctions & ; ). privatedelete . ◆ TListOfFunctions() [2/2]. TListOfFunctions::TListOfFunctions ; (; TClass * ; cl). Constructor. ; Definition at line 31 of file TListOfFunctions.cxx. ◆ ~TListOfFunctions(). TListOfFunctions::~TListOfFunctions ; (; ). Destructor. ; Definition at li",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:22346,Modifiability,inherit,inherited,22346,";  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfFunctions.h>. Inheritance diagram for TListOfFunctions:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfFunctions::DeclId_t. Definition at line 53 of file TListOfFunctions.h. Constructor & Destructor Documentation. ◆ TListOfFunctions() [1/2]. TListOfFunctions::TListOfFunctions ; (; const TListOfFunctions & ; ). privatedelete . ◆ TListOfFunctions() [2/2]. TListOfFunctions::TListOfFunctions ; (; TClass * ; cl). Constructor. ; Definition at line 31 of file TListOfFunctions.cxx. ◆ ~TListOfFunctions(). TListOfFunctions::~TListOfFunctions ; (; ). Destructor. ; Definition at li",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:22418,Modifiability,inherit,inherited,22418,";  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfFunctions.h>. Inheritance diagram for TListOfFunctions:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfFunctions::DeclId_t. Definition at line 53 of file TListOfFunctions.h. Constructor & Destructor Documentation. ◆ TListOfFunctions() [1/2]. TListOfFunctions::TListOfFunctions ; (; const TListOfFunctions & ; ). privatedelete . ◆ TListOfFunctions() [2/2]. TListOfFunctions::TListOfFunctions ; (; TClass * ; cl). Constructor. ; Definition at line 31 of file TListOfFunctions.cxx. ◆ ~TListOfFunctions(). TListOfFunctions::~TListOfFunctions ; (; ). Destructor. ; Definition at li",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:21479,Performance,perform,perform,21479,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast; ",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:22090,Performance,cache,cache,22090,";  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfFunctions.h>. Inheritance diagram for TListOfFunctions:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfFunctions::DeclId_t. Definition at line 53 of file TListOfFunctions.h. Constructor & Destructor Documentation. ◆ TListOfFunctions() [1/2]. TListOfFunctions::TListOfFunctions ; (; const TListOfFunctions & ; ). privatedelete . ◆ TListOfFunctions() [2/2]. TListOfFunctions::TListOfFunctions ; (; TClass * ; cl). Constructor. ; Definition at line 31 of file TListOfFunctions.cxx. ◆ ~TListOfFunctions(). TListOfFunctions::~TListOfFunctions ; (; ). Destructor. ; Definition at li",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:6419,Safety,safe,safe,6419,"nc);  Mark 'func' as being unloaded. ;  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; Bool_t IsAscending ();  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in th",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:394,Security,access,access,394,". ROOT: TListOfFunctions Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TListOfFunctions Class Reference. ; A collection of TFunction objects designed for fast access given a DeclId_t and for keep track of TFunction that were described unloaded function. ; Definition at line 34 of file TListOfFunctions.h. Public Types; typedef TDictionary::DeclId_t DeclId_t;  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TListOfFunctions (TClass *cl);  Constructor. ;  ;  ~TListOfFunctions ();  Destructor. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAfter (TObjLink *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at location idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddBefore (TObjLink *before, TObj",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:3345,Security,hash,hash,3345,"Add object at the end of the list. ;  ; void AddLast (TObject *obj, Option_t *opt) override;  Add object at the end of the list and also store option. ;  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; void Clear (Option_t *option="""") override;  Remove all objects from the list. ;  ; void Delete (Option_t *option="""") override;  Delete all TFunction object files. ;  ; TFunction * Find (DeclId_t id) const;  Return the TMethod or TFunction describing the function corresponding to the Decl 'id'. ;  ; TObject * FindObject (const char *name) const override;  Specialize FindObject to do search for the a function just by name or create it if its not already in the list. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object using its hash value (returned by its Hash() member). ;  ; TObject * First () const override;  Return the first object in the list. Returns 0 when list is empty. ;  ; TObjLink * FirstLink () const override;  ; TFunction * Get (DeclId_t id);  Return (after creating it if necessary) the TMethod or TFunction describing the function corresponding to the Decl 'id'. ;  ; Int_t GetLast () const override;  Returns index of last object in collection. ;  ; virtual TList * GetListForObject (const char *name) const;  Return the set of overloads for this name, collecting all available ones. ;  ; virtual TList * GetListForObject (const TObject *obj) const;  Return the set of overloads for function obj, collecting all available ones. ;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Int_t GetSize () const override;  Return the capacity of the collection, i.e. ;  ; Int_t IndexOf (const TObject *obj) const override;  Return index of ob",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:5722,Security,hash,hashlist,5722,"de;  Return a list iterator. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Unload ();  Mark 'all func' as being unloaded. ;  ; void Unload (TFunction *func);  Mark 'func' as being unloaded. ;  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *ob",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:5949,Security,hash,hash,5949,";  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Unload ();  Mark 'all func' as being unloaded. ;  ; void Unload (TFunction *func);  Mark 'func' as being unloaded. ;  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; Bool_t IsAscending ();  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:6133,Security,hash,hash,6133,"reamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Unload ();  Mark 'all func' as being unloaded. ;  ; void Unload (TFunction *func);  Mark 'func' as being unloaded. ;  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; Bool_t IsAscending ();  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqC",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:6225,Security,hash,hashlist,6225,"TBuffer &ClassDef_StreamerNVirtual_b);  ; void Unload ();  Mark 'all func' as being unloaded. ;  ; void Unload (TFunction *func);  Mark 'func' as being unloaded. ;  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; Bool_t IsAscending ();  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:6394,Security,access,access,6394,"nc);  Mark 'func' as being unloaded. ;  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; Bool_t IsAscending ();  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in th",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:8985,Security,hash,hash,8985," the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; virtual Bool_t IsEmpty () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; void ls (Option_t *option="""") const override;  List (ls) all objects in this collection. ;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the ",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:10567,Security,access,accessible,10567," MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Ch",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:18464,Security,access,accessible,18464,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TListOfFunctions (const TListOfFunctions &)=delete;  ; TList * GetListForObjectNonConst (const char *name);  Return the set of overloads for this name, collecting all available ones. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions and their ids. ;  ; TListOfFunctions & operator= (const TList",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:28655,Security,hash,hash,28655,"ontaining the class declaration ; Definition at line 102 of file TListOfFunctions.h. ◆ Delete(). void TListOfFunctions::Delete ; (; Option_t * ; option = """"). overridevirtual . Delete all TFunction object files. ; Reimplemented from THashList.; Definition at line 162 of file TListOfFunctions.cxx. ◆ Find(). TFunction * TListOfFunctions::Find ; (; DeclId_t ; id); const. Return the TMethod or TFunction describing the function corresponding to the Decl 'id'. ; Return NULL if not found. ; Definition at line 250 of file TListOfFunctions.cxx. ◆ FindObject() [1/2]. TObject * TListOfFunctions::FindObject ; (; const char * ; name); const. overridevirtual . Specialize FindObject to do search for the a function just by name or create it if its not already in the list. ; Reimplemented from THashList.; Definition at line 173 of file TListOfFunctions.cxx. ◆ FindObject() [2/2]. TObject * TListOfFunctions::FindObject ; (; const TObject * ; obj); const. overridevirtual . Find object using its hash value (returned by its Hash() member). ; Reimplemented from THashList.; Definition at line 443 of file TListOfFunctions.cxx. ◆ First(). TObject * TListOfFunctions::First ; (; ); const. overridevirtual . Return the first object in the list. Returns 0 when list is empty. ; Reimplemented from TList.; Definition at line 483 of file TListOfFunctions.cxx. ◆ FirstLink(). TObjLink * TListOfFunctions::FirstLink ; (; ); const. overridevirtual . Reimplemented from TList.; Definition at line 491 of file TListOfFunctions.cxx. ◆ Get(). TFunction * TListOfFunctions::Get ; (; DeclId_t ; id). Return (after creating it if necessary) the TMethod or TFunction describing the function corresponding to the Decl 'id'. ; Definition at line 262 of file TListOfFunctions.cxx. ◆ GetLast(). Int_t TListOfFunctions::GetLast ; (; ); const. overridevirtual . Returns index of last object in collection. ; Returns -1 when no objects in collection. ; Reimplemented from TSeqCollection.; Definition at line 524 of file TListOfFunc",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:33125,Security,hash,hash,33125,"known to the interpreter for the scope 'fClass' into this collection. ; Definition at line 374 of file TListOfFunctions.cxx. ◆ MakeIterator(). TIterator * TListOfFunctions::MakeIterator ; (; Bool_t ; dir = kIterForward); const. overridevirtual . Return a list iterator. ; Reimplemented from TList.; Definition at line 451 of file TListOfFunctions.cxx. ◆ MapObject(). void TListOfFunctions::MapObject ; (; TObject * ; obj). private . Add pair<id, object> to the map of functions and their ids. ; Definition at line 51 of file TListOfFunctions.cxx. ◆ operator=(). TListOfFunctions & TListOfFunctions::operator= ; (; const TListOfFunctions & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfFunctions::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from THashList.; Definition at line 328 of file TListOfFunctions.cxx. ◆ Remove() [1/2]. TObject * TListOfFunctions::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from THashList.; Definition at line 341 of file TListOfFunctions.cxx. ◆ Remove() [2/2]. TObject * TListOfFunctions::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from THashList.; Definition at line 357 of file TListOfFunctions.cxx. ◆ Streamer(). void TListOfFunctions::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from THashList. ◆ StreamerNVirtual(). void TListOfFunctions::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 102 of file TList",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:33143,Security,hash,hash,33143,"known to the interpreter for the scope 'fClass' into this collection. ; Definition at line 374 of file TListOfFunctions.cxx. ◆ MakeIterator(). TIterator * TListOfFunctions::MakeIterator ; (; Bool_t ; dir = kIterForward); const. overridevirtual . Return a list iterator. ; Reimplemented from TList.; Definition at line 451 of file TListOfFunctions.cxx. ◆ MapObject(). void TListOfFunctions::MapObject ; (; TObject * ; obj). private . Add pair<id, object> to the map of functions and their ids. ; Definition at line 51 of file TListOfFunctions.cxx. ◆ operator=(). TListOfFunctions & TListOfFunctions::operator= ; (; const TListOfFunctions & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfFunctions::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from THashList.; Definition at line 328 of file TListOfFunctions.cxx. ◆ Remove() [1/2]. TObject * TListOfFunctions::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from THashList.; Definition at line 341 of file TListOfFunctions.cxx. ◆ Remove() [2/2]. TObject * TListOfFunctions::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from THashList.; Definition at line 357 of file TListOfFunctions.cxx. ◆ Streamer(). void TListOfFunctions::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from THashList. ◆ StreamerNVirtual(). void TListOfFunctions::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 102 of file TList",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctions.html:33160,Security,hash,hash,33160,"4 of file TListOfFunctions.cxx. ◆ MakeIterator(). TIterator * TListOfFunctions::MakeIterator ; (; Bool_t ; dir = kIterForward); const. overridevirtual . Return a list iterator. ; Reimplemented from TList.; Definition at line 451 of file TListOfFunctions.cxx. ◆ MapObject(). void TListOfFunctions::MapObject ; (; TObject * ; obj). private . Add pair<id, object> to the map of functions and their ids. ; Definition at line 51 of file TListOfFunctions.cxx. ◆ operator=(). TListOfFunctions & TListOfFunctions::operator= ; (; const TListOfFunctions & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfFunctions::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from THashList.; Definition at line 328 of file TListOfFunctions.cxx. ◆ Remove() [1/2]. TObject * TListOfFunctions::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from THashList.; Definition at line 341 of file TListOfFunctions.cxx. ◆ Remove() [2/2]. TObject * TListOfFunctions::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from THashList.; Definition at line 357 of file TListOfFunctions.cxx. ◆ Streamer(). void TListOfFunctions::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from THashList. ◆ StreamerNVirtual(). void TListOfFunctions::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 102 of file TListOfFunctions.h. ◆ Unload() [1/2]. void TListOfFunctions::Unload ; (; ). Mark 'all func' as bei",MatchSource.WIKI,doc/master/classTListOfFunctions.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:2495,Availability,avail,available,2495," option. ;  ; void AddLast (TObject *obj) override;  Add object at the end of the list. ;  ; void AddLast (TObject *obj, Option_t *opt) override;  Add object at the end of the list and also store option. ;  ; void Clear (Option_t *option="""") override;  Remove all objects from the list. ;  ; void Delete (Option_t *option="""") override;  Delete all TFunction object files. ;  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const char *name) const override;  Specialize FindObject to do search for the a function just by name or create it if its not already in the list. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object using its hash value (returned by its Hash() member). ;  ; TFunctionTemplate * Get (DeclId_t id);  Return (after creating it if necessary) the TMethod or TFunction describing the function corresponding to the Decl 'id'. ;  ; virtual TList * GetListForObject (const char *name) const;  Return the set of overloads for this name, collecting all available ones. ;  ; virtual TList * GetListForObject (const TObject *obj) const;  Return the set of overloads for function obj, collecting all available ones. ;  ; TClass * IsA () const override;  ; void Load ();  Load all the functions known to the interpreter for the scope 'fClass' into this collection. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Unload ();  Mark 'all func' as being unloaded. ;  ; void Unload (TFunctionTemplate *func);  Mark 'func' as being unloaded. ",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:2639,Availability,avail,available,2639,"de;  Add object at the end of the list and also store option. ;  ; void Clear (Option_t *option="""") override;  Remove all objects from the list. ;  ; void Delete (Option_t *option="""") override;  Delete all TFunction object files. ;  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const char *name) const override;  Specialize FindObject to do search for the a function just by name or create it if its not already in the list. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object using its hash value (returned by its Hash() member). ;  ; TFunctionTemplate * Get (DeclId_t id);  Return (after creating it if necessary) the TMethod or TFunction describing the function corresponding to the Decl 'id'. ;  ; virtual TList * GetListForObject (const char *name) const;  Return the set of overloads for this name, collecting all available ones. ;  ; virtual TList * GetListForObject (const TObject *obj) const;  Return the set of overloads for function obj, collecting all available ones. ;  ; TClass * IsA () const override;  ; void Load ();  Load all the functions known to the interpreter for the scope 'fClass' into this collection. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Unload ();  Mark 'all func' as being unloaded. ;  ; void Unload (TFunctionTemplate *func);  Mark 'func' as being unloaded. ;  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Cre",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:11441,Availability,error,error,11441,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:11530,Availability,error,error,11530,"leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTi",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:11685,Availability,error,error,11685," whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is kn",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:11982,Availability,error,error,11982,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:15459,Availability,error,error,15459," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName (",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:18493,Availability,avail,available,18493,"Collection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef TDictionary::DeclId_t DeclId_t;  . Private Member Functions;  TListOfFunctionTemplates (const TListOfFunctionTemplates &)=delete;  ; TList * GetListForObjectNonConst (const char *name);  Return the set of overloads for this name, collecting all available ones. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions and their ids. ;  ; TListOfFunctionTemplates & operator= (const TListOfFunctionTemplates &)=delete;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  ; ULong64_t fLastLoadMarker;  ; THashTable fOverloads;  ; THashList * fUnloaded;  . Friends; class TClass;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( ",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:28845,Availability,avail,available,28845,"FindObject() [2/3]. TObject * TListOfFunctionTemplates::FindObject ; (; const char * ; name); const. overridevirtual . Specialize FindObject to do search for the a function just by name or create it if its not already in the list. ; Reimplemented from THashList.; Definition at line 175 of file TListOfFunctionTemplates.cxx. ◆ FindObject() [3/3]. TObject * THashList::FindObject ; (; const TObject * ; obj); const. overridevirtual . Find object using its hash value (returned by its Hash() member). ; Reimplemented from THashList.; Definition at line 52 of file THashList.cxx. ◆ Get(). TFunctionTemplate * TListOfFunctionTemplates::Get ; (; DeclId_t ; id). Return (after creating it if necessary) the TMethod or TFunction describing the function corresponding to the Decl 'id'. ; Definition at line 253 of file TListOfFunctionTemplates.cxx. ◆ GetListForObject() [1/2]. TList * TListOfFunctionTemplates::GetListForObject ; (; const char * ; name); const. virtual . Return the set of overloads for this name, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 233 of file TListOfFunctionTemplates.cxx. ◆ GetListForObject() [2/2]. TList * TListOfFunctionTemplates::GetListForObject ; (; const TObject * ; obj); const. virtual . Return the set of overloads for function obj, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 242 of file TListOfFunctionTemplates.cxx. ◆ GetListForObjectNonConst(). TList * TListOfFunctionTemplates::GetListForObjectNonConst ; (; const char * ; name). private . Return the set of overloads for this name, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 194 of file TListOfFunctionTemplates.cxx. ◆ IsA(). TClass * TListOfFunctionTemplates::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from THashList.; Definition at line 87 of file TListOfFunctionTemplates.h. ◆ Load(). void TListO",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:29154,Availability,avail,available,29154,"ionTemplates.cxx. ◆ FindObject() [3/3]. TObject * THashList::FindObject ; (; const TObject * ; obj); const. overridevirtual . Find object using its hash value (returned by its Hash() member). ; Reimplemented from THashList.; Definition at line 52 of file THashList.cxx. ◆ Get(). TFunctionTemplate * TListOfFunctionTemplates::Get ; (; DeclId_t ; id). Return (after creating it if necessary) the TMethod or TFunction describing the function corresponding to the Decl 'id'. ; Definition at line 253 of file TListOfFunctionTemplates.cxx. ◆ GetListForObject() [1/2]. TList * TListOfFunctionTemplates::GetListForObject ; (; const char * ; name); const. virtual . Return the set of overloads for this name, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 233 of file TListOfFunctionTemplates.cxx. ◆ GetListForObject() [2/2]. TList * TListOfFunctionTemplates::GetListForObject ; (; const TObject * ; obj); const. virtual . Return the set of overloads for function obj, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 242 of file TListOfFunctionTemplates.cxx. ◆ GetListForObjectNonConst(). TList * TListOfFunctionTemplates::GetListForObjectNonConst ; (; const char * ; name). private . Return the set of overloads for this name, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 194 of file TListOfFunctionTemplates.cxx. ◆ IsA(). TClass * TListOfFunctionTemplates::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from THashList.; Definition at line 87 of file TListOfFunctionTemplates.h. ◆ Load(). void TListOfFunctionTemplates::Load ; (; ). Load all the functions known to the interpreter for the scope 'fClass' into this collection. ; Definition at line 356 of file TListOfFunctionTemplates.cxx. ◆ MapObject(). void TListOfFunctionTemplates::MapObject ; (; TObject * ; obj). private . Add pair<id, object> to the ma",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:29461,Availability,avail,available,29461,"ctionTemplates::Get ; (; DeclId_t ; id). Return (after creating it if necessary) the TMethod or TFunction describing the function corresponding to the Decl 'id'. ; Definition at line 253 of file TListOfFunctionTemplates.cxx. ◆ GetListForObject() [1/2]. TList * TListOfFunctionTemplates::GetListForObject ; (; const char * ; name); const. virtual . Return the set of overloads for this name, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 233 of file TListOfFunctionTemplates.cxx. ◆ GetListForObject() [2/2]. TList * TListOfFunctionTemplates::GetListForObject ; (; const TObject * ; obj); const. virtual . Return the set of overloads for function obj, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 242 of file TListOfFunctionTemplates.cxx. ◆ GetListForObjectNonConst(). TList * TListOfFunctionTemplates::GetListForObjectNonConst ; (; const char * ; name). private . Return the set of overloads for this name, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 194 of file TListOfFunctionTemplates.cxx. ◆ IsA(). TClass * TListOfFunctionTemplates::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from THashList.; Definition at line 87 of file TListOfFunctionTemplates.h. ◆ Load(). void TListOfFunctionTemplates::Load ; (; ). Load all the functions known to the interpreter for the scope 'fClass' into this collection. ; Definition at line 356 of file TListOfFunctionTemplates.cxx. ◆ MapObject(). void TListOfFunctionTemplates::MapObject ; (; TObject * ; obj). private . Add pair<id, object> to the map of functions and their ids. ; Definition at line 53 of file TListOfFunctionTemplates.cxx. ◆ operator=(). TListOfFunctionTemplates & TListOfFunctionTemplates::operator= ; (; const TListOfFunctionTemplates & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfFunctionTemplates::RecursiveRemove ; (; TObjec",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:30775,Availability,avail,available,30775," ◆ Load(). void TListOfFunctionTemplates::Load ; (; ). Load all the functions known to the interpreter for the scope 'fClass' into this collection. ; Definition at line 356 of file TListOfFunctionTemplates.cxx. ◆ MapObject(). void TListOfFunctionTemplates::MapObject ; (; TObject * ; obj). private . Add pair<id, object> to the map of functions and their ids. ; Definition at line 53 of file TListOfFunctionTemplates.cxx. ◆ operator=(). TListOfFunctionTemplates & TListOfFunctionTemplates::operator= ; (; const TListOfFunctionTemplates & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfFunctionTemplates::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from THashList.; Definition at line 310 of file TListOfFunctionTemplates.cxx. ◆ Remove() [1/2]. TObject * TListOfFunctionTemplates::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from THashList.; Definition at line 323 of file TListOfFunctionTemplates.cxx. ◆ Remove() [2/2]. TObject * TListOfFunctionTemplates::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from THashList.; Definition at line 339 of file TListOfFunctionTemplates.cxx. ◆ Streamer(). void TListOfFunctionTemplates::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from THashList. ◆ StreamerNVirtual(). void TListOfFunctionTemplates::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 87 of file TListOfFunctionTemplates.h. ◆ Unload() [1/2",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:11447,Integrability,message,message,11447,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:11988,Integrability,message,message,11988,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:12849,Integrability,message,message,12849,"ecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *a",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:15465,Integrability,message,message,15465," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName (",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:15838,Integrability,message,message,15838," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObj",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:3471,Modifiability,inherit,inherited,3471,"l TList * GetListForObject (const TObject *obj) const;  Return the set of overloads for function obj, collecting all available ones. ;  ; TClass * IsA () const override;  ; void Load ();  Load all the functions known to the interpreter for the scope 'fClass' into this collection. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Unload ();  Mark 'all func' as being unloaded. ;  ; void Unload (TFunctionTemplate *func);  Mark 'func' as being unloaded. ;  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Fun",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:4530,Modifiability,inherit,inherited,4530,"t_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; TObject * First () const override;  Return the first object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * FirstLink () const;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Bool_t IsAscending ();  ; TObject * Last () const override;  Return the last object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * LastLink () const;  ; TIterator * MakeIterator",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:5918,Modifiability,inherit,inherited,5918,ect at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; TObject * First () const override;  Return the first object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * FirstLink () const;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Bool_t IsAscending ();  ; TObject * Last () const override;  Return the last object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * LastLink () const;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return a list iterator. ;  ; TObject * Remove (const TObjLinkPtr_t &lnk);  ; void RemoveLast () override;  Remove the last object of the list. ;  ; virtual void Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; virtual Int_t GetLast () const;  Returns index of last object in collection. ;  ; virtual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this ,MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:6789,Modifiability,inherit,inherited,6789," Sort (Bool_t order=kSortAscending);  Sort linked list. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; virtual Int_t GetLast () const;  Returns index of last object in collection. ;  ; virtual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIte",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:7135,Modifiability,inherit,inherit,7135,"tual Int_t IndexOf (const TObject *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () con",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:10241,Modifiability,inherit,inherited,10241," Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *optio",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:11146,Modifiability,inherit,inheritance,11146," bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () con",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:12947,Modifiability,inherit,inherits,12947,"const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a ",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:13064,Modifiability,inherit,inherits,13064,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:16071,Modifiability,inherit,inherited,16071,"d StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:16284,Modifiability,inherit,inherited,16284,"d StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:16493,Modifiability,inherit,inherited,16493,"d StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from THashList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:17188,Modifiability,inherit,inherited,17188,"tic Public Member Functions inherited from TList; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSeqCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef TDictiona",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:17739,Modifiability,inherit,inherited,17739,"nt_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef TDictionary::DeclId_t DeclId_t;  . Private Member Functions;  TListOfFunctionTemplates (const TListOfFunctionTemplates &)=delete;  ; TList * GetListForObjectNonConst (const char *name);  Return the set of overloads for this name, collecting all available ones. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions and their ids. ;  ; TListOfFunctionTemplates & operator= (const TListOfFunctionTemplates &)=delete;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; T",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:19010,Modifiability,inherit,inherited,19010,"tat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef TDictionary::DeclId_t DeclId_t;  . Private Member Functions;  TListOfFunctionTemplates (const TListOfFunctionTemplates &)=delete;  ; TList * GetListForObjectNonConst (const char *name);  Return the set of overloads for this name, collecting all available ones. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions and their ids. ;  ; TListOfFunctionTemplates & operator= (const TListOfFunctionTemplates &)=delete;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  ; ULong64_t fLastLoadMarker;  ; THashTable fOverloads;  ; THashList * fUnloaded;  . Friends; class TClass;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1UL",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:19079,Modifiability,inherit,inherited,19079,"tat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef TDictionary::DeclId_t DeclId_t;  . Private Member Functions;  TListOfFunctionTemplates (const TListOfFunctionTemplates &)=delete;  ; TList * GetListForObjectNonConst (const char *name);  Return the set of overloads for this name, collecting all available ones. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions and their ids. ;  ; TListOfFunctionTemplates & operator= (const TListOfFunctionTemplates &)=delete;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  ; ULong64_t fLastLoadMarker;  ; THashTable fOverloads;  ; THashList * fUnloaded;  . Friends; class TClass;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1UL",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:19186,Modifiability,inherit,inherited,19186,"tat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef TDictionary::DeclId_t DeclId_t;  . Private Member Functions;  TListOfFunctionTemplates (const TListOfFunctionTemplates &)=delete;  ; TList * GetListForObjectNonConst (const char *name);  Return the set of overloads for this name, collecting all available ones. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map of functions and their ids. ;  ; TListOfFunctionTemplates & operator= (const TListOfFunctionTemplates &)=delete;  ; void UnmapObject (TObject *obj);  Remove a pair<id, object> from the map of functions and their ids. ;  . Private Attributes; TClass * fClass;  ; TExMap * fIds;  ; ULong64_t fLastLoadMarker;  ; THashTable fOverloads;  ; THashList * fUnloaded;  . Friends; class TClass;  . Additional Inherited Members;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1UL",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:19827,Modifiability,inherit,inherited,19827,"rator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObj",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:19976,Modifiability,inherit,inherited,19976,"rator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObj",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:20109,Modifiability,inherit,inherited,20109,"rator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObj",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:20208,Modifiability,inherit,inherited,20208,"rator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObj",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:21196,Modifiability,inherit,inherited,21196,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast; ",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:21306,Modifiability,inherit,inherited,21306,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast; ",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:21814,Modifiability,inherit,inherited,21814,"bjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfFunctionTemplates.h>. Inheritance diagram for TListOfFunctionTemplates:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfFunctionTemplates::DeclId_t. private . Definition at line 39 of file TListOfFunctionTe",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:22019,Modifiability,inherit,inherited,22019,";  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfFunctionTemplates.h>. Inheritance diagram for TListOfFunctionTemplates:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfFunctionTemplates::DeclId_t. private . Definition at line 39 of file TListOfFunctionTemplates.h. Constructor & Destructor Documentation. ◆ TListOfFunctionTemplates() [1/2]. TListOfFunctionTemplates::TListOfFunctionTemplates ; (; const TListOfFunctionTemplates & ; ). privatedelete . ◆ TListOfFunctionTemplates() [2/2]. TListOfFunctionTemplates::TListOfFunctionTemplates ; (; TClass * ; cl). Constructor. ; Definition at line 32 of file TListOfFunctionTempla",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:22091,Modifiability,inherit,inherited,22091,";  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfFunctionTemplates.h>. Inheritance diagram for TListOfFunctionTemplates:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfFunctionTemplates::DeclId_t. private . Definition at line 39 of file TListOfFunctionTemplates.h. Constructor & Destructor Documentation. ◆ TListOfFunctionTemplates() [1/2]. TListOfFunctionTemplates::TListOfFunctionTemplates ; (; const TListOfFunctionTemplates & ; ). privatedelete . ◆ TListOfFunctionTemplates() [2/2]. TListOfFunctionTemplates::TListOfFunctionTemplates ; (; TClass * ; cl). Constructor. ; Definition at line 32 of file TListOfFunctionTempla",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:22389,Modifiability,inherit,inherited,22389,";  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfFunctionTemplates.h>. Inheritance diagram for TListOfFunctionTemplates:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfFunctionTemplates::DeclId_t. private . Definition at line 39 of file TListOfFunctionTemplates.h. Constructor & Destructor Documentation. ◆ TListOfFunctionTemplates() [1/2]. TListOfFunctionTemplates::TListOfFunctionTemplates ; (; const TListOfFunctionTemplates & ; ). privatedelete . ◆ TListOfFunctionTemplates() [2/2]. TListOfFunctionTemplates::TListOfFunctionTemplates ; (; TClass * ; cl). Constructor. ; Definition at line 32 of file TListOfFunctionTempla",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:22461,Modifiability,inherit,inherited,22461,";  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfFunctionTemplates.h>. Inheritance diagram for TListOfFunctionTemplates:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfFunctionTemplates::DeclId_t. private . Definition at line 39 of file TListOfFunctionTemplates.h. Constructor & Destructor Documentation. ◆ TListOfFunctionTemplates() [1/2]. TListOfFunctionTemplates::TListOfFunctionTemplates ; (; const TListOfFunctionTemplates & ; ). privatedelete . ◆ TListOfFunctionTemplates() [2/2]. TListOfFunctionTemplates::TListOfFunctionTemplates ; (; TClass * ; cl). Constructor. ; Definition at line 32 of file TListOfFunctionTempla",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:21522,Performance,perform,perform,21522,"dLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast; ",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:22133,Performance,cache,cache,22133,";  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from THashList; THashTable * fTable;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attributes inherited from TSeqCollection; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TListOfFunctionTemplates.h>. Inheritance diagram for TListOfFunctionTemplates:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ DeclId_t. typedef TDictionary::DeclId_t TListOfFunctionTemplates::DeclId_t. private . Definition at line 39 of file TListOfFunctionTemplates.h. Constructor & Destructor Documentation. ◆ TListOfFunctionTemplates() [1/2]. TListOfFunctionTemplates::TListOfFunctionTemplates ; (; const TListOfFunctionTemplates & ; ). privatedelete . ◆ TListOfFunctionTemplates() [2/2]. TListOfFunctionTemplates::TListOfFunctionTemplates ; (; TClass * ; cl). Constructor. ; Definition at line 32 of file TListOfFunctionTempla",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:4494,Safety,safe,safe,4494,"nc);  Mark 'func' as being unloaded. ;  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; TObject * First () const override;  Return the first object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * FirstLink () const;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Bool_t IsAscending ();  ; TObject * La",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:411,Security,access,access,411,". ROOT: TListOfFunctionTemplates Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TListOfFunctionTemplates Class Reference. ; A collection of TFunction objects designed for fast access given a DeclId_t and for keep track of TFunction that were described unloaded function. ; Definition at line 34 of file TListOfFunctionTemplates.h. Public Member Functions;  TListOfFunctionTemplates (TClass *cl);  Constructor. ;  ;  ~TListOfFunctionTemplates ();  Destructor. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAfter (TObjLink *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at location idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddBefore (TObjLink *before, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; void AddFirst (TObject *obj, Option_t *opt) override;  Add object at the beginning of the list and also store option. ;  ; void AddLast (TObject *obj) override;  Add object at the end of the list. ;  ; void AddLast (TObject *obj, Option_t *opt) override;  Add object at the end of the list and also store option. ;  ; void Clear (Option_t *option="""") override;  Remove all objects from the list. ;  ; void Delete (Option_t *option="""") override;  Delete all TFunction object files. ;  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const char *name) const override;  Specialize FindObject to do search fo",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:2162,Security,hash,hash,2162,"dBefore (TObjLink *before, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; void AddFirst (TObject *obj, Option_t *opt) override;  Add object at the beginning of the list and also store option. ;  ; void AddLast (TObject *obj) override;  Add object at the end of the list. ;  ; void AddLast (TObject *obj, Option_t *opt) override;  Add object at the end of the list and also store option. ;  ; void Clear (Option_t *option="""") override;  Remove all objects from the list. ;  ; void Delete (Option_t *option="""") override;  Delete all TFunction object files. ;  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const char *name) const override;  Specialize FindObject to do search for the a function just by name or create it if its not already in the list. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object using its hash value (returned by its Hash() member). ;  ; TFunctionTemplate * Get (DeclId_t id);  Return (after creating it if necessary) the TMethod or TFunction describing the function corresponding to the Decl 'id'. ;  ; virtual TList * GetListForObject (const char *name) const;  Return the set of overloads for this name, collecting all available ones. ;  ; virtual TList * GetListForObject (const TObject *obj) const;  Return the set of overloads for function obj, collecting all available ones. ;  ; TClass * IsA () const override;  ; void Load ();  Load all the functions known to the interpreter for the scope 'fClass' into this collection. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:3797,Security,hash,hashlist,3797,"nto this collection. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; TObject * Remove (TObject *obj) override;  Remove object from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Unload ();  Mark 'all func' as being unloaded. ;  ; void Unload (TFunctionTemplate *func);  Mark 'func' as being unloaded. ;  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *ob",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:4024,Security,hash,hash,4024,"ject * Remove (TObject *obj) override;  Remove object from the list. ;  ; TObject * Remove (TObjLink *lnk) override;  Remove object via its objlink from the list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Unload ();  Mark 'all func' as being unloaded. ;  ; void Unload (TFunctionTemplate *func);  Mark 'func' as being unloaded. ;  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position i",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:4208,Security,hash,hash,4208,"TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Unload ();  Mark 'all func' as being unloaded. ;  ; void Unload (TFunctionTemplate *func);  Mark 'func' as being unloaded. ;  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; TObject * First () const override;  Return",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:4300,Security,hash,hashlist,4300,"&ClassDef_StreamerNVirtual_b);  ; void Unload ();  Mark 'all func' as being unloaded. ;  ; void Unload (TFunctionTemplate *func);  Mark 'func' as being unloaded. ;  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; TObject * First () const override;  Return the first object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * FirstLink () const;  ; TObject ** Get",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:4469,Security,access,access,4469,"nc);  Mark 'func' as being unloaded. ;  ;  Public Member Functions inherited from THashList;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; Float_t AverageCollisions () const;  Return the average collision rate. ;  ; const TList * GetListForObject (const char *name) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the THashTable's list (bucket) in which obj can be found based on its hash; see THashTable::GetListForObject(). ;  ; void Rehash (Int_t newCapacity);  Rehash the hashlist. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool UseRWLock (Bool_t enable=true) override;  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; TObject * First () const override;  Return the first object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * FirstLink () const;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Bool_t IsAscending ();  ; TObject * La",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:8124,Security,hash,hash,8124,"s in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; virtual Bool_t IsEmpty () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; void ls (Option_t *option="""") const override;  List (ls) all objects in this collection. ;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the ",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:9706,Security,access,accessible,9706," MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Ch",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:17603,Security,access,accessible,17603,"s_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t ObjCompare (TObject *a, TObject *b);  Compare to objects in the collection. Use member Compare() of object a. ;  ; static void QSort (TObject **a, Int_t first, Int_t last);  Sort array of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, Int_t nBs, TObject ***b, Int_t first, Int_t last);  Sort array a of TObject pointers using a quicksort algorithm. ;  ; static void QSort (TObject **a, TObject **b, Int_t first, Int_t last);  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef TDictionary::DeclId_t DeclId_t;  . Private Member Functions;  TListOfFunctionTemplates (const TListOfFunctionTemplates &)=delete;  ; TList * GetListForObjectNonConst (const char *name);  Return the set of overloads for this name, collecting all available ones. ;  ; void MapObject (TObject *obj);  Add pair<id, object> to the map ",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:27664,Security,hash,hash,27664,"ass ; Definition at line 87 of file TListOfFunctionTemplates.h. ◆ Clear(). void TListOfFunctionTemplates::Clear ; (; Option_t * ; option = """"). overridevirtual . Remove all objects from the list. ; Does not delete the objects unless the THashList is the owner (set via SetOwner()). ; Reimplemented from THashList.; Definition at line 154 of file TListOfFunctionTemplates.cxx. ◆ DeclFileName(). static const char * TListOfFunctionTemplates::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 87 of file TListOfFunctionTemplates.h. ◆ Delete(). void TListOfFunctionTemplates::Delete ; (; Option_t * ; option = """"). overridevirtual . Delete all TFunction object files. ; Reimplemented from THashList.; Definition at line 164 of file TListOfFunctionTemplates.cxx. ◆ FindObject() [1/3]. TObject * THashList::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to a TString. ; Reimplemented from THashList.; Definition at line 51 of file THashList.cxx. ◆ FindObject() [2/3]. TObject * TListOfFunctionTemplates::FindObject ; (; const char * ; name); const. overridevirtual . Specialize FindObject to do search for the a function just by name or create it if its not already in the list. ; Reimplemented from THashList.; Definition at line 175 of file TListOfFunctionTemplates.cxx. ◆ FindObject() [3/3]. TObject * THashList::FindObject ; (; const TObject * ; obj); const. overridevirtual . Find object using its hash value (returned by its Hash() member). ; Reimplemented from THashList.; Definition at line 52 of file THashList.cxx. ◆ Get(). TFunctionTemplate * TListOfFunctionTemplates::Get ; (; DeclId_t ; id). Return (after creating it if necessary) the TMethod or TFunction describing the function corresponding to the Decl 'id'. ; Definition at line 253 of file TListOfFunctionTemplates.cxx. ◆ GetListForObject() [1/2]. TList",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:28278,Security,hash,hash,28278,". ◆ Delete(). void TListOfFunctionTemplates::Delete ; (; Option_t * ; option = """"). overridevirtual . Delete all TFunction object files. ; Reimplemented from THashList.; Definition at line 164 of file TListOfFunctionTemplates.cxx. ◆ FindObject() [1/3]. TObject * THashList::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to a TString. ; Reimplemented from THashList.; Definition at line 51 of file THashList.cxx. ◆ FindObject() [2/3]. TObject * TListOfFunctionTemplates::FindObject ; (; const char * ; name); const. overridevirtual . Specialize FindObject to do search for the a function just by name or create it if its not already in the list. ; Reimplemented from THashList.; Definition at line 175 of file TListOfFunctionTemplates.cxx. ◆ FindObject() [3/3]. TObject * THashList::FindObject ; (; const TObject * ; obj); const. overridevirtual . Find object using its hash value (returned by its Hash() member). ; Reimplemented from THashList.; Definition at line 52 of file THashList.cxx. ◆ Get(). TFunctionTemplate * TListOfFunctionTemplates::Get ; (; DeclId_t ; id). Return (after creating it if necessary) the TMethod or TFunction describing the function corresponding to the Decl 'id'. ; Definition at line 253 of file TListOfFunctionTemplates.cxx. ◆ GetListForObject() [1/2]. TList * TListOfFunctionTemplates::GetListForObject ; (; const char * ; name); const. virtual . Return the set of overloads for this name, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 233 of file TListOfFunctionTemplates.cxx. ◆ GetListForObject() [2/2]. TList * TListOfFunctionTemplates::GetListForObject ; (; const TObject * ; obj); const. virtual . Return the set of overloads for function obj, collecting all available ones. ; Can construct and insert new TFunction-s. ; Definition at line 242 of file TListOfFunctionTemplates.cxx. ◆ GetListFo",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:30722,Security,hash,hash,30722,"ct ; Reimplemented from THashList.; Definition at line 87 of file TListOfFunctionTemplates.h. ◆ Load(). void TListOfFunctionTemplates::Load ; (; ). Load all the functions known to the interpreter for the scope 'fClass' into this collection. ; Definition at line 356 of file TListOfFunctionTemplates.cxx. ◆ MapObject(). void TListOfFunctionTemplates::MapObject ; (; TObject * ; obj). private . Add pair<id, object> to the map of functions and their ids. ; Definition at line 53 of file TListOfFunctionTemplates.cxx. ◆ operator=(). TListOfFunctionTemplates & TListOfFunctionTemplates::operator= ; (; const TListOfFunctionTemplates & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfFunctionTemplates::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from THashList.; Definition at line 310 of file TListOfFunctionTemplates.cxx. ◆ Remove() [1/2]. TObject * TListOfFunctionTemplates::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from THashList.; Definition at line 323 of file TListOfFunctionTemplates.cxx. ◆ Remove() [2/2]. TObject * TListOfFunctionTemplates::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from THashList.; Definition at line 339 of file TListOfFunctionTemplates.cxx. ◆ Streamer(). void TListOfFunctionTemplates::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from THashList. ◆ StreamerNVirtual(). void TListOfFunctionTemplates::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNV",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:30740,Security,hash,hash,30740,"ct ; Reimplemented from THashList.; Definition at line 87 of file TListOfFunctionTemplates.h. ◆ Load(). void TListOfFunctionTemplates::Load ; (; ). Load all the functions known to the interpreter for the scope 'fClass' into this collection. ; Definition at line 356 of file TListOfFunctionTemplates.cxx. ◆ MapObject(). void TListOfFunctionTemplates::MapObject ; (; TObject * ; obj). private . Add pair<id, object> to the map of functions and their ids. ; Definition at line 53 of file TListOfFunctionTemplates.cxx. ◆ operator=(). TListOfFunctionTemplates & TListOfFunctionTemplates::operator= ; (; const TListOfFunctionTemplates & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfFunctionTemplates::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from THashList.; Definition at line 310 of file TListOfFunctionTemplates.cxx. ◆ Remove() [1/2]. TObject * TListOfFunctionTemplates::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from THashList.; Definition at line 323 of file TListOfFunctionTemplates.cxx. ◆ Remove() [2/2]. TObject * TListOfFunctionTemplates::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from THashList.; Definition at line 339 of file TListOfFunctionTemplates.cxx. ◆ Streamer(). void TListOfFunctionTemplates::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from THashList. ◆ StreamerNVirtual(). void TListOfFunctionTemplates::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNV",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfFunctionTemplates.html:30757,Security,hash,hash,30757," ◆ Load(). void TListOfFunctionTemplates::Load ; (; ). Load all the functions known to the interpreter for the scope 'fClass' into this collection. ; Definition at line 356 of file TListOfFunctionTemplates.cxx. ◆ MapObject(). void TListOfFunctionTemplates::MapObject ; (; TObject * ; obj). private . Add pair<id, object> to the map of functions and their ids. ; Definition at line 53 of file TListOfFunctionTemplates.cxx. ◆ operator=(). TListOfFunctionTemplates & TListOfFunctionTemplates::operator= ; (; const TListOfFunctionTemplates & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfFunctionTemplates::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from THashList.; Definition at line 310 of file TListOfFunctionTemplates.cxx. ◆ Remove() [1/2]. TObject * TListOfFunctionTemplates::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from THashList.; Definition at line 323 of file TListOfFunctionTemplates.cxx. ◆ Remove() [2/2]. TObject * TListOfFunctionTemplates::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from THashList.; Definition at line 339 of file TListOfFunctionTemplates.cxx. ◆ Streamer(). void TListOfFunctionTemplates::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from THashList. ◆ StreamerNVirtual(). void TListOfFunctionTemplates::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 87 of file TListOfFunctionTemplates.h. ◆ Unload() [1/2",MatchSource.WIKI,doc/master/classTListOfFunctionTemplates.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfFunctionTemplates.html
https://root.cern/doc/master/classTListOfTypes.html:7972,Availability,error,error,7972,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:8061,Availability,error,error,8061,"leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTi",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:8216,Availability,error,error,8216," whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is kn",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:8513,Availability,error,error,8513,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:11990,Availability,error,error,11990," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Additional Inherited Members;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsRefe",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:7978,Integrability,message,message,7978,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:8519,Integrability,message,message,8519,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:9380,Integrability,message,message,9380,"ecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *a",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:11996,Integrability,message,message,11996," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Additional Inherited Members;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsRefe",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:12369,Integrability,message,message,12369," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Additional Inherited Members;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from THashTable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileN",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:1039,Modifiability,inherit,inherited,1039," Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TListOfTypes Class ReferenceCore ROOT classes » Base ROOT classes. ; A collection of TDataType designed to hold the typedef information and numerical type information. ; The collection is populated on demand.; Besides the built-in types (int, float) a typedef is explicitly added to the collection (and thus visible via ls or Print) only if it is requested explicitly. ; Definition at line 30 of file TListOfTypes.h. Public Member Functions;  TListOfTypes ();  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object using its hash value (returned by its Hash() member). ;  ; TDataType * FindType (const char *name) const;  ;  Public Member Functions inherited from THashTable;  THashTable (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashTable object. ;  ; virtual ~THashTable ();  Delete a hashtable. ;  ; void Add (TObject *obj) override;  Add object to the hash table. ;  ; void AddAll (const TCollection *col) override;  Add all objects from collection col to this collection. ;  ; void AddBefore (const TObject *before, TObject *obj);  Add object to the hash table. ;  ; Float_t AverageCollisions () const;  ; void Clear (Option_t *option="""") override;  Remove all objects from the table. ;  ; Int_t Collisions (const char *name) const;  Returns the number of collisions for an object with a certain name (i.e. ;  ; Int_t Collisions (TObject *obj) const;  Returns the number of collisions for an object (i.e. ;  ; void Delete (Option_t *option="""") override;  Remove all objects from the table AND delete all heap based objects. ;  ; Bool_t Empty () const;  ; const TList * GetListForObject (const char *name) const;  Return the TList cor",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:3759,Modifiability,inherit,inherited,3759,"d. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; void Print (Option_t *option, Int_t recurse) const override;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void Rehash (Int_t newCapacity, Bool_t checkObjValidity=kTRUE);  Rehash the hashtable. ;  ; TObject * Remove (TObject *obj) override;  Remove object from the hashtable. ;  ; TObject * RemoveSlow (TObject *obj);  Remove object from the hashtable without using the hash value. ;  ; void SetRehashLevel (Int_t rehash);  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:3997,Modifiability,inherit,inherit,3997," elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void Rehash (Int_t newCapacity, Bool_t checkObjValidity=kTRUE);  Rehash the hashtable. ;  ; TObject * Remove (TObject *obj) override;  Remove object from the hashtable. ;  ; TObject * RemoveSlow (TObject *obj);  Remove object from the hashtable without using the hash value. ;  ; void SetRehashLevel (Int_t rehash);  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:6772,Modifiability,inherit,inherited,6772," override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *optio",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:7677,Modifiability,inherit,inheritance,7677," bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () con",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:9478,Modifiability,inherit,inherits,9478,"const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a ",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:9595,Modifiability,inherit,inherits,9595,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:12427,Modifiability,inherit,inherited,12427,"m ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Additional Inherited Members;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from THashTable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:12534,Modifiability,inherit,inherited,12534,"m ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Additional Inherited Members;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from THashTable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:13190,Modifiability,inherit,inherited,13190,"d Members;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from THashTable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off trackin",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:13404,Modifiability,inherit,inherited,13404,"d Members;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from THashTable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off trackin",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:13955,Modifiability,inherit,inherited,13955,"ick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from THashTable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collec",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:14458,Modifiability,inherit,inherited,14458,"bject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/core/base/src/TListOfTypes.h>. Inheritance diagram for TListOfTypes:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:14591,Modifiability,inherit,inherited,14591,"bject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/core/base/src/TListOfTypes.h>. Inheritance diagram for TListOfTypes:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:14690,Modifiability,inherit,inherited,14690,"bject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/core/base/src/TListOfTypes.h>. Inheritance diagram for TListOfTypes:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:15198,Modifiability,inherit,inherited,15198,"at flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/core/base/src/TListOfTypes.h>. Inheritance diagram for TListOfTypes:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TListOfTypes(). TListOfTypes::TListOfTypes ; (; ). Definition at line 36 of file TListOfTypes.cxx. Member Function Documentation. ◆ FindObject() [1/3]. TObject * THashTable::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to a TString. ; Reimplemented from THashTable.; Definition at line 67 of file THashTable.cxx. ◆ FindObject() [2/3]. TObject * TListOfTypes::FindObject ; (; con",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:15403,Modifiability,inherit,inherited,15403,"bjects in the TObjectTable. ;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/core/base/src/TListOfTypes.h>. Inheritance diagram for TListOfTypes:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TListOfTypes(). TListOfTypes::TListOfTypes ; (; ). Definition at line 36 of file TListOfTypes.cxx. Member Function Documentation. ◆ FindObject() [1/3]. TObject * THashTable::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to a TString. ; Reimplemented from THashTable.; Definition at line 67 of file THashTable.cxx. ◆ FindObject() [2/3]. TObject * TListOfTypes::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:14906,Performance,perform,perform,14906,"bject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/core/base/src/TListOfTypes.h>. Inheritance diagram for TListOfTypes:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:6478,Safety,safe,safe,6478,"de;  List (ls) all objects in this collection. ;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:915,Security,hash,hash,915,". ROOT: TListOfTypes Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TListOfTypes Class ReferenceCore ROOT classes » Base ROOT classes. ; A collection of TDataType designed to hold the typedef information and numerical type information. ; The collection is populated on demand.; Besides the built-in types (int, float) a typedef is explicitly added to the collection (and thus visible via ls or Print) only if it is requested explicitly. ; Definition at line 30 of file TListOfTypes.h. Public Member Functions;  TListOfTypes ();  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object using its hash value (returned by its Hash() member). ;  ; TDataType * FindType (const char *name) const;  ;  Public Member Functions inherited from THashTable;  THashTable (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashTable object. ;  ; virtual ~THashTable ();  Delete a hashtable. ;  ; void Add (TObject *obj) override;  Add object to the hash table. ;  ; void AddAll (const TCollection *col) override;  Add all objects from collection col to this collection. ;  ; void AddBefore (const TObject *before, TObject *obj);  Add object to the hash table. ;  ; Float_t AverageCollisions () const;  ; void Clear (Option_t *option="""") override;  Remove all objects from the table. ;  ; Int_t Collisions (const char *name) const;  Returns the number of collisions for an object with a certain name (i.e. ;  ; Int_t Collisions (TObject *obj) const;  Returns the number of collisions for an object (i.e. ;  ; void Delete (Option_t *option="""") override;  Remove all objects from the table AND delete all heap based objects. ;  ; Bool_t Empty () const;  ; const TList ",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:1216,Security,hash,hashtable,1216,"es Class ReferenceCore ROOT classes » Base ROOT classes. ; A collection of TDataType designed to hold the typedef information and numerical type information. ; The collection is populated on demand.; Besides the built-in types (int, float) a typedef is explicitly added to the collection (and thus visible via ls or Print) only if it is requested explicitly. ; Definition at line 30 of file TListOfTypes.h. Public Member Functions;  TListOfTypes ();  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object using its hash value (returned by its Hash() member). ;  ; TDataType * FindType (const char *name) const;  ;  Public Member Functions inherited from THashTable;  THashTable (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashTable object. ;  ; virtual ~THashTable ();  Delete a hashtable. ;  ; void Add (TObject *obj) override;  Add object to the hash table. ;  ; void AddAll (const TCollection *col) override;  Add all objects from collection col to this collection. ;  ; void AddBefore (const TObject *before, TObject *obj);  Add object to the hash table. ;  ; Float_t AverageCollisions () const;  ; void Clear (Option_t *option="""") override;  Remove all objects from the table. ;  ; Int_t Collisions (const char *name) const;  Returns the number of collisions for an object with a certain name (i.e. ;  ; Int_t Collisions (TObject *obj) const;  Returns the number of collisions for an object (i.e. ;  ; void Delete (Option_t *option="""") override;  Remove all objects from the table AND delete all heap based objects. ;  ; Bool_t Empty () const;  ; const TList * GetListForObject (const char *name) const;  Return the TList corresponding to object's name based hash value. ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the TList corres",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:1285,Security,hash,hash,1285," collection of TDataType designed to hold the typedef information and numerical type information. ; The collection is populated on demand.; Besides the built-in types (int, float) a typedef is explicitly added to the collection (and thus visible via ls or Print) only if it is requested explicitly. ; Definition at line 30 of file TListOfTypes.h. Public Member Functions;  TListOfTypes ();  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object using its hash value (returned by its Hash() member). ;  ; TDataType * FindType (const char *name) const;  ;  Public Member Functions inherited from THashTable;  THashTable (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashTable object. ;  ; virtual ~THashTable ();  Delete a hashtable. ;  ; void Add (TObject *obj) override;  Add object to the hash table. ;  ; void AddAll (const TCollection *col) override;  Add all objects from collection col to this collection. ;  ; void AddBefore (const TObject *before, TObject *obj);  Add object to the hash table. ;  ; Float_t AverageCollisions () const;  ; void Clear (Option_t *option="""") override;  Remove all objects from the table. ;  ; Int_t Collisions (const char *name) const;  Returns the number of collisions for an object with a certain name (i.e. ;  ; Int_t Collisions (TObject *obj) const;  Returns the number of collisions for an object (i.e. ;  ; void Delete (Option_t *option="""") override;  Remove all objects from the table AND delete all heap based objects. ;  ; Bool_t Empty () const;  ; const TList * GetListForObject (const char *name) const;  Return the TList corresponding to object's name based hash value. ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the TList corresponding to object's hash value. ;  ; TObject ** GetObjectRef",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:1484,Security,hash,hash,1484," is explicitly added to the collection (and thus visible via ls or Print) only if it is requested explicitly. ; Definition at line 30 of file TListOfTypes.h. Public Member Functions;  TListOfTypes ();  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object using its hash value (returned by its Hash() member). ;  ; TDataType * FindType (const char *name) const;  ;  Public Member Functions inherited from THashTable;  THashTable (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashTable object. ;  ; virtual ~THashTable ();  Delete a hashtable. ;  ; void Add (TObject *obj) override;  Add object to the hash table. ;  ; void AddAll (const TCollection *col) override;  Add all objects from collection col to this collection. ;  ; void AddBefore (const TObject *before, TObject *obj);  Add object to the hash table. ;  ; Float_t AverageCollisions () const;  ; void Clear (Option_t *option="""") override;  Remove all objects from the table. ;  ; Int_t Collisions (const char *name) const;  Returns the number of collisions for an object with a certain name (i.e. ;  ; Int_t Collisions (TObject *obj) const;  Returns the number of collisions for an object (i.e. ;  ; void Delete (Option_t *option="""") override;  Remove all objects from the table AND delete all heap based objects. ;  ; Bool_t Empty () const;  ; const TList * GetListForObject (const char *name) const;  Return the TList corresponding to object's name based hash value. ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the TList corresponding to object's hash value. ;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Int_t GetRehashLevel () const;  ; Int_t GetSize () const override;  Return the capacity of the collection, i.e.",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:2101,Security,hash,hash,2101,"ions inherited from THashTable;  THashTable (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashTable object. ;  ; virtual ~THashTable ();  Delete a hashtable. ;  ; void Add (TObject *obj) override;  Add object to the hash table. ;  ; void AddAll (const TCollection *col) override;  Add all objects from collection col to this collection. ;  ; void AddBefore (const TObject *before, TObject *obj);  Add object to the hash table. ;  ; Float_t AverageCollisions () const;  ; void Clear (Option_t *option="""") override;  Remove all objects from the table. ;  ; Int_t Collisions (const char *name) const;  Returns the number of collisions for an object with a certain name (i.e. ;  ; Int_t Collisions (TObject *obj) const;  Returns the number of collisions for an object (i.e. ;  ; void Delete (Option_t *option="""") override;  Remove all objects from the table AND delete all heap based objects. ;  ; Bool_t Empty () const;  ; const TList * GetListForObject (const char *name) const;  Return the TList corresponding to object's name based hash value. ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the TList corresponding to object's hash value. ;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Int_t GetRehashLevel () const;  ; Int_t GetSize () const override;  Return the capacity of the collection, i.e. ;  ; TClass * IsA () const override;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Returns a hash table iterator. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; void Print (Option_t *option, Int_t recurse) const override;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp,",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:2221,Security,hash,hash,2221,"ect. ;  ; virtual ~THashTable ();  Delete a hashtable. ;  ; void Add (TObject *obj) override;  Add object to the hash table. ;  ; void AddAll (const TCollection *col) override;  Add all objects from collection col to this collection. ;  ; void AddBefore (const TObject *before, TObject *obj);  Add object to the hash table. ;  ; Float_t AverageCollisions () const;  ; void Clear (Option_t *option="""") override;  Remove all objects from the table. ;  ; Int_t Collisions (const char *name) const;  Returns the number of collisions for an object with a certain name (i.e. ;  ; Int_t Collisions (TObject *obj) const;  Returns the number of collisions for an object (i.e. ;  ; void Delete (Option_t *option="""") override;  Remove all objects from the table AND delete all heap based objects. ;  ; Bool_t Empty () const;  ; const TList * GetListForObject (const char *name) const;  Return the TList corresponding to object's name based hash value. ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the TList corresponding to object's hash value. ;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Int_t GetRehashLevel () const;  ; Int_t GetSize () const override;  Return the capacity of the collection, i.e. ;  ; TClass * IsA () const override;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Returns a hash table iterator. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; void Print (Option_t *option, Int_t recurse) const override;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:2569,Security,hash,hash,2569,"lisions () const;  ; void Clear (Option_t *option="""") override;  Remove all objects from the table. ;  ; Int_t Collisions (const char *name) const;  Returns the number of collisions for an object with a certain name (i.e. ;  ; Int_t Collisions (TObject *obj) const;  Returns the number of collisions for an object (i.e. ;  ; void Delete (Option_t *option="""") override;  Remove all objects from the table AND delete all heap based objects. ;  ; Bool_t Empty () const;  ; const TList * GetListForObject (const char *name) const;  Return the TList corresponding to object's name based hash value. ;  ; const TList * GetListForObject (const TObject *obj) const;  Return the TList corresponding to object's hash value. ;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; Int_t GetRehashLevel () const;  ; Int_t GetSize () const override;  Return the capacity of the collection, i.e. ;  ; TClass * IsA () const override;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Returns a hash table iterator. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; void Print (Option_t *option, Int_t recurse) const override;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void Rehash (Int_t newCapacity, Bool_t checkObjValidity=kTRUE);  Rehash the hashtable. ;  ; TObject * Remove (TObject *obj) override;  Remove object from the hashtable. ;  ; TObject * RemoveSlow (TObject *obj);  Remove object from the hashtable without using the hash value. ;",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:3320,Security,hash,hashtable,3320,"onst override;  Return address of pointer to obj. ;  ; Int_t GetRehashLevel () const;  ; Int_t GetSize () const override;  Return the capacity of the collection, i.e. ;  ; TClass * IsA () const override;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Returns a hash table iterator. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; void Print (Option_t *option, Int_t recurse) const override;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void Rehash (Int_t newCapacity, Bool_t checkObjValidity=kTRUE);  Rehash the hashtable. ;  ; TObject * Remove (TObject *obj) override;  Remove object from the hashtable. ;  ; TObject * RemoveSlow (TObject *obj);  Remove object from the hashtable without using the hash value. ;  ; void SetRehashLevel (Int_t rehash);  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ; ",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:3402,Security,hash,hashtable,3402,"; Int_t GetSize () const override;  Return the capacity of the collection, i.e. ;  ; TClass * IsA () const override;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Returns a hash table iterator. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; void Print (Option_t *option, Int_t recurse) const override;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void Rehash (Int_t newCapacity, Bool_t checkObjValidity=kTRUE);  Rehash the hashtable. ;  ; TObject * Remove (TObject *obj) override;  Remove object from the hashtable. ;  ; TObject * RemoveSlow (TObject *obj);  Remove object from the hashtable without using the hash value. ;  ; void SetRehashLevel (Int_t rehash);  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects.",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:3479,Security,hash,hashtable,3479,"IsA () const override;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Returns a hash table iterator. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; void Print (Option_t *option, Int_t recurse) const override;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void Rehash (Int_t newCapacity, Bool_t checkObjValidity=kTRUE);  Rehash the hashtable. ;  ; TObject * Remove (TObject *obj) override;  Remove object from the hashtable. ;  ; TObject * RemoveSlow (TObject *obj);  Remove object from the hashtable without using the hash value. ;  ; void SetRehashLevel (Int_t rehash);  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:3507,Security,hash,hash,3507,"IsA () const override;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Returns a hash table iterator. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; void Print (Option_t *option, Int_t recurse) const override;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void Rehash (Int_t newCapacity, Bool_t checkObjValidity=kTRUE);  Rehash the hashtable. ;  ; TObject * Remove (TObject *obj) override;  Remove object from the hashtable. ;  ; TObject * RemoveSlow (TObject *obj);  Remove object from the hashtable without using the hash value. ;  ; void SetRehashLevel (Int_t rehash);  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:4904,Security,hash,hash,4904," the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; virtual Bool_t IsEmpty () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; void ls (Option_t *option="""") const override;  List (ls) all objects in this collection. ;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and c",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:6113,Security,access,accessible,6113,"ool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; void ls (Option_t *option="""") const override;  List (ls) all objects in this collection. ;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract.",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:6453,Security,access,access,6453,"de;  List (ls) all objects in this collection. ;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this collection. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this collection. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () co",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:13819,Security,access,accessible,13819,"te = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from THashTable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *en",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:16034,Security,hash,hash,16034,". ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/core/base/src/TListOfTypes.h>. Inheritance diagram for TListOfTypes:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TListOfTypes(). TListOfTypes::TListOfTypes ; (; ). Definition at line 36 of file TListOfTypes.cxx. Member Function Documentation. ◆ FindObject() [1/3]. TObject * THashTable::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to a TString. ; Reimplemented from THashTable.; Definition at line 67 of file THashTable.cxx. ◆ FindObject() [2/3]. TObject * TListOfTypes::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to a TString. ; Reimplemented from THashTable.; Definition at line 42 of file TListOfTypes.cxx. ◆ FindObject() [3/3]. TObject * THashTable::FindObject ; (; const TObject * ; obj); const. overridevirtual . Find object using its hash value (returned by its Hash() member). ; Reimplemented from THashTable.; Definition at line 68 of file THashTable.cxx. ◆ FindType(). TDataType * TListOfTypes::FindType ; (; const char * ; name); const. Definition at line 87 of file TListOfTypes.cxx. core/base/src/TListOfTypes.h; core/base/src/TListOfTypes.cxx. TListOfTypes. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:56 (GVA Time) using Doxygen 1.9.8   ; .",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:16341,Security,hash,hash,16341," ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/core/base/src/TListOfTypes.h>. Inheritance diagram for TListOfTypes:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TListOfTypes(). TListOfTypes::TListOfTypes ; (; ). Definition at line 36 of file TListOfTypes.cxx. Member Function Documentation. ◆ FindObject() [1/3]. TObject * THashTable::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to a TString. ; Reimplemented from THashTable.; Definition at line 67 of file THashTable.cxx. ◆ FindObject() [2/3]. TObject * TListOfTypes::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to a TString. ; Reimplemented from THashTable.; Definition at line 42 of file TListOfTypes.cxx. ◆ FindObject() [3/3]. TObject * THashTable::FindObject ; (; const TObject * ; obj); const. overridevirtual . Find object using its hash value (returned by its Hash() member). ; Reimplemented from THashTable.; Definition at line 68 of file THashTable.cxx. ◆ FindType(). TDataType * TListOfTypes::FindType ; (; const char * ; name); const. Definition at line 87 of file TListOfTypes.cxx. core/base/src/TListOfTypes.h; core/base/src/TListOfTypes.cxx. TListOfTypes. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:56 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTListOfTypes.html:16633,Security,hash,hash,16633," ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/core/base/src/TListOfTypes.h>. Inheritance diagram for TListOfTypes:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TListOfTypes(). TListOfTypes::TListOfTypes ; (; ). Definition at line 36 of file TListOfTypes.cxx. Member Function Documentation. ◆ FindObject() [1/3]. TObject * THashTable::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to a TString. ; Reimplemented from THashTable.; Definition at line 67 of file THashTable.cxx. ◆ FindObject() [2/3]. TObject * TListOfTypes::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to a TString. ; Reimplemented from THashTable.; Definition at line 42 of file TListOfTypes.cxx. ◆ FindObject() [3/3]. TObject * THashTable::FindObject ; (; const TObject * ; obj); const. overridevirtual . Find object using its hash value (returned by its Hash() member). ; Reimplemented from THashTable.; Definition at line 68 of file THashTable.cxx. ◆ FindType(). TDataType * TListOfTypes::FindType ; (; const char * ; name); const. Definition at line 87 of file TListOfTypes.cxx. core/base/src/TListOfTypes.h; core/base/src/TListOfTypes.cxx. TListOfTypes. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:56 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTListOfTypes.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html
https://root.cern/doc/master/classTLockFile.html:2873,Availability,error,error,2873,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:2962,Availability,error,error,2962,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:3117,Availability,error,error,3117,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:3414,Availability,error,error,3414,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:7978,Availability,error,error,7978," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:464,Deployability,release,released,464,". ROOT: TLockFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TLockFile Class ReferenceInput/Output Library. ; A scoped lock based on files. ; The RAAI idiom is used: the constructor blocks until lock is obtained. Lock is released in the destructor. Use it in scope-blocks like: {; TLockFile lock(""path.to.lock.file"");; // do something you need the lock for; } // lock is automatically released; TLockFileA scoped lock based on files.Definition TLockFile.h:19. Definition at line 19 of file TLockFile.h. Public Member Functions;  TLockFile (const char *path, Int_t timeLimit=0);  Default constructor. ;  ;  ~TLockFile () override;  Destructor. Releases the lock. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:628,Deployability,release,released,628,". ROOT: TLockFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TLockFile Class ReferenceInput/Output Library. ; A scoped lock based on files. ; The RAAI idiom is used: the constructor blocks until lock is obtained. Lock is released in the destructor. Use it in scope-blocks like: {; TLockFile lock(""path.to.lock.file"");; // do something you need the lock for; } // lock is automatically released; TLockFileA scoped lock based on files.Definition TLockFile.h:19. Definition at line 19 of file TLockFile.h. Public Member Functions;  TLockFile (const char *path, Int_t timeLimit=0);  Default constructor. ;  ;  ~TLockFile () override;  Destructor. Releases the lock. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:2879,Integrability,message,message,2879,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:3420,Integrability,message,message,3420,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:4622,Integrability,message,message,4622,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:7984,Integrability,message,message,7984," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:8357,Integrability,message,message,8357," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Prote",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:1112,Modifiability,inherit,inherited,1112,"rching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TLockFile Class ReferenceInput/Output Library. ; A scoped lock based on files. ; The RAAI idiom is used: the constructor blocks until lock is obtained. Lock is released in the destructor. Use it in scope-blocks like: {; TLockFile lock(""path.to.lock.file"");; // do something you need the lock for; } // lock is automatically released; TLockFileA scoped lock based on files.Definition TLockFile.h:19. Definition at line 19 of file TLockFile.h. Public Member Functions;  TLockFile (const char *path, Int_t timeLimit=0);  Default constructor. ;  ;  ~TLockFile () override;  Destructor. Releases the lock. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:2509,Modifiability,inherit,inheritance,2509,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:4720,Modifiability,inherit,inherits,4720,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:4837,Modifiability,inherit,inherits,4837,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:8858,Modifiability,inherit,inherited,8858,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t Lock (const char *path, Int_t timeLimit);  Internal function that locks with the given path. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fPath;  Path to file holding the lock. ;  . Private Member Functions;  TLockFile (const TLockFile &)=delete;  ; TLockFile & operator= (const TLockFile ",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:9505,Modifiability,inherit,inherited,9505,"Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t Lock (const char *path, Int_t timeLimit);  Internal function that locks with the given path. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fPath;  Path to file holding the lock. ;  . Private Member Functions;  TLockFile (const TLockFile &)=delete;  ; TLockFile & operator= (const TLockFile &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Typ",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:9927,Modifiability,inherit,inherited,9927," ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Bool_t Lock (const char *path, Int_t timeLimit);  Internal function that locks with the given path. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fPath;  Path to file holding the lock. ;  . Private Member Functions;  TLockFile (const TLockFile &)=delete;  ; TLockFile & operator= (const TLockFile &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TLockFile.h>. Inheritance diagram for TLockFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TLockFile() [1/2]. TLockFile::TLockFile ; (; const TLockFile & ; ). privatedelete . ◆ TLockFile() [2/2]. TLockFile::TLockFile ; (; const char * ; path, .",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:10568,Modifiability,inherit,inherited,10568,"har *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fPath;  Path to file holding the lock. ;  . Private Member Functions;  TLockFile (const TLockFile &)=delete;  ; TLockFile & operator= (const TLockFile &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TLockFile.h>. Inheritance diagram for TLockFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TLockFile() [1/2]. TLockFile::TLockFile ; (; const TLockFile & ; ). privatedelete . ◆ TLockFile() [2/2]. TLockFile::TLockFile ; (; const char * ; path, . Int_t ; timeLimit = 0 . ). Default constructor. ; Blocks until lock is obtained. If a lock exists that is older than the given time limit, the file is removed. If timeLimit <= 0, wait for ever. ; Definition at line 43 of file TLockFile.cxx. ◆ ~TLockFile(). TLockFile::~TLockFile ; (; ). override . Destructor. Releases the lock. ; Definition at line 58 of file TLockFile.cxx. Member Function Documentation. ◆ Class(). static TClass * TLockFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TLockFile::Class_Name ; (; ). static . ReturnsName of this",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockFile.html:4351,Security,hash,hash,4351," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTLockFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockFile.html
https://root.cern/doc/master/classTLockPath.html:2699,Availability,error,error,2699,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:2788,Availability,error,error,2788,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:2943,Availability,error,error,2943,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:3240,Availability,error,error,3240,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:7735,Availability,error,error,7735," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:10490,Availability,error,error,10490,"( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TLockPath.h>. Inheritance diagram for TLockPath:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TLockPath(). TLockPath::TLockPath ; (; const char * ; path = """"). Locks the directory. ; Waits if lock is hold by an other process. Returns 0 on success, -1 in case of error. ; Definition at line 36 of file TLockPath.cxx. ◆ ~TLockPath(). TLockPath::~TLockPath ; (; ). inlineoverride . Definition at line 33 of file TLockPath.h. Member Function Documentation. ◆ Class(). static TClass * TLockPath::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TLockPath::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TLockPath::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 43 of file TLockPath.h. ◆ DeclFileName(). static const char * TLockPath::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 43 of file TLockPath.h. ◆ GetName(). const char * TLockPath::GetName ; (; ); const. inlineoverridevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemen",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:12468,Availability,error,error,12468,"static constexpr Version_t TLockPath::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 43 of file TLockPath.h. ◆ DeclFileName(). static const char * TLockPath::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 43 of file TLockPath.h. ◆ GetName(). const char * TLockPath::GetName ; (; ); const. inlineoverridevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TObject.; Definition at line 35 of file TLockPath.h. ◆ IsA(). TClass * TLockPath::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 43 of file TLockPath.h. ◆ IsLocked(). Bool_t TLockPath::IsLocked ; (; ); const. inline . Definition at line 41 of file TLockPath.h. ◆ Lock(). Int_t TLockPath::Lock ; (; Bool_t ; shared = kFALSE). Definition at line 43 of file TLockPath.cxx. ◆ SetName(). void TLockPath::SetName ; (; const char * ; path). inline . Definition at line 36 of file TLockPath.h. ◆ Streamer(). void TLockPath::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TLockPath::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 43 of file TLockPath.h. ◆ Unlock(). Int_t TLockPath::Unlock ; (; ). Unlock the directory. ; Returns 0 in case of success, -1 in case of error. ; Definition at line 80 of file TLockPath.cxx. Member Data Documentation. ◆ fLockId. Int_t TLockPath::fLockId. private . Definition at line 29 of file TLockPath.h. ◆ fName. TString TLockPath::fName. private . Definition at line 28 of file TLockPath.h. proof/proof/inc/TLockPath.h; proof/proof/src/TLockPath.cxx. TLockPath. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:56 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:2705,Integrability,message,message,2705,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:3246,Integrability,message,message,3246,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have a",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:4379,Integrability,message,message,4379,"ct * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:7741,Integrability,message,message,7741," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:8114,Integrability,message,message,8114," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Priva",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:938,Modifiability,inherit,inherited,938,". ROOT: TLockPath Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TLockPath Class ReferencePROOF » PROOF kernel Libraries. ; Path locking class allowing shared and exclusive locks. ; Definition at line 26 of file TLockPath.h. Public Member Functions;  TLockPath (const char *path="""");  Locks the directory. ;  ;  ~TLockPath () override;  ; const char * GetName () const override;  Returns name of object. ;  ; TClass * IsA () const override;  ; Bool_t IsLocked () const;  ; Int_t Lock (Bool_t shared=kFALSE);  ; void SetName (const char *path);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Unlock ();  Unlock the directory. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  C",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:2335,Modifiability,inherit,inheritance,2335,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:4477,Modifiability,inherit,inherits,4477,"asses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:4594,Modifiability,inherit,inherits,4594," ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:8615,Modifiability,inherit,inherited,8615,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Int_t fLockId;  ; TString fName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup =",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:9201,Modifiability,inherit,inherited,9201,"ual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Int_t fLockId;  ; TString fName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TLockPath.h>. Inheritance diagram for TLockPath:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera inst",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:9842,Modifiability,inherit,inherited,9842,"(void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Int_t fLockId;  ; TString fName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TLockPath.h>. Inheritance diagram for TLockPath:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TLockPath(). TLockPath::TLockPath ; (; const char * ; path = """"). Locks the directory. ; Waits if lock is hold by an other process. Returns 0 on success, -1 in case of error. ; Definition at line 36 of file TLockPath.cxx. ◆ ~TLockPath(). TLockPath::~TLockPath ; (; ). inlineoverride . Definition at line 33 of file TLockPath.h. Member Function Documentation. ◆ Class(). static TClass * TLockPath::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TLockPath::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TLockPath::Class_Version ; (",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:9941,Modifiability,inherit,inherited,9941,"(void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Int_t fLockId;  ; TString fName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TLockPath.h>. Inheritance diagram for TLockPath:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TLockPath(). TLockPath::TLockPath ; (; const char * ; path = """"). Locks the directory. ; Waits if lock is hold by an other process. Returns 0 on success, -1 in case of error. ; Definition at line 36 of file TLockPath.cxx. ◆ ~TLockPath(). TLockPath::~TLockPath ; (; ). inlineoverride . Definition at line 33 of file TLockPath.h. Member Function Documentation. ◆ Class(). static TClass * TLockPath::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TLockPath::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TLockPath::Class_Version ; (",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLockPath.html:4108,Security,hash,hash,4108,"xecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTLockPath.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLockPath.html
https://root.cern/doc/master/classTLorentzRotation.html:8160,Availability,error,error,8160,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:8249,Availability,error,error,8249,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:8404,Availability,error,error,8404,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:8701,Availability,error,error,8701,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:13265,Availability,error,error,13265," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:400,Integrability,interface,interface,400,". ROOT: TLorentzRotation Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TLorentzRotation Class ReferenceMath » Legacy Physics Classes. ; Legacy Code TLorentzRotation is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TLorentzRotation might still be a valid solution. Consider using instead ROOT::Math::LorentzRotation.; The TLorentzRotation class describes Lorentz transformations including Lorentz boosts and rotations (see TRotation) ; | xx xy xz xt |; | |; | yx yy yz yt |; lambda = | |; | zx zy zz zt |; | |; | tx ty tz tt |; xyOption_t Option_t TPoint xyDefinition TGWin32VirtualXProxy.cxx:62; ttauto * ttDefinition textangle.C:16. Declaration; By default it is initialized to the identity matrix, but it may also be initialized by an other TLorentzRotation, by a pure TRotation or by a boost:; TLorentzRotation l; // l is initialized as identity TLorentzRotation m(l); // m = l TRotation r; TLorentzRotation lr(r); TLorentzRotation lb1(bx,by,bz); TVector3 b; TLorentzRotation lb2(b);; The Matrix for a Lorentz boosts is:; | 1+gamma'*bx*bx gamma'*bx*by gamma'*bx*bz gamma*bx |; | gamma'*by*bx 1+gamma'*by*by gamma'*by*bz gamma*by |; | gamma'*bz*bx gamma'*bz*by 1+gamma'*bz*bz gamma*bz |; | gamma*bx gamma*by gamma*bz gamma |; with the boost vector b=(bx,by,bz) and gamma=1/Sqrt(1-beta*beta) and gamma'=(gamma-1)/beta*beta. . Access to the matrix components/Comparisons; Access to the matrix components is possible through the member functions XX(), XY() .. TT(), through the operator (int,int):; Double_t xx;; TLorentzRotation l;; xx = l.XX(); // gets the xx component; xx = l(0,0); // gets the xx component; ; if (l==m) {...} // test for e",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:541,Integrability,depend,depending,541,". ROOT: TLorentzRotation Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TLorentzRotation Class ReferenceMath » Legacy Physics Classes. ; Legacy Code TLorentzRotation is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TLorentzRotation might still be a valid solution. Consider using instead ROOT::Math::LorentzRotation.; The TLorentzRotation class describes Lorentz transformations including Lorentz boosts and rotations (see TRotation) ; | xx xy xz xt |; | |; | yx yy yz yt |; lambda = | |; | zx zy zz zt |; | |; | tx ty tz tt |; xyOption_t Option_t TPoint xyDefinition TGWin32VirtualXProxy.cxx:62; ttauto * ttDefinition textangle.C:16. Declaration; By default it is initialized to the identity matrix, but it may also be initialized by an other TLorentzRotation, by a pure TRotation or by a boost:; TLorentzRotation l; // l is initialized as identity TLorentzRotation m(l); // m = l TRotation r; TLorentzRotation lr(r); TLorentzRotation lb1(bx,by,bz); TVector3 b; TLorentzRotation lb2(b);; The Matrix for a Lorentz boosts is:; | 1+gamma'*bx*bx gamma'*bx*by gamma'*bx*bz gamma*bx |; | gamma'*by*bx 1+gamma'*by*by gamma'*by*bz gamma*by |; | gamma'*bz*bx gamma'*bz*by 1+gamma'*bz*bz gamma*bz |; | gamma*bx gamma*by gamma*bz gamma |; with the boost vector b=(bx,by,bz) and gamma=1/Sqrt(1-beta*beta) and gamma'=(gamma-1)/beta*beta. . Access to the matrix components/Comparisons; Access to the matrix components is possible through the member functions XX(), XY() .. TT(), through the operator (int,int):; Double_t xx;; TLorentzRotation l;; xx = l.XX(); // gets the xx component; xx = l(0,0); // gets the xx component; ; if (l==m) {...} // test for e",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:2188,Integrability,interface,interface,2188,"a boost:; TLorentzRotation l; // l is initialized as identity TLorentzRotation m(l); // m = l TRotation r; TLorentzRotation lr(r); TLorentzRotation lb1(bx,by,bz); TVector3 b; TLorentzRotation lb2(b);; The Matrix for a Lorentz boosts is:; | 1+gamma'*bx*bx gamma'*bx*by gamma'*bx*bz gamma*bx |; | gamma'*by*bx 1+gamma'*by*by gamma'*by*bz gamma*by |; | gamma'*bz*bx gamma'*bz*by 1+gamma'*bz*bz gamma*bz |; | gamma*bx gamma*by gamma*bz gamma |; with the boost vector b=(bx,by,bz) and gamma=1/Sqrt(1-beta*beta) and gamma'=(gamma-1)/beta*beta. . Access to the matrix components/Comparisons; Access to the matrix components is possible through the member functions XX(), XY() .. TT(), through the operator (int,int):; Double_t xx;; TLorentzRotation l;; xx = l.XX(); // gets the xx component; xx = l(0,0); // gets the xx component; ; if (l==m) {...} // test for equality; if (l !=m) {...} // test for inequality; if (l.IsIdentity()) {...} // test for identity; TLorentzRotation<div class=""legacybox""><h2>Legacy Code</h2> TLorentzRotation is a legacy interface: there will be no ...Definition TLorentzRotation.h:20; double; mTMarker mDefinition textangle.C:8; lTLine lDefinition textangle.C:4. Transformations of a LorentzRotation; Compound transformations; There are four possibilities to find the product of two TLorentzRotation transformations:; TLorentzRotation a,b,c;; c = b*a;// product; c = a.MatrixMultiplication(b); // a is unchanged; a *= b;// Attention: a=a*b; c = a.Transform(b)// a=b*a then c=a; b#define b(i)Definition RSha256.hxx:100; c#define c(i)Definition RSha256.hxx:101; a#define a(i)Definition RSha256.hxx:99; TLorentzRotation::MatrixMultiplicationTLorentzRotation MatrixMultiplication(const TLorentzRotation &) constDefinition TLorentzRotation.cxx:222; TLorentzRotation::TransformTLorentzRotation & Transform(const TLorentzRotation &)Definition TLorentzRotation.h:259; Lorentz boosts; Double_t bx, by, bz;; TVector3 v(bx,by,bz);; TLorentzRotation l;; l.Boost(v);; l.Boost(bx,by,bz);; TVe",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:8166,Integrability,message,message,8166,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:8707,Integrability,message,message,8707,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:9909,Integrability,message,message,9909,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:13271,Integrability,message,message,13271," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:13644,Integrability,message,message,13644," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Prote",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:6399,Modifiability,inherit,inherited,6399,"tor* (const TLorentzVector &) const;  ; TLorentzRotation & operator*= (const TLorentzRotation &);  ; TLorentzRotation & operator= (const TLorentzRotation &);  ; TLorentzRotation & operator= (const TRotation &);  ; Bool_t operator== (const TLorentzRotation &) const;  ; TLorentzRotationRow operator[] (int) const;  ; TLorentzRotation & Rotate (Double_t, const TVector3 &);  ; TLorentzRotation & Rotate (Double_t, const TVector3 *);  ; TLorentzRotation & RotateX (Double_t);  ; TLorentzRotation & RotateY (Double_t);  ; TLorentzRotation & RotateZ (Double_t);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TLorentzRotation & Transform (const TLorentzRotation &);  ; TLorentzRotation & Transform (const TRotation &);  ; Double_t TT () const;  ; Double_t TX () const;  ; Double_t TY () const;  ; Double_t TZ () const;  ; TLorentzVector VectorMultiplication (const TLorentzVector &) const;  ; Double_t XT () const;  ; Double_t XX () const;  ; Double_t XY () const;  ; Double_t XZ () const;  ; Double_t YT () const;  ; Double_t YX () const;  ; Double_t YY () const;  ; Double_t YZ () const;  ; Double_t ZT () const;  ; Double_t ZX () const;  ; Double_t ZY () const;  ; Double_t ZZ () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtua",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:7796,Modifiability,inherit,inheritance,7796,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:10007,Modifiability,inherit,inherits,10007,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:10124,Modifiability,inherit,inherits,10124,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:14145,Modifiability,inherit,inherited,14145,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TLorentzRotation (Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t);  ; void SetBoost (Double_t, Double_t, Double_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t ftt;  ; Double_t ftx;  ",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:14919,Modifiability,inherit,inherited,14919," Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TLorentzRotation (Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t);  ; void SetBoost (Double_t, Double_t, Double_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t ftt;  ; Double_t ftx;  ; Double_t fty;  ; Double_t ftz;  ; Double_t fxt;  ; Double_t fxx;  ; Double_t fxy;  ; Double_t fxz;  ; Double_t fyt;  ; Double_t fyx;  ; Double_t fyy;  ; Double_t fyz;  ; Double_t fzt;  ; Double_t fzx;  ; Double_t fzy;  ; Double_t fzz;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , k",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:15440,Modifiability,inherit,inherited,15440,"t destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TLorentzRotation (Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t);  ; void SetBoost (Double_t, Double_t, Double_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t ftt;  ; Double_t ftx;  ; Double_t fty;  ; Double_t ftz;  ; Double_t fxt;  ; Double_t fxx;  ; Double_t fxy;  ; Double_t fxz;  ; Double_t fyt;  ; Double_t fyx;  ; Double_t fyy;  ; Double_t fyz;  ; Double_t fzt;  ; Double_t fzx;  ; Double_t fzy;  ; Double_t fzz;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TLorentzRotation.h>. Inheritance diagram for TLorentzRotation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TLorentzRotation() [1/6]. TLorentzRotation::TLorentzRotation ; (; ). Definition at line 137 of file TLorentzRotation.cxx. ◆ TLorentzRotatio",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:16081,Modifiability,inherit,inherited,16081,"otected Attributes; Double_t ftt;  ; Double_t ftx;  ; Double_t fty;  ; Double_t ftz;  ; Double_t fxt;  ; Double_t fxx;  ; Double_t fxy;  ; Double_t fxz;  ; Double_t fyt;  ; Double_t fyx;  ; Double_t fyy;  ; Double_t fyz;  ; Double_t fzt;  ; Double_t fzx;  ; Double_t fzy;  ; Double_t fzz;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TLorentzRotation.h>. Inheritance diagram for TLorentzRotation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TLorentzRotation() [1/6]. TLorentzRotation::TLorentzRotation ; (; ). Definition at line 137 of file TLorentzRotation.cxx. ◆ TLorentzRotation() [2/6]. TLorentzRotation::TLorentzRotation ; (; const TRotation & ; r). Definition at line 143 of file TLorentzRotation.cxx. ◆ TLorentzRotation() [3/6]. TLorentzRotation::TLorentzRotation ; (; const TLorentzRotation & ; r). Definition at line 149 of file TLorentzRotation.cxx. ◆ TLorentzRotation() [4/6]. TLorentzRotation::TLorentzRotation ; (; Double_t ; bx, . Double_t ; by, . Double_t ; bz . ). Definition at line 165 of file TLorentzRotation.cxx. ◆ TLorentzRotation() [5/6]. TLorentzRotation::TLorentzRotation ; (; const TVector3 & ; p). Definition at line 173 of file TLorentzRotation.cxx. ◆ T",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:9638,Security,hash,hash,9638," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:1991,Testability,test,test,1991,"; By default it is initialized to the identity matrix, but it may also be initialized by an other TLorentzRotation, by a pure TRotation or by a boost:; TLorentzRotation l; // l is initialized as identity TLorentzRotation m(l); // m = l TRotation r; TLorentzRotation lr(r); TLorentzRotation lb1(bx,by,bz); TVector3 b; TLorentzRotation lb2(b);; The Matrix for a Lorentz boosts is:; | 1+gamma'*bx*bx gamma'*bx*by gamma'*bx*bz gamma*bx |; | gamma'*by*bx 1+gamma'*by*by gamma'*by*bz gamma*by |; | gamma'*bz*bx gamma'*bz*by 1+gamma'*bz*bz gamma*bz |; | gamma*bx gamma*by gamma*bz gamma |; with the boost vector b=(bx,by,bz) and gamma=1/Sqrt(1-beta*beta) and gamma'=(gamma-1)/beta*beta. . Access to the matrix components/Comparisons; Access to the matrix components is possible through the member functions XX(), XY() .. TT(), through the operator (int,int):; Double_t xx;; TLorentzRotation l;; xx = l.XX(); // gets the xx component; xx = l(0,0); // gets the xx component; ; if (l==m) {...} // test for equality; if (l !=m) {...} // test for inequality; if (l.IsIdentity()) {...} // test for identity; TLorentzRotation<div class=""legacybox""><h2>Legacy Code</h2> TLorentzRotation is a legacy interface: there will be no ...Definition TLorentzRotation.h:20; double; mTMarker mDefinition textangle.C:8; lTLine lDefinition textangle.C:4. Transformations of a LorentzRotation; Compound transformations; There are four possibilities to find the product of two TLorentzRotation transformations:; TLorentzRotation a,b,c;; c = b*a;// product; c = a.MatrixMultiplication(b); // a is unchanged; a *= b;// Attention: a=a*b; c = a.Transform(b)// a=b*a then c=a; b#define b(i)Definition RSha256.hxx:100; c#define c(i)Definition RSha256.hxx:101; a#define a(i)Definition RSha256.hxx:99; TLorentzRotation::MatrixMultiplicationTLorentzRotation MatrixMultiplication(const TLorentzRotation &) constDefinition TLorentzRotation.cxx:222; TLorentzRotation::TransformTLorentzRotation & Transform(const TLorentzRotation &)Definition T",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:2030,Testability,test,test,2030," identity matrix, but it may also be initialized by an other TLorentzRotation, by a pure TRotation or by a boost:; TLorentzRotation l; // l is initialized as identity TLorentzRotation m(l); // m = l TRotation r; TLorentzRotation lr(r); TLorentzRotation lb1(bx,by,bz); TVector3 b; TLorentzRotation lb2(b);; The Matrix for a Lorentz boosts is:; | 1+gamma'*bx*bx gamma'*bx*by gamma'*bx*bz gamma*bx |; | gamma'*by*bx 1+gamma'*by*by gamma'*by*bz gamma*by |; | gamma'*bz*bx gamma'*bz*by 1+gamma'*bz*bz gamma*bz |; | gamma*bx gamma*by gamma*bz gamma |; with the boost vector b=(bx,by,bz) and gamma=1/Sqrt(1-beta*beta) and gamma'=(gamma-1)/beta*beta. . Access to the matrix components/Comparisons; Access to the matrix components is possible through the member functions XX(), XY() .. TT(), through the operator (int,int):; Double_t xx;; TLorentzRotation l;; xx = l.XX(); // gets the xx component; xx = l(0,0); // gets the xx component; ; if (l==m) {...} // test for equality; if (l !=m) {...} // test for inequality; if (l.IsIdentity()) {...} // test for identity; TLorentzRotation<div class=""legacybox""><h2>Legacy Code</h2> TLorentzRotation is a legacy interface: there will be no ...Definition TLorentzRotation.h:20; double; mTMarker mDefinition textangle.C:8; lTLine lDefinition textangle.C:4. Transformations of a LorentzRotation; Compound transformations; There are four possibilities to find the product of two TLorentzRotation transformations:; TLorentzRotation a,b,c;; c = b*a;// product; c = a.MatrixMultiplication(b); // a is unchanged; a *= b;// Attention: a=a*b; c = a.Transform(b)// a=b*a then c=a; b#define b(i)Definition RSha256.hxx:100; c#define c(i)Definition RSha256.hxx:101; a#define a(i)Definition RSha256.hxx:99; TLorentzRotation::MatrixMultiplicationTLorentzRotation MatrixMultiplication(const TLorentzRotation &) constDefinition TLorentzRotation.cxx:222; TLorentzRotation::TransformTLorentzRotation & Transform(const TLorentzRotation &)Definition TLorentzRotation.h:259; Lorentz boost",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzRotation.html:2080,Testability,test,test,2080,"a boost:; TLorentzRotation l; // l is initialized as identity TLorentzRotation m(l); // m = l TRotation r; TLorentzRotation lr(r); TLorentzRotation lb1(bx,by,bz); TVector3 b; TLorentzRotation lb2(b);; The Matrix for a Lorentz boosts is:; | 1+gamma'*bx*bx gamma'*bx*by gamma'*bx*bz gamma*bx |; | gamma'*by*bx 1+gamma'*by*by gamma'*by*bz gamma*by |; | gamma'*bz*bx gamma'*bz*by 1+gamma'*bz*bz gamma*bz |; | gamma*bx gamma*by gamma*bz gamma |; with the boost vector b=(bx,by,bz) and gamma=1/Sqrt(1-beta*beta) and gamma'=(gamma-1)/beta*beta. . Access to the matrix components/Comparisons; Access to the matrix components is possible through the member functions XX(), XY() .. TT(), through the operator (int,int):; Double_t xx;; TLorentzRotation l;; xx = l.XX(); // gets the xx component; xx = l(0,0); // gets the xx component; ; if (l==m) {...} // test for equality; if (l !=m) {...} // test for inequality; if (l.IsIdentity()) {...} // test for identity; TLorentzRotation<div class=""legacybox""><h2>Legacy Code</h2> TLorentzRotation is a legacy interface: there will be no ...Definition TLorentzRotation.h:20; double; mTMarker mDefinition textangle.C:8; lTLine lDefinition textangle.C:4. Transformations of a LorentzRotation; Compound transformations; There are four possibilities to find the product of two TLorentzRotation transformations:; TLorentzRotation a,b,c;; c = b*a;// product; c = a.MatrixMultiplication(b); // a is unchanged; a *= b;// Attention: a=a*b; c = a.Transform(b)// a=b*a then c=a; b#define b(i)Definition RSha256.hxx:100; c#define c(i)Definition RSha256.hxx:101; a#define a(i)Definition RSha256.hxx:99; TLorentzRotation::MatrixMultiplicationTLorentzRotation MatrixMultiplication(const TLorentzRotation &) constDefinition TLorentzRotation.cxx:222; TLorentzRotation::TransformTLorentzRotation & Transform(const TLorentzRotation &)Definition TLorentzRotation.h:259; Lorentz boosts; Double_t bx, by, bz;; TVector3 v(bx,by,bz);; TLorentzRotation l;; l.Boost(v);; l.Boost(bx,by,bz);; TVe",MatchSource.WIKI,doc/master/classTLorentzRotation.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzRotation.html
https://root.cern/doc/master/classTLorentzVector.html:15024,Availability,error,error,15024,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:15113,Availability,error,error,15113,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:15268,Availability,error,error,15268,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:15565,Availability,error,error,15565,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:20008,Availability,error,error,20008,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:937,Energy Efficiency,energy,energy,937,". ROOT: TLorentzVector Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TLorentzVector Class ReferenceMath » Legacy Physics Classes. ; AttentionTLorentzVector is a legacy class. It is slower and worse for serialization than the recommended superior alternative ROOT::Math::LorentzVector. ROOT provides specialisations of the ROOT::Math::LorentzVector template which offer superior runtime performance, i.e.:; ROOT::Math::PtEtaPhiMVector based on pt (rho),eta,phi and M (t) coordinates in double precision; ROOT::Math::PtEtaPhiEVector based on pt (rho),eta,phi and E (t) coordinates in double precision; ROOT::Math::PxPyPzMVector based on px,py,pz and M (mass) coordinates in double precision; ROOT::Math::PxPyPzEVector based on px,py,pz and E (energy) coordinates in double precision; ROOT::Math::XYZTVector based on x,y,z,t coordinates (cartesian) in double precision (same as PxPyPzEVector); ROOT::Math::XYZTVectorF based on x,y,z,t coordinates (cartesian) in float precision (same as PxPyPzEVector but float). More details can be found in the documentation of the Physics Vectors package. . Description; TLorentzVector is a general four-vector class, which can be used either for the description of position and time (x,y,z,t) or momentum and energy (px,py,pz,E). Declaration; TLorentzVector has been implemented as a set a TVector3 and a Double_t variable. By default all components are initialized by zero.; TLorentzVector v1; // initialized by (0., 0., 0., 0.); TLorentzVector v2(1., 1., 1., 1.);; TLorentzVector v3(v1);; TLorentzVector v4(TVector3(1., 2., 3.),4.);; TLorentzVectorDefinition TLorentzVector.h:31; TVector3Definition TVector3.h:22; v2@ v2Definition rootcling_impl.cxx:3702; v4@ v4Definition rootcling_impl.cxx:3704; v3@ v3Definition rootcling_impl.cxx:3703; v1@ v1Definition rootcling_im",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:1439,Energy Efficiency,energy,energy,1439,"t is slower and worse for serialization than the recommended superior alternative ROOT::Math::LorentzVector. ROOT provides specialisations of the ROOT::Math::LorentzVector template which offer superior runtime performance, i.e.:; ROOT::Math::PtEtaPhiMVector based on pt (rho),eta,phi and M (t) coordinates in double precision; ROOT::Math::PtEtaPhiEVector based on pt (rho),eta,phi and E (t) coordinates in double precision; ROOT::Math::PxPyPzMVector based on px,py,pz and M (mass) coordinates in double precision; ROOT::Math::PxPyPzEVector based on px,py,pz and E (energy) coordinates in double precision; ROOT::Math::XYZTVector based on x,y,z,t coordinates (cartesian) in double precision (same as PxPyPzEVector); ROOT::Math::XYZTVectorF based on x,y,z,t coordinates (cartesian) in float precision (same as PxPyPzEVector but float). More details can be found in the documentation of the Physics Vectors package. . Description; TLorentzVector is a general four-vector class, which can be used either for the description of position and time (x,y,z,t) or momentum and energy (px,py,pz,E). Declaration; TLorentzVector has been implemented as a set a TVector3 and a Double_t variable. By default all components are initialized by zero.; TLorentzVector v1; // initialized by (0., 0., 0., 0.); TLorentzVector v2(1., 1., 1., 1.);; TLorentzVector v3(v1);; TLorentzVector v4(TVector3(1., 2., 3.),4.);; TLorentzVectorDefinition TLorentzVector.h:31; TVector3Definition TVector3.h:22; v2@ v2Definition rootcling_impl.cxx:3702; v4@ v4Definition rootcling_impl.cxx:3704; v3@ v3Definition rootcling_impl.cxx:3703; v1@ v1Definition rootcling_impl.cxx:3701; For backward compatibility there are two constructors from an Double_t and Float_t C array. Access to the components; There are two sets of access functions to the components of a LorentzVector: X(), Y(), Z(), T() and Px(), Py(), Pz() and E(). Both sets return the same values but the first set is more relevant for use where TLorentzVector describes a combin",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:2480,Energy Efficiency,energy,energy,2480,"description of position and time (x,y,z,t) or momentum and energy (px,py,pz,E). Declaration; TLorentzVector has been implemented as a set a TVector3 and a Double_t variable. By default all components are initialized by zero.; TLorentzVector v1; // initialized by (0., 0., 0., 0.); TLorentzVector v2(1., 1., 1., 1.);; TLorentzVector v3(v1);; TLorentzVector v4(TVector3(1., 2., 3.),4.);; TLorentzVectorDefinition TLorentzVector.h:31; TVector3Definition TVector3.h:22; v2@ v2Definition rootcling_impl.cxx:3702; v4@ v4Definition rootcling_impl.cxx:3704; v3@ v3Definition rootcling_impl.cxx:3703; v1@ v1Definition rootcling_impl.cxx:3701; For backward compatibility there are two constructors from an Double_t and Float_t C array. Access to the components; There are two sets of access functions to the components of a LorentzVector: X(), Y(), Z(), T() and Px(), Py(), Pz() and E(). Both sets return the same values but the first set is more relevant for use where TLorentzVector describes a combination of position and time and the second set is more relevant where TLorentzVector describes momentum and energy:; Double_t xx =v.X();; ...; Double_t tt = v.T();; ; Double_t px = v.Px();; ...; Double_t ee = v.E();; double; v@ vDefinition rootcling_impl.cxx:3699; ttauto * ttDefinition textangle.C:16; The components of TLorentzVector can also accessed by index:; xx = v(0); or xx = v[0];; yy = v(1); yy = v[1];; zz = v(2); zz = v[2];; tt = v(3); tt = v[3];; You can use the Vect() member function to get the vector component of TLorentzVector:; TVector3 p = v.Vect();; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; For setting components also two sets of member functions can be used:; v.SetX(1.); or v.SetPx(1.);; ... ...; v.SetT(1.); v.SetE(1.);; To set more the one component by one call you can use the SetVect() function for the TVector3 part or SetXYZT(), SetPxPyPzE(). For convenience there is; also a SetXYZM():; v.SetVect(TVector3(1,2,3));; v.SetXYZT(x,y,z,t",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:5194,Energy Efficiency,energy,energy,5194,"nsvers component with; // respect to another vector; pp2v2 = v.Perp(v1);; for convenience there are two more set functions SetPtEtaPhiE(pt,eta,phi,e); and SetPtEtaPhiM(pt,eta,phi,m);. Arithmetic and comparison operators; The TLorentzVector class provides operators to add, subtract or compare four-vectors:; v3 = -v1;; v1 = v2+v3;; v1+= v3;; v1 = v2 + v3;; v1-= v3;; ; if (v1 == v2) {...}; if(v1 != v3) {...}. Magnitude/Invariant mass, beta, gamma, scalar product; The scalar product of two four-vectors is calculated with the (-,-,-,+) metric,; i.e. s = v1*v2 = t1*t2-x1*x2-y1*y2-z1*z2 The magnitude squared mag2 of a four-vector is therefore:; mag2 = v*v = t*t-x*x-y*y-z*z; It mag2 is negative mag = -Sqrt(-mag*mag). The member functions are:; Double_t s, s2;; s = v1.Dot(v2); // scalar product; s = v1*v2; // scalar product; s2 = v.Mag2(); or s2 = v.M2();; s = v.Mag(); s = v.M();; Since in case of momentum and energy the magnitude has the meaning of invariant mass TLorentzVector provides the more meaningful aliases M2() and M(); The member functions Beta() and Gamma() returns beta and gamma = 1/Sqrt(1-beta*beta). . Lorentz boost; A boost in a general direction can be parameterised with three parameters which can be taken as the components of a three vector b = (bx,by,bz). With x = (x,y,z) and gamma = 1/Sqrt(1-beta*beta) (beta being the module of vector b), an arbitrary active Lorentz boost transformation (from the rod frame to the original frame) can be written as:; x = x' + (gamma-1)/(beta*beta) * (b*x') * b + gamma * t' * b; t = gamma (t'+ b*x').; b#define b(i)Definition RSha256.hxx:100; The member function Boost() performs a boost transformation from the rod frame to the original frame. BoostVector() returns a TVector3 of the spatial components divided by the time component:; TVector3 b;; v.Boost(bx,by,bz);; v.Boost(b);; b = v.BoostVector(); // b=(x/t,y/t,z/t). Rotations; There are four sets of functions to rotate the TVector3 component of a TLorentzVector:; rotation arou",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:7535,Energy Efficiency,adapt,adapt,7535," be a unit TVector3; by TRotation (see TRotation); TRotation r;; v.Transform(r); or v *= r; // Attention v=M*v; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TRotation<div class=""legacybox""><h2>Legacy Code</h2> TRotation is a legacy interface: there will be no bug fix...Definition TRotation.h:20. Misc; Angle between two vectors; Double_t a = v1.Angle(v2.Vect()); // get angle between v1 and v2; a#define a(i)Definition RSha256.hxx:99; Light-cone components; Member functions Plus() and Minus() return the positive and negative light-cone components:; Double_t pcone = v.Plus();; Double_t mcone = v.Minus();; CAVEAT: The values returned are T{+,-}Z. It is known that some authors find it easier to define these components as (T{+,-}Z)/sqrt(2). Thus check what definition is used in the physics you're working in and adapt your code accordingly.; Transformation by TLorentzRotation; A general Lorentz transformation see class TLorentzRotation can be used by the Transform() member function, the *= or operator of the TLorentzRotation class:; TLorentzRotation l;; v.Transform(l);; v = l*v; or v *= l; // Attention v = l*v; TLorentzRotation<div class=""legacybox""><h2>Legacy Code</h2> TLorentzRotation is a legacy interface: there will be no ...Definition TLorentzRotation.h:20; lTLine lDefinition textangle.C:4. Definition at line 31 of file TLorentzVector.h. Public Types; enum  { ;   kX =0; , kY =1; , kZ =2; , kT =3; , ;   kNUM_COORDINATES =4; , kSIZE =kNUM_COORDINATES. };  ; typedef Double_t Scalar;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( ",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:6951,Integrability,interface,interface,6951,"oost transformation from the rod frame to the original frame. BoostVector() returns a TVector3 of the spatial components divided by the time component:; TVector3 b;; v.Boost(bx,by,bz);; v.Boost(b);; b = v.BoostVector(); // b=(x/t,y/t,z/t). Rotations; There are four sets of functions to rotate the TVector3 component of a TLorentzVector:; rotation around axes; v.RotateX(TMath::Pi()/2.);; v.RotateY(.5);; v.RotateZ(.99);; rotation around an arbitrary axis; v.Rotate(TMath::Pi()/4., v1); // rotation around v1; transformation from rotated frame; v.RotateUz(direction); // direction must be a unit TVector3; by TRotation (see TRotation); TRotation r;; v.Transform(r); or v *= r; // Attention v=M*v; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TRotation<div class=""legacybox""><h2>Legacy Code</h2> TRotation is a legacy interface: there will be no bug fix...Definition TRotation.h:20. Misc; Angle between two vectors; Double_t a = v1.Angle(v2.Vect()); // get angle between v1 and v2; a#define a(i)Definition RSha256.hxx:99; Light-cone components; Member functions Plus() and Minus() return the positive and negative light-cone components:; Double_t pcone = v.Plus();; Double_t mcone = v.Minus();; CAVEAT: The values returned are T{+,-}Z. It is known that some authors find it easier to define these components as (T{+,-}Z)/sqrt(2). Thus check what definition is used in the physics you're working in and adapt your code accordingly.; Transformation by TLorentzRotation; A general Lorentz transformation see class TLorentzRotation can be used by the Transform() member function, the *= or operator of the TLorentzRotation class:; TLorentzRotation l;; v.Transform(l);; v = l*v; or v *= l; // Attention v = l*v; TLorentzRotation<div class=""legacybox""><h2>Legacy Code</h2> TLorentzRotation is a legac",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:7929,Integrability,interface,interface,7929,":168; TRotation<div class=""legacybox""><h2>Legacy Code</h2> TRotation is a legacy interface: there will be no bug fix...Definition TRotation.h:20. Misc; Angle between two vectors; Double_t a = v1.Angle(v2.Vect()); // get angle between v1 and v2; a#define a(i)Definition RSha256.hxx:99; Light-cone components; Member functions Plus() and Minus() return the positive and negative light-cone components:; Double_t pcone = v.Plus();; Double_t mcone = v.Minus();; CAVEAT: The values returned are T{+,-}Z. It is known that some authors find it easier to define these components as (T{+,-}Z)/sqrt(2). Thus check what definition is used in the physics you're working in and adapt your code accordingly.; Transformation by TLorentzRotation; A general Lorentz transformation see class TLorentzRotation can be used by the Transform() member function, the *= or operator of the TLorentzRotation class:; TLorentzRotation l;; v.Transform(l);; v = l*v; or v *= l; // Attention v = l*v; TLorentzRotation<div class=""legacybox""><h2>Legacy Code</h2> TLorentzRotation is a legacy interface: there will be no ...Definition TLorentzRotation.h:20; lTLine lDefinition textangle.C:4. Definition at line 31 of file TLorentzVector.h. Public Types; enum  { ;   kX =0; , kY =1; , kZ =2; , kT =3; , ;   kNUM_COORDINATES =4; , kSIZE =kNUM_COORDINATES. };  ; typedef Double_t Scalar;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Me",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:15030,Integrability,message,message,15030,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:15571,Integrability,message,message,15571,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:16773,Integrability,message,message,16773,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:20014,Integrability,message,message,20014,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:20387,Integrability,message,message,20387," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Priva",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:1544,Modifiability,variab,variable,1544,"ions of the ROOT::Math::LorentzVector template which offer superior runtime performance, i.e.:; ROOT::Math::PtEtaPhiMVector based on pt (rho),eta,phi and M (t) coordinates in double precision; ROOT::Math::PtEtaPhiEVector based on pt (rho),eta,phi and E (t) coordinates in double precision; ROOT::Math::PxPyPzMVector based on px,py,pz and M (mass) coordinates in double precision; ROOT::Math::PxPyPzEVector based on px,py,pz and E (energy) coordinates in double precision; ROOT::Math::XYZTVector based on x,y,z,t coordinates (cartesian) in double precision (same as PxPyPzEVector); ROOT::Math::XYZTVectorF based on x,y,z,t coordinates (cartesian) in float precision (same as PxPyPzEVector but float). More details can be found in the documentation of the Physics Vectors package. . Description; TLorentzVector is a general four-vector class, which can be used either for the description of position and time (x,y,z,t) or momentum and energy (px,py,pz,E). Declaration; TLorentzVector has been implemented as a set a TVector3 and a Double_t variable. By default all components are initialized by zero.; TLorentzVector v1; // initialized by (0., 0., 0., 0.); TLorentzVector v2(1., 1., 1., 1.);; TLorentzVector v3(v1);; TLorentzVector v4(TVector3(1., 2., 3.),4.);; TLorentzVectorDefinition TLorentzVector.h:31; TVector3Definition TVector3.h:22; v2@ v2Definition rootcling_impl.cxx:3702; v4@ v4Definition rootcling_impl.cxx:3704; v3@ v3Definition rootcling_impl.cxx:3703; v1@ v1Definition rootcling_impl.cxx:3701; For backward compatibility there are two constructors from an Double_t and Float_t C array. Access to the components; There are two sets of access functions to the components of a LorentzVector: X(), Y(), Z(), T() and Px(), Py(), Pz() and E(). Both sets return the same values but the first set is more relevant for use where TLorentzVector describes a combination of position and time and the second set is more relevant where TLorentzVector describes momentum and energy:; Double_t xx =v.X(",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:7535,Modifiability,adapt,adapt,7535," be a unit TVector3; by TRotation (see TRotation); TRotation r;; v.Transform(r); or v *= r; // Attention v=M*v; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TRotation<div class=""legacybox""><h2>Legacy Code</h2> TRotation is a legacy interface: there will be no bug fix...Definition TRotation.h:20. Misc; Angle between two vectors; Double_t a = v1.Angle(v2.Vect()); // get angle between v1 and v2; a#define a(i)Definition RSha256.hxx:99; Light-cone components; Member functions Plus() and Minus() return the positive and negative light-cone components:; Double_t pcone = v.Plus();; Double_t mcone = v.Minus();; CAVEAT: The values returned are T{+,-}Z. It is known that some authors find it easier to define these components as (T{+,-}Z)/sqrt(2). Thus check what definition is used in the physics you're working in and adapt your code accordingly.; Transformation by TLorentzRotation; A general Lorentz transformation see class TLorentzRotation can be used by the Transform() member function, the *= or operator of the TLorentzRotation class:; TLorentzRotation l;; v.Transform(l);; v = l*v; or v *= l; // Attention v = l*v; TLorentzRotation<div class=""legacybox""><h2>Legacy Code</h2> TLorentzRotation is a legacy interface: there will be no ...Definition TLorentzRotation.h:20; lTLine lDefinition textangle.C:4. Definition at line 31 of file TLorentzVector.h. Public Types; enum  { ;   kX =0; , kY =1; , kZ =2; , kT =3; , ;   kNUM_COORDINATES =4; , kSIZE =kNUM_COORDINATES. };  ; typedef Double_t Scalar;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( ",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:8238,Modifiability,inherit,inherited,8238," Double_t mcone = v.Minus();; CAVEAT: The values returned are T{+,-}Z. It is known that some authors find it easier to define these components as (T{+,-}Z)/sqrt(2). Thus check what definition is used in the physics you're working in and adapt your code accordingly.; Transformation by TLorentzRotation; A general Lorentz transformation see class TLorentzRotation can be used by the Transform() member function, the *= or operator of the TLorentzRotation class:; TLorentzRotation l;; v.Transform(l);; v = l*v; or v *= l; // Attention v = l*v; TLorentzRotation<div class=""legacybox""><h2>Legacy Code</h2> TLorentzRotation is a legacy interface: there will be no ...Definition TLorentzRotation.h:20; lTLine lDefinition textangle.C:4. Definition at line 31 of file TLorentzVector.h. Public Types; enum  { ;   kX =0; , kY =1; , kZ =2; , kT =3; , ;   kNUM_COORDINATES =4; , kSIZE =kNUM_COORDINATES. };  ; typedef Double_t Scalar;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TLorentzVector ();  ;  TLorentzVector (const Double_t *carray);  ;  TLorentzVector (const Float_t *carray);  ;  TLorentzVector (const TLorentzVector &lorentzvector);  ;  TLorentzVector (const TVector3 &vector3, Double_t t);  ;  TLorentzVector (Double_t x, Double_t y, Double_t z, Double_t t);  ;  ~TLorentzVector () override;  ; Double_t Angle (const TVector3 &v) const;  ; Double_t Beta () const;  ; void Boost",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:13263,Modifiability,inherit,inherited,13263,", Double_t e);  ; void SetPtEtaPhiM (Double_t pt, Double_t eta, Double_t phi, Double_t m);  ; void SetPx (Double_t a);  ; void SetPxPyPzE (Double_t px, Double_t py, Double_t pz, Double_t e);  ; void SetPy (Double_t a);  ; void SetPz (Double_t a);  ; void SetRho (Double_t rho);  ; void SetT (Double_t a);  ; void SetTheta (Double_t theta);  ; void SetVect (const TVector3 &vect3);  ; void SetVectM (const TVector3 &spatial, Double_t mass);  ; void SetVectMag (const TVector3 &spatial, Double_t magnitude);  ; void SetX (Double_t a);  ; void SetXYZM (Double_t x, Double_t y, Double_t z, Double_t m);  ; void SetXYZT (Double_t x, Double_t y, Double_t z, Double_t t);  ; void SetY (Double_t a);  ; void SetZ (Double_t a);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Double_t T () const;  ; Double_t Theta () const;  ; TLorentzVector & Transform (const TLorentzRotation &);  ; TLorentzVector & Transform (const TRotation &);  ; TVector3 Vect () const;  ; Double_t X () const;  ; Double_t Y () const;  ; Double_t Z () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const ",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:14660,Modifiability,inherit,inheritance,14660,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:16871,Modifiability,inherit,inherits,16871,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:16988,Modifiability,inherit,inherits,16988,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:20888,Modifiability,inherit,inherited,20888,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t fE;  ; TVector3 fP;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TLorentzVector.h>. Inheritance diagram for TLorentzVector:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Oper",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:21473,Modifiability,inherit,inherited,21473,"tr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t fE;  ; TVector3 fP;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TLorentzVector.h>. Inheritance diagram for TLorentzVector:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Scalar. typedef Double_t TLorentzVector::Scalar. Definition at line 40 of file TLorentzVector.h. Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkX ; kY ; kZ ; kT ; kNUM_COORDINATES ; kSIZE . Definition at line 42 of file TLorentzVector.h. Constructor & Destructor Documentation. ◆ TLorentzVector() [1/6]. TLorentzVector::TLorentzVector ; (; ). inline . Definition at line 608 of file TLorentzVector.h. ◆ TLorentzVector() [2/6]. TLorentzVector::TLorentzVector ; (; Double_t ; x, . Double_t ; y, . Double_t ; z, . Double_t ; t . ). inline . Definition at line 611 of file TLorentzVector.h. ◆ TL",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:21572,Modifiability,inherit,inherited,21572,"tr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t fE;  ; TVector3 fP;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TLorentzVector.h>. Inheritance diagram for TLorentzVector:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Scalar. typedef Double_t TLorentzVector::Scalar. Definition at line 40 of file TLorentzVector.h. Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkX ; kY ; kZ ; kT ; kNUM_COORDINATES ; kSIZE . Definition at line 42 of file TLorentzVector.h. Constructor & Destructor Documentation. ◆ TLorentzVector() [1/6]. TLorentzVector::TLorentzVector ; (; ). inline . Definition at line 608 of file TLorentzVector.h. ◆ TLorentzVector() [2/6]. TLorentzVector::TLorentzVector ; (; Double_t ; x, . Double_t ; y, . Double_t ; z, . Double_t ; t . ). inline . Definition at line 611 of file TLorentzVector.h. ◆ TL",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:582,Performance,perform,performance,582,". ROOT: TLorentzVector Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TLorentzVector Class ReferenceMath » Legacy Physics Classes. ; AttentionTLorentzVector is a legacy class. It is slower and worse for serialization than the recommended superior alternative ROOT::Math::LorentzVector. ROOT provides specialisations of the ROOT::Math::LorentzVector template which offer superior runtime performance, i.e.:; ROOT::Math::PtEtaPhiMVector based on pt (rho),eta,phi and M (t) coordinates in double precision; ROOT::Math::PtEtaPhiEVector based on pt (rho),eta,phi and E (t) coordinates in double precision; ROOT::Math::PxPyPzMVector based on px,py,pz and M (mass) coordinates in double precision; ROOT::Math::PxPyPzEVector based on px,py,pz and E (energy) coordinates in double precision; ROOT::Math::XYZTVector based on x,y,z,t coordinates (cartesian) in double precision (same as PxPyPzEVector); ROOT::Math::XYZTVectorF based on x,y,z,t coordinates (cartesian) in float precision (same as PxPyPzEVector but float). More details can be found in the documentation of the Physics Vectors package. . Description; TLorentzVector is a general four-vector class, which can be used either for the description of position and time (x,y,z,t) or momentum and energy (px,py,pz,E). Declaration; TLorentzVector has been implemented as a set a TVector3 and a Double_t variable. By default all components are initialized by zero.; TLorentzVector v1; // initialized by (0., 0., 0., 0.); TLorentzVector v2(1., 1., 1., 1.);; TLorentzVector v3(v1);; TLorentzVector v4(TVector3(1., 2., 3.),4.);; TLorentzVectorDefinition TLorentzVector.h:31; TVector3Definition TVector3.h:22; v2@ v2Definition rootcling_impl.cxx:3702; v4@ v4Definition rootcling_impl.cxx:3704; v3@ v3Definition rootcling_impl.cxx:3703; v1@ v1Definition rootcling_im",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:5915,Performance,perform,performs,5915,"*v = t*t-x*x-y*y-z*z; It mag2 is negative mag = -Sqrt(-mag*mag). The member functions are:; Double_t s, s2;; s = v1.Dot(v2); // scalar product; s = v1*v2; // scalar product; s2 = v.Mag2(); or s2 = v.M2();; s = v.Mag(); s = v.M();; Since in case of momentum and energy the magnitude has the meaning of invariant mass TLorentzVector provides the more meaningful aliases M2() and M(); The member functions Beta() and Gamma() returns beta and gamma = 1/Sqrt(1-beta*beta). . Lorentz boost; A boost in a general direction can be parameterised with three parameters which can be taken as the components of a three vector b = (bx,by,bz). With x = (x,y,z) and gamma = 1/Sqrt(1-beta*beta) (beta being the module of vector b), an arbitrary active Lorentz boost transformation (from the rod frame to the original frame) can be written as:; x = x' + (gamma-1)/(beta*beta) * (b*x') * b + gamma * t' * b; t = gamma (t'+ b*x').; b#define b(i)Definition RSha256.hxx:100; The member function Boost() performs a boost transformation from the rod frame to the original frame. BoostVector() returns a TVector3 of the spatial components divided by the time component:; TVector3 b;; v.Boost(bx,by,bz);; v.Boost(b);; b = v.BoostVector(); // b=(x/t,y/t,z/t). Rotations; There are four sets of functions to rotate the TVector3 component of a TLorentzVector:; rotation around axes; v.RotateX(TMath::Pi()/2.);; v.RotateY(.5);; v.RotateZ(.99);; rotation around an arbitrary axis; v.Rotate(TMath::Pi()/4., v1); // rotation around v1; transformation from rotated frame; v.RotateUz(direction); // direction must be a unit TVector3; by TRotation (see TRotation); TRotation r;; v.Transform(r); or v *= r; // Attention v=M*v; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TRotation<div class=""legacybox""><h2>Legacy Code</h2> TRot",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:2154,Security,access,access,2154,"xPyPzEVector but float). More details can be found in the documentation of the Physics Vectors package. . Description; TLorentzVector is a general four-vector class, which can be used either for the description of position and time (x,y,z,t) or momentum and energy (px,py,pz,E). Declaration; TLorentzVector has been implemented as a set a TVector3 and a Double_t variable. By default all components are initialized by zero.; TLorentzVector v1; // initialized by (0., 0., 0., 0.); TLorentzVector v2(1., 1., 1., 1.);; TLorentzVector v3(v1);; TLorentzVector v4(TVector3(1., 2., 3.),4.);; TLorentzVectorDefinition TLorentzVector.h:31; TVector3Definition TVector3.h:22; v2@ v2Definition rootcling_impl.cxx:3702; v4@ v4Definition rootcling_impl.cxx:3704; v3@ v3Definition rootcling_impl.cxx:3703; v1@ v1Definition rootcling_impl.cxx:3701; For backward compatibility there are two constructors from an Double_t and Float_t C array. Access to the components; There are two sets of access functions to the components of a LorentzVector: X(), Y(), Z(), T() and Px(), Py(), Pz() and E(). Both sets return the same values but the first set is more relevant for use where TLorentzVector describes a combination of position and time and the second set is more relevant where TLorentzVector describes momentum and energy:; Double_t xx =v.X();; ...; Double_t tt = v.T();; ; Double_t px = v.Px();; ...; Double_t ee = v.E();; double; v@ vDefinition rootcling_impl.cxx:3699; ttauto * ttDefinition textangle.C:16; The components of TLorentzVector can also accessed by index:; xx = v(0); or xx = v[0];; yy = v(1); yy = v[1];; zz = v(2); zz = v[2];; tt = v(3); tt = v[3];; You can use the Vect() member function to get the vector component of TLorentzVector:; TVector3 p = v.Vect();; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; For setting components also two sets of member functions can be used:; v.SetX(1.); or v.SetPx(1.);; ... ...; v.SetT(1.); v.SetE(1.);; To set more the on",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:2717,Security,access,accessed,2717,"ctor.h:31; TVector3Definition TVector3.h:22; v2@ v2Definition rootcling_impl.cxx:3702; v4@ v4Definition rootcling_impl.cxx:3704; v3@ v3Definition rootcling_impl.cxx:3703; v1@ v1Definition rootcling_impl.cxx:3701; For backward compatibility there are two constructors from an Double_t and Float_t C array. Access to the components; There are two sets of access functions to the components of a LorentzVector: X(), Y(), Z(), T() and Px(), Py(), Pz() and E(). Both sets return the same values but the first set is more relevant for use where TLorentzVector describes a combination of position and time and the second set is more relevant where TLorentzVector describes momentum and energy:; Double_t xx =v.X();; ...; Double_t tt = v.T();; ; Double_t px = v.Px();; ...; Double_t ee = v.E();; double; v@ vDefinition rootcling_impl.cxx:3699; ttauto * ttDefinition textangle.C:16; The components of TLorentzVector can also accessed by index:; xx = v(0); or xx = v[0];; yy = v(1); yy = v[1];; zz = v(2); zz = v[2];; tt = v(3); tt = v[3];; You can use the Vect() member function to get the vector component of TLorentzVector:; TVector3 p = v.Vect();; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; For setting components also two sets of member functions can be used:; v.SetX(1.); or v.SetPx(1.);; ... ...; v.SetT(1.); v.SetE(1.);; To set more the one component by one call you can use the SetVect() function for the TVector3 part or SetXYZT(), SetPxPyPzE(). For convenience there is; also a SetXYZM():; v.SetVect(TVector3(1,2,3));; v.SetXYZT(x,y,z,t);; v.SetPxPyPzE(px,py,pz,e);; v.SetXYZM(x,y,z,m); // -> v=(x,y,z,e=Sqrt(x*x+y*y+z*z+m*m)); e#define e(i)Definition RSha256.hxx:103; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; mTMarker mDefinition textangle.C:8. Vector components in non-cartesian coordinate systems; There are a couple of member functions to get and set the TVector3 part of the parameters in spherical coordinate syste",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTLorentzVector.html:16502,Security,hash,hash,16502," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTLorentzVector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTLorentzVector.html
https://root.cern/doc/master/classTMacOSXSystem.html:2308,Availability,error,error,2308,"ist of system timers. ;  ; int AnnounceTcpService (int port, Bool_t reuse, int backlog, int tcpwindowsize=-1) override;  Announce TCP/IP service. ;  ; int AnnounceUdpService (int port, int backlog) override;  Announce UDP service. ;  ; int AnnounceUnixService (const char *sockpath, int backlog) override;  Announce unix domain service on path 'sockpath'. ;  ; int AnnounceUnixService (int port, int backlog) override;  Announce unix domain service on path ""kServerPath/<port>"". ;  ; Bool_t ChangeDirectory (const char *path) override;  Change directory. Returns kTRUE in case of success, kFALSE otherwise. ;  ; void CheckChilds ();  Check if children have finished. ;  ; Bool_t CheckDescriptors ();  Check if there is activity on some file descriptors and call their Notify() member. ;  ; Bool_t CheckSignals (Bool_t sync);  Check if some signals were raised and call their Notify() member. ;  ; int Chmod (const char *file, UInt_t mode) override;  Set the file permission bits. Returns -1 in case or error, 0 otherwise. ;  ; void CloseConnection (int sock, Bool_t force=kFALSE) override;  Close socket. ;  ; void Closelog () override;  Close connection to system log daemon. ;  ; int ClosePipe (FILE *pipe) override;  Close the pipe. ;  ; int ConnectService (const char *server, int port, int tcpwindowsize, const char *protocol=""tcp"");  Connect to service servicename on server servername. ;  ; int CopyFile (const char *from, const char *to, Bool_t overwrite=kFALSE) override;  Copy a file. ;  ; void DispatchOneEvent (Bool_t pendingOnly=kFALSE) override;  Dispatch a single event. ;  ; void DispatchSignals (ESignals sig);  Handle and dispatch signals. ;  ; Bool_t DispatchTimers (Bool_t mode);  Handle and dispatch timers. ;  ; Func_t DynFindSymbol (const char *module, const char *entry) override;  dynamic linking of module ;  ; Int_t Exec (const char *shellcmd) override;  Execute a command. ;  ; void Exit (int code, Bool_t mode=kTRUE) override;  Exit the application. ;  ; char * ExpandPat",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:4287,Availability,error,error,4287,"ute a command. ;  ; void Exit (int code, Bool_t mode=kTRUE) override;  Exit the application. ;  ; char * ExpandPathName (const char *path) override;  Expand a pathname getting rid of special shell characaters like ~. ;  ; Bool_t ExpandPathName (TString &patbuf) override;  Expand a pathname getting rid of special shell characters like ~. ;  ; const char * FindDynamicLibrary (TString &lib, Bool_t quiet=kFALSE) override;  Returns the path of a shared library (searches for library in the shared library search path). ;  ; const char * FindFile (const char *search, TString &file, EAccessMode mode=kFileExists) override;  Find location of file ""wfil"" in a search path. ;  ; void FreeDirectory (void *dirp) override;  Close a Unix file system directory. ;  ; int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const override;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; Int_t GetCryptoRandom (void *buf, Int_t len) override;  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; const char * GetDirEntry (void *dirp) override;  Get next Unix file system directory entry. Returns 0 if no more entries. ;  ; const char * GetDynamicPath () override;  Return the dynamic path (used to find shared libraries). ;  ; Int_t GetEffectiveGid () override;  Returns the effective group id. ;  ; Int_t GetEffectiveUid () override;  Returns the effective user id. ;  ; const char * Getenv (const char *name) override;  Get environment variable. ;  ; const char * GetError () override;  Return system error string. ;  ; Int_t GetFPEMask () override;  Return the bitmap of conditions that trigger a floating point exception. ;  ; int GetFsInfo (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree) override;  Get info about a file system: id, bsize, bfree, blocks. ;  ; Int_t GetGid (const char *group=nullptr) override;  Returns the group's id. If group = 0, retur",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:4806,Availability,error,error,4806," mode=kFileExists) override;  Find location of file ""wfil"" in a search path. ;  ; void FreeDirectory (void *dirp) override;  Close a Unix file system directory. ;  ; int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const override;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; Int_t GetCryptoRandom (void *buf, Int_t len) override;  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; const char * GetDirEntry (void *dirp) override;  Get next Unix file system directory entry. Returns 0 if no more entries. ;  ; const char * GetDynamicPath () override;  Return the dynamic path (used to find shared libraries). ;  ; Int_t GetEffectiveGid () override;  Returns the effective group id. ;  ; Int_t GetEffectiveUid () override;  Returns the effective user id. ;  ; const char * Getenv (const char *name) override;  Get environment variable. ;  ; const char * GetError () override;  Return system error string. ;  ; Int_t GetFPEMask () override;  Return the bitmap of conditions that trigger a floating point exception. ;  ; int GetFsInfo (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree) override;  Get info about a file system: id, bsize, bfree, blocks. ;  ; Int_t GetGid (const char *group=nullptr) override;  Returns the group's id. If group = 0, returns current user's group. ;  ; UserGroup_t * GetGroupInfo (const char *group=nullptr) override;  Returns all group info in the UserGroup_t structure. ;  ; UserGroup_t * GetGroupInfo (Int_t gid) override;  Returns all group info in the UserGroup_t structure. ;  ; std::string GetHomeDirectory (const char *userName=nullptr) const override;  Return the user's home directory. ;  ; TInetAddress GetHostByName (const char *server) override;  Get Internet Protocol (IP) address of host. ;  ; int GetMemInfo (MemInfo_t *info) const override;  Returns ram and swap memory usage info into the MemInfo_t",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:9748,Availability,failure,failure,9748,"t char *mode) override;  Open a pipe. ;  ; const char * PrependPathName (const char *dir, TString &name) override;  Concatenate a directory and a file name. ;  ; int RecvBuf (int sock, void *buffer, int length) override;  Receive a buffer headed by a length indicator. ;  ; int RecvRaw (int sock, void *buffer, int length, int flag) override;  Receive exactly length bytes into buffer. ;  ; Int_t RedirectOutput (const char *name, const char *mode=""a"", RedirectHandle_t *h=nullptr) override;  Redirect standard output (stdout, stderr) to the specified file. ;  ; TFileHandler * RemoveFileHandler (TFileHandler *fh) override;  Remove a file handler from the list of file handlers. ;  ; TSignalHandler * RemoveSignalHandler (TSignalHandler *sh) override;  Remove a signal handler from list of signal handlers. ;  ; TTimer * RemoveTimer (TTimer *ti) override;  Remove timer from list of system timers. ;  ; int Rename (const char *from, const char *to) override;  Rename a file. Returns 0 when successful, -1 in case of failure. ;  ; void ResetSignal (ESignals sig, Bool_t reset=kTRUE) override;  If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ;  ; void ResetSignals () override;  Reset signals handlers to previous behaviour. ;  ; void ResetTimer (TTimer *ti) override;  Reset a-sync timer. ;  ; Int_t Select (TFileHandler *fh, Long_t timeout) override;  Select on the file descriptor related to file handler h. ;  ; Int_t Select (TList *active, Long_t timeout) override;  Select on file descriptors. ;  ; int SendBuf (int sock, const void *buffer, int length) override;  Send a buffer headed by a length indicator. ;  ; int SendRaw (int sock, const void *buffer, int length, int flag) override;  Send exactly length bytes from buffer. ;  ; void SetDisplay () override;  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; void SetDynamicPath (const char *lib) override;  Set the dynamic path to a new v",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:10858,Availability,mask,mask,10858,"ignal to the default handler, else restore previous behaviour. ;  ; void ResetSignals () override;  Reset signals handlers to previous behaviour. ;  ; void ResetTimer (TTimer *ti) override;  Reset a-sync timer. ;  ; Int_t Select (TFileHandler *fh, Long_t timeout) override;  Select on the file descriptor related to file handler h. ;  ; Int_t Select (TList *active, Long_t timeout) override;  Select on file descriptors. ;  ; int SendBuf (int sock, const void *buffer, int length) override;  Send a buffer headed by a length indicator. ;  ; int SendRaw (int sock, const void *buffer, int length, int flag) override;  Send exactly length bytes from buffer. ;  ; void SetDisplay () override;  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; void SetDynamicPath (const char *lib) override;  Set the dynamic path to a new value. ;  ; void Setenv (const char *name, const char *value) override;  Set environment variable. ;  ; Int_t SetFPEMask (Int_t mask=kDefaultMask) override;  Set which conditions trigger a floating point exception. ;  ; void SetProgname (const char *name) override;  Set the application name (from command line, argv[0]) and copy it in gProgName. ;  ; int SetSockOpt (int sock, int option, int val) override;  Set socket option. ;  ; void SigAlarmInterruptsSyscalls (Bool_t set) override;  When the argument is true the SIGALRM signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void Sleep (UInt_t milliSec) override;  Sleep milliSec milliseconds. ;  ; void StackTrace () override;  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Symlink (const char *from, const char *to) override;  Create a symlink from file1 to file2. ;  ; void Syslog (ELogLevel level, const char *mess) override;  Send mess to syslog daemon. ;  ; const char * TempDirectory () const override;  Return a user configure",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:12147,Availability,mask,mask,12147,"void SigAlarmInterruptsSyscalls (Bool_t set) override;  When the argument is true the SIGALRM signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void Sleep (UInt_t milliSec) override;  Sleep milliSec milliseconds. ;  ; void StackTrace () override;  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Symlink (const char *from, const char *to) override;  Create a symlink from file1 to file2. ;  ; void Syslog (ELogLevel level, const char *mess) override;  Send mess to syslog daemon. ;  ; const char * TempDirectory () const override;  Return a user configured or systemwide directory to create temporary files in. ;  ; FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr) override;  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; int Umask (Int_t mask) override;  Set the process file creation mode mask. ;  ; int Unlink (const char *name) override;  Unlink, i.e. ;  ; void Unload (const char *module) override;  Unload a shared library. ;  ; void Unsetenv (const char *name) override;  Unset environment variable. ;  ; int Utime (const char *file, Long_t modtime, Long_t actime) override;  Set a files modification and access times. ;  ; const char * WorkingDirectory () override;  Return working directory. ;  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:12199,Availability,mask,mask,12199,"void SigAlarmInterruptsSyscalls (Bool_t set) override;  When the argument is true the SIGALRM signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void Sleep (UInt_t milliSec) override;  Sleep milliSec milliseconds. ;  ; void StackTrace () override;  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Symlink (const char *from, const char *to) override;  Create a symlink from file1 to file2. ;  ; void Syslog (ELogLevel level, const char *mess) override;  Send mess to syslog daemon. ;  ; const char * TempDirectory () const override;  Return a user configured or systemwide directory to create temporary files in. ;  ; FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr) override;  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; int Umask (Int_t mask) override;  Set the process file creation mode mask. ;  ; int Unlink (const char *name) override;  Unlink, i.e. ;  ; void Unload (const char *module) override;  Unload a shared library. ;  ; void Unsetenv (const char *name) override;  Unset environment variable. ;  ; int Utime (const char *file, Long_t modtime, Long_t actime) override;  Set a files modification and access times. ;  ; const char * WorkingDirectory () override;  Return working directory. ;  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:18716,Availability,error,error,18716,"tory. ;  ; virtual Long_t NextTimeOut (Bool_t mode);  Time when next timer of mode (synchronous=kTRUE or asynchronous=kFALSE) will time-out (in ms). ;  ; virtual void NotifyApplicationCreated ();  Hook to tell TSystem that the TApplication object has been created. ;  ; virtual Bool_t ProcessEvents ();  Process pending events (GUI, timers, sockets). ;  ; const char * pwd ();  ; void RemoveOnExit (TObject *obj);  Objects that should be deleted on exit of the OS interface. ;  ; virtual TStdExceptionHandler * RemoveStdExceptionHandler (TStdExceptionHandler *eh);  Remove an exception handler from list of exception handlers. ;  ; virtual void Run ();  System event loop. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ;  ; virtual void SetLinkedLibs (const char *linkedLibs);  LinkedLibs should contain the library directory and list of libraries needed to recreate the current executable. ;  ; virtual void SetMakeExe (const char *directives);  D",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:23900,Availability,error,error,23900,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:23989,Availability,error,error,23989,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:24144,Availability,error,error,24144,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:24441,Availability,error,error,24441,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:28525,Availability,error,error,28525,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Member Functions;  TMacOSXSystem (const TMacOSXSystem &rhs);  ; void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ;  ClassDef (TMacOSXSystem, 0);  ; void InitializeCocoa ();  ; TMacOSXSystem & operator= (const TMacOSXSystem &rhs);  ; void ProcessApplicationDefinedEvent (void *",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:31187,Availability,error,error,31187,"num  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TUnixSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:31267,Availability,error,error,31267,"ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TUnixSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TUnixSystem; const char * GetLinkedLibraries () override;  Get list of shared libraries loaded ",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:33048,Availability,error,error,33048,";  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TUnixSystem; const char * GetLinkedLibraries () override;  Get list of shared libraries loaded at the start of the executable. ;  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TUnixSystem; static int UnixFilestat (const char *path, FileStat_t &buf);  Get info about a file. ;  ; static int UnixFSstat (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: id, bsize, bfree, blocks. ;  ; static const char * UnixGetdirentry (void *dir);  Returns the next directory entry. ;  ; static const char * UnixHomedirectory (const char *user, char *path, char *mydir);  Returns the user's home directory. ;  ; static const char * UnixHomedirectory (const char *user=nullptr);  Returns the user'",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:33166,Availability,error,error,33166,"unctions inherited from TUnixSystem; const char * GetLinkedLibraries () override;  Get list of shared libraries loaded at the start of the executable. ;  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TUnixSystem; static int UnixFilestat (const char *path, FileStat_t &buf);  Get info about a file. ;  ; static int UnixFSstat (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: id, bsize, bfree, blocks. ;  ; static const char * UnixGetdirentry (void *dir);  Returns the next directory entry. ;  ; static const char * UnixHomedirectory (const char *user, char *path, char *mydir);  Returns the user's home directory. ;  ; static const char * UnixHomedirectory (const char *user=nullptr);  Returns the user's home directory. ;  ; static void UnixIgnoreSignal (ESignals sig, Bool_t ignore);  If ignore is true ignore the",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:34873,Availability,mask,masks,34873," const char * UnixHomedirectory (const char *user, char *path, char *mydir);  Returns the user's home directory. ;  ; static const char * UnixHomedirectory (const char *user=nullptr);  Returns the user's home directory. ;  ; static void UnixIgnoreSignal (ESignals sig, Bool_t ignore);  If ignore is true ignore the specified signal, else restore previous behaviour. ;  ; static int UnixMakedir (const char *name);  Make a Unix file system directory. ;  ; static Long64_t UnixNow ();  Get current time in milliseconds since 0:00 Jan 1 1995. ;  ; static void * UnixOpendir (const char *name);  Open a directory. ;  ; static int UnixRecv (int sock, void *buf, int len, int flag);  Receive exactly length bytes into buffer. ;  ; static void UnixResetSignal (ESignals sig);  Restore old signal handler for specified signal. ;  ; static void UnixResetSignals ();  Restore old signal handlers. ;  ; static int UnixSelect (Int_t nfds, TFdSet *readready, TFdSet *writeready, Long_t timeout);  Wait for events on the file descriptors specified in the readready and writeready masks or for timeout (in milliseconds) to occur. ;  ; static int UnixSend (int sock, const void *buf, int len, int flag);  Send exactly length bytes from buffer. ;  ; static int UnixSetitimer (Long_t ms);  Set interval timer to time-out in ms milliseconds. ;  ; static void UnixSigAlarmInterruptsSyscalls (Bool_t set);  When the argument is true the SIGALRM signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; static void UnixSignal (ESignals sig, SigHandler_t h);  Set a signal handler for a signal. ;  ; static const char * UnixSigname (ESignals sig);  Return the signal name associated with a signal. ;  ; static int UnixTcpConnect (const char *hostname, int port, int tcpwindowsize);  Open a TCP/IP connection to server and connect to a service (i.e. ;  ; static int UnixTcpService (int port, Bool_t reuse, int backlog, int tcpwindowsize);  Open a socket, bind to it and start listening fo",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:36222,Availability,error,error,36222," true the SIGALRM signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; static void UnixSignal (ESignals sig, SigHandler_t h);  Set a signal handler for a signal. ;  ; static const char * UnixSigname (ESignals sig);  Return the signal name associated with a signal. ;  ; static int UnixTcpConnect (const char *hostname, int port, int tcpwindowsize);  Open a TCP/IP connection to server and connect to a service (i.e. ;  ; static int UnixTcpService (int port, Bool_t reuse, int backlog, int tcpwindowsize);  Open a socket, bind to it and start listening for TCP/IP connections on the port. ;  ; static int UnixUdpConnect (const char *hostname, int port);  Creates a UDP socket connection Is called via the TSocket constructor. ;  ; static int UnixUdpService (int port, int backlog);  Open a socket, bind to it and start listening for UDP connections on the port. ;  ; static int UnixUnixConnect (const char *path);  Connect to a Unix domain socket. Returns -1 in case of error. ;  ; static int UnixUnixConnect (int port);  Connect to a Unix domain socket. ;  ; static int UnixUnixService (const char *sockpath, int backlog);  Open a socket on path 'sockpath', bind to it and start listening for Unix domain connections to it. ;  ; static int UnixUnixService (int port, int backlog);  Open a socket, bind to it and start listening for Unix domain connections to it. ;  ; static int UnixWaitchild ();  Wait till child is finished. ;  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollecti",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:2628,Integrability,protocol,protocol,2628,"ce unix domain service on path 'sockpath'. ;  ; int AnnounceUnixService (int port, int backlog) override;  Announce unix domain service on path ""kServerPath/<port>"". ;  ; Bool_t ChangeDirectory (const char *path) override;  Change directory. Returns kTRUE in case of success, kFALSE otherwise. ;  ; void CheckChilds ();  Check if children have finished. ;  ; Bool_t CheckDescriptors ();  Check if there is activity on some file descriptors and call their Notify() member. ;  ; Bool_t CheckSignals (Bool_t sync);  Check if some signals were raised and call their Notify() member. ;  ; int Chmod (const char *file, UInt_t mode) override;  Set the file permission bits. Returns -1 in case or error, 0 otherwise. ;  ; void CloseConnection (int sock, Bool_t force=kFALSE) override;  Close socket. ;  ; void Closelog () override;  Close connection to system log daemon. ;  ; int ClosePipe (FILE *pipe) override;  Close the pipe. ;  ; int ConnectService (const char *server, int port, int tcpwindowsize, const char *protocol=""tcp"");  Connect to service servicename on server servername. ;  ; int CopyFile (const char *from, const char *to, Bool_t overwrite=kFALSE) override;  Copy a file. ;  ; void DispatchOneEvent (Bool_t pendingOnly=kFALSE) override;  Dispatch a single event. ;  ; void DispatchSignals (ESignals sig);  Handle and dispatch signals. ;  ; Bool_t DispatchTimers (Bool_t mode);  Handle and dispatch timers. ;  ; Func_t DynFindSymbol (const char *module, const char *entry) override;  dynamic linking of module ;  ; Int_t Exec (const char *shellcmd) override;  Execute a command. ;  ; void Exit (int code, Bool_t mode=kTRUE) override;  Exit the application. ;  ; char * ExpandPathName (const char *path) override;  Expand a pathname getting rid of special shell characaters like ~. ;  ; Bool_t ExpandPathName (TString &patbuf) override;  Expand a pathname getting rid of special shell characters like ~. ;  ; const char * FindDynamicLibrary (TString &lib, Bool_t quiet=kFALSE) override;  Retur",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:7521,Integrability,interface,interface,7521,"on, int *val) override;  Get socket option. ;  ; int GetSysInfo (SysInfo_t *info) const override;  Returns static system info, like OS type, CPU type, number of CPUs RAM size, etc into the SysInfo_t structure. ;  ; Int_t GetUid (const char *user=nullptr) override;  Returns the user's id. If user = 0, returns current user's id. ;  ; UserGroup_t * GetUserInfo (const char *user=nullptr) override;  Returns all user info in the UserGroup_t structure. ;  ; UserGroup_t * GetUserInfo (Int_t uid) override;  Returns all user info in the UserGroup_t structure. ;  ; std::string GetWorkingDirectory () const override;  Return working directory. ;  ; const char * HomeDirectory (const char *userName=nullptr) override;  Return the user's home directory. ;  ; const char * HostName () override;  Return the system's host name. ;  ; void IgnoreSignal (ESignals sig, Bool_t ignore=kTRUE) override;  If ignore is true ignore the specified signal, else restore previous behaviour. ;  ; Bool_t Init () override;  Initialize Unix system interface. ;  ; TClass * IsA () const override;  ; Bool_t IsPathLocal (const char *path) override;  Returns TRUE if the url in 'path' points to the local file system. ;  ; int Link (const char *from, const char *to) override;  Create a link from file1 to file2. ;  ; void ListLibraries (const char *regexp="""") override;  List all loaded shared libraries. ;  ; void ListSymbols (const char *module, const char *re="""") override;  List symbols in a shared library. ;  ; int Load (const char *module, const char *entry="""", Bool_t system=kFALSE) override;  Load a shared library. ;  ; int MakeDirectory (const char *name) override;  Make a Unix file system directory. ;  ; TTime Now () override;  Get current time in milliseconds since 0:00 Jan 1 1995. ;  ; int OpenConnection (const char *server, int port, int tcpwindowsize=-1, const char *protocol=""tcp"") override;  Open a connection to a service on a server. ;  ; void * OpenDirectory (const char *name) override;  Open a Unix fi",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:8358,Integrability,protocol,protocol,8358,"s sig, Bool_t ignore=kTRUE) override;  If ignore is true ignore the specified signal, else restore previous behaviour. ;  ; Bool_t Init () override;  Initialize Unix system interface. ;  ; TClass * IsA () const override;  ; Bool_t IsPathLocal (const char *path) override;  Returns TRUE if the url in 'path' points to the local file system. ;  ; int Link (const char *from, const char *to) override;  Create a link from file1 to file2. ;  ; void ListLibraries (const char *regexp="""") override;  List all loaded shared libraries. ;  ; void ListSymbols (const char *module, const char *re="""") override;  List symbols in a shared library. ;  ; int Load (const char *module, const char *entry="""", Bool_t system=kFALSE) override;  Load a shared library. ;  ; int MakeDirectory (const char *name) override;  Make a Unix file system directory. ;  ; TTime Now () override;  Get current time in milliseconds since 0:00 Jan 1 1995. ;  ; int OpenConnection (const char *server, int port, int tcpwindowsize=-1, const char *protocol=""tcp"") override;  Open a connection to a service on a server. ;  ; void * OpenDirectory (const char *name) override;  Open a Unix file system directory. Returns 0 if directory does not exist. ;  ; void Openlog (const char *name, Int_t options, ELogFacility facility) override;  Open connection to system log daemon. ;  ; FILE * OpenPipe (const char *shellcmd, const char *mode) override;  Open a pipe. ;  ; const char * PrependPathName (const char *dir, TString &name) override;  Concatenate a directory and a file name. ;  ; int RecvBuf (int sock, void *buffer, int length) override;  Receive a buffer headed by a length indicator. ;  ; int RecvRaw (int sock, void *buffer, int length, int flag) override;  Receive exactly length bytes into buffer. ;  ; Int_t RedirectOutput (const char *name, const char *mode=""a"", RedirectHandle_t *h=nullptr) override;  Redirect standard output (stdout, stderr) to the specified file. ;  ; TFileHandler * RemoveFileHandler (TFileHandler *fh) ov",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:12755,Integrability,interface,interface,12755,"e a symlink from file1 to file2. ;  ; void Syslog (ELogLevel level, const char *mess) override;  Send mess to syslog daemon. ;  ; const char * TempDirectory () const override;  Return a user configured or systemwide directory to create temporary files in. ;  ; FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr) override;  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; int Umask (Int_t mask) override;  Set the process file creation mode mask. ;  ; int Unlink (const char *name) override;  Unlink, i.e. ;  ; void Unload (const char *module) override;  Unload a shared library. ;  ; void Unsetenv (const char *name) override;  Unset environment variable. ;  ; int Utime (const char *file, Long_t modtime, Long_t actime) override;  Set a files modification and access times. ;  ; const char * WorkingDirectory () override;  Return working directory. ;  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ; virtual const char * BaseName (const char *pathname);  Base name of a file name. Base name of /user/root is root. ;  ; void Beep (Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE);  Beep for duration milliseconds with a tone of frequency freq. ;  ; Bool_t cd (const char *path);  ; virtual void CleanCompiledMacros ();  Remove the shared libs produced by the CompileMacro() function, together with their rootmaps, linkdefs, and pcms (and some more on Windows). ;  ; virtual int CompileMacro (const char *filenam",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:12807,Integrability,interface,interface,12807,"s to syslog daemon. ;  ; const char * TempDirectory () const override;  Return a user configured or systemwide directory to create temporary files in. ;  ; FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr) override;  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; int Umask (Int_t mask) override;  Set the process file creation mode mask. ;  ; int Unlink (const char *name) override;  Unlink, i.e. ;  ; void Unload (const char *module) override;  Unload a shared library. ;  ; void Unsetenv (const char *name) override;  Unset environment variable. ;  ; int Utime (const char *file, Long_t modtime, Long_t actime) override;  Set a files modification and access times. ;  ; const char * WorkingDirectory () override;  Return working directory. ;  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ; virtual const char * BaseName (const char *pathname);  Base name of a file name. Base name of /user/root is root. ;  ; void Beep (Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE);  Beep for duration milliseconds with a tone of frequency freq. ;  ; Bool_t cd (const char *path);  ; virtual void CleanCompiledMacros ();  Remove the shared libs produced by the CompileMacro() function, together with their rootmaps, linkdefs, and pcms (and some more on Windows). ;  ; virtual int CompileMacro (const char *filename, Option_t *opt="""", const char *library_name="""", const char *build_dir="""", UInt_t dirmode=0);  This met",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:18156,Integrability,interface,interface,18156,"tore previous behaviour. ;  ; Bool_t InControl () const;  ; virtual void InnerLoop ();  Inner event loop. ;  ; virtual Bool_t IsAbsoluteFileName (const char *dir);  Return true if dir is an absolute pathname. ;  ; virtual Bool_t IsFileInIncludePath (const char *name, char **fullpath=nullptr);  Return true if 'name' is a file that can be found in the ROOT include path or the current directory. ;  ; virtual UInt_t LoadAllLibraries ();  Load all libraries known to ROOT via the rootmap system. ;  ; virtual int mkdir (const char *name, Bool_t recursive=kFALSE);  Make a file system directory. ;  ; virtual Long_t NextTimeOut (Bool_t mode);  Time when next timer of mode (synchronous=kTRUE or asynchronous=kFALSE) will time-out (in ms). ;  ; virtual void NotifyApplicationCreated ();  Hook to tell TSystem that the TApplication object has been created. ;  ; virtual Bool_t ProcessEvents ();  Process pending events (GUI, timers, sockets). ;  ; const char * pwd ();  ; void RemoveOnExit (TObject *obj);  Objects that should be deleted on exit of the OS interface. ;  ; virtual TStdExceptionHandler * RemoveStdExceptionHandler (TStdExceptionHandler *eh);  Remove an exception handler from list of exception handlers. ;  ; virtual void Run ();  System event loop. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual void SetIncludePath (const char *incl",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:23906,Integrability,message,message,23906,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:24447,Integrability,message,message,24447,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:25437,Integrability,message,message,25437,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:28531,Integrability,message,message,28531,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Member Functions;  TMacOSXSystem (const TMacOSXSystem &rhs);  ; void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ;  ClassDef (TMacOSXSystem, 0);  ; void InitializeCocoa ();  ; TMacOSXSystem & operator= (const TMacOSXSystem &rhs);  ; void ProcessApplicationDefinedEvent (void *",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:28904,Integrability,message,message,28904," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Member Functions;  TMacOSXSystem (const TMacOSXSystem &rhs);  ; void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ;  ClassDef (TMacOSXSystem, 0);  ; void InitializeCocoa ();  ; TMacOSXSystem & operator= (const TMacOSXSystem &rhs);  ; void ProcessApplicationDefinedEvent (void *event);  ; bool ProcessPendingEvents ();  ; TFileHandler * RemoveFileHandler (TFileHandler *fh);  Remove a file handler from the list of file handlers. ;  ; void WaitEvents (Long_t nextto);  . Private Attributes; bool fCocoaInitialized;  ; bool fFirstDispatch;  ; std::unique_ptr< ROOT::MacOSX::Details::MacOSXSystem > fPimpl;  . Friends; class TGCocoa;  . Additional Inherit",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:33054,Integrability,message,message,33054,";  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TUnixSystem; const char * GetLinkedLibraries () override;  Get list of shared libraries loaded at the start of the executable. ;  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TUnixSystem; static int UnixFilestat (const char *path, FileStat_t &buf);  Get info about a file. ;  ; static int UnixFSstat (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: id, bsize, bfree, blocks. ;  ; static const char * UnixGetdirentry (void *dir);  Returns the next directory entry. ;  ; static const char * UnixHomedirectory (const char *user, char *path, char *mydir);  Returns the user's home directory. ;  ; static const char * UnixHomedirectory (const char *user=nullptr);  Returns the user'",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:33172,Integrability,message,message,33172,"unctions inherited from TUnixSystem; const char * GetLinkedLibraries () override;  Get list of shared libraries loaded at the start of the executable. ;  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TUnixSystem; static int UnixFilestat (const char *path, FileStat_t &buf);  Get info about a file. ;  ; static int UnixFSstat (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: id, bsize, bfree, blocks. ;  ; static const char * UnixGetdirentry (void *dir);  Returns the next directory entry. ;  ; static const char * UnixHomedirectory (const char *user, char *path, char *mydir);  Returns the user's home directory. ;  ; static const char * UnixHomedirectory (const char *user=nullptr);  Returns the user's home directory. ;  ; static void UnixIgnoreSignal (ESignals sig, Bool_t ignore);  If ignore is true ignore the",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:36828,Integrability,protocol,protocol,36828,"t, bind to it and start listening for TCP/IP connections on the port. ;  ; static int UnixUdpConnect (const char *hostname, int port);  Creates a UDP socket connection Is called via the TSocket constructor. ;  ; static int UnixUdpService (int port, int backlog);  Open a socket, bind to it and start listening for UDP connections on the port. ;  ; static int UnixUnixConnect (const char *path);  Connect to a Unix domain socket. Returns -1 in case of error. ;  ; static int UnixUnixConnect (int port);  Connect to a Unix domain socket. ;  ; static int UnixUnixService (const char *sockpath, int backlog);  Open a socket on path 'sockpath', bind to it and start listening for Unix domain connections to it. ;  ; static int UnixUnixService (int port, int backlog);  Open a socket, bind to it and start listening for Unix domain connections to it. ;  ; static int UnixWaitchild ();  Wait till child is finished. ;  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TString fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were ",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:538,Modifiability,inherit,inherited,538,". ROOT: TMacOSXSystem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TMacOSXSystem Class Reference. . Definition at line 39 of file TMacOSXSystem.h. Public Member Functions;  TMacOSXSystem ();  ;  ~TMacOSXSystem ();  ; bool CocoaInitialized () const;  ; void DispatchOneEvent (Bool_t pendingOnly);  Dispatch a single event. ;  ;  Public Member Functions inherited from TUnixSystem;  TUnixSystem ();  ; virtual ~TUnixSystem ();  Reset to original state. ;  ; void Abort (int code=0) override;  Abort the application. ;  ; int AcceptConnection (int sock) override;  Accept a connection. ;  ; Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists) override;  Returns FALSE if one can access a file using the specified access mode. ;  ; void AddDynamicPath (const char *lib) override;  Add a new directory to the dynamic path. ;  ; void AddFileHandler (TFileHandler *fh) override;  Add a file handler to the list of system file handlers. ;  ; void AddSignalHandler (TSignalHandler *sh) override;  Add a signal handler to list of system signal handlers. ;  ; void AddTimer (TTimer *ti) override;  Add timer to list of system timers. ;  ; int AnnounceTcpService (int port, Bool_t reuse, int backlog, int tcpwindowsize=-1) override;  Announce TCP/IP service. ;  ; int AnnounceUdpService (int port, int backlog) override;  Announce UDP service. ;  ; int AnnounceUnixService (const char *sockpath, int backlog) override;  Announce unix domain service on path 'sockpath'. ;  ; int AnnounceUnixService (int port, int backlog) override;  Announce unix domain service on path ""kServerPath/<port>"". ;  ; Bool_t ChangeDirectory (const char *path) override;  Change directory. Returns kTRUE in case of success, kFALSE otherwise. ;  ; void CheckChilds ();  Check if children have finished. ;  ; Bool_t CheckDescriptors",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:4741,Modifiability,variab,variable,4741," ;  ; const char * FindFile (const char *search, TString &file, EAccessMode mode=kFileExists) override;  Find location of file ""wfil"" in a search path. ;  ; void FreeDirectory (void *dirp) override;  Close a Unix file system directory. ;  ; int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const override;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; Int_t GetCryptoRandom (void *buf, Int_t len) override;  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; const char * GetDirEntry (void *dirp) override;  Get next Unix file system directory entry. Returns 0 if no more entries. ;  ; const char * GetDynamicPath () override;  Return the dynamic path (used to find shared libraries). ;  ; Int_t GetEffectiveGid () override;  Returns the effective group id. ;  ; Int_t GetEffectiveUid () override;  Returns the effective user id. ;  ; const char * Getenv (const char *name) override;  Get environment variable. ;  ; const char * GetError () override;  Return system error string. ;  ; Int_t GetFPEMask () override;  Return the bitmap of conditions that trigger a floating point exception. ;  ; int GetFsInfo (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree) override;  Get info about a file system: id, bsize, bfree, blocks. ;  ; Int_t GetGid (const char *group=nullptr) override;  Returns the group's id. If group = 0, returns current user's group. ;  ; UserGroup_t * GetGroupInfo (const char *group=nullptr) override;  Returns all group info in the UserGroup_t structure. ;  ; UserGroup_t * GetGroupInfo (Int_t gid) override;  Returns all group info in the UserGroup_t structure. ;  ; std::string GetHomeDirectory (const char *userName=nullptr) const override;  Return the user's home directory. ;  ; TInetAddress GetHostByName (const char *server) override;  Get Internet Protocol (IP) address of host. ;  ; int GetMemInfo (MemInfo_t *info)",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:10601,Modifiability,variab,variable,10601,"e;  Remove timer from list of system timers. ;  ; int Rename (const char *from, const char *to) override;  Rename a file. Returns 0 when successful, -1 in case of failure. ;  ; void ResetSignal (ESignals sig, Bool_t reset=kTRUE) override;  If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ;  ; void ResetSignals () override;  Reset signals handlers to previous behaviour. ;  ; void ResetTimer (TTimer *ti) override;  Reset a-sync timer. ;  ; Int_t Select (TFileHandler *fh, Long_t timeout) override;  Select on the file descriptor related to file handler h. ;  ; Int_t Select (TList *active, Long_t timeout) override;  Select on file descriptors. ;  ; int SendBuf (int sock, const void *buffer, int length) override;  Send a buffer headed by a length indicator. ;  ; int SendRaw (int sock, const void *buffer, int length, int flag) override;  Send exactly length bytes from buffer. ;  ; void SetDisplay () override;  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; void SetDynamicPath (const char *lib) override;  Set the dynamic path to a new value. ;  ; void Setenv (const char *name, const char *value) override;  Set environment variable. ;  ; Int_t SetFPEMask (Int_t mask=kDefaultMask) override;  Set which conditions trigger a floating point exception. ;  ; void SetProgname (const char *name) override;  Set the application name (from command line, argv[0]) and copy it in gProgName. ;  ; int SetSockOpt (int sock, int option, int val) override;  Set socket option. ;  ; void SigAlarmInterruptsSyscalls (Bool_t set) override;  When the argument is true the SIGALRM signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void Sleep (UInt_t milliSec) override;  Sleep milliSec milliseconds. ;  ; void StackTrace () override;  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuff",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:10819,Modifiability,variab,variable,10819,"ignals sig, Bool_t reset=kTRUE) override;  If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ;  ; void ResetSignals () override;  Reset signals handlers to previous behaviour. ;  ; void ResetTimer (TTimer *ti) override;  Reset a-sync timer. ;  ; Int_t Select (TFileHandler *fh, Long_t timeout) override;  Select on the file descriptor related to file handler h. ;  ; Int_t Select (TList *active, Long_t timeout) override;  Select on file descriptors. ;  ; int SendBuf (int sock, const void *buffer, int length) override;  Send a buffer headed by a length indicator. ;  ; int SendRaw (int sock, const void *buffer, int length, int flag) override;  Send exactly length bytes from buffer. ;  ; void SetDisplay () override;  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; void SetDynamicPath (const char *lib) override;  Set the dynamic path to a new value. ;  ; void Setenv (const char *name, const char *value) override;  Set environment variable. ;  ; Int_t SetFPEMask (Int_t mask=kDefaultMask) override;  Set which conditions trigger a floating point exception. ;  ; void SetProgname (const char *name) override;  Set the application name (from command line, argv[0]) and copy it in gProgName. ;  ; int SetSockOpt (int sock, int option, int val) override;  Set socket option. ;  ; void SigAlarmInterruptsSyscalls (Bool_t set) override;  When the argument is true the SIGALRM signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void Sleep (UInt_t milliSec) override;  Sleep milliSec milliseconds. ;  ; void StackTrace () override;  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Symlink (const char *from, const char *to) override;  Create a symlink from file1 to file2. ;  ; void Syslog (ELogLevel level, const char *mess) override; ",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:11877,Modifiability,config,configured,11877,") override;  Set which conditions trigger a floating point exception. ;  ; void SetProgname (const char *name) override;  Set the application name (from command line, argv[0]) and copy it in gProgName. ;  ; int SetSockOpt (int sock, int option, int val) override;  Set socket option. ;  ; void SigAlarmInterruptsSyscalls (Bool_t set) override;  When the argument is true the SIGALRM signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void Sleep (UInt_t milliSec) override;  Sleep milliSec milliseconds. ;  ; void StackTrace () override;  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Symlink (const char *from, const char *to) override;  Create a symlink from file1 to file2. ;  ; void Syslog (ELogLevel level, const char *mess) override;  Send mess to syslog daemon. ;  ; const char * TempDirectory () const override;  Return a user configured or systemwide directory to create temporary files in. ;  ; FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr) override;  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; int Umask (Int_t mask) override;  Set the process file creation mode mask. ;  ; int Unlink (const char *name) override;  Unlink, i.e. ;  ; void Unload (const char *module) override;  Unload a shared library. ;  ; void Unsetenv (const char *name) override;  Unset environment variable. ;  ; int Utime (const char *file, Long_t modtime, Long_t actime) override;  Set a files modification and access times. ;  ; const char * WorkingDirectory () override;  Return working directory. ;  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void AddIncludePath (const char *includePath)",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:12405,Modifiability,variab,variable,12405,"Sec) override;  Sleep milliSec milliseconds. ;  ; void StackTrace () override;  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Symlink (const char *from, const char *to) override;  Create a symlink from file1 to file2. ;  ; void Syslog (ELogLevel level, const char *mess) override;  Send mess to syslog daemon. ;  ; const char * TempDirectory () const override;  Return a user configured or systemwide directory to create temporary files in. ;  ; FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr) override;  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; int Umask (Int_t mask) override;  Set the process file creation mode mask. ;  ; int Unlink (const char *name) override;  Unlink, i.e. ;  ; void Unload (const char *module) override;  Unload a shared library. ;  ; void Unsetenv (const char *name) override;  Unset environment variable. ;  ; int Utime (const char *file, Long_t modtime, Long_t actime) override;  Set a files modification and access times. ;  ; const char * WorkingDirectory () override;  Return working directory. ;  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ; virtual const char * BaseName (const char *pathname);  Base name of a file name. Base name of /user/root is root. ;  ; void Beep (Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE);  Beep for duration ",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:12639,Modifiability,inherit,inherited,12639,"e a symlink from file1 to file2. ;  ; void Syslog (ELogLevel level, const char *mess) override;  Send mess to syslog daemon. ;  ; const char * TempDirectory () const override;  Return a user configured or systemwide directory to create temporary files in. ;  ; FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr) override;  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; int Umask (Int_t mask) override;  Set the process file creation mode mask. ;  ; int Unlink (const char *name) override;  Unlink, i.e. ;  ; void Unload (const char *module) override;  Unload a shared library. ;  ; void Unsetenv (const char *name) override;  Unset environment variable. ;  ; int Utime (const char *file, Long_t modtime, Long_t actime) override;  Set a files modification and access times. ;  ; const char * WorkingDirectory () override;  Return working directory. ;  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ; virtual const char * BaseName (const char *pathname);  Base name of a file name. Base name of /user/root is root. ;  ; void Beep (Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE);  Beep for duration milliseconds with a tone of frequency freq. ;  ; Bool_t cd (const char *path);  ; virtual void CleanCompiledMacros ();  Remove the shared libs produced by the CompileMacro() function, together with their rootmaps, linkdefs, and pcms (and some more on Windows). ;  ; virtual int CompileMacro (const char *filenam",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:20815,Modifiability,inherit,inherited,20815,"should contain the description on how to compile and link a shared lib. ;  ; virtual void SetObjExt (const char *objExt);  Set object files extension, should be either .o, .obj, etc. ;  ; virtual void SetSoExt (const char *soExt);  Set shared library extension, should be either .so, .sl, .a, .dll, etc. ;  ; virtual void ShowOutput (RedirectHandle_t *h);  Display the content associated with the redirection described by the opaque handle 'h'. ;  ; virtual TString SplitAclicMode (const char *filename, TString &mode, TString &args, TString &io) const;  This method split a filename of the form: ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:22443,Modifiability,inherit,inherited,22443,"ual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:23536,Modifiability,inherit,inheritance,23536,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:25535,Modifiability,inherit,inherits,25535,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:25652,Modifiability,inherit,inherits,25652,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:29922,Modifiability,inherit,inherited,29922," Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Member Functions;  TMacOSXSystem (const TMacOSXSystem &rhs);  ; void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ;  ClassDef (TMacOSXSystem, 0);  ; void InitializeCocoa ();  ; TMacOSXSystem & operator= (const TMacOSXSystem &rhs);  ; void ProcessApplicationDefinedEvent (void *event);  ; bool ProcessPendingEvents ();  ; TFileHandler * RemoveFileHandler (TFileHandler *fh);  Remove a file handler from the list of file handlers. ;  ; void WaitEvents (Long_t nextto);  . Private Attributes; bool fCocoaInitialized;  ; bool fFirstDispatch;  ; std::unique_ptr< ROOT::MacOSX::Details::MacOSXSystem > fPimpl;  . Friends; class TGCocoa;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TUnixSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Versio",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:30077,Modifiability,inherit,inherited,30077," Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Member Functions;  TMacOSXSystem (const TMacOSXSystem &rhs);  ; void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ;  ClassDef (TMacOSXSystem, 0);  ; void InitializeCocoa ();  ; TMacOSXSystem & operator= (const TMacOSXSystem &rhs);  ; void ProcessApplicationDefinedEvent (void *event);  ; bool ProcessPendingEvents ();  ; TFileHandler * RemoveFileHandler (TFileHandler *fh);  Remove a file handler from the list of file handlers. ;  ; void WaitEvents (Long_t nextto);  . Private Attributes; bool fCocoaInitialized;  ; bool fFirstDispatch;  ; std::unique_ptr< ROOT::MacOSX::Details::MacOSXSystem > fPimpl;  . Friends; class TGCocoa;  . Additional Inherited Members;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TUnixSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Versio",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:30733,Modifiability,inherit,inherited,30733,"num  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TUnixSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:30948,Modifiability,inherit,inherited,30948,"num  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TUnixSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:31318,Modifiability,inherit,inherited,31318,"sReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TUnixSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TUnixSystem; const char * GetLinkedLibraries () override;  Get list of shared libraries loaded at the start of the executable. ;  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1)",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:31528,Modifiability,inherit,inherited,31528,"sReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TUnixSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSystem; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TUnixSystem; const char * GetLinkedLibraries () override;  Get list of shared libraries loaded at the start of the executable. ;  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1)",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:32031,Modifiability,inherit,inherited,32031," GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TUnixSystem; const char * GetLinkedLibraries () override;  Get list of shared libraries loaded at the start of the executable. ;  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local st",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:32130,Modifiability,inherit,inherited,32130," GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TUnixSystem; const char * GetLinkedLibraries () override;  Get list of shared libraries loaded at the start of the executable. ;  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local st",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:32305,Modifiability,inherit,inherited,32305,"c const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TUnixSystem; const char * GetLinkedLibraries () override;  Get list of shared libraries loaded at the start of the executable. ;  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; v",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:33214,Modifiability,inherit,inherited,33214," ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TUnixSystem; static int UnixFilestat (const char *path, FileStat_t &buf);  Get info about a file. ;  ; static int UnixFSstat (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: id, bsize, bfree, blocks. ;  ; static const char * UnixGetdirentry (void *dir);  Returns the next directory entry. ;  ; static const char * UnixHomedirectory (const char *user, char *path, char *mydir);  Returns the user's home directory. ;  ; static const char * UnixHomedirectory (const char *user=nullptr);  Returns the user's home directory. ;  ; static void UnixIgnoreSignal (ESignals sig, Bool_t ignore);  If ignore is true ignore the specified signal, else restore previous behaviour. ;  ; static int UnixMakedir (const char *name);  Make a Unix file system directory. ;  ; static Long6",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:33432,Modifiability,inherit,inherited,33432," by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TUnixSystem; static int UnixFilestat (const char *path, FileStat_t &buf);  Get info about a file. ;  ; static int UnixFSstat (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: id, bsize, bfree, blocks. ;  ; static const char * UnixGetdirentry (void *dir);  Returns the next directory entry. ;  ; static const char * UnixHomedirectory (const char *user, char *path, char *mydir);  Returns the user's home directory. ;  ; static const char * UnixHomedirectory (const char *user=nullptr);  Returns the user's home directory. ;  ; static void UnixIgnoreSignal (ESignals sig, Bool_t ignore);  If ignore is true ignore the specified signal, else restore previous behaviour. ;  ; static int UnixMakedir (const char *name);  Make a Unix file system directory. ;  ; static Long64_t UnixNow ();  Get current time in milliseconds since 0:00 Jan 1 1995. ;  ; static void * UnixOpendir (const char *name);  Open a directory. ;  ; static int UnixRecv (int sock, voi",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:36720,Modifiability,inherit,inherited,36720,"t, bind to it and start listening for TCP/IP connections on the port. ;  ; static int UnixUdpConnect (const char *hostname, int port);  Creates a UDP socket connection Is called via the TSocket constructor. ;  ; static int UnixUdpService (int port, int backlog);  Open a socket, bind to it and start listening for UDP connections on the port. ;  ; static int UnixUnixConnect (const char *path);  Connect to a Unix domain socket. Returns -1 in case of error. ;  ; static int UnixUnixConnect (int port);  Connect to a Unix domain socket. ;  ; static int UnixUnixService (const char *sockpath, int backlog);  Open a socket on path 'sockpath', bind to it and start listening for Unix domain connections to it. ;  ; static int UnixUnixService (int port, int backlog);  Open a socket, bind to it and start listening for Unix domain connections to it. ;  ; static int UnixWaitchild ();  Wait till child is finished. ;  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TString fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were ",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:36892,Modifiability,inherit,inherited,36892," UnixUnixService (const char *sockpath, int backlog);  Open a socket on path 'sockpath', bind to it and start listening for Unix domain connections to it. ;  ; static int UnixUnixService (int port, int backlog);  Open a socket, bind to it and start listening for Unix domain connections to it. ;  ; static int UnixWaitchild ();  Wait till child is finished. ;  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr};  ; Bool_t fDone {kFALSE};  ; TSeqCollection * fFileHandler {nullptr};  ; TString fFlagsDebug;  ; TString fFlagsOpt;  ; TSeqCollection * fHelpers {nullptr};  ; TString fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:38386,Modifiability,inherit,inherited,38386,"tring fHostname;  ; TString fIncludePath;  ; Bool_t fInControl {kFALSE};  ; std::atomic< Bool_t > fInsideNotify {kFALSE};  ; Int_t fLevel {0};  ; TString fLinkdefSuffix;  ; TString fLinkedLibs;  ; TString fListLibs;  ; TString fListPaths;  ; TString fMakeExe;  ; TString fMakeSharedLib;  ; Int_t fMaxrfd {-1};  ; Int_t fMaxwfd {-1};  ; Int_t fNfd {0};  Signals that were trapped. ;  ; TString fObjExt;  ; TSeqCollection * fOnExitList {nullptr};  ; TFdSet * fReadmask {nullptr};  ; TFdSet * fReadready {nullptr};  Files that should be checked for write events. ;  ; Int_t fSigcnt {0};  ; TSeqCollection * fSignalHandler {nullptr};  ; TFdSet * fSignals {nullptr};  Files with writes waiting. ;  ; TString fSoExt;  ; TSeqCollection * fStdExceptionHandler {nullptr};  ; TList * fTimers {nullptr};  ; TString fWdpath;  ; TFdSet * fWritemask {nullptr};  Files that should be checked for read events. ;  ; TFdSet * fWriteready {nullptr};  Files with reads waiting. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TMacOSXSystem.h>. Inheritance diagram for TMacOSXSystem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMacOSXSystem() [1/2]. TMacOSXSystem::TMacOSXSystem ; (; ). Definition at line 332 of file TMacOSXSystem.mm. ◆ ~TMacOSXSystem(). TMacOSXSystem::~TMacOSXSystem ; (; ). Definition at line 340 of file TMacOSXSystem.mm. ◆ TMacOSXSystem() [2/2]. TMacOSXSystem::TMacOSXSystem ; (; const TMacOSXSystem & ; rhs). private . Member Function Documentation. ◆ AddFileHandler(). void TMacOSXSystem::AddFileHandler ; (; TFileHandler * ; h). privatevirtual . Add a file handler to the list of system file handlers. ; Only adds the handler if it is not already in the list of file handlers. ; Reimplemented from TSystem.; Definition at line 528 of file TMacOSXSystem.mm. ◆ ClassDef(). TMacOSXSystem::ClassDef ; (; TMacOSXSystem ; , . 0 ;  . ). private . ◆ CocoaIniti",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:4035,Performance,load,load,4035," dispatch timers. ;  ; Func_t DynFindSymbol (const char *module, const char *entry) override;  dynamic linking of module ;  ; Int_t Exec (const char *shellcmd) override;  Execute a command. ;  ; void Exit (int code, Bool_t mode=kTRUE) override;  Exit the application. ;  ; char * ExpandPathName (const char *path) override;  Expand a pathname getting rid of special shell characaters like ~. ;  ; Bool_t ExpandPathName (TString &patbuf) override;  Expand a pathname getting rid of special shell characters like ~. ;  ; const char * FindDynamicLibrary (TString &lib, Bool_t quiet=kFALSE) override;  Returns the path of a shared library (searches for library in the shared library search path). ;  ; const char * FindFile (const char *search, TString &file, EAccessMode mode=kFileExists) override;  Find location of file ""wfil"" in a search path. ;  ; void FreeDirectory (void *dirp) override;  Close a Unix file system directory. ;  ; int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const override;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; Int_t GetCryptoRandom (void *buf, Int_t len) override;  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; const char * GetDirEntry (void *dirp) override;  Get next Unix file system directory entry. Returns 0 if no more entries. ;  ; const char * GetDynamicPath () override;  Return the dynamic path (used to find shared libraries). ;  ; Int_t GetEffectiveGid () override;  Returns the effective group id. ;  ; Int_t GetEffectiveUid () override;  Returns the effective user id. ;  ; const char * Getenv (const char *name) override;  Get environment variable. ;  ; const char * GetError () override;  Return system error string. ;  ; Int_t GetFPEMask () override;  Return the bitmap of conditions that trigger a floating point exception. ;  ; int GetFsInfo (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:4052,Performance,load,load,4052," dispatch timers. ;  ; Func_t DynFindSymbol (const char *module, const char *entry) override;  dynamic linking of module ;  ; Int_t Exec (const char *shellcmd) override;  Execute a command. ;  ; void Exit (int code, Bool_t mode=kTRUE) override;  Exit the application. ;  ; char * ExpandPathName (const char *path) override;  Expand a pathname getting rid of special shell characaters like ~. ;  ; Bool_t ExpandPathName (TString &patbuf) override;  Expand a pathname getting rid of special shell characters like ~. ;  ; const char * FindDynamicLibrary (TString &lib, Bool_t quiet=kFALSE) override;  Returns the path of a shared library (searches for library in the shared library search path). ;  ; const char * FindFile (const char *search, TString &file, EAccessMode mode=kFileExists) override;  Find location of file ""wfil"" in a search path. ;  ; void FreeDirectory (void *dirp) override;  Close a Unix file system directory. ;  ; int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const override;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; Int_t GetCryptoRandom (void *buf, Int_t len) override;  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; const char * GetDirEntry (void *dirp) override;  Get next Unix file system directory entry. Returns 0 if no more entries. ;  ; const char * GetDynamicPath () override;  Return the dynamic path (used to find shared libraries). ;  ; Int_t GetEffectiveGid () override;  Returns the effective group id. ;  ; Int_t GetEffectiveUid () override;  Returns the effective user id. ;  ; const char * Getenv (const char *name) override;  Get environment variable. ;  ; const char * GetError () override;  Return system error string. ;  ; Int_t GetFPEMask () override;  Return the bitmap of conditions that trigger a floating point exception. ;  ; int GetFsInfo (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:7851,Performance,load,loaded,7851,"  ; UserGroup_t * GetUserInfo (const char *user=nullptr) override;  Returns all user info in the UserGroup_t structure. ;  ; UserGroup_t * GetUserInfo (Int_t uid) override;  Returns all user info in the UserGroup_t structure. ;  ; std::string GetWorkingDirectory () const override;  Return working directory. ;  ; const char * HomeDirectory (const char *userName=nullptr) override;  Return the user's home directory. ;  ; const char * HostName () override;  Return the system's host name. ;  ; void IgnoreSignal (ESignals sig, Bool_t ignore=kTRUE) override;  If ignore is true ignore the specified signal, else restore previous behaviour. ;  ; Bool_t Init () override;  Initialize Unix system interface. ;  ; TClass * IsA () const override;  ; Bool_t IsPathLocal (const char *path) override;  Returns TRUE if the url in 'path' points to the local file system. ;  ; int Link (const char *from, const char *to) override;  Create a link from file1 to file2. ;  ; void ListLibraries (const char *regexp="""") override;  List all loaded shared libraries. ;  ; void ListSymbols (const char *module, const char *re="""") override;  List symbols in a shared library. ;  ; int Load (const char *module, const char *entry="""", Bool_t system=kFALSE) override;  Load a shared library. ;  ; int MakeDirectory (const char *name) override;  Make a Unix file system directory. ;  ; TTime Now () override;  Get current time in milliseconds since 0:00 Jan 1 1995. ;  ; int OpenConnection (const char *server, int port, int tcpwindowsize=-1, const char *protocol=""tcp"") override;  Open a connection to a service on a server. ;  ; void * OpenDirectory (const char *name) override;  Open a Unix file system directory. Returns 0 if directory does not exist. ;  ; void Openlog (const char *name, Int_t options, ELogFacility facility) override;  Open connection to system log daemon. ;  ; FILE * OpenPipe (const char *shellcmd, const char *mode) override;  Open a pipe. ;  ; const char * PrependPathName (const char *dir, TString ",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:13808,Performance,load,loads,13808,"nterface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ; virtual const char * BaseName (const char *pathname);  Base name of a file name. Base name of /user/root is root. ;  ; void Beep (Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE);  Beep for duration milliseconds with a tone of frequency freq. ;  ; Bool_t cd (const char *path);  ; virtual void CleanCompiledMacros ();  Remove the shared libs produced by the CompileMacro() function, together with their rootmaps, linkdefs, and pcms (and some more on Windows). ;  ; virtual int CompileMacro (const char *filename, Option_t *opt="""", const char *library_name="""", const char *build_dir="""", UInt_t dirmode=0);  This method compiles and loads a shared library containing the code from the file ""filename"". ;  ; virtual char * ConcatFileName (const char *dir, const char *name);  Concatenate a directory and a file name. User must delete returned string. ;  ; virtual const char * DirName (const char *pathname);  Return the directory name in pathname. ;  ; char * DynamicPathName (const char *lib, Bool_t quiet=kFALSE);  Find a dynamic library called lib using the system search paths. ;  ; virtual void ExitLoop ();  Exit from event loop. ;  ; virtual EAclicMode GetAclicMode () const;  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual Int_t GetAclicProperties () const;  Return the ACLiC properties field. ;  ; void GetBeepDefaults (Int_t &freq, Int_t &duration) const;  ; virtual const char * GetBuildArch () const;  Return the build architecture. ;  ; virtual const char * GetBuildCompiler () const;  Return the build compiler. ;  ; ",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:14432,Performance,optimiz,optimized,14432,"milliseconds with a tone of frequency freq. ;  ; Bool_t cd (const char *path);  ; virtual void CleanCompiledMacros ();  Remove the shared libs produced by the CompileMacro() function, together with their rootmaps, linkdefs, and pcms (and some more on Windows). ;  ; virtual int CompileMacro (const char *filename, Option_t *opt="""", const char *library_name="""", const char *build_dir="""", UInt_t dirmode=0);  This method compiles and loads a shared library containing the code from the file ""filename"". ;  ; virtual char * ConcatFileName (const char *dir, const char *name);  Concatenate a directory and a file name. User must delete returned string. ;  ; virtual const char * DirName (const char *pathname);  Return the directory name in pathname. ;  ; char * DynamicPathName (const char *lib, Bool_t quiet=kFALSE);  Find a dynamic library called lib using the system search paths. ;  ; virtual void ExitLoop ();  Exit from event loop. ;  ; virtual EAclicMode GetAclicMode () const;  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual Int_t GetAclicProperties () const;  Return the ACLiC properties field. ;  ; void GetBeepDefaults (Int_t &freq, Int_t &duration) const;  ; virtual const char * GetBuildArch () const;  Return the build architecture. ;  ; virtual const char * GetBuildCompiler () const;  Return the build compiler. ;  ; virtual const char * GetBuildCompilerVersion () const;  Return the build compiler version. ;  ; virtual const char * GetBuildCompilerVersionStr () const;  Return the build compiler version identifier string. ;  ; virtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void * GetDirPtr () const;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:15438,Performance,optimiz,optimization,15438," debug mode or optimized. ;  ; virtual Int_t GetAclicProperties () const;  Return the ACLiC properties field. ;  ; void GetBeepDefaults (Int_t &freq, Int_t &duration) const;  ; virtual const char * GetBuildArch () const;  Return the build architecture. ;  ; virtual const char * GetBuildCompiler () const;  Return the build compiler. ;  ; virtual const char * GetBuildCompilerVersion () const;  Return the build compiler version. ;  ; virtual const char * GetBuildCompilerVersionStr () const;  Return the build compiler version identifier string. ;  ; virtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void * GetDirPtr () const;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; virtual TString GetFromPipe (const char *command);  Execute command and return output in TString. ;  ; virtual const char * GetIncludePath ();  Get the list of include path. ;  ; virtual const char * GetLibraries (const char *regexp="""", const char *option="""", Bool_t isRegexp=kTRUE);  Return a space separated list of loaded shared libraries. ;  ; virtual const char * GetLinkdefSuffix () const;  Return the linkdef suffix chosen by the user for ACLiC. ;  ; virtual const char * GetLinkedLibs () const;  Return the list of library linked to this executable. ;  ; virtual TSeqCollection * GetListOfFileHandlers () const;  ; virtual TSeqCollection * GetListOfSignalHandlers () const;  ; virtual TSeqCollection * GetListOfStdExceptionHandlers () const;  ; virtual TList * GetListOfTimers () const;  ; virtual const char * GetMakeExe () const;  Return the command line use to make an executable. ;  ; virtual const char * GetMakeSharedLib () const;  Return t",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:15781,Performance,load,loaded,15781,"t;  Return the build compiler. ;  ; virtual const char * GetBuildCompilerVersion () const;  Return the build compiler version. ;  ; virtual const char * GetBuildCompilerVersionStr () const;  Return the build compiler version identifier string. ;  ; virtual const char * GetBuildDir () const;  Return the path of the build directory. ;  ; virtual const char * GetBuildNode () const;  Return the build node name. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void * GetDirPtr () const;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; virtual TString GetFromPipe (const char *command);  Execute command and return output in TString. ;  ; virtual const char * GetIncludePath ();  Get the list of include path. ;  ; virtual const char * GetLibraries (const char *regexp="""", const char *option="""", Bool_t isRegexp=kTRUE);  Return a space separated list of loaded shared libraries. ;  ; virtual const char * GetLinkdefSuffix () const;  Return the linkdef suffix chosen by the user for ACLiC. ;  ; virtual const char * GetLinkedLibs () const;  Return the list of library linked to this executable. ;  ; virtual TSeqCollection * GetListOfFileHandlers () const;  ; virtual TSeqCollection * GetListOfSignalHandlers () const;  ; virtual TSeqCollection * GetListOfStdExceptionHandlers () const;  ; virtual TList * GetListOfTimers () const;  ; virtual const char * GetMakeExe () const;  Return the command line use to make an executable. ;  ; virtual const char * GetMakeSharedLib () const;  Return the command line use to make a shared library. ;  ; virtual const char * GetObjExt () const;  Get the object file extension. ;  ; int GetPathInfo (const char *path, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime);  Get info about a file: id, size, flags, modification time. ;  ; int GetPathInf",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:18489,Performance,optimiz,optimized,18489,"that can be found in the ROOT include path or the current directory. ;  ; virtual UInt_t LoadAllLibraries ();  Load all libraries known to ROOT via the rootmap system. ;  ; virtual int mkdir (const char *name, Bool_t recursive=kFALSE);  Make a file system directory. ;  ; virtual Long_t NextTimeOut (Bool_t mode);  Time when next timer of mode (synchronous=kTRUE or asynchronous=kFALSE) will time-out (in ms). ;  ; virtual void NotifyApplicationCreated ();  Hook to tell TSystem that the TApplication object has been created. ;  ; virtual Bool_t ProcessEvents ();  Process pending events (GUI, timers, sockets). ;  ; const char * pwd ();  ; void RemoveOnExit (TObject *obj);  Objects that should be deleted on exit of the OS interface. ;  ; virtual TStdExceptionHandler * RemoveStdExceptionHandler (TStdExceptionHandler *eh);  Remove an exception handler from list of exception handlers. ;  ; virtual void Run ();  System event loop. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should u",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:19038,Performance,optimiz,optimized,19038,"ol_t ProcessEvents ();  Process pending events (GUI, timers, sockets). ;  ; const char * pwd ();  ; void RemoveOnExit (TObject *obj);  Objects that should be deleted on exit of the OS interface. ;  ; virtual TStdExceptionHandler * RemoveStdExceptionHandler (TStdExceptionHandler *eh);  Remove an exception handler from list of exception handlers. ;  ; virtual void Run ();  System event loop. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ;  ; virtual void SetLinkedLibs (const char *linkedLibs);  LinkedLibs should contain the library directory and list of libraries needed to recreate the current executable. ;  ; virtual void SetMakeExe (const char *directives);  Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executable. ;  ; virtual void SetMakeSharedLib (const char *directives);  Directives should contain the description on how to compile and link a shared lib. ;  ; virtual void SetObjExt (con",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:19334,Performance,load,loaded,19334,"();  System event loop. ;  ; virtual void SetAclicMode (EAclicMode mode);  AclicMode indicates whether the library should be built in debug mode or optimized. ;  ; virtual void SetBuildDir (const char *build_dir, Bool_t isflat=kFALSE);  Set the location where ACLiC will create libraries and use as a scratch area. ;  ; void SetErrorStr (const char *errstr);  Set the system error string. ;  ; virtual void SetFlagsDebug (const char *);  FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ;  ; virtual void SetFlagsOpt (const char *);  FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ;  ; virtual void SetIncludePath (const char *includePath);  IncludePath should contain the list of compiler flags to indicate where to find user defined header files. ;  ; virtual void SetLinkdefSuffix (const char *suffix);  The 'suffix' will be appended to the name of a script loaded by ACLiC and used to locate any eventual additional linkdef information that ACLiC should used to produce the dictionary. ;  ; virtual void SetLinkedLibs (const char *linkedLibs);  LinkedLibs should contain the library directory and list of libraries needed to recreate the current executable. ;  ; virtual void SetMakeExe (const char *directives);  Directives has the same syntax as the argument of SetMakeSharedLib but is used to create an executable. ;  ; virtual void SetMakeSharedLib (const char *directives);  Directives should contain the description on how to compile and link a shared lib. ;  ; virtual void SetObjExt (const char *objExt);  Set object files extension, should be either .o, .obj, etc. ;  ; virtual void SetSoExt (const char *soExt);  Set shared library extension, should be either .so, .sl, .a, .dll, etc. ;  ; virtual void ShowOutput (RedirectHandle_t *h);  Display the content associated with the redirection described by the opaque handle 'h'. ;  ; virtual TString SplitAcl",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:32233,Performance,load,loaded,32233," GetErrno ();  Static function returning system error number. ;  ; static void ResetErrno ();  Static function resetting system error number. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TUnixSystem; const char * GetLinkedLibraries () override;  Get list of shared libraries loaded at the start of the executable. ;  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local st",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:10141,Safety,timeout,timeout,10141,"name, const char *mode=""a"", RedirectHandle_t *h=nullptr) override;  Redirect standard output (stdout, stderr) to the specified file. ;  ; TFileHandler * RemoveFileHandler (TFileHandler *fh) override;  Remove a file handler from the list of file handlers. ;  ; TSignalHandler * RemoveSignalHandler (TSignalHandler *sh) override;  Remove a signal handler from list of signal handlers. ;  ; TTimer * RemoveTimer (TTimer *ti) override;  Remove timer from list of system timers. ;  ; int Rename (const char *from, const char *to) override;  Rename a file. Returns 0 when successful, -1 in case of failure. ;  ; void ResetSignal (ESignals sig, Bool_t reset=kTRUE) override;  If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ;  ; void ResetSignals () override;  Reset signals handlers to previous behaviour. ;  ; void ResetTimer (TTimer *ti) override;  Reset a-sync timer. ;  ; Int_t Select (TFileHandler *fh, Long_t timeout) override;  Select on the file descriptor related to file handler h. ;  ; Int_t Select (TList *active, Long_t timeout) override;  Select on file descriptors. ;  ; int SendBuf (int sock, const void *buffer, int length) override;  Send a buffer headed by a length indicator. ;  ; int SendRaw (int sock, const void *buffer, int length, int flag) override;  Send exactly length bytes from buffer. ;  ; void SetDisplay () override;  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; void SetDynamicPath (const char *lib) override;  Set the dynamic path to a new value. ;  ; void Setenv (const char *name, const char *value) override;  Set environment variable. ;  ; Int_t SetFPEMask (Int_t mask=kDefaultMask) override;  Set which conditions trigger a floating point exception. ;  ; void SetProgname (const char *name) override;  Set the application name (from command line, argv[0]) and copy it in gProgName. ;  ; int SetSockOpt (int sock, int option, int val) override;  Set socket option",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:10259,Safety,timeout,timeout,10259,"err) to the specified file. ;  ; TFileHandler * RemoveFileHandler (TFileHandler *fh) override;  Remove a file handler from the list of file handlers. ;  ; TSignalHandler * RemoveSignalHandler (TSignalHandler *sh) override;  Remove a signal handler from list of signal handlers. ;  ; TTimer * RemoveTimer (TTimer *ti) override;  Remove timer from list of system timers. ;  ; int Rename (const char *from, const char *to) override;  Rename a file. Returns 0 when successful, -1 in case of failure. ;  ; void ResetSignal (ESignals sig, Bool_t reset=kTRUE) override;  If reset is true reset the signal handler for the specified signal to the default handler, else restore previous behaviour. ;  ; void ResetSignals () override;  Reset signals handlers to previous behaviour. ;  ; void ResetTimer (TTimer *ti) override;  Reset a-sync timer. ;  ; Int_t Select (TFileHandler *fh, Long_t timeout) override;  Select on the file descriptor related to file handler h. ;  ; Int_t Select (TList *active, Long_t timeout) override;  Select on file descriptors. ;  ; int SendBuf (int sock, const void *buffer, int length) override;  Send a buffer headed by a length indicator. ;  ; int SendRaw (int sock, const void *buffer, int length, int flag) override;  Send exactly length bytes from buffer. ;  ; void SetDisplay () override;  Set DISPLAY environment variable based on utmp entry. Only for UNIX. ;  ; void SetDynamicPath (const char *lib) override;  Set the dynamic path to a new value. ;  ; void Setenv (const char *name, const char *value) override;  Set environment variable. ;  ; Int_t SetFPEMask (Int_t mask=kDefaultMask) override;  Set which conditions trigger a floating point exception. ;  ; void SetProgname (const char *name) override;  Set the application name (from command line, argv[0]) and copy it in gProgName. ;  ; int SetSockOpt (int sock, int option, int val) override;  Set socket option. ;  ; void SigAlarmInterruptsSyscalls (Bool_t set) override;  When the argument is true the SIGALRM sign",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:34780,Safety,timeout,timeout,34780," const char * UnixHomedirectory (const char *user, char *path, char *mydir);  Returns the user's home directory. ;  ; static const char * UnixHomedirectory (const char *user=nullptr);  Returns the user's home directory. ;  ; static void UnixIgnoreSignal (ESignals sig, Bool_t ignore);  If ignore is true ignore the specified signal, else restore previous behaviour. ;  ; static int UnixMakedir (const char *name);  Make a Unix file system directory. ;  ; static Long64_t UnixNow ();  Get current time in milliseconds since 0:00 Jan 1 1995. ;  ; static void * UnixOpendir (const char *name);  Open a directory. ;  ; static int UnixRecv (int sock, void *buf, int len, int flag);  Receive exactly length bytes into buffer. ;  ; static void UnixResetSignal (ESignals sig);  Restore old signal handler for specified signal. ;  ; static void UnixResetSignals ();  Restore old signal handlers. ;  ; static int UnixSelect (Int_t nfds, TFdSet *readready, TFdSet *writeready, Long_t timeout);  Wait for events on the file descriptors specified in the readready and writeready masks or for timeout (in milliseconds) to occur. ;  ; static int UnixSend (int sock, const void *buf, int len, int flag);  Send exactly length bytes from buffer. ;  ; static int UnixSetitimer (Long_t ms);  Set interval timer to time-out in ms milliseconds. ;  ; static void UnixSigAlarmInterruptsSyscalls (Bool_t set);  When the argument is true the SIGALRM signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; static void UnixSignal (ESignals sig, SigHandler_t h);  Set a signal handler for a signal. ;  ; static const char * UnixSigname (ESignals sig);  Return the signal name associated with a signal. ;  ; static int UnixTcpConnect (const char *hostname, int port, int tcpwindowsize);  Open a TCP/IP connection to server and connect to a service (i.e. ;  ; static int UnixTcpService (int port, Bool_t reuse, int backlog, int tcpwindowsize);  Open a socket, bind to it and start listening fo",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:34886,Safety,timeout,timeout,34886," const char * UnixHomedirectory (const char *user, char *path, char *mydir);  Returns the user's home directory. ;  ; static const char * UnixHomedirectory (const char *user=nullptr);  Returns the user's home directory. ;  ; static void UnixIgnoreSignal (ESignals sig, Bool_t ignore);  If ignore is true ignore the specified signal, else restore previous behaviour. ;  ; static int UnixMakedir (const char *name);  Make a Unix file system directory. ;  ; static Long64_t UnixNow ();  Get current time in milliseconds since 0:00 Jan 1 1995. ;  ; static void * UnixOpendir (const char *name);  Open a directory. ;  ; static int UnixRecv (int sock, void *buf, int len, int flag);  Receive exactly length bytes into buffer. ;  ; static void UnixResetSignal (ESignals sig);  Restore old signal handler for specified signal. ;  ; static void UnixResetSignals ();  Restore old signal handlers. ;  ; static int UnixSelect (Int_t nfds, TFdSet *readready, TFdSet *writeready, Long_t timeout);  Wait for events on the file descriptors specified in the readready and writeready masks or for timeout (in milliseconds) to occur. ;  ; static int UnixSend (int sock, const void *buf, int len, int flag);  Send exactly length bytes from buffer. ;  ; static int UnixSetitimer (Long_t ms);  Set interval timer to time-out in ms milliseconds. ;  ; static void UnixSigAlarmInterruptsSyscalls (Bool_t set);  When the argument is true the SIGALRM signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; static void UnixSignal (ESignals sig, SigHandler_t h);  Set a signal handler for a signal. ;  ; static const char * UnixSigname (ESignals sig);  Return the signal name associated with a signal. ;  ; static int UnixTcpConnect (const char *hostname, int port, int tcpwindowsize);  Open a TCP/IP connection to server and connect to a service (i.e. ;  ; static int UnixTcpService (int port, Bool_t reuse, int backlog, int tcpwindowsize);  Open a socket, bind to it and start listening fo",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:881,Security,access,access,881,". ROOT: TMacOSXSystem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TMacOSXSystem Class Reference. . Definition at line 39 of file TMacOSXSystem.h. Public Member Functions;  TMacOSXSystem ();  ;  ~TMacOSXSystem ();  ; bool CocoaInitialized () const;  ; void DispatchOneEvent (Bool_t pendingOnly);  Dispatch a single event. ;  ;  Public Member Functions inherited from TUnixSystem;  TUnixSystem ();  ; virtual ~TUnixSystem ();  Reset to original state. ;  ; void Abort (int code=0) override;  Abort the application. ;  ; int AcceptConnection (int sock) override;  Accept a connection. ;  ; Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists) override;  Returns FALSE if one can access a file using the specified access mode. ;  ; void AddDynamicPath (const char *lib) override;  Add a new directory to the dynamic path. ;  ; void AddFileHandler (TFileHandler *fh) override;  Add a file handler to the list of system file handlers. ;  ; void AddSignalHandler (TSignalHandler *sh) override;  Add a signal handler to list of system signal handlers. ;  ; void AddTimer (TTimer *ti) override;  Add timer to list of system timers. ;  ; int AnnounceTcpService (int port, Bool_t reuse, int backlog, int tcpwindowsize=-1) override;  Announce TCP/IP service. ;  ; int AnnounceUdpService (int port, int backlog) override;  Announce UDP service. ;  ; int AnnounceUnixService (const char *sockpath, int backlog) override;  Announce unix domain service on path 'sockpath'. ;  ; int AnnounceUnixService (int port, int backlog) override;  Announce unix domain service on path ""kServerPath/<port>"". ;  ; Bool_t ChangeDirectory (const char *path) override;  Change directory. Returns kTRUE in case of success, kFALSE otherwise. ;  ; void CheckChilds ();  Check if children have finished. ;  ; Bool_t CheckDescriptors",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:915,Security,access,access,915,". ROOT: TMacOSXSystem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TMacOSXSystem Class Reference. . Definition at line 39 of file TMacOSXSystem.h. Public Member Functions;  TMacOSXSystem ();  ;  ~TMacOSXSystem ();  ; bool CocoaInitialized () const;  ; void DispatchOneEvent (Bool_t pendingOnly);  Dispatch a single event. ;  ;  Public Member Functions inherited from TUnixSystem;  TUnixSystem ();  ; virtual ~TUnixSystem ();  Reset to original state. ;  ; void Abort (int code=0) override;  Abort the application. ;  ; int AcceptConnection (int sock) override;  Accept a connection. ;  ; Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists) override;  Returns FALSE if one can access a file using the specified access mode. ;  ; void AddDynamicPath (const char *lib) override;  Add a new directory to the dynamic path. ;  ; void AddFileHandler (TFileHandler *fh) override;  Add a file handler to the list of system file handlers. ;  ; void AddSignalHandler (TSignalHandler *sh) override;  Add a signal handler to list of system signal handlers. ;  ; void AddTimer (TTimer *ti) override;  Add timer to list of system timers. ;  ; int AnnounceTcpService (int port, Bool_t reuse, int backlog, int tcpwindowsize=-1) override;  Announce TCP/IP service. ;  ; int AnnounceUdpService (int port, int backlog) override;  Announce UDP service. ;  ; int AnnounceUnixService (const char *sockpath, int backlog) override;  Announce unix domain service on path 'sockpath'. ;  ; int AnnounceUnixService (int port, int backlog) override;  Announce unix domain service on path ""kServerPath/<port>"". ;  ; Bool_t ChangeDirectory (const char *path) override;  Change directory. Returns kTRUE in case of success, kFALSE otherwise. ;  ; void CheckChilds ();  Check if children have finished. ;  ; Bool_t CheckDescriptors",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:12056,Security,secur,secure,12056,"and line, argv[0]) and copy it in gProgName. ;  ; int SetSockOpt (int sock, int option, int val) override;  Set socket option. ;  ; void SigAlarmInterruptsSyscalls (Bool_t set) override;  When the argument is true the SIGALRM signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void Sleep (UInt_t milliSec) override;  Sleep milliSec milliseconds. ;  ; void StackTrace () override;  Print a stack trace. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Symlink (const char *from, const char *to) override;  Create a symlink from file1 to file2. ;  ; void Syslog (ELogLevel level, const char *mess) override;  Send mess to syslog daemon. ;  ; const char * TempDirectory () const override;  Return a user configured or systemwide directory to create temporary files in. ;  ; FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr) override;  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; int Umask (Int_t mask) override;  Set the process file creation mode mask. ;  ; int Unlink (const char *name) override;  Unlink, i.e. ;  ; void Unload (const char *module) override;  Unload a shared library. ;  ; void Unsetenv (const char *name) override;  Unset environment variable. ;  ; int Utime (const char *file, Long_t modtime, Long_t actime) override;  Set a files modification and access times. ;  ; const char * WorkingDirectory () override;  Return working directory. ;  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; ",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:12520,Security,access,access,12520,"e. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Symlink (const char *from, const char *to) override;  Create a symlink from file1 to file2. ;  ; void Syslog (ELogLevel level, const char *mess) override;  Send mess to syslog daemon. ;  ; const char * TempDirectory () const override;  Return a user configured or systemwide directory to create temporary files in. ;  ; FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr) override;  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; int Umask (Int_t mask) override;  Set the process file creation mode mask. ;  ; int Unlink (const char *name) override;  Unlink, i.e. ;  ; void Unload (const char *module) override;  Unload a shared library. ;  ; void Unsetenv (const char *name) override;  Unset environment variable. ;  ; int Utime (const char *file, Long_t modtime, Long_t actime) override;  Set a files modification and access times. ;  ; const char * WorkingDirectory () override;  Return working directory. ;  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddStdExceptionHandler (TStdExceptionHandler *eh);  Add an exception handler to list of system exception handlers. ;  ; virtual const char * BaseName (const char *pathname);  Base name of a file name. Base name of /user/root is root. ;  ; void Beep (Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE);  Beep for duration milliseconds with a tone of frequency freq. ;  ; Bool_t cd (const char *path);  ; virtual void Cle",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:21683,Security,hash,hash,21683," (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this met",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:32949,Security,access,access,32949,"y (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TUnixSystem; const char * GetLinkedLibraries () override;  Get list of shared libraries loaded at the start of the executable. ;  ;  Protected Member Functions inherited from TSystem; virtual Bool_t ConsistentWith (const char *path, void *dirptr=nullptr);  Check consistency of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TUnixSystem; static int UnixFilestat (const char *path, FileStat_t &buf);  Get info about a file. ;  ; static int UnixFSstat (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: id, bsize, bfree, blocks. ;  ; static const char * UnixGetdirentry (void *dir);  Returns the next directory entry. ;  ; static const char * UnixHomedirectory (const char *user, char *path",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:2471,Testability,log,log,2471,"vice. ;  ; int AnnounceUdpService (int port, int backlog) override;  Announce UDP service. ;  ; int AnnounceUnixService (const char *sockpath, int backlog) override;  Announce unix domain service on path 'sockpath'. ;  ; int AnnounceUnixService (int port, int backlog) override;  Announce unix domain service on path ""kServerPath/<port>"". ;  ; Bool_t ChangeDirectory (const char *path) override;  Change directory. Returns kTRUE in case of success, kFALSE otherwise. ;  ; void CheckChilds ();  Check if children have finished. ;  ; Bool_t CheckDescriptors ();  Check if there is activity on some file descriptors and call their Notify() member. ;  ; Bool_t CheckSignals (Bool_t sync);  Check if some signals were raised and call their Notify() member. ;  ; int Chmod (const char *file, UInt_t mode) override;  Set the file permission bits. Returns -1 in case or error, 0 otherwise. ;  ; void CloseConnection (int sock, Bool_t force=kFALSE) override;  Close socket. ;  ; void Closelog () override;  Close connection to system log daemon. ;  ; int ClosePipe (FILE *pipe) override;  Close the pipe. ;  ; int ConnectService (const char *server, int port, int tcpwindowsize, const char *protocol=""tcp"");  Connect to service servicename on server servername. ;  ; int CopyFile (const char *from, const char *to, Bool_t overwrite=kFALSE) override;  Copy a file. ;  ; void DispatchOneEvent (Bool_t pendingOnly=kFALSE) override;  Dispatch a single event. ;  ; void DispatchSignals (ESignals sig);  Handle and dispatch signals. ;  ; Bool_t DispatchTimers (Bool_t mode);  Handle and dispatch timers. ;  ; Func_t DynFindSymbol (const char *module, const char *entry) override;  dynamic linking of module ;  ; Int_t Exec (const char *shellcmd) override;  Execute a command. ;  ; void Exit (int code, Bool_t mode=kTRUE) override;  Exit the application. ;  ; char * ExpandPathName (const char *path) override;  Expand a pathname getting rid of special shell characaters like ~. ;  ; Bool_t ExpandPathName (TString &",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacOSXSystem.html:8671,Testability,log,log,8671," Returns TRUE if the url in 'path' points to the local file system. ;  ; int Link (const char *from, const char *to) override;  Create a link from file1 to file2. ;  ; void ListLibraries (const char *regexp="""") override;  List all loaded shared libraries. ;  ; void ListSymbols (const char *module, const char *re="""") override;  List symbols in a shared library. ;  ; int Load (const char *module, const char *entry="""", Bool_t system=kFALSE) override;  Load a shared library. ;  ; int MakeDirectory (const char *name) override;  Make a Unix file system directory. ;  ; TTime Now () override;  Get current time in milliseconds since 0:00 Jan 1 1995. ;  ; int OpenConnection (const char *server, int port, int tcpwindowsize=-1, const char *protocol=""tcp"") override;  Open a connection to a service on a server. ;  ; void * OpenDirectory (const char *name) override;  Open a Unix file system directory. Returns 0 if directory does not exist. ;  ; void Openlog (const char *name, Int_t options, ELogFacility facility) override;  Open connection to system log daemon. ;  ; FILE * OpenPipe (const char *shellcmd, const char *mode) override;  Open a pipe. ;  ; const char * PrependPathName (const char *dir, TString &name) override;  Concatenate a directory and a file name. ;  ; int RecvBuf (int sock, void *buffer, int length) override;  Receive a buffer headed by a length indicator. ;  ; int RecvRaw (int sock, void *buffer, int length, int flag) override;  Receive exactly length bytes into buffer. ;  ; Int_t RedirectOutput (const char *name, const char *mode=""a"", RedirectHandle_t *h=nullptr) override;  Redirect standard output (stdout, stderr) to the specified file. ;  ; TFileHandler * RemoveFileHandler (TFileHandler *fh) override;  Remove a file handler from the list of file handlers. ;  ; TSignalHandler * RemoveSignalHandler (TSignalHandler *sh) override;  Remove a signal handler from list of signal handlers. ;  ; TTimer * RemoveTimer (TTimer *ti) override;  Remove timer from list of syste",MatchSource.WIKI,doc/master/classTMacOSXSystem.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html
https://root.cern/doc/master/classTMacro.html:2600,Availability,error,error,2600," TMacro.h:31; TObject::Writevirtual Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)Write this object to the current directory.Definition TObject.cxx:886; mTMarker mDefinition textangle.C:8. Definition at line 31 of file TMacro.h. Public Member Functions;  TMacro ();  Create an empty macro, use AddLine() or ReadFile() to fill this macro. ;  ;  TMacro (const char *name, const char *title="""");  Create a macro with a name and a title. ;  ;  TMacro (const TMacro &);  Copy constructor. ;  ; virtual ~TMacro ();  Delete this macro. ;  ; virtual TObjString * AddLine (const char *text);  Add line with text in the list of lines of this macro. ;  ; void Browse (TBrowser *b) override;  When clicking in the browser, the following action is performed on this macro, depending the content of the variable TMacro.Browse. ;  ; virtual TMD5 * Checksum ();  Returns checksum of the current content. ;  ; virtual Longptr_t Exec (const char *params=nullptr, Int_t *error=nullptr);  Execute this macro with params, if params is 0, default parameters (set via SetParams) are used. ;  ; virtual TObjString * GetLineWith (const char *text) const;  Search the first line containing text. ;  ; TList * GetListOfLines () const;  ; TClass * IsA () const override;  ; virtual Bool_t Load () const;  Load the macro into the interpreter. ;  ; TMacro & operator= (const TMacro &);  Copy constructor. ;  ; void Paint (Option_t *option="""") override;  Execute this macro (called by TPad::Paint). ;  ; void Print (Option_t *option="""") const override;  Print contents of this macro. ;  ; virtual Int_t ReadFile (const char *filename);  Read lines in filename in this macro. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save macro source on stream out. ;  ; virtual void SaveSource (const char *filename);  Save macro source in filename. ;  ; virtual void SetParams (const char *params=nullptr);  Set default parameters to execute this macro. ;  ; void Streamer (TBuffer &) ov",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:6858,Availability,error,error,6858,"option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:6947,Availability,error,error,6947,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:7102,Availability,error,error,7102,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:7399,Availability,error,error,7399,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:11232,Availability,error,error,11232,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:16884,Availability,error,error,16884,"oid SetValue(const char *name, const char *value, EEnvLevel level=kEnvChange, const char *type=nullptr)Set the value of a resource or create a new resource.Definition TEnv.cxx:736; By default TMacro.Browse="""" -if TMacro.Browse ="""" the macro is executed -if TMacro.Browse =""Print"" the macro is printed in stdout -if TMacro.Browse is of the form ""mymacro.C"" the macro void mymacro.C(TMacro *m) is called where m=this macro An example of macro.C saving the macro into a file and viewing it with emacs is shown below: void mymacro(TMacro *m) {; m->SaveSource(""xx.log"");; gSystem->Exec(""emacs xx.log&"");; }; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::Execvirtual Int_t Exec(const char *shellcmd)Execute a command.Definition TSystem.cxx:653. Reimplemented from TObject.; Definition at line 171 of file TMacro.cxx. ◆ Checksum(). TMD5 * TMacro::Checksum ; (; ). virtual . Returns checksum of the current content. ; The returned TMD5 object must be deleted by the user. Returns 0 in case of error. ; Definition at line 192 of file TMacro.cxx. ◆ Class(). static TClass * TMacro::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMacro::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMacro::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 59 of file TMacro.h. ◆ DeclFileName(). static const char * TMacro::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 59 of file TMacro.h. ◆ Exec(). Longptr_t TMacro::Exec ; (; const char * ; params = nullptr, . Int_t * ; error = nullptr . ). virtual . Execute this macro with params, if params is 0, default parameters (set via SetParams) are used. ; error is set to an TInterpreter::EErrorCode by TApplication::ProcessLine(). Returns the result of the macro (return value or value of the last expression), cast to a Long_t. ; Rei",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:17567,Availability,error,error,17567,"(const char *shellcmd)Execute a command.Definition TSystem.cxx:653. Reimplemented from TObject.; Definition at line 171 of file TMacro.cxx. ◆ Checksum(). TMD5 * TMacro::Checksum ; (; ). virtual . Returns checksum of the current content. ; The returned TMD5 object must be deleted by the user. Returns 0 in case of error. ; Definition at line 192 of file TMacro.cxx. ◆ Class(). static TClass * TMacro::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMacro::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMacro::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 59 of file TMacro.h. ◆ DeclFileName(). static const char * TMacro::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 59 of file TMacro.h. ◆ Exec(). Longptr_t TMacro::Exec ; (; const char * ; params = nullptr, . Int_t * ; error = nullptr . ). virtual . Execute this macro with params, if params is 0, default parameters (set via SetParams) are used. ; error is set to an TInterpreter::EErrorCode by TApplication::ProcessLine(). Returns the result of the macro (return value or value of the last expression), cast to a Long_t. ; Reimplemented in TEveMacro.; Definition at line 262 of file TMacro.cxx. ◆ GetLineWith(). TObjString * TMacro::GetLineWith ; (; const char * ; text); const. virtual . Search the first line containing text. ; Definition at line 297 of file TMacro.cxx. ◆ GetListOfLines(). TList * TMacro::GetListOfLines ; (; ); const. inline . Definition at line 51 of file TMacro.h. ◆ IsA(). TClass * TMacro::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 59 of file TMacro.h. ◆ Load(). Bool_t TMacro::Load ; (; ); const. virtual . Load the macro into the interpreter. ; Return true in case the loading was successful. ; Definiti",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:17697,Availability,error,error,17697,"acro::Checksum ; (; ). virtual . Returns checksum of the current content. ; The returned TMD5 object must be deleted by the user. Returns 0 in case of error. ; Definition at line 192 of file TMacro.cxx. ◆ Class(). static TClass * TMacro::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMacro::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMacro::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 59 of file TMacro.h. ◆ DeclFileName(). static const char * TMacro::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 59 of file TMacro.h. ◆ Exec(). Longptr_t TMacro::Exec ; (; const char * ; params = nullptr, . Int_t * ; error = nullptr . ). virtual . Execute this macro with params, if params is 0, default parameters (set via SetParams) are used. ; error is set to an TInterpreter::EErrorCode by TApplication::ProcessLine(). Returns the result of the macro (return value or value of the last expression), cast to a Long_t. ; Reimplemented in TEveMacro.; Definition at line 262 of file TMacro.cxx. ◆ GetLineWith(). TObjString * TMacro::GetLineWith ; (; const char * ; text); const. virtual . Search the first line containing text. ; Definition at line 297 of file TMacro.cxx. ◆ GetListOfLines(). TList * TMacro::GetListOfLines ; (; ); const. inline . Definition at line 51 of file TMacro.h. ◆ IsA(). TClass * TMacro::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 59 of file TMacro.h. ◆ Load(). Bool_t TMacro::Load ; (; ); const. virtual . Load the macro into the interpreter. ; Return true in case the loading was successful. ; Definition at line 244 of file TMacro.cxx. ◆ operator=(). TMacro & TMacro::operator= ; (; const TMacro & ; macro). Copy constructor. ; Definition at line 120 of file TMacr",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:773,Deployability,update,updated,773,". ROOT: TMacro Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TMacro Class ReferenceCore ROOT classes » Base ROOT classes. ; Class supporting a collection of lines with C++ code. ; A TMacro can be executed, saved to a ROOT file, edited, etc.; A macro can be built line by line by calling the AddLine function. or it can be created directly from a file via the special constructor when the first argument is a file name.; A macro can be executed via the Exec function. Arguments can be specified when calling Exec.; A macro can be drawn in a pad. When the pad is updated, the macro is automatically executed.; The code in the macro can be saved via the SaveSource function. If the macro is in the list of primitives of a pad/canvas, the macro will be saved in the script generated by TCanvas::SaveSource.; A macro can be written to a ROOT file via TObject::Write.; Examples: TMacro m(""Peaks.C""); //macro m with name ""Peaks"" is created; //from file Peaks.C; m.Exec(); //macro executed with default arguments; m.Exec(""4""); //macro executed with argument; m.SaveSource(""newPeaks.C"");; TFile f(""mymacros.root"",""recreate"");; m.Write(); //macro saved to file with name ""Peaks""; f#define f(i)Definition RSha256.hxx:104; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TMacroClass supporting a collection of lines with C++ code.Definition TMacro.h:31; TObject::Writevirtual Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)Write this object to the current directory.Definition TObject.cxx:886; mTMarker mDefinition textangle.C:8. Definition at line 31 of file TMacro.h. Public Member Functions;  TMacro ();  Create an empty macro, use AddLine() or ReadFile() to fill this macro. ;  ;  TMacro (c",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:2408,Integrability,depend,depending,2408,"ame ""Peaks""; f#define f(i)Definition RSha256.hxx:104; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TMacroClass supporting a collection of lines with C++ code.Definition TMacro.h:31; TObject::Writevirtual Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)Write this object to the current directory.Definition TObject.cxx:886; mTMarker mDefinition textangle.C:8. Definition at line 31 of file TMacro.h. Public Member Functions;  TMacro ();  Create an empty macro, use AddLine() or ReadFile() to fill this macro. ;  ;  TMacro (const char *name, const char *title="""");  Create a macro with a name and a title. ;  ;  TMacro (const TMacro &);  Copy constructor. ;  ; virtual ~TMacro ();  Delete this macro. ;  ; virtual TObjString * AddLine (const char *text);  Add line with text in the list of lines of this macro. ;  ; void Browse (TBrowser *b) override;  When clicking in the browser, the following action is performed on this macro, depending the content of the variable TMacro.Browse. ;  ; virtual TMD5 * Checksum ();  Returns checksum of the current content. ;  ; virtual Longptr_t Exec (const char *params=nullptr, Int_t *error=nullptr);  Execute this macro with params, if params is 0, default parameters (set via SetParams) are used. ;  ; virtual TObjString * GetLineWith (const char *text) const;  Search the first line containing text. ;  ; TList * GetListOfLines () const;  ; TClass * IsA () const override;  ; virtual Bool_t Load () const;  Load the macro into the interpreter. ;  ; TMacro & operator= (const TMacro &);  Copy constructor. ;  ; void Paint (Option_t *option="""") override;  Execute this macro (called by TPad::Paint). ;  ; void Print (Option_t *option="""") const override;  Print contents of this macro. ;  ; virtual Int_t ReadFile (const char *filename);  Read lines in filename in this macro. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Sa",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:6864,Integrability,message,message,6864,"option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:7405,Integrability,message,message,7405,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:8395,Integrability,message,message,8395,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:11238,Integrability,message,message,11238,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:11611,Integrability,message,message,11611,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  G",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:15408,Integrability,depend,depending,15408,"TMacro ; (; const TMacro & ; macro). Copy constructor. ; Definition at line 98 of file TMacro.cxx. ◆ TMacro() [3/3]. TMacro::TMacro ; (; const char * ; name, . const char * ; title = """" . ). Create a macro with a name and a title. ; If name contains a '.' it is assumed to be the name of a file, and; the macro is automatically filled by reading all the lines in the file,; if the title is empty, it will be set to the name of the file,; the name will be set to the filename without path or extension. . Definition at line 75 of file TMacro.cxx. ◆ ~TMacro(). TMacro::~TMacro ; (; ). virtual . Delete this macro. ; Definition at line 111 of file TMacro.cxx. Member Function Documentation. ◆ AddLine(). TObjString * TMacro::AddLine ; (; const char * ; text). virtual . Add line with text in the list of lines of this macro. ; Definition at line 138 of file TMacro.cxx. ◆ Browse(). void TMacro::Browse ; (; TBrowser * ; b). overridevirtual . When clicking in the browser, the following action is performed on this macro, depending the content of the variable TMacro.Browse. ; TMacro.Browse can be set in the system.rootrc or .rootrc file like: TMacro.Browse : Action; TMacro::Browsevoid Browse(TBrowser *b) overrideWhen clicking in the browser, the following action is performed on this macro, depending the content ...Definition TMacro.cxx:171; or set via gEnv->SetValue, eg gEnv->SetValue(""TMacro.Browse"",""Print"");; gEnvR__EXTERN TEnv * gEnvDefinition TEnv.h:170; TEnv::SetValuevirtual void SetValue(const char *name, const char *value, EEnvLevel level=kEnvChange, const char *type=nullptr)Set the value of a resource or create a new resource.Definition TEnv.cxx:736; By default TMacro.Browse="""" -if TMacro.Browse ="""" the macro is executed -if TMacro.Browse =""Print"" the macro is printed in stdout -if TMacro.Browse is of the form ""mymacro.C"" the macro void mymacro.C(TMacro *m) is called where m=this macro An example of macro.C saving the macro into a file and viewing it with emacs is shown below: v",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:15681,Integrability,depend,depending,15681,"; If name contains a '.' it is assumed to be the name of a file, and; the macro is automatically filled by reading all the lines in the file,; if the title is empty, it will be set to the name of the file,; the name will be set to the filename without path or extension. . Definition at line 75 of file TMacro.cxx. ◆ ~TMacro(). TMacro::~TMacro ; (; ). virtual . Delete this macro. ; Definition at line 111 of file TMacro.cxx. Member Function Documentation. ◆ AddLine(). TObjString * TMacro::AddLine ; (; const char * ; text). virtual . Add line with text in the list of lines of this macro. ; Definition at line 138 of file TMacro.cxx. ◆ Browse(). void TMacro::Browse ; (; TBrowser * ; b). overridevirtual . When clicking in the browser, the following action is performed on this macro, depending the content of the variable TMacro.Browse. ; TMacro.Browse can be set in the system.rootrc or .rootrc file like: TMacro.Browse : Action; TMacro::Browsevoid Browse(TBrowser *b) overrideWhen clicking in the browser, the following action is performed on this macro, depending the content ...Definition TMacro.cxx:171; or set via gEnv->SetValue, eg gEnv->SetValue(""TMacro.Browse"",""Print"");; gEnvR__EXTERN TEnv * gEnvDefinition TEnv.h:170; TEnv::SetValuevirtual void SetValue(const char *name, const char *value, EEnvLevel level=kEnvChange, const char *type=nullptr)Set the value of a resource or create a new resource.Definition TEnv.cxx:736; By default TMacro.Browse="""" -if TMacro.Browse ="""" the macro is executed -if TMacro.Browse =""Print"" the macro is printed in stdout -if TMacro.Browse is of the form ""mymacro.C"" the macro void mymacro.C(TMacro *m) is called where m=this macro An example of macro.C saving the macro into a file and viewing it with emacs is shown below: void mymacro(TMacro *m) {; m->SaveSource(""xx.log"");; gSystem->Exec(""emacs xx.log&"");; }; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::Execvirtual Int_t Exec(const char *shellcmd)Execute a command.Definition ",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:2437,Modifiability,variab,variable,2437,"ame ""Peaks""; f#define f(i)Definition RSha256.hxx:104; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TMacroClass supporting a collection of lines with C++ code.Definition TMacro.h:31; TObject::Writevirtual Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)Write this object to the current directory.Definition TObject.cxx:886; mTMarker mDefinition textangle.C:8. Definition at line 31 of file TMacro.h. Public Member Functions;  TMacro ();  Create an empty macro, use AddLine() or ReadFile() to fill this macro. ;  ;  TMacro (const char *name, const char *title="""");  Create a macro with a name and a title. ;  ;  TMacro (const TMacro &);  Copy constructor. ;  ; virtual ~TMacro ();  Delete this macro. ;  ; virtual TObjString * AddLine (const char *text);  Add line with text in the list of lines of this macro. ;  ; void Browse (TBrowser *b) override;  When clicking in the browser, the following action is performed on this macro, depending the content of the variable TMacro.Browse. ;  ; virtual TMD5 * Checksum ();  Returns checksum of the current content. ;  ; virtual Longptr_t Exec (const char *params=nullptr, Int_t *error=nullptr);  Execute this macro with params, if params is 0, default parameters (set via SetParams) are used. ;  ; virtual TObjString * GetLineWith (const char *text) const;  Search the first line containing text. ;  ; TList * GetListOfLines () const;  ; TClass * IsA () const override;  ; virtual Bool_t Load () const;  Load the macro into the interpreter. ;  ; TMacro & operator= (const TMacro &);  Copy constructor. ;  ; void Paint (Option_t *option="""") override;  Execute this macro (called by TPad::Paint). ;  ; void Print (Option_t *option="""") const override;  Print contents of this macro. ;  ; virtual Int_t ReadFile (const char *filename);  Read lines in filename in this macro. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Sa",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:3763,Modifiability,inherit,inherited,3763,"ch the first line containing text. ;  ; TList * GetListOfLines () const;  ; TClass * IsA () const override;  ; virtual Bool_t Load () const;  Load the macro into the interpreter. ;  ; TMacro & operator= (const TMacro &);  Copy constructor. ;  ; void Paint (Option_t *option="""") override;  Execute this macro (called by TPad::Paint). ;  ; void Print (Option_t *option="""") const override;  Print contents of this macro. ;  ; virtual Int_t ReadFile (const char *filename);  Read lines in filename in this macro. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save macro source on stream out. ;  ; virtual void SaveSource (const char *filename);  Save macro source in filename. ;  ; virtual void SetParams (const char *params=nullptr);  Set default parameters to execute this macro. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:5503,Modifiability,inherit,inherited,5503,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  D",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:6494,Modifiability,inherit,inheritance,6494,"ions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:8493,Modifiability,inherit,inherits,8493,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:8610,Modifiability,inherit,inherits,8610,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:12112,Modifiability,inherit,inherited,12112,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void SaveSource (FILE *fp);  Save macro source in file pointer fp. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TList * fLines;  ; TString fParams;  ;  Protected Attributes inherited from TNamed; TSt",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:12322,Modifiability,inherit,inherited,12322,"stem error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void SaveSource (FILE *fp);  Save macro source in file pointer fp. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TList * fLines;  ; TString fParams;  ;  Protected Attributes inherited from TNamed; TSt",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:12936,Modifiability,inherit,inherited,12936,"ic constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void SaveSource (FILE *fp);  Save macro source in file pointer fp. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TList * fLines;  ; TString fParams;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:13202,Modifiability,inherit,inherited,13202,"_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void SaveSource (FILE *fp);  Save macro source in file pointer fp. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TList * fLines;  ; TString fParams;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMacro.h>. Inheritance diagram for TMacro:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destruct",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:13306,Modifiability,inherit,inherited,13306,"();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void SaveSource (FILE *fp);  Save macro source in file pointer fp. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TList * fLines;  ; TString fParams;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMacro.h>. Inheritance diagram for TMacro:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMacro() [1/3]. TMacro::TMacro ; (; ). Create an empty macro, use AddLine() or ReadFile() to fill this macro. ; Definition at line 64 of file TMacro.cxx. ◆ TMa",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:13947,Modifiability,inherit,inherited,13947,"id DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TList * fLines;  ; TString fParams;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMacro.h>. Inheritance diagram for TMacro:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMacro() [1/3]. TMacro::TMacro ; (; ). Create an empty macro, use AddLine() or ReadFile() to fill this macro. ; Definition at line 64 of file TMacro.cxx. ◆ TMacro() [2/3]. TMacro::TMacro ; (; const TMacro & ; macro). Copy constructor. ; Definition at line 98 of file TMacro.cxx. ◆ TMacro() [3/3]. TMacro::TMacro ; (; const char * ; name, . const char * ; title = """" . ). Create a macro with a name and a title. ; If name contains a '.' it is assumed to be the name of a file, and; the macro is automatically filled by reading all the lines in the file,; if the title is empty, it will be set to the name of the file,; the name will be set to the filename without path or extension. . Definition at line 75 of file TMacro.cxx. ◆ ~TMacro(). TMacro::~TMacro ; (; ",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:15437,Modifiability,variab,variable,15437,"TMacro ; (; const TMacro & ; macro). Copy constructor. ; Definition at line 98 of file TMacro.cxx. ◆ TMacro() [3/3]. TMacro::TMacro ; (; const char * ; name, . const char * ; title = """" . ). Create a macro with a name and a title. ; If name contains a '.' it is assumed to be the name of a file, and; the macro is automatically filled by reading all the lines in the file,; if the title is empty, it will be set to the name of the file,; the name will be set to the filename without path or extension. . Definition at line 75 of file TMacro.cxx. ◆ ~TMacro(). TMacro::~TMacro ; (; ). virtual . Delete this macro. ; Definition at line 111 of file TMacro.cxx. Member Function Documentation. ◆ AddLine(). TObjString * TMacro::AddLine ; (; const char * ; text). virtual . Add line with text in the list of lines of this macro. ; Definition at line 138 of file TMacro.cxx. ◆ Browse(). void TMacro::Browse ; (; TBrowser * ; b). overridevirtual . When clicking in the browser, the following action is performed on this macro, depending the content of the variable TMacro.Browse. ; TMacro.Browse can be set in the system.rootrc or .rootrc file like: TMacro.Browse : Action; TMacro::Browsevoid Browse(TBrowser *b) overrideWhen clicking in the browser, the following action is performed on this macro, depending the content ...Definition TMacro.cxx:171; or set via gEnv->SetValue, eg gEnv->SetValue(""TMacro.Browse"",""Print"");; gEnvR__EXTERN TEnv * gEnvDefinition TEnv.h:170; TEnv::SetValuevirtual void SetValue(const char *name, const char *value, EEnvLevel level=kEnvChange, const char *type=nullptr)Set the value of a resource or create a new resource.Definition TEnv.cxx:736; By default TMacro.Browse="""" -if TMacro.Browse ="""" the macro is executed -if TMacro.Browse =""Print"" the macro is printed in stdout -if TMacro.Browse is of the form ""mymacro.C"" the macro void mymacro.C(TMacro *m) is called where m=this macro An example of macro.C saving the macro into a file and viewing it with emacs is shown below: v",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:2383,Performance,perform,performed,2383,"ame ""Peaks""; f#define f(i)Definition RSha256.hxx:104; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TMacroClass supporting a collection of lines with C++ code.Definition TMacro.h:31; TObject::Writevirtual Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)Write this object to the current directory.Definition TObject.cxx:886; mTMarker mDefinition textangle.C:8. Definition at line 31 of file TMacro.h. Public Member Functions;  TMacro ();  Create an empty macro, use AddLine() or ReadFile() to fill this macro. ;  ;  TMacro (const char *name, const char *title="""");  Create a macro with a name and a title. ;  ;  TMacro (const TMacro &);  Copy constructor. ;  ; virtual ~TMacro ();  Delete this macro. ;  ; virtual TObjString * AddLine (const char *text);  Add line with text in the list of lines of this macro. ;  ; void Browse (TBrowser *b) override;  When clicking in the browser, the following action is performed on this macro, depending the content of the variable TMacro.Browse. ;  ; virtual TMD5 * Checksum ();  Returns checksum of the current content. ;  ; virtual Longptr_t Exec (const char *params=nullptr, Int_t *error=nullptr);  Execute this macro with params, if params is 0, default parameters (set via SetParams) are used. ;  ; virtual TObjString * GetLineWith (const char *text) const;  Search the first line containing text. ;  ; TList * GetListOfLines () const;  ; TClass * IsA () const override;  ; virtual Bool_t Load () const;  Load the macro into the interpreter. ;  ; TMacro & operator= (const TMacro &);  Copy constructor. ;  ; void Paint (Option_t *option="""") override;  Execute this macro (called by TPad::Paint). ;  ; void Print (Option_t *option="""") const override;  Print contents of this macro. ;  ; virtual Int_t ReadFile (const char *filename);  Read lines in filename in this macro. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Sa",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:15383,Performance,perform,performed,15383,"TMacro ; (; const TMacro & ; macro). Copy constructor. ; Definition at line 98 of file TMacro.cxx. ◆ TMacro() [3/3]. TMacro::TMacro ; (; const char * ; name, . const char * ; title = """" . ). Create a macro with a name and a title. ; If name contains a '.' it is assumed to be the name of a file, and; the macro is automatically filled by reading all the lines in the file,; if the title is empty, it will be set to the name of the file,; the name will be set to the filename without path or extension. . Definition at line 75 of file TMacro.cxx. ◆ ~TMacro(). TMacro::~TMacro ; (; ). virtual . Delete this macro. ; Definition at line 111 of file TMacro.cxx. Member Function Documentation. ◆ AddLine(). TObjString * TMacro::AddLine ; (; const char * ; text). virtual . Add line with text in the list of lines of this macro. ; Definition at line 138 of file TMacro.cxx. ◆ Browse(). void TMacro::Browse ; (; TBrowser * ; b). overridevirtual . When clicking in the browser, the following action is performed on this macro, depending the content of the variable TMacro.Browse. ; TMacro.Browse can be set in the system.rootrc or .rootrc file like: TMacro.Browse : Action; TMacro::Browsevoid Browse(TBrowser *b) overrideWhen clicking in the browser, the following action is performed on this macro, depending the content ...Definition TMacro.cxx:171; or set via gEnv->SetValue, eg gEnv->SetValue(""TMacro.Browse"",""Print"");; gEnvR__EXTERN TEnv * gEnvDefinition TEnv.h:170; TEnv::SetValuevirtual void SetValue(const char *name, const char *value, EEnvLevel level=kEnvChange, const char *type=nullptr)Set the value of a resource or create a new resource.Definition TEnv.cxx:736; By default TMacro.Browse="""" -if TMacro.Browse ="""" the macro is executed -if TMacro.Browse =""Print"" the macro is printed in stdout -if TMacro.Browse is of the form ""mymacro.C"" the macro void mymacro.C(TMacro *m) is called where m=this macro An example of macro.C saving the macro into a file and viewing it with emacs is shown below: v",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:15656,Performance,perform,performed,15656,"; If name contains a '.' it is assumed to be the name of a file, and; the macro is automatically filled by reading all the lines in the file,; if the title is empty, it will be set to the name of the file,; the name will be set to the filename without path or extension. . Definition at line 75 of file TMacro.cxx. ◆ ~TMacro(). TMacro::~TMacro ; (; ). virtual . Delete this macro. ; Definition at line 111 of file TMacro.cxx. Member Function Documentation. ◆ AddLine(). TObjString * TMacro::AddLine ; (; const char * ; text). virtual . Add line with text in the list of lines of this macro. ; Definition at line 138 of file TMacro.cxx. ◆ Browse(). void TMacro::Browse ; (; TBrowser * ; b). overridevirtual . When clicking in the browser, the following action is performed on this macro, depending the content of the variable TMacro.Browse. ; TMacro.Browse can be set in the system.rootrc or .rootrc file like: TMacro.Browse : Action; TMacro::Browsevoid Browse(TBrowser *b) overrideWhen clicking in the browser, the following action is performed on this macro, depending the content ...Definition TMacro.cxx:171; or set via gEnv->SetValue, eg gEnv->SetValue(""TMacro.Browse"",""Print"");; gEnvR__EXTERN TEnv * gEnvDefinition TEnv.h:170; TEnv::SetValuevirtual void SetValue(const char *name, const char *value, EEnvLevel level=kEnvChange, const char *type=nullptr)Set the value of a resource or create a new resource.Definition TEnv.cxx:736; By default TMacro.Browse="""" -if TMacro.Browse ="""" the macro is executed -if TMacro.Browse =""Print"" the macro is printed in stdout -if TMacro.Browse is of the form ""mymacro.C"" the macro void mymacro.C(TMacro *m) is called where m=this macro An example of macro.C saving the macro into a file and viewing it with emacs is shown below: void mymacro(TMacro *m) {; m->SaveSource(""xx.log"");; gSystem->Exec(""emacs xx.log&"");; }; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::Execvirtual Int_t Exec(const char *shellcmd)Execute a command.Definition ",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:18536,Performance,load,loading,18536," ; params = nullptr, . Int_t * ; error = nullptr . ). virtual . Execute this macro with params, if params is 0, default parameters (set via SetParams) are used. ; error is set to an TInterpreter::EErrorCode by TApplication::ProcessLine(). Returns the result of the macro (return value or value of the last expression), cast to a Long_t. ; Reimplemented in TEveMacro.; Definition at line 262 of file TMacro.cxx. ◆ GetLineWith(). TObjString * TMacro::GetLineWith ; (; const char * ; text); const. virtual . Search the first line containing text. ; Definition at line 297 of file TMacro.cxx. ◆ GetListOfLines(). TList * TMacro::GetListOfLines ; (; ); const. inline . Definition at line 51 of file TMacro.h. ◆ IsA(). TClass * TMacro::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 59 of file TMacro.h. ◆ Load(). Bool_t TMacro::Load ; (; ); const. virtual . Load the macro into the interpreter. ; Return true in case the loading was successful. ; Definition at line 244 of file TMacro.cxx. ◆ operator=(). TMacro & TMacro::operator= ; (; const TMacro & ; macro). Copy constructor. ; Definition at line 120 of file TMacro.cxx. ◆ Paint(). void TMacro::Paint ; (; Option_t * ; option = """"). overridevirtual . Execute this macro (called by TPad::Paint). ; Reimplemented from TObject.; Definition at line 311 of file TMacro.cxx. ◆ Print(). void TMacro::Print ; (; Option_t * ; option = """"); const. overridevirtual . Print contents of this macro. ; Reimplemented from TObject.; Definition at line 319 of file TMacro.cxx. ◆ ReadFile(). Int_t TMacro::ReadFile ; (; const char * ; filename). virtual . Read lines in filename in this macro. ; Definition at line 329 of file TMacro.cxx. ◆ SavePrimitive(). void TMacro::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save macro source on stream out. ; Reimplemented from TObject.; Definition at line 382 of file TMacro.cxx. ◆ SaveSource()",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:2503,Security,checksum,checksum,2503,"ores objects in a file-system-li...Definition TFile.h:53; TMacroClass supporting a collection of lines with C++ code.Definition TMacro.h:31; TObject::Writevirtual Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)Write this object to the current directory.Definition TObject.cxx:886; mTMarker mDefinition textangle.C:8. Definition at line 31 of file TMacro.h. Public Member Functions;  TMacro ();  Create an empty macro, use AddLine() or ReadFile() to fill this macro. ;  ;  TMacro (const char *name, const char *title="""");  Create a macro with a name and a title. ;  ;  TMacro (const TMacro &);  Copy constructor. ;  ; virtual ~TMacro ();  Delete this macro. ;  ; virtual TObjString * AddLine (const char *text);  Add line with text in the list of lines of this macro. ;  ; void Browse (TBrowser *b) override;  When clicking in the browser, the following action is performed on this macro, depending the content of the variable TMacro.Browse. ;  ; virtual TMD5 * Checksum ();  Returns checksum of the current content. ;  ; virtual Longptr_t Exec (const char *params=nullptr, Int_t *error=nullptr);  Execute this macro with params, if params is 0, default parameters (set via SetParams) are used. ;  ; virtual TObjString * GetLineWith (const char *text) const;  Search the first line containing text. ;  ; TList * GetListOfLines () const;  ; TClass * IsA () const override;  ; virtual Bool_t Load () const;  Load the macro into the interpreter. ;  ; TMacro & operator= (const TMacro &);  Copy constructor. ;  ; void Paint (Option_t *option="""") override;  Execute this macro (called by TPad::Paint). ;  ; void Print (Option_t *option="""") const override;  Print contents of this macro. ;  ; virtual Int_t ReadFile (const char *filename);  Read lines in filename in this macro. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save macro source on stream out. ;  ; virtual void SaveSource (const char *filename);  Save macro source in filename. ;  ; virtual",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:4631,Security,hash,hash,4631," override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:16774,Security,checksum,checksum,16774,".Browse"",""Print"");; gEnvR__EXTERN TEnv * gEnvDefinition TEnv.h:170; TEnv::SetValuevirtual void SetValue(const char *name, const char *value, EEnvLevel level=kEnvChange, const char *type=nullptr)Set the value of a resource or create a new resource.Definition TEnv.cxx:736; By default TMacro.Browse="""" -if TMacro.Browse ="""" the macro is executed -if TMacro.Browse =""Print"" the macro is printed in stdout -if TMacro.Browse is of the form ""mymacro.C"" the macro void mymacro.C(TMacro *m) is called where m=this macro An example of macro.C saving the macro into a file and viewing it with emacs is shown below: void mymacro(TMacro *m) {; m->SaveSource(""xx.log"");; gSystem->Exec(""emacs xx.log&"");; }; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::Execvirtual Int_t Exec(const char *shellcmd)Execute a command.Definition TSystem.cxx:653. Reimplemented from TObject.; Definition at line 171 of file TMacro.cxx. ◆ Checksum(). TMD5 * TMacro::Checksum ; (; ). virtual . Returns checksum of the current content. ; The returned TMD5 object must be deleted by the user. Returns 0 in case of error. ; Definition at line 192 of file TMacro.cxx. ◆ Class(). static TClass * TMacro::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMacro::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMacro::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 59 of file TMacro.h. ◆ DeclFileName(). static const char * TMacro::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 59 of file TMacro.h. ◆ Exec(). Longptr_t TMacro::Exec ; (; const char * ; params = nullptr, . Int_t * ; error = nullptr . ). virtual . Execute this macro with params, if params is 0, default parameters (set via SetParams) are used. ; error is set to an TInterpreter::EErrorCode by TApplication::ProcessLine(). Returns the r",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:16435,Testability,log,log,16435,"o.Browse. ; TMacro.Browse can be set in the system.rootrc or .rootrc file like: TMacro.Browse : Action; TMacro::Browsevoid Browse(TBrowser *b) overrideWhen clicking in the browser, the following action is performed on this macro, depending the content ...Definition TMacro.cxx:171; or set via gEnv->SetValue, eg gEnv->SetValue(""TMacro.Browse"",""Print"");; gEnvR__EXTERN TEnv * gEnvDefinition TEnv.h:170; TEnv::SetValuevirtual void SetValue(const char *name, const char *value, EEnvLevel level=kEnvChange, const char *type=nullptr)Set the value of a resource or create a new resource.Definition TEnv.cxx:736; By default TMacro.Browse="""" -if TMacro.Browse ="""" the macro is executed -if TMacro.Browse =""Print"" the macro is printed in stdout -if TMacro.Browse is of the form ""mymacro.C"" the macro void mymacro.C(TMacro *m) is called where m=this macro An example of macro.C saving the macro into a file and viewing it with emacs is shown below: void mymacro(TMacro *m) {; m->SaveSource(""xx.log"");; gSystem->Exec(""emacs xx.log&"");; }; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::Execvirtual Int_t Exec(const char *shellcmd)Execute a command.Definition TSystem.cxx:653. Reimplemented from TObject.; Definition at line 171 of file TMacro.cxx. ◆ Checksum(). TMD5 * TMacro::Checksum ; (; ). virtual . Returns checksum of the current content. ; The returned TMD5 object must be deleted by the user. Returns 0 in case of error. ; Definition at line 192 of file TMacro.cxx. ◆ Class(). static TClass * TMacro::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMacro::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMacro::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 59 of file TMacro.h. ◆ DeclFileName(). static const char * TMacro::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definit",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMacro.html:16467,Testability,log,log,16467,"em.rootrc or .rootrc file like: TMacro.Browse : Action; TMacro::Browsevoid Browse(TBrowser *b) overrideWhen clicking in the browser, the following action is performed on this macro, depending the content ...Definition TMacro.cxx:171; or set via gEnv->SetValue, eg gEnv->SetValue(""TMacro.Browse"",""Print"");; gEnvR__EXTERN TEnv * gEnvDefinition TEnv.h:170; TEnv::SetValuevirtual void SetValue(const char *name, const char *value, EEnvLevel level=kEnvChange, const char *type=nullptr)Set the value of a resource or create a new resource.Definition TEnv.cxx:736; By default TMacro.Browse="""" -if TMacro.Browse ="""" the macro is executed -if TMacro.Browse =""Print"" the macro is printed in stdout -if TMacro.Browse is of the form ""mymacro.C"" the macro void mymacro.C(TMacro *m) is called where m=this macro An example of macro.C saving the macro into a file and viewing it with emacs is shown below: void mymacro(TMacro *m) {; m->SaveSource(""xx.log"");; gSystem->Exec(""emacs xx.log&"");; }; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::Execvirtual Int_t Exec(const char *shellcmd)Execute a command.Definition TSystem.cxx:653. Reimplemented from TObject.; Definition at line 171 of file TMacro.cxx. ◆ Checksum(). TMD5 * TMacro::Checksum ; (; ). virtual . Returns checksum of the current content. ; The returned TMD5 object must be deleted by the user. Returns 0 in case of error. ; Definition at line 192 of file TMacro.cxx. ◆ Class(). static TClass * TMacro::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMacro::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMacro::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 59 of file TMacro.h. ◆ DeclFileName(). static const char * TMacro::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 59 of file TMacro.h. ◆ Exec(). Longpt",MatchSource.WIKI,doc/master/classTMacro.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMacro.html
https://root.cern/doc/master/classTMap.html:9540,Availability,error,error,9540,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:9629,Availability,error,error,9629,"leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTi",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:9784,Availability,error,error,9784," whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is kn",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:10081,Availability,error,error,10081,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:13558,Availability,error,error,13558," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentColle",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:21058,Availability,down,downcast,21058,"p.cxx. ◆ DeleteAll(). void TMap::DeleteAll ; (; ). Remove all (key,value) pairs from the map AND delete the keys AND values when they are allocated on the heap. ; Definition at line 168 of file TMap.cxx. ◆ DeleteEntry(). Bool_t TMap::DeleteEntry ; (; TObject * ; key). Remove (key,value) pair with key from the map. ; Returns true if the key was found and removed, false otherwise. The key and value objects are deleted if map is the owner of keys and values respectively. ; Definition at line 190 of file TMap.cxx. ◆ DeleteKeys(). void TMap::DeleteKeys ; (; ). inline . Definition at line 68 of file TMap.h. ◆ DeleteValues(). void TMap::DeleteValues ; (; ). Remove all (key,value) pairs from the map AND delete the values when they are allocated on the heap. ; Definition at line 151 of file TMap.cxx. ◆ FindObject() [1/2]. TObject * TMap::FindObject ; (; const char * ; keyname); const. overridevirtual . Check if a (key,value) pair exists with keyname as name of the key. ; Returns a TPair* (need to downcast from TObject). Use Key() and Value() to get the pointers to the key and value, respectively. Returns 0 if not found. ; Reimplemented from TCollection.; Definition at line 215 of file TMap.cxx. ◆ FindObject() [2/2]. TObject * TMap::FindObject ; (; const TObject * ; key); const. overridevirtual . Check if a (key,value) pair exists with key as key. ; Returns a TPair* (need to downcast from TObject). Use Key() and Value() to get the pointers to the key and value, respectively. Returns 0 if not found. ; Reimplemented from TCollection.; Definition at line 226 of file TMap.cxx. ◆ GetObjectRef(). TObject ** TMap::GetObjectRef ; (; const TObject * ; obj); const. inlineoverridevirtual . Implements TCollection.; Definition at line 74 of file TMap.h. ◆ GetTable(). const THashTable * TMap::GetTable ; (; ); const. inline . Definition at line 75 of file TMap.h. ◆ GetValue() [1/2]. TObject * TMap::GetValue ; (; const char * ; keyname); const. Returns a pointer to the value associated with ",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:21443,Availability,down,downcast,21443," key and value objects are deleted if map is the owner of keys and values respectively. ; Definition at line 190 of file TMap.cxx. ◆ DeleteKeys(). void TMap::DeleteKeys ; (; ). inline . Definition at line 68 of file TMap.h. ◆ DeleteValues(). void TMap::DeleteValues ; (; ). Remove all (key,value) pairs from the map AND delete the values when they are allocated on the heap. ; Definition at line 151 of file TMap.cxx. ◆ FindObject() [1/2]. TObject * TMap::FindObject ; (; const char * ; keyname); const. overridevirtual . Check if a (key,value) pair exists with keyname as name of the key. ; Returns a TPair* (need to downcast from TObject). Use Key() and Value() to get the pointers to the key and value, respectively. Returns 0 if not found. ; Reimplemented from TCollection.; Definition at line 215 of file TMap.cxx. ◆ FindObject() [2/2]. TObject * TMap::FindObject ; (; const TObject * ; key); const. overridevirtual . Check if a (key,value) pair exists with key as key. ; Returns a TPair* (need to downcast from TObject). Use Key() and Value() to get the pointers to the key and value, respectively. Returns 0 if not found. ; Reimplemented from TCollection.; Definition at line 226 of file TMap.cxx. ◆ GetObjectRef(). TObject ** TMap::GetObjectRef ; (; const TObject * ; obj); const. inlineoverridevirtual . Implements TCollection.; Definition at line 74 of file TMap.h. ◆ GetTable(). const THashTable * TMap::GetTable ; (; ); const. inline . Definition at line 75 of file TMap.h. ◆ GetValue() [1/2]. TObject * TMap::GetValue ; (; const char * ; keyname); const. Returns a pointer to the value associated with keyname as name of the key. ; Definition at line 236 of file TMap.cxx. ◆ GetValue() [2/2]. TObject * TMap::GetValue ; (; const TObject * ; key); const. Returns a pointer to the value associated with key. ; Definition at line 246 of file TMap.cxx. ◆ IsA(). TClass * TMap::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TCollectio",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:478,Energy Efficiency,efficient,efficient,478,". ROOT: TMap Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TMap Class ReferenceCore ROOT classes » Containers. ; TMap implements an associative array of (key,value) pairs using a THashTable for efficient retrieval (therefore TMap does not conserve the order of the entries). ; The hash value is calculated using the value returned by the keys Hash() function and the key comparison is done via the IsEqual() function. Both key and value must inherit from TObject. ; Definition at line 40 of file TMap.h. Public Types; typedef TMapIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMap (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  TMap ctor. See THashTable for a description of the arguments. ;  ; virtual ~TMap ();  TMap dtor. ;  ; void Add (TObject *key, TObject *value);  Add a (key,value) pair to the map. ;  ; void Add (TObject *obj) override;  This function may not be used (but we need to provide it since it is a pure virtual in TCollection). ",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:2595,Energy Efficiency,allocate,allocated,2595,"alidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMap (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  TMap ctor. See THashTable for a description of the arguments. ;  ; virtual ~TMap ();  TMap dtor. ;  ; void Add (TObject *key, TObject *value);  Add a (key,value) pair to the map. ;  ; void Add (TObject *obj) override;  This function may not be used (but we need to provide it since it is a pure virtual in TCollection). ;  ; Float_t AverageCollisions () const;  Return the ratio of entries vs occupied slots. ;  ; Int_t Capacity () const;  Return number of slots in the hashtable. ;  ; void Clear (Option_t *option="""") override;  Remove all (key,value) pairs from the map. ;  ; Int_t Collisions (const char *keyname) const;  Returns the number of collisions for a key with a certain name (i.e. ;  ; Int_t Collisions (TObject *key) const;  Returns the number of collisions for a key (i.e. ;  ; void Delete (Option_t *option="""") override;  Remove all (key,value) pairs from the map AND delete the keys when they are allocated on the heap. ;  ; void DeleteAll ();  Remove all (key,value) pairs from the map AND delete the keys AND values when they are allocated on the heap. ;  ; Bool_t DeleteEntry (TObject *key);  Remove (key,value) pair with key from the map. ;  ; void DeleteKeys ();  ; void DeleteValues ();  Remove all (key,value) pairs from the map AND delete the values when they are allocated on the heap. ;  ; TObject * FindObject (const char *keyname) const override;  Check if a (key,value) pair exists with keyname as name of the key. ;  ; TObject * FindObject (const TObject *key) const override;  Check if a (key,value) pair exists with key as key. ;  ; TObject ** GetObjectRef (const TObject *obj) const override;  ; const THashTable * GetTable () const;  ; TObject * GetValue (const char *keyname) const;  Returns a pointer to the value associated with keyname as name of the key. ;  ; TObject * GetValue (const TObject *key) const;  Returns a poin",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:2730,Energy Efficiency,allocate,allocated,2730,"p ctor. See THashTable for a description of the arguments. ;  ; virtual ~TMap ();  TMap dtor. ;  ; void Add (TObject *key, TObject *value);  Add a (key,value) pair to the map. ;  ; void Add (TObject *obj) override;  This function may not be used (but we need to provide it since it is a pure virtual in TCollection). ;  ; Float_t AverageCollisions () const;  Return the ratio of entries vs occupied slots. ;  ; Int_t Capacity () const;  Return number of slots in the hashtable. ;  ; void Clear (Option_t *option="""") override;  Remove all (key,value) pairs from the map. ;  ; Int_t Collisions (const char *keyname) const;  Returns the number of collisions for a key with a certain name (i.e. ;  ; Int_t Collisions (TObject *key) const;  Returns the number of collisions for a key (i.e. ;  ; void Delete (Option_t *option="""") override;  Remove all (key,value) pairs from the map AND delete the keys when they are allocated on the heap. ;  ; void DeleteAll ();  Remove all (key,value) pairs from the map AND delete the keys AND values when they are allocated on the heap. ;  ; Bool_t DeleteEntry (TObject *key);  Remove (key,value) pair with key from the map. ;  ; void DeleteKeys ();  ; void DeleteValues ();  Remove all (key,value) pairs from the map AND delete the values when they are allocated on the heap. ;  ; TObject * FindObject (const char *keyname) const override;  Check if a (key,value) pair exists with keyname as name of the key. ;  ; TObject * FindObject (const TObject *key) const override;  Check if a (key,value) pair exists with key as key. ;  ; TObject ** GetObjectRef (const TObject *obj) const override;  ; const THashTable * GetTable () const;  ; TObject * GetValue (const char *keyname) const;  Returns a pointer to the value associated with keyname as name of the key. ;  ; TObject * GetValue (const TObject *key) const;  Returns a pointer to the value associated with key. ;  ; TClass * IsA () const override;  ; Bool_t IsOwnerValue () const;  ; TIterator * MakeIterator (Bool_",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:2970,Energy Efficiency,allocate,allocated,2970,"y not be used (but we need to provide it since it is a pure virtual in TCollection). ;  ; Float_t AverageCollisions () const;  Return the ratio of entries vs occupied slots. ;  ; Int_t Capacity () const;  Return number of slots in the hashtable. ;  ; void Clear (Option_t *option="""") override;  Remove all (key,value) pairs from the map. ;  ; Int_t Collisions (const char *keyname) const;  Returns the number of collisions for a key with a certain name (i.e. ;  ; Int_t Collisions (TObject *key) const;  Returns the number of collisions for a key (i.e. ;  ; void Delete (Option_t *option="""") override;  Remove all (key,value) pairs from the map AND delete the keys when they are allocated on the heap. ;  ; void DeleteAll ();  Remove all (key,value) pairs from the map AND delete the keys AND values when they are allocated on the heap. ;  ; Bool_t DeleteEntry (TObject *key);  Remove (key,value) pair with key from the map. ;  ; void DeleteKeys ();  ; void DeleteValues ();  Remove all (key,value) pairs from the map AND delete the values when they are allocated on the heap. ;  ; TObject * FindObject (const char *keyname) const override;  Check if a (key,value) pair exists with keyname as name of the key. ;  ; TObject * FindObject (const TObject *key) const override;  Check if a (key,value) pair exists with key as key. ;  ; TObject ** GetObjectRef (const TObject *obj) const override;  ; const THashTable * GetTable () const;  ; TObject * GetValue (const char *keyname) const;  Returns a pointer to the value associated with keyname as name of the key. ;  ; TObject * GetValue (const TObject *key) const;  Returns a pointer to the value associated with key. ;  ; TClass * IsA () const override;  ; Bool_t IsOwnerValue () const;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Create an iterator for TMap. ;  ; TObject * operator() (const char *keyname) const;  ; TObject * operator() (const TObject *key) const;  ; void Rehash (Int_t newCapacity, Bool_t checkObjValidity",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:19971,Energy Efficiency,allocate,allocated,19971,"to delete only keys;; DeleteValues() to delete only values;; DeleteAll() to delete both keys and values. . Implements TCollection.; Definition at line 97 of file TMap.cxx. ◆ Collisions() [1/2]. Int_t TMap::Collisions ; (; const char * ; keyname); const. Returns the number of collisions for a key with a certain name (i.e. ; number of objects in same slot in the hash table, i.e. length of linked list). ; Definition at line 116 of file TMap.cxx. ◆ Collisions() [2/2]. Int_t TMap::Collisions ; (; TObject * ; key); const. Returns the number of collisions for a key (i.e. ; number of objects in same slot in the hash table, i.e. length of linked list). ; Definition at line 125 of file TMap.cxx. ◆ DeclFileName(). static const char * TMap::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 90 of file TMap.h. ◆ Delete(). void TMap::Delete ; (; Option_t * ; option = """"). overridevirtual . Remove all (key,value) pairs from the map AND delete the keys when they are allocated on the heap. ; Implements TCollection.; Definition at line 134 of file TMap.cxx. ◆ DeleteAll(). void TMap::DeleteAll ; (; ). Remove all (key,value) pairs from the map AND delete the keys AND values when they are allocated on the heap. ; Definition at line 168 of file TMap.cxx. ◆ DeleteEntry(). Bool_t TMap::DeleteEntry ; (; TObject * ; key). Remove (key,value) pair with key from the map. ; Returns true if the key was found and removed, false otherwise. The key and value objects are deleted if map is the owner of keys and values respectively. ; Definition at line 190 of file TMap.cxx. ◆ DeleteKeys(). void TMap::DeleteKeys ; (; ). inline . Definition at line 68 of file TMap.h. ◆ DeleteValues(). void TMap::DeleteValues ; (; ). Remove all (key,value) pairs from the map AND delete the values when they are allocated on the heap. ; Definition at line 151 of file TMap.cxx. ◆ FindObject() [1/2]. TObject * TMap::FindObject ; (; const char * ; keyname); const. ",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:20193,Energy Efficiency,allocate,allocated,20193,"; (; const char * ; keyname); const. Returns the number of collisions for a key with a certain name (i.e. ; number of objects in same slot in the hash table, i.e. length of linked list). ; Definition at line 116 of file TMap.cxx. ◆ Collisions() [2/2]. Int_t TMap::Collisions ; (; TObject * ; key); const. Returns the number of collisions for a key (i.e. ; number of objects in same slot in the hash table, i.e. length of linked list). ; Definition at line 125 of file TMap.cxx. ◆ DeclFileName(). static const char * TMap::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 90 of file TMap.h. ◆ Delete(). void TMap::Delete ; (; Option_t * ; option = """"). overridevirtual . Remove all (key,value) pairs from the map AND delete the keys when they are allocated on the heap. ; Implements TCollection.; Definition at line 134 of file TMap.cxx. ◆ DeleteAll(). void TMap::DeleteAll ; (; ). Remove all (key,value) pairs from the map AND delete the keys AND values when they are allocated on the heap. ; Definition at line 168 of file TMap.cxx. ◆ DeleteEntry(). Bool_t TMap::DeleteEntry ; (; TObject * ; key). Remove (key,value) pair with key from the map. ; Returns true if the key was found and removed, false otherwise. The key and value objects are deleted if map is the owner of keys and values respectively. ; Definition at line 190 of file TMap.cxx. ◆ DeleteKeys(). void TMap::DeleteKeys ; (; ). inline . Definition at line 68 of file TMap.h. ◆ DeleteValues(). void TMap::DeleteValues ; (; ). Remove all (key,value) pairs from the map AND delete the values when they are allocated on the heap. ; Definition at line 151 of file TMap.cxx. ◆ FindObject() [1/2]. TObject * TMap::FindObject ; (; const char * ; keyname); const. overridevirtual . Check if a (key,value) pair exists with keyname as name of the key. ; Returns a TPair* (need to downcast from TObject). Use Key() and Value() to get the pointers to the key and value, respectively. ",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:20792,Energy Efficiency,allocate,allocated,20792,"declaration ; Definition at line 90 of file TMap.h. ◆ Delete(). void TMap::Delete ; (; Option_t * ; option = """"). overridevirtual . Remove all (key,value) pairs from the map AND delete the keys when they are allocated on the heap. ; Implements TCollection.; Definition at line 134 of file TMap.cxx. ◆ DeleteAll(). void TMap::DeleteAll ; (; ). Remove all (key,value) pairs from the map AND delete the keys AND values when they are allocated on the heap. ; Definition at line 168 of file TMap.cxx. ◆ DeleteEntry(). Bool_t TMap::DeleteEntry ; (; TObject * ; key). Remove (key,value) pair with key from the map. ; Returns true if the key was found and removed, false otherwise. The key and value objects are deleted if map is the owner of keys and values respectively. ; Definition at line 190 of file TMap.cxx. ◆ DeleteKeys(). void TMap::DeleteKeys ; (; ). inline . Definition at line 68 of file TMap.h. ◆ DeleteValues(). void TMap::DeleteValues ; (; ). Remove all (key,value) pairs from the map AND delete the values when they are allocated on the heap. ; Definition at line 151 of file TMap.cxx. ◆ FindObject() [1/2]. TObject * TMap::FindObject ; (; const char * ; keyname); const. overridevirtual . Check if a (key,value) pair exists with keyname as name of the key. ; Returns a TPair* (need to downcast from TObject). Use Key() and Value() to get the pointers to the key and value, respectively. Returns 0 if not found. ; Reimplemented from TCollection.; Definition at line 215 of file TMap.cxx. ◆ FindObject() [2/2]. TObject * TMap::FindObject ; (; const TObject * ; key); const. overridevirtual . Check if a (key,value) pair exists with key as key. ; Returns a TPair* (need to downcast from TObject). Use Key() and Value() to get the pointers to the key and value, respectively. Returns 0 if not found. ; Reimplemented from TCollection.; Definition at line 226 of file TMap.cxx. ◆ GetObjectRef(). TObject ** TMap::GetObjectRef ; (; const TObject * ; obj); const. inlineoverridevirtual . Implements ",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:9546,Integrability,message,message,9546,"ar *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; v",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:10087,Integrability,message,message,10087,"bj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname""",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:10948,Integrability,message,message,10948,"ecute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *a",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:13564,Integrability,message,message,13564," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentColle",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:13937,Integrability,message,message,13937," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:18777,Integrability,depend,depending,18777,"ion). ; Use Add(key,value) instead. ; Implements TCollection.; Definition at line 54 of file TMap.cxx. ◆ AverageCollisions(). Float_t TMap::AverageCollisions ; (; ); const. Return the ratio of entries vs occupied slots. ; Definition at line 73 of file TMap.cxx. ◆ Capacity(). Int_t TMap::Capacity ; (; ); const. Return number of slots in the hashtable. ; Use GetSize() to get the number of objects stored in the TMap. ; Definition at line 82 of file TMap.cxx. ◆ Class(). static TClass * TMap::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMap::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMap::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 90 of file TMap.h. ◆ Clear(). void TMap::Clear ; (; Option_t * ; option = """"). overridevirtual . Remove all (key,value) pairs from the map. ; The keys/values are deleted depending on the state of key-ownership (SetOwner()) and value-ownership (SetOwnerValue()).; To delete these objects regardless of the ownership state use:; Delete() to delete only keys;; DeleteValues() to delete only values;; DeleteAll() to delete both keys and values. . Implements TCollection.; Definition at line 97 of file TMap.cxx. ◆ Collisions() [1/2]. Int_t TMap::Collisions ; (; const char * ; keyname); const. Returns the number of collisions for a key with a certain name (i.e. ; number of objects in same slot in the hash table, i.e. length of linked list). ; Definition at line 116 of file TMap.cxx. ◆ Collisions() [2/2]. Int_t TMap::Collisions ; (; TObject * ; key); const. Returns the number of collisions for a key (i.e. ; number of objects in same slot in the hash table, i.e. length of linked list). ; Definition at line 125 of file TMap.cxx. ◆ DeclFileName(). static const char * TMap::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 90 of file ",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:24754,Integrability,depend,depending,24754," ; Returns the key object or 0 in case key was not found. If map is the owner of values, the value is deleted. ; Implements TCollection.; Definition at line 296 of file TMap.cxx. ◆ RemoveEntry(). TPair * TMap::RemoveEntry ; (; TObject * ; key). Remove (key,value) pair with key from the map. ; Returns the pair object or 0 in case the key was not found. It is caller's responsibility to delete the pair and, eventually, the key and value objects. ; Definition at line 320 of file TMap.cxx. ◆ SetOwnerKeyValue(). void TMap::SetOwnerKeyValue ; (; Bool_t ; ownkeys = kTRUE, . Bool_t ; ownvals = kTRUE . ). virtual . Set ownership for keys and values. ; Definition at line 352 of file TMap.cxx. ◆ SetOwnerValue(). void TMap::SetOwnerValue ; (; Bool_t ; enable = kTRUE). virtual . Set whether this map is the owner (enable==true) of its values. ; If it is the owner of its contents, these objects will be deleted whenever the collection itself is deleted. The objects might also be deleted or destructed when Clear is called (depending on the collection). ; Definition at line 341 of file TMap.cxx. ◆ Streamer(). void TMap::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all key/value pairs in the map to or from the I/O buffer. ; Reimplemented from TCollection.; Definition at line 361 of file TMap.cxx. ◆ StreamerNVirtual(). void TMap::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 90 of file TMap.h. ◆ Write() [1/2]. Int_t TMap::Write ; (; const char * ; name = nullptr, . Int_t ; option = 0, . Int_t ; bsize = 0 . ); const. overridevirtual . Write all objects in this map. ; By default all objects in the collection are written individually (each object gets its own key). Note, this is recursive, i.e. objects in collections in the collection are also written individually. To write all objects using a single key specify a name and set option to TObject::kSingleKey (i.e. 1). ; Reimplemented from TCollection.; Definition at line 405 of file TMa",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:726,Modifiability,inherit,inherit,726,". ROOT: TMap Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TMap Class ReferenceCore ROOT classes » Containers. ; TMap implements an associative array of (key,value) pairs using a THashTable for efficient retrieval (therefore TMap does not conserve the order of the entries). ; The hash value is calculated using the value returned by the keys Hash() function and the key comparison is done via the IsEqual() function. Both key and value must inherit from TObject. ; Definition at line 40 of file TMap.h. Public Types; typedef TMapIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMap (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  TMap ctor. See THashTable for a description of the arguments. ;  ; virtual ~TMap ();  TMap dtor. ;  ; void Add (TObject *key, TObject *value);  Add a (key,value) pair to the map. ;  ; void Add (TObject *obj) override;  This function may not be used (but we need to provide it since it is a pure virtual in TCollection). ",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:848,Modifiability,inherit,inherited,848,". ROOT: TMap Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TMap Class ReferenceCore ROOT classes » Containers. ; TMap implements an associative array of (key,value) pairs using a THashTable for efficient retrieval (therefore TMap does not conserve the order of the entries). ; The hash value is calculated using the value returned by the keys Hash() function and the key comparison is done via the IsEqual() function. Both key and value must inherit from TObject. ; Definition at line 40 of file TMap.h. Public Types; typedef TMapIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMap (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  TMap ctor. See THashTable for a description of the arguments. ;  ; virtual ~TMap ();  TMap dtor. ;  ; void Add (TObject *key, TObject *value);  Add a (key,value) pair to the map. ;  ; void Add (TObject *obj) override;  This function may not be used (but we need to provide it since it is a pure virtual in TCollection). ",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:955,Modifiability,inherit,inherited,955,". ROOT: TMap Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TMap Class ReferenceCore ROOT classes » Containers. ; TMap implements an associative array of (key,value) pairs using a THashTable for efficient retrieval (therefore TMap does not conserve the order of the entries). ; The hash value is calculated using the value returned by the keys Hash() function and the key comparison is done via the IsEqual() function. Both key and value must inherit from TObject. ; Definition at line 40 of file TMap.h. Public Types; typedef TMapIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMap (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  TMap ctor. See THashTable for a description of the arguments. ;  ; virtual ~TMap ();  TMap dtor. ;  ; void Add (TObject *key, TObject *value);  Add a (key,value) pair to the map. ;  ; void Add (TObject *obj) override;  This function may not be used (but we need to provide it since it is a pure virtual in TCollection). ",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:4859,Modifiability,inherit,inherited,4859," newCapacity, Bool_t checkObjValidity=kTRUE);  Rehash the underlaying THashTable (see THashTable::Rehash()). ;  ; TObject * Remove (TObject *key) override;  Remove the (key,value) pair with key from the map. ;  ; TPair * RemoveEntry (TObject *key);  Remove (key,value) pair with key from the map. ;  ; virtual void SetOwnerKeyValue (Bool_t ownkeys=kTRUE, Bool_t ownvals=kTRUE);  Set ownership for keys and values. ;  ; virtual void SetOwnerValue (Bool_t enable=kTRUE);  Set whether this map is the owner (enable==true) of its values. ;  ; void Streamer (TBuffer &) override;  Stream all key/value pairs in the map to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this map. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this map. ;  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntrie",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:5205,Modifiability,inherit,inherit,5205,"ap. ;  ; virtual void SetOwnerKeyValue (Bool_t ownkeys=kTRUE, Bool_t ownvals=kTRUE);  Set ownership for keys and values. ;  ; virtual void SetOwnerValue (Bool_t enable=kTRUE);  Set whether this map is the owner (enable==true) of its values. ;  ; void Streamer (TBuffer &) override;  Stream all key/value pairs in the map to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this map. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this map. ;  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () con",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:8340,Modifiability,inherit,inherited,8340,"egexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *optio",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:9245,Modifiability,inherit,inheritance,9245,"lection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () con",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:11046,Modifiability,inherit,inherits,11046,"const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a ",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:11163,Modifiability,inherit,inherits,11163,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:14170,Modifiability,inherit,inherited,14170,"t);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in t",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:14721,Modifiability,inherit,inherited,14721,"le have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EStatusBits { kIsOwnerValue = (1ULL << ( 15 )); };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const override;  Print the collection entry. ;  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collectio",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:15301,Modifiability,inherit,inherited,15301,"atic void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EStatusBits { kIsOwnerValue = (1ULL << ( 15 )); };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const override;  Print the collection entry. ;  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TMap (const TMap &map)=delete;  ; TMap & operator= (const TMap &map)=delete",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:15434,Modifiability,inherit,inherited,15434,"atic void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EStatusBits { kIsOwnerValue = (1ULL << ( 15 )); };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const override;  Print the collection entry. ;  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TMap (const TMap &map)=delete;  ; TMap & operator= (const TMap &map)=delete",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:15687,Modifiability,inherit,inherited,15687,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EStatusBits { kIsOwnerValue = (1ULL << ( 15 )); };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const override;  Print the collection entry. ;  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TMap (const TMap &map)=delete;  ; TMap & operator= (const TMap &map)=delete;  . Private Attributes; THashTable * fTable;  . Friends; class TMapIter;  . Additional Inherited Members;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TMap.h>. Inheritance diagram for TMap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TMapIter TMap::Iterator_t. Definition at line 56 of f",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:16070,Modifiability,inherit,inherited,16070,"at (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EStatusBits { kIsOwnerValue = (1ULL << ( 15 )); };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const override;  Print the collection entry. ;  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TMap (const TMap &map)=delete;  ; TMap & operator= (const TMap &map)=delete;  . Private Attributes; THashTable * fTable;  . Friends; class TMapIter;  . Additional Inherited Members;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TMap.h>. Inheritance diagram for TMap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TMapIter TMap::Iterator_t. Definition at line 56 of file TMap.h. Member Enumeration Documentation. ◆ EStatusBits. enum TMap::EStatusBits. protected . EnumeratorkIsOwnerValue . Definition at line 51 of file TMap.h. Constructor & Destructor Documentation. ◆ TMap() [1/2]. TMap::TMap ; (; const TMap & ; map). privatedelete . ◆ TMap() [2/2]. TMap::TMap ; (; Int_t ; capacity = TCollection:",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:16484,Modifiability,inherit,inherited,16484,"<< ( 3 )); };  . Protected Member Functions; void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const override;  Print the collection entry. ;  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TMap (const TMap &map)=delete;  ; TMap & operator= (const TMap &map)=delete;  . Private Attributes; THashTable * fTable;  . Friends; class TMapIter;  . Additional Inherited Members;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TMap.h>. Inheritance diagram for TMap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TMapIter TMap::Iterator_t. Definition at line 56 of file TMap.h. Member Enumeration Documentation. ◆ EStatusBits. enum TMap::EStatusBits. protected . EnumeratorkIsOwnerValue . Definition at line 51 of file TMap.h. Constructor & Destructor Documentation. ◆ TMap() [1/2]. TMap::TMap ; (; const TMap & ; map). privatedelete . ◆ TMap() [2/2]. TMap::TMap ; (; Int_t ; capacity = TCollection::kInitHashTableCapacity, . Int_t ; rehash = 0 . ). TMap ctor. See THashTable for a description of the arguments. ; Definition at line 34 of file TMap.cxx. ◆ ~TMap(). TMap::~TMap ; (; ). virtual . TMap dtor. ; Objects are not deleted unless the TMap is the owner (set via SetOwner()). ; Definition at line 44 of file TMap.cxx. Member Function Documentation. ◆",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:15903,Performance,perform,perform,15903,"ass_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EStatusBits { kIsOwnerValue = (1ULL << ( 15 )); };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const override;  Print the collection entry. ;  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TMap (const TMap &map)=delete;  ; TMap & operator= (const TMap &map)=delete;  . Private Attributes; THashTable * fTable;  . Friends; class TMapIter;  . Additional Inherited Members;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include <TMap.h>. Inheritance diagram for TMap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iterator_t. typedef TMapIter TMap::Iterator_t. Definition at line 56 of f",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:8304,Safety,safe,safe,8304,"rint (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Dr",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:565,Security,hash,hash,565,". ROOT: TMap Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TMap Class ReferenceCore ROOT classes » Containers. ; TMap implements an associative array of (key,value) pairs using a THashTable for efficient retrieval (therefore TMap does not conserve the order of the entries). ; The hash value is calculated using the value returned by the keys Hash() function and the key comparison is done via the IsEqual() function. Both key and value must inherit from TObject. ; Definition at line 40 of file TMap.h. Public Types; typedef TMapIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMap (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  TMap ctor. See THashTable for a description of the arguments. ;  ; virtual ~TMap ();  TMap dtor. ;  ; void Add (TObject *key, TObject *value);  Add a (key,value) pair to the map. ;  ; void Add (TObject *obj) override;  This function may not be used (but we need to provide it since it is a pure virtual in TCollection). ",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:2151,Security,hash,hashtable,2151," };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMap (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  TMap ctor. See THashTable for a description of the arguments. ;  ; virtual ~TMap ();  TMap dtor. ;  ; void Add (TObject *key, TObject *value);  Add a (key,value) pair to the map. ;  ; void Add (TObject *obj) override;  This function may not be used (but we need to provide it since it is a pure virtual in TCollection). ;  ; Float_t AverageCollisions () const;  Return the ratio of entries vs occupied slots. ;  ; Int_t Capacity () const;  Return number of slots in the hashtable. ;  ; void Clear (Option_t *option="""") override;  Remove all (key,value) pairs from the map. ;  ; Int_t Collisions (const char *keyname) const;  Returns the number of collisions for a key with a certain name (i.e. ;  ; Int_t Collisions (TObject *key) const;  Returns the number of collisions for a key (i.e. ;  ; void Delete (Option_t *option="""") override;  Remove all (key,value) pairs from the map AND delete the keys when they are allocated on the heap. ;  ; void DeleteAll ();  Remove all (key,value) pairs from the map AND delete the keys AND values when they are allocated on the heap. ;  ; Bool_t DeleteEntry (TObject *key);  Remove (key,value) pair with key from the map. ;  ; void DeleteKeys ();  ; void DeleteValues ();  Remove all (key,value) pairs from the map AND delete the values when they are allocated on the heap. ;  ; TObject * FindObject (const char *keyname) const override;  Check if a (key,value) pair exists with keyname as name of the key.",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:6194,Security,hash,hash,6194,"s in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsArgNull (const char *where, const TObject *obj) const;  Returns true if object is a null pointer. ;  ; virtual Bool_t IsEmpty () const;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; Bool_t IsOwner () const;  ; Bool_t IsSortable () const override;  ; R__ALWAYS_INLINE Bool_t IsUsingRWLock () const;  ; void ls (Option_t *option="""") const override;  List (ls) all objects in this collection. ;  ; virtual TIterator * MakeReverseIterator () const;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ; TObject * operator() (const char *name) const;  Find an object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the ",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:7939,Security,access,accessible,7939," object in this collection by name. ;  ; void Paint (Option_t *option="""") override;  Paint all objects in this collection. ;  ; virtual void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const;  Print the collection header and its elements that match the wildcard. ;  ; virtual void Print (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this obje",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:8279,Security,access,access,8279,"rint (Option_t *option, Int_t recurse) const;  Print the collection header and its elements. ;  ; virtual void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Default print for collections, calls Print(option, 1). ;  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ; void RemoveAll ();  ; virtual void RemoveAll (TCollection *col);  Remove all objects in collection col from this collection. ;  ; void SetCurrentCollection ();  Set this collection to be the globally accessible collection. ;  ; void SetName (const char *name);  ; virtual void SetOwner (Bool_t enable=kTRUE);  Set whether this collection is the owner (enable==true) of its content. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool UseRWLock (Bool_t enable=true);  Set this collection to use a RW lock upon access, making it thread safe. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Dr",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:14585,Security,access,accessible,14585,"rror message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TCollection; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EmptyGarbageCollection ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EStatusBits { kIsOwnerValue = (1ULL << ( 15 )); };  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void PrintCollectionEntry (",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:18149,Security,hash,hashtable,18149,"shTableCapacity, . Int_t ; rehash = 0 . ). TMap ctor. See THashTable for a description of the arguments. ; Definition at line 34 of file TMap.cxx. ◆ ~TMap(). TMap::~TMap ; (; ). virtual . TMap dtor. ; Objects are not deleted unless the TMap is the owner (set via SetOwner()). ; Definition at line 44 of file TMap.cxx. Member Function Documentation. ◆ Add() [1/2]. void TMap::Add ; (; TObject * ; key, . TObject * ; value . ). Add a (key,value) pair to the map. ; Definition at line 62 of file TMap.cxx. ◆ Add() [2/2]. void TMap::Add ; (; TObject * ; obj). overridevirtual . This function may not be used (but we need to provide it since it is a pure virtual in TCollection). ; Use Add(key,value) instead. ; Implements TCollection.; Definition at line 54 of file TMap.cxx. ◆ AverageCollisions(). Float_t TMap::AverageCollisions ; (; ); const. Return the ratio of entries vs occupied slots. ; Definition at line 73 of file TMap.cxx. ◆ Capacity(). Int_t TMap::Capacity ; (; ); const. Return number of slots in the hashtable. ; Use GetSize() to get the number of objects stored in the TMap. ; Definition at line 82 of file TMap.cxx. ◆ Class(). static TClass * TMap::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMap::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMap::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 90 of file TMap.h. ◆ Clear(). void TMap::Clear ; (; Option_t * ; option = """"). overridevirtual . Remove all (key,value) pairs from the map. ; The keys/values are deleted depending on the state of key-ownership (SetOwner()) and value-ownership (SetOwnerValue()).; To delete these objects regardless of the ownership state use:; Delete() to delete only keys;; DeleteValues() to delete only values;; DeleteAll() to delete both keys and values. . Implements TCollection.; Definition at line 97 of file TMap.cxx. ◆ Collisions() [1/2]. In",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:19306,Security,hash,hash,19306,"* TMap::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMap::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMap::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 90 of file TMap.h. ◆ Clear(). void TMap::Clear ; (; Option_t * ; option = """"). overridevirtual . Remove all (key,value) pairs from the map. ; The keys/values are deleted depending on the state of key-ownership (SetOwner()) and value-ownership (SetOwnerValue()).; To delete these objects regardless of the ownership state use:; Delete() to delete only keys;; DeleteValues() to delete only values;; DeleteAll() to delete both keys and values. . Implements TCollection.; Definition at line 97 of file TMap.cxx. ◆ Collisions() [1/2]. Int_t TMap::Collisions ; (; const char * ; keyname); const. Returns the number of collisions for a key with a certain name (i.e. ; number of objects in same slot in the hash table, i.e. length of linked list). ; Definition at line 116 of file TMap.cxx. ◆ Collisions() [2/2]. Int_t TMap::Collisions ; (; TObject * ; key); const. Returns the number of collisions for a key (i.e. ; number of objects in same slot in the hash table, i.e. length of linked list). ; Definition at line 125 of file TMap.cxx. ◆ DeclFileName(). static const char * TMap::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 90 of file TMap.h. ◆ Delete(). void TMap::Delete ; (; Option_t * ; option = """"). overridevirtual . Remove all (key,value) pairs from the map AND delete the keys when they are allocated on the heap. ; Implements TCollection.; Definition at line 134 of file TMap.cxx. ◆ DeleteAll(). void TMap::DeleteAll ; (; ). Remove all (key,value) pairs from the map AND delete the keys AND values when they are allocated on the heap. ; Definition at line 168 of file TMap.cxx. ◆ DeleteEntry(). Bool_t TMap::Dele",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMap.html:19554,Security,hash,hash,19554,"taticconstexpr . ReturnsVersion of this class ; Definition at line 90 of file TMap.h. ◆ Clear(). void TMap::Clear ; (; Option_t * ; option = """"). overridevirtual . Remove all (key,value) pairs from the map. ; The keys/values are deleted depending on the state of key-ownership (SetOwner()) and value-ownership (SetOwnerValue()).; To delete these objects regardless of the ownership state use:; Delete() to delete only keys;; DeleteValues() to delete only values;; DeleteAll() to delete both keys and values. . Implements TCollection.; Definition at line 97 of file TMap.cxx. ◆ Collisions() [1/2]. Int_t TMap::Collisions ; (; const char * ; keyname); const. Returns the number of collisions for a key with a certain name (i.e. ; number of objects in same slot in the hash table, i.e. length of linked list). ; Definition at line 116 of file TMap.cxx. ◆ Collisions() [2/2]. Int_t TMap::Collisions ; (; TObject * ; key); const. Returns the number of collisions for a key (i.e. ; number of objects in same slot in the hash table, i.e. length of linked list). ; Definition at line 125 of file TMap.cxx. ◆ DeclFileName(). static const char * TMap::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 90 of file TMap.h. ◆ Delete(). void TMap::Delete ; (; Option_t * ; option = """"). overridevirtual . Remove all (key,value) pairs from the map AND delete the keys when they are allocated on the heap. ; Implements TCollection.; Definition at line 134 of file TMap.cxx. ◆ DeleteAll(). void TMap::DeleteAll ; (; ). Remove all (key,value) pairs from the map AND delete the keys AND values when they are allocated on the heap. ; Definition at line 168 of file TMap.cxx. ◆ DeleteEntry(). Bool_t TMap::DeleteEntry ; (; TObject * ; key). Remove (key,value) pair with key from the map. ; Returns true if the key was found and removed, false otherwise. The key and value objects are deleted if map is the owner of keys and values respectively. ; Definition ",MatchSource.WIKI,doc/master/classTMap.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMap.html
https://root.cern/doc/master/classTMapFile.html:2501,Availability,robust,robust,2501,"d allocate an object directly in shared memory in the producer, but the consumer still has to copy the object from shared memory into a local object which has the correct vtbl pointer for that process (copy ctor's can be used for creating the local copy).; Another possibility is to only allow objects without virtual functions in shared memory (like simple C structs), or to forbid (how?) the consumer from calling any virtual functions of the objects in shared memory.; A last option is to copy the object internals to shared memory and copy them again from there. This is what is done in the TMapFile (using the object Streamer() to make a deep copy). Option 1) saves one copy, but requires solid copy ctor's (along the full inheritance chain) to rebuild the object in the consumer. Most classes don't provide these copy ctor's, especially not when objects contain collections, etc. 2) is too limiting or dangerous (calling accidentally a virtual function will segv). So since we have a robust Streamer mechanism I opted for 3). ; Definition at line 26 of file TMapFile.h. Public Types; enum  { kDefaultMapSize = 0x80000; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  ~TMapFile () override;  TMapFiles may not be deleted, since we want to keep the complete TMapFile object in the mapped file for later re-use. ;  ; void Add (const TObject *obj, const char *name="""");  Add an",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:7333,Availability,error,error,7333,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:7422,Availability,error,error,7422,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:7577,Availability,error,error,7577,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:7874,Availability,error,error,7874,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *m",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:11886,Availability,error,error,11886,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TMapFile * Create (const char *name, Option_t *option=""READ"", Int_t size=kDefaultMapSize, const char *title="""");  Create a memory mapped file. ;  ; static const char * DeclFileName ",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:14144,Availability,error,error,14144,"me ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMapFile ();  Default ctor. Does not much except setting some basic values. ;  ;  TMapFile (const char *name, const char *title, Option_t *option, Int_t size, TMapFile *&newMapFile);  Create a memory mapped file. ;  ;  TMapFile (const TMapFile &f, Longptr_t offset=0);  Private copy ctor. ;  ; Int_t AcquireSemaphore ();  Acquire semaphore. Returns 0 if OK, -1 on error. ;  ; void CreateSemaphore (Int_t pid=0);  Create semaphore used for synchronizing access to shared memory. ;  ; void DeleteSemaphore ();  Delete the semaphore. ;  ; TMapFile * FindShadowMapFile ();  Returns shadow map file. ;  ; Int_t GetBestBuffer ();  Return the best buffer size for objects in this file. ;  ; void InitDirectory ();  Create the directory associated to this mapfile. ;  ; TMapFile & operator= (const TMapFile &rhs)=delete;  ; Int_t ReleaseSemaphore ();  Release semaphore. Returns 0 if OK, -1 on error. ;  ; TObject * Remove (const char *name, Bool_t lock);  Remove object by name from shared memory. ;  ; TObject * Remove (TObject *obj, Bool_t lock);  Remove object from shared memory. ;  ; void SumBuffer (Int_t bufsize);  Increment statistics for buffer sizes of objects in this file. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (p",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:14666,Availability,error,error,14666," void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMapFile ();  Default ctor. Does not much except setting some basic values. ;  ;  TMapFile (const char *name, const char *title, Option_t *option, Int_t size, TMapFile *&newMapFile);  Create a memory mapped file. ;  ;  TMapFile (const TMapFile &f, Longptr_t offset=0);  Private copy ctor. ;  ; Int_t AcquireSemaphore ();  Acquire semaphore. Returns 0 if OK, -1 on error. ;  ; void CreateSemaphore (Int_t pid=0);  Create semaphore used for synchronizing access to shared memory. ;  ; void DeleteSemaphore ();  Delete the semaphore. ;  ; TMapFile * FindShadowMapFile ();  Returns shadow map file. ;  ; Int_t GetBestBuffer ();  Return the best buffer size for objects in this file. ;  ; void InitDirectory ();  Create the directory associated to this mapfile. ;  ; TMapFile & operator= (const TMapFile &rhs)=delete;  ; Int_t ReleaseSemaphore ();  Release semaphore. Returns 0 if OK, -1 on error. ;  ; TObject * Remove (const char *name, Bool_t lock);  Remove object by name from shared memory. ;  ; TObject * Remove (TObject *obj, Bool_t lock);  Remove object from shared memory. ;  ; void SumBuffer (Int_t bufsize);  Increment statistics for buffer sizes of objects in this file. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static void * MapToAddress ();  Return the base address at which we would like the next TMapFile's mapped data to start. ;  . Private Attributes; ULongptr_t fBaseAddr;  Base address of mapped memory region. ;  ; TList * fBrowseList;  List of KeyMapFile objects. ;  ; TDirectory * fDirectory;  Pointer to directory associated to this mapfile. ;  ; Longptr_t fFd;  Descriptor of mapped file. ;  ; TMapRec * fFirst;  List of streamed objects is shared",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:18917,Availability,error,error,18917,"size argument specifies the maximum size of shared memory file in bytes. This protected ctor is called via the static Create() method. ; Definition at line 245 of file TMapFile.cxx. ◆ TMapFile() [3/3]. TMapFile::TMapFile ; (; const TMapFile & ; f, . Longptr_t ; offset = 0 . ). protected . Private copy ctor. ; Used by the ctor to create a new version of TMapFile in the memory mapped heap. It's main purpose is to correctly create the string data members. ; Definition at line 526 of file TMapFile.cxx. ◆ ~TMapFile(). TMapFile::~TMapFile ; (; ). override . TMapFiles may not be deleted, since we want to keep the complete TMapFile object in the mapped file for later re-use. ; To enforce this the delete operator has been made private. Use Close() to properly terminate a TMapFile (also done via the TROOT dtor). ; Definition at line 560 of file TMapFile.cxx. Member Function Documentation. ◆ AcquireSemaphore(). Int_t TMapFile::AcquireSemaphore ; (; ). protected . Acquire semaphore. Returns 0 if OK, -1 on error. ; Definition at line 902 of file TMapFile.cxx. ◆ Add(). void TMapFile::Add ; (; const TObject * ; obj, . const char * ; name = """" . ). Add an object to the list of objects to be stored in shared memory. ; To place the object actually into shared memory call Update(). ; Definition at line 611 of file TMapFile.cxx. ◆ Browse(). void TMapFile::Browse ; (; TBrowser * ; b). overridevirtual . Browse contents of TMapFile. ; Reimplemented from TObject.; Definition at line 1066 of file TMapFile.cxx. ◆ cd(). Bool_t TMapFile::cd ; (; const char * ; path = nullptr). Cd to associated directory. ; Definition at line 1093 of file TMapFile.cxx. ◆ Class(). static TClass * TMapFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMapFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMapFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at l",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:27293,Availability,error,error,27293,". inline . Definition at line 81 of file TMapFile.h. ◆ operator new() [2/2]. void * TMapFile::operator new ; (; size_t ; sz, . void * ; vp . ). inline . Definition at line 83 of file TMapFile.h. ◆ operator new[]() [1/2]. void * TMapFile::operator new[] ; (; size_t ; sz). inline . Definition at line 82 of file TMapFile.h. ◆ operator new[]() [2/2]. void * TMapFile::operator new[] ; (; size_t ; sz, . void * ; vp . ). inline . Definition at line 84 of file TMapFile.h. ◆ operator=(). TMapFile & TMapFile::operator= ; (; const TMapFile & ; rhs). protecteddelete . ◆ OrgAddress(). void * TMapFile::OrgAddress ; (; void * ; addr); const. inline . Definition at line 102 of file TMapFile.h. ◆ Print(). void TMapFile::Print ; (; Option_t * ; option = """"); const. overridevirtual . Print some info about the mapped file. ; Reimplemented from TObject.; Definition at line 1040 of file TMapFile.cxx. ◆ ReleaseSemaphore(). Int_t TMapFile::ReleaseSemaphore ; (; ). protected . Release semaphore. Returns 0 if OK, -1 on error. ; Definition at line 947 of file TMapFile.cxx. ◆ Remove() [1/4]. TObject * TMapFile::Remove ; (; const char * ; name). inline . Definition at line 110 of file TMapFile.h. ◆ Remove() [2/4]. TObject * TMapFile::Remove ; (; const char * ; name, . Bool_t ; lock . ). protected . Remove object by name from shared memory. ; Returns pointer to removed object if successful, 0 otherwise. ; Definition at line 738 of file TMapFile.cxx. ◆ Remove() [3/4]. TObject * TMapFile::Remove ; (; TObject * ; obj). inline . Definition at line 109 of file TMapFile.h. ◆ Remove() [4/4]. TObject * TMapFile::Remove ; (; TObject * ; obj, . Bool_t ; lock . ). protected . Remove object from shared memory. ; Returns pointer to removed object if successful, 0 otherwise. ; Definition at line 699 of file TMapFile.cxx. ◆ RemoveAll(). void TMapFile::RemoveAll ; (; ). Remove all objects from shared memory. ; Definition at line 775 of file TMapFile.cxx. ◆ SetMapAddress(). void TMapFile::SetMapAddress ; (; Long",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:15710,Deployability,update,update,15710,"me, Bool_t lock);  Remove object by name from shared memory. ;  ; TObject * Remove (TObject *obj, Bool_t lock);  Remove object from shared memory. ;  ; void SumBuffer (Int_t bufsize);  Increment statistics for buffer sizes of objects in this file. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static void * MapToAddress ();  Return the base address at which we would like the next TMapFile's mapped data to start. ;  . Private Attributes; ULongptr_t fBaseAddr;  Base address of mapped memory region. ;  ; TList * fBrowseList;  List of KeyMapFile objects. ;  ; TDirectory * fDirectory;  Pointer to directory associated to this mapfile. ;  ; Longptr_t fFd;  Descriptor of mapped file. ;  ; TMapRec * fFirst;  List of streamed objects is shared memory. ;  ; TObject * fGetting;  Don't deadlock in update mode, when from Get() Add() is called. ;  ; ULongptr_t fhSemaphore;  HANDLE of WIN32 Mutex object to implement semaphore. ;  ; TMapRec * fLast;  Last object in list of shared objects. ;  ; void * fMmallocDesc;  Pointer to mmalloc descriptor. ;  ; char * fName;  Name of mapped file. ;  ; Longptr_t fOffset;  Offset in bytes for region mapped by reader. ;  ; char * fOption;  Directory creation options. ;  ; Longptr_t fSemaphore;  Modification semaphore (or getpid() for WIN32) ;  ; Int_t fSize;  Original start size of memory mapped region. ;  ; Double_t fSum2Buffer;  Sum of squares of buffer sizes of objects written so far. ;  ; Double_t fSumBuffer;  Sum of buffer sizes of objects written so far. ;  ; char * fTitle;  Title of mapped file. ;  ; Int_t fVersion;  ROOT version (or -1 for shadow map file) ;  ; Bool_t fWritable;  TRUE if mapped file opened in RDWR mode. ;  ; Int_t fWritten;  Number of objects written so far. ;  . Static Private Attributes; static Longptr_t fgMapAddress = ",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:31409,Deployability,update,update,31409,"e * TMapFile::WhichMapFile ; (; void * ; addr). static . Definition at line 1257 of file TMapFile.cxx. Friends And Related Symbol Documentation. ◆ TMapRec. friend class TMapRec. friend . Definition at line 28 of file TMapFile.h. Member Data Documentation. ◆ fBaseAddr. ULongptr_t TMapFile::fBaseAddr. private . Base address of mapped memory region. ; Definition at line 37 of file TMapFile.h. ◆ fBrowseList. TList* TMapFile::fBrowseList. private . List of KeyMapFile objects. ; Definition at line 43 of file TMapFile.h. ◆ fDirectory. TDirectory* TMapFile::fDirectory. private . Pointer to directory associated to this mapfile. ; Definition at line 42 of file TMapFile.h. ◆ fFd. Longptr_t TMapFile::fFd. private . Descriptor of mapped file. ; Definition at line 31 of file TMapFile.h. ◆ fFirst. TMapRec* TMapFile::fFirst. private . List of streamed objects is shared memory. ; Definition at line 39 of file TMapFile.h. ◆ fGetting. TObject* TMapFile::fGetting. private . Don't deadlock in update mode, when from Get() Add() is called. ; Definition at line 47 of file TMapFile.h. ◆ fgMapAddress. Longptr_t TMapFile::fgMapAddress = 0. staticprivate . Map to this address, set address via SetMapAddress() ; Definition at line 52 of file TMapFile.h. ◆ fgMmallocDesc. void * TMapFile::fgMmallocDesc = 0. staticprivate . Used in Close() and operator delete() ; Definition at line 53 of file TMapFile.h. ◆ fhSemaphore. ULongptr_t TMapFile::fhSemaphore. private . HANDLE of WIN32 Mutex object to implement semaphore. ; Definition at line 46 of file TMapFile.h. ◆ fLast. TMapRec* TMapFile::fLast. private . Last object in list of shared objects. ; Definition at line 40 of file TMapFile.h. ◆ fMmallocDesc. void* TMapFile::fMmallocDesc. private . Pointer to mmalloc descriptor. ; Definition at line 36 of file TMapFile.h. ◆ fName. char* TMapFile::fName. private . Name of mapped file. ; Definition at line 33 of file TMapFile.h. ◆ fOffset. Longptr_t TMapFile::fOffset. private . Offset in bytes for region mapped",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:1513,Energy Efficiency,allocate,allocate,1513,"ry call Update() also whenever the mapped object(s) change(s) call Update() to put a fresh copy in the shared memory. This extra step is necessary since it is not possible to share objects with virtual pointers between processes (the vtbl ptr points to the originators unique address space and can not be used by the consumer process(es)). Consumer processes can map the memory region from this file and access the objects stored in it via the Get() method (which returns a copy of the object stored in the shared memory with correct vtbl ptr set). Only objects of classes with a Streamer() member function defined can be shared.; I know the current implementation is not ideal (you need to copy to and from the shared memory file) but the main problem is with the class' virtual_table pointer. This pointer points to a table unique for every process. Therefore, different options are:; One could allocate an object directly in shared memory in the producer, but the consumer still has to copy the object from shared memory into a local object which has the correct vtbl pointer for that process (copy ctor's can be used for creating the local copy).; Another possibility is to only allow objects without virtual functions in shared memory (like simple C structs), or to forbid (how?) the consumer from calling any virtual functions of the objects in shared memory.; A last option is to copy the object internals to shared memory and copy them again from there. This is what is done in the TMapFile (using the object Streamer() to make a deep copy). Option 1) saves one copy, but requires solid copy ctor's (along the full inheritance chain) to rebuild the object in the consumer. Most classes don't provide these copy ctor's, especially not when objects contain collections, etc. 2) is too limiting or dangerous (calling accidentally a virtual function will segv). So since we have a robust Streamer mechanism I opted for 3). ; Definition at line 26 of file TMapFile.h. Public Types; enum  { kDefault",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:21992,Energy Efficiency,allocate,allocated,21992,"en ""NEW"", ""CREATE"" or ""RECREATE"" are used). ; Definition at line 1172 of file TMapFile.cxx. ◆ CreateSemaphore(). void TMapFile::CreateSemaphore ; (; Int_t ; pid = 0). protected . Create semaphore used for synchronizing access to shared memory. ; Definition at line 847 of file TMapFile.cxx. ◆ DeclFileName(). static const char * TMapFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 118 of file TMapFile.h. ◆ DeleteSemaphore(). void TMapFile::DeleteSemaphore ; (; ). protected . Delete the semaphore. ; Definition at line 877 of file TMapFile.cxx. ◆ FindShadowMapFile(). TMapFile * TMapFile::FindShadowMapFile ; (; ). protected . Returns shadow map file. ; Definition at line 1024 of file TMapFile.cxx. ◆ Get(). TObject * TMapFile::Get ; (; const char * ; name, . TObject * ; delObj = nullptr . ). Return pointer to object retrieved from shared memory. ; The object must be deleted after use. If delObj is a pointer to a previously allocated object it will be deleted. Returns 0 in case object with the given name does not exist. ; Definition at line 800 of file TMapFile.cxx. ◆ GetBaseAddr(). void * TMapFile::GetBaseAddr ; (; ); const. inline . Definition at line 89 of file TMapFile.h. ◆ GetBestBuffer(). Int_t TMapFile::GetBestBuffer ; (; ). protected . Return the best buffer size for objects in this file. ; The best buffer size is estimated based on the current mean value and standard deviation of all objects written so far to this file. Returns mean value + one standard deviation. ; Definition at line 1142 of file TMapFile.cxx. ◆ GetBreakval(). void * TMapFile::GetBreakval ; (; ); const. Return the current location in the memory region for this malloc heap which represents the end of memory in use. ; Returns 0 if map file was closed. ; Definition at line 1154 of file TMapFile.cxx. ◆ GetDirectory(). TDirectory * TMapFile::GetDirectory ; (; ); const. inline . Definition at line 91 of file TMapFile.h. ◆ GetFd(). I",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:7339,Integrability,message,message,7339,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:7880,Integrability,message,message,7880,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *m",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:8900,Integrability,message,message,8900," virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual B",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:11892,Integrability,message,message,11892,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TMapFile * Create (const char *name, Option_t *option=""READ"", Int_t size=kDefaultMapSize, const char *title="""");  Create a memory mapped file. ;  ; static const char * DeclFileName ",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:12265,Integrability,message,message,12265," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TMapFile * Create (const char *name, Option_t *option=""READ"", Int_t size=kDefaultMapSize, const char *title="""");  Create a memory mapped file. ;  ; static const char * DeclFileName ();  ; static void SetMapAddress (Longptr_t addr);  Set preferred map address. ;  ; static TMapFile * WhichMapFile (void *addr);  ;  Static Public Member Functions inherited from TVirtualMapFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Fu",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:14219,Integrability,synchroniz,synchronizing,14219,"st char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMapFile ();  Default ctor. Does not much except setting some basic values. ;  ;  TMapFile (const char *name, const char *title, Option_t *option, Int_t size, TMapFile *&newMapFile);  Create a memory mapped file. ;  ;  TMapFile (const TMapFile &f, Longptr_t offset=0);  Private copy ctor. ;  ; Int_t AcquireSemaphore ();  Acquire semaphore. Returns 0 if OK, -1 on error. ;  ; void CreateSemaphore (Int_t pid=0);  Create semaphore used for synchronizing access to shared memory. ;  ; void DeleteSemaphore ();  Delete the semaphore. ;  ; TMapFile * FindShadowMapFile ();  Returns shadow map file. ;  ; Int_t GetBestBuffer ();  Return the best buffer size for objects in this file. ;  ; void InitDirectory ();  Create the directory associated to this mapfile. ;  ; TMapFile & operator= (const TMapFile &rhs)=delete;  ; Int_t ReleaseSemaphore ();  Release semaphore. Returns 0 if OK, -1 on error. ;  ; TObject * Remove (const char *name, Bool_t lock);  Remove object by name from shared memory. ;  ; TObject * Remove (TObject *obj, Bool_t lock);  Remove object from shared memory. ;  ; void SumBuffer (Int_t bufsize);  Increment statistics for buffer sizes of objects in this file. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functi",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:21195,Integrability,synchroniz,synchronizing,21195,"se, ""delete"" which would call the dtors). The option=""dtor"" is only used when called via the ~TMapFile. ; Implements TVirtualMapFile.; Definition at line 979 of file TMapFile.cxx. ◆ Create(). TMapFile * TMapFile::Create ; (; const char * ; name, . Option_t * ; option = ""READ"", . Int_t ; size = kDefaultMapSize, . const char * ; title = """" . ). static . Create a memory mapped file. ; This opens a file (to which the memory will be mapped) and attaches a memory region to it. Option can be either: ""NEW"", ""CREATE"", ""RECREATE"", ""UPDATE"" or ""READ"" (see TFile). The default open mode is ""READ"". The size argument specifies the maximum size of shared memory file in bytes. TMapFile's can only be created via this method. Create() enforces that a TMapFile is always on the memory mapped heap (when ""NEW"", ""CREATE"" or ""RECREATE"" are used). ; Definition at line 1172 of file TMapFile.cxx. ◆ CreateSemaphore(). void TMapFile::CreateSemaphore ; (; Int_t ; pid = 0). protected . Create semaphore used for synchronizing access to shared memory. ; Definition at line 847 of file TMapFile.cxx. ◆ DeclFileName(). static const char * TMapFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 118 of file TMapFile.h. ◆ DeleteSemaphore(). void TMapFile::DeleteSemaphore ; (; ). protected . Delete the semaphore. ; Definition at line 877 of file TMapFile.cxx. ◆ FindShadowMapFile(). TMapFile * TMapFile::FindShadowMapFile ; (; ). protected . Returns shadow map file. ; Definition at line 1024 of file TMapFile.cxx. ◆ Get(). TObject * TMapFile::Get ; (; const char * ; name, . TObject * ; delObj = nullptr . ). Return pointer to object retrieved from shared memory. ; The object must be deleted after use. If delObj is a pointer to a previously allocated object it will be deleted. Returns 0 in case object with the given name does not exist. ; Definition at line 800 of file TMapFile.cxx. ◆ GetBaseAddr(). void * TMapFile::GetBaseAddr ; (; ); const. inl",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:2239,Modifiability,inherit,inheritance,2239," can be shared.; I know the current implementation is not ideal (you need to copy to and from the shared memory file) but the main problem is with the class' virtual_table pointer. This pointer points to a table unique for every process. Therefore, different options are:; One could allocate an object directly in shared memory in the producer, but the consumer still has to copy the object from shared memory into a local object which has the correct vtbl pointer for that process (copy ctor's can be used for creating the local copy).; Another possibility is to only allow objects without virtual functions in shared memory (like simple C structs), or to forbid (how?) the consumer from calling any virtual functions of the objects in shared memory.; A last option is to copy the object internals to shared memory and copy them again from there. This is what is done in the TMapFile (using the object Streamer() to make a deep copy). Option 1) saves one copy, but requires solid copy ctor's (along the full inheritance chain) to rebuild the object in the consumer. Most classes don't provide these copy ctor's, especially not when objects contain collections, etc. 2) is too limiting or dangerous (calling accidentally a virtual function will segv). So since we have a robust Streamer mechanism I opted for 3). ; Definition at line 26 of file TMapFile.h. Public Types; enum  { kDefaultMapSize = 0x80000; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( ",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:2656,Modifiability,inherit,inherited,2656,"ocess (copy ctor's can be used for creating the local copy).; Another possibility is to only allow objects without virtual functions in shared memory (like simple C structs), or to forbid (how?) the consumer from calling any virtual functions of the objects in shared memory.; A last option is to copy the object internals to shared memory and copy them again from there. This is what is done in the TMapFile (using the object Streamer() to make a deep copy). Option 1) saves one copy, but requires solid copy ctor's (along the full inheritance chain) to rebuild the object in the consumer. Most classes don't provide these copy ctor's, especially not when objects contain collections, etc. 2) is too limiting or dangerous (calling accidentally a virtual function will segv). So since we have a robust Streamer mechanism I opted for 3). ; Definition at line 26 of file TMapFile.h. Public Types; enum  { kDefaultMapSize = 0x80000; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  ~TMapFile () override;  TMapFiles may not be deleted, since we want to keep the complete TMapFile object in the mapped file for later re-use. ;  ; void Add (const TObject *obj, const char *name="""");  Add an object to the list of objects to be stored in shared memory. ;  ; void Browse (TBrowser *b) override;  Browse contents of TMapFile. ;  ; Bool_t cd (const char *path=nullptr);  Cd to associated ",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:5552,Modifiability,inherit,inherited,5552,"sWritable () const;  ; void ls (Option_t *option="""") const override;  List contents of TMapFile. ;  ; void operator delete (void *vp);  Need special ""operator delete"" in which we close the shared memory. ;  ; void * operator new (size_t sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; void * OrgAddress (void *addr) const;  ; void Print (Option_t *option="""") const override;  Print some info about the mapped file. ;  ; TObject * Remove (const char *name);  ; TObject * Remove (TObject *obj);  ; void RemoveAll ();  Remove all objects from shared memory. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Update (TObject *obj=nullptr);  Update an object (or all objects, if obj == 0) in shared memory. ;  ;  Public Member Functions inherited from TVirtualMapFile; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) c",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:5674,Modifiability,inherit,inherited,5674,"sWritable () const;  ; void ls (Option_t *option="""") const override;  List contents of TMapFile. ;  ; void operator delete (void *vp);  Need special ""operator delete"" in which we close the shared memory. ;  ; void * operator new (size_t sz);  ; void * operator new (size_t sz, void *vp);  ; void * operator new[] (size_t sz);  ; void * operator new[] (size_t sz, void *vp);  ; void * OrgAddress (void *addr) const;  ; void Print (Option_t *option="""") const override;  Print some info about the mapped file. ;  ; TObject * Remove (const char *name);  ; TObject * Remove (TObject *obj);  ; void RemoveAll ();  Remove all objects from shared memory. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Update (TObject *obj=nullptr);  Update an object (or all objects, if obj == 0) in shared memory. ;  ;  Public Member Functions inherited from TVirtualMapFile; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) c",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:6969,Modifiability,inherit,inheritance,6969,"urely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:8998,Modifiability,inherit,inherits,8998,"n derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notificat",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:9115,Modifiability,inherit,inherits,9115,"ses. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *re",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:13046,Modifiability,inherit,inherited,13046,"gfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TMapFile * Create (const char *name, Option_t *option=""READ"", Int_t size=kDefaultMapSize, const char *title="""");  Create a memory mapped file. ;  ; static const char * DeclFileName ();  ; static void SetMapAddress (Longptr_t addr);  Set preferred map address. ;  ; static TMapFile * WhichMapFile (void *addr);  ;  Static Public Member Functions inherited from TVirtualMapFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMapFile ();  Default ctor. Does not much except setting some basic values. ;  ;  TMapFile (const char *name, const char *title, Option_t *option, Int_t size, TMapFile *&newMapFile);  Create a memory mapped file. ;  ;  TMapFile (const TMapFile &f, Longptr_t offset=0);  Private copy ctor. ;  ; Int_t AcquireSemaphore ();  Acquire semaphore. Returns 0 if OK, -1 on error. ;  ; void CreateSemaphore (Int_t pid=0);  Create semaphore used for synchronizing ",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:13265,Modifiability,inherit,inherited,13265,"gfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TMapFile * Create (const char *name, Option_t *option=""READ"", Int_t size=kDefaultMapSize, const char *title="""");  Create a memory mapped file. ;  ; static const char * DeclFileName ();  ; static void SetMapAddress (Longptr_t addr);  Set preferred map address. ;  ; static TMapFile * WhichMapFile (void *addr);  ;  Static Public Member Functions inherited from TVirtualMapFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMapFile ();  Default ctor. Does not much except setting some basic values. ;  ;  TMapFile (const char *name, const char *title, Option_t *option, Int_t size, TMapFile *&newMapFile);  Create a memory mapped file. ;  ;  TMapFile (const TMapFile &f, Longptr_t offset=0);  Private copy ctor. ;  ; Int_t AcquireSemaphore ();  Acquire semaphore. Returns 0 if OK, -1 on error. ;  ; void CreateSemaphore (Int_t pid=0);  Create semaphore used for synchronizing ",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:14991,Modifiability,inherit,inherited,14991,"rivate copy ctor. ;  ; Int_t AcquireSemaphore ();  Acquire semaphore. Returns 0 if OK, -1 on error. ;  ; void CreateSemaphore (Int_t pid=0);  Create semaphore used for synchronizing access to shared memory. ;  ; void DeleteSemaphore ();  Delete the semaphore. ;  ; TMapFile * FindShadowMapFile ();  Returns shadow map file. ;  ; Int_t GetBestBuffer ();  Return the best buffer size for objects in this file. ;  ; void InitDirectory ();  Create the directory associated to this mapfile. ;  ; TMapFile & operator= (const TMapFile &rhs)=delete;  ; Int_t ReleaseSemaphore ();  Release semaphore. Returns 0 if OK, -1 on error. ;  ; TObject * Remove (const char *name, Bool_t lock);  Remove object by name from shared memory. ;  ; TObject * Remove (TObject *obj, Bool_t lock);  Remove object from shared memory. ;  ; void SumBuffer (Int_t bufsize);  Increment statistics for buffer sizes of objects in this file. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static void * MapToAddress ();  Return the base address at which we would like the next TMapFile's mapped data to start. ;  . Private Attributes; ULongptr_t fBaseAddr;  Base address of mapped memory region. ;  ; TList * fBrowseList;  List of KeyMapFile objects. ;  ; TDirectory * fDirectory;  Pointer to directory associated to this mapfile. ;  ; Longptr_t fFd;  Descriptor of mapped file. ;  ; TMapRec * fFirst;  List of streamed objects is shared memory. ;  ; TObject * fGetting;  Don't deadlock in update mode, when from Get() Add() is called. ;  ; ULongptr_t fhSemaphore;  HANDLE of WIN32 Mutex object to implement semaphore. ;  ; TMapRec * fLast;  Last object in list of shared objects. ;  ; void * fMmallocDesc;  Pointer to mmalloc descriptor. ;  ; char * fName;  Name of mapped file. ;  ; Longptr_t fOffset;  Offset in bytes for region",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:16923,Modifiability,inherit,inherited,16923,"r to mmalloc descriptor. ;  ; char * fName;  Name of mapped file. ;  ; Longptr_t fOffset;  Offset in bytes for region mapped by reader. ;  ; char * fOption;  Directory creation options. ;  ; Longptr_t fSemaphore;  Modification semaphore (or getpid() for WIN32) ;  ; Int_t fSize;  Original start size of memory mapped region. ;  ; Double_t fSum2Buffer;  Sum of squares of buffer sizes of objects written so far. ;  ; Double_t fSumBuffer;  Sum of buffer sizes of objects written so far. ;  ; char * fTitle;  Title of mapped file. ;  ; Int_t fVersion;  ROOT version (or -1 for shadow map file) ;  ; Bool_t fWritable;  TRUE if mapped file opened in RDWR mode. ;  ; Int_t fWritten;  Number of objects written so far. ;  . Static Private Attributes; static Longptr_t fgMapAddress = 0;  Map to this address, set address via SetMapAddress() ;  ; static void * fgMmallocDesc = 0;  Used in Close() and operator delete() ;  . Friends; class TMapRec;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMapFile.h>. Inheritance diagram for TMapFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkDefaultMapSize . Definition at line 77 of file TMapFile.h. Constructor & Destructor Documentation. ◆ TMapFile() [1/3]. TMapFile::TMapFile ; (; ). protected . Default ctor. Does not much except setting some basic values. ; Definition at line 211 of file TMapFile.cxx. ◆ TMapFile() [2/3]. TMapFile::TMapFile ; (; const char * ; name, . const char * ; title, . Option_t * ; option, . Int_t ; size, . TMapFile *& ; newMapFile . ). protected . Create a memory mapped file. ; This opens a file (to which the memory will be mapped) and attaches a memory region to it. Option can be either: ""NEW"", ""CREATE"", ""RECREATE"", ""UPDATE"" or ""READ"" (see TFile). The default open mode is ""READ"". The size argument specifies th",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:1020,Security,access,access,1020,"ence Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; TMapFile Class ReferenceInput/Output Library. ; This class implements a shared memory region mapped to a file. ; Objects can be placed into this shared memory area using the Add() member function. To actually place a copy of the object is shared memory call Update() also whenever the mapped object(s) change(s) call Update() to put a fresh copy in the shared memory. This extra step is necessary since it is not possible to share objects with virtual pointers between processes (the vtbl ptr points to the originators unique address space and can not be used by the consumer process(es)). Consumer processes can map the memory region from this file and access the objects stored in it via the Get() method (which returns a copy of the object stored in the shared memory with correct vtbl ptr set). Only objects of classes with a Streamer() member function defined can be shared.; I know the current implementation is not ideal (you need to copy to and from the shared memory file) but the main problem is with the class' virtual_table pointer. This pointer points to a table unique for every process. Therefore, different options are:; One could allocate an object directly in shared memory in the producer, but the consumer still has to copy the object from shared memory into a local object which has the correct vtbl pointer for that process (copy ctor's can be used for creating the local copy).; Another possibility is to only allow objects without virtual functions in shared memory (like simple C structs), or to forbid (how?) the consumer from calling any virtual functions of the objects in shared memory.; A last option is to copy the object internals to shared memory and copy them ",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:8629,Security,hash,hash,8629,"ect with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *metho",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:14233,Security,access,access,14233,"st char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMapFile ();  Default ctor. Does not much except setting some basic values. ;  ;  TMapFile (const char *name, const char *title, Option_t *option, Int_t size, TMapFile *&newMapFile);  Create a memory mapped file. ;  ;  TMapFile (const TMapFile &f, Longptr_t offset=0);  Private copy ctor. ;  ; Int_t AcquireSemaphore ();  Acquire semaphore. Returns 0 if OK, -1 on error. ;  ; void CreateSemaphore (Int_t pid=0);  Create semaphore used for synchronizing access to shared memory. ;  ; void DeleteSemaphore ();  Delete the semaphore. ;  ; TMapFile * FindShadowMapFile ();  Returns shadow map file. ;  ; Int_t GetBestBuffer ();  Return the best buffer size for objects in this file. ;  ; void InitDirectory ();  Create the directory associated to this mapfile. ;  ; TMapFile & operator= (const TMapFile &rhs)=delete;  ; Int_t ReleaseSemaphore ();  Release semaphore. Returns 0 if OK, -1 on error. ;  ; TObject * Remove (const char *name, Bool_t lock);  Remove object by name from shared memory. ;  ; TObject * Remove (TObject *obj, Bool_t lock);  Remove object from shared memory. ;  ; void SumBuffer (Int_t bufsize);  Increment statistics for buffer sizes of objects in this file. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functi",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:21209,Security,access,access,21209,"se, ""delete"" which would call the dtors). The option=""dtor"" is only used when called via the ~TMapFile. ; Implements TVirtualMapFile.; Definition at line 979 of file TMapFile.cxx. ◆ Create(). TMapFile * TMapFile::Create ; (; const char * ; name, . Option_t * ; option = ""READ"", . Int_t ; size = kDefaultMapSize, . const char * ; title = """" . ). static . Create a memory mapped file. ; This opens a file (to which the memory will be mapped) and attaches a memory region to it. Option can be either: ""NEW"", ""CREATE"", ""RECREATE"", ""UPDATE"" or ""READ"" (see TFile). The default open mode is ""READ"". The size argument specifies the maximum size of shared memory file in bytes. TMapFile's can only be created via this method. Create() enforces that a TMapFile is always on the memory mapped heap (when ""NEW"", ""CREATE"" or ""RECREATE"" are used). ; Definition at line 1172 of file TMapFile.cxx. ◆ CreateSemaphore(). void TMapFile::CreateSemaphore ; (; Int_t ; pid = 0). protected . Create semaphore used for synchronizing access to shared memory. ; Definition at line 847 of file TMapFile.cxx. ◆ DeclFileName(). static const char * TMapFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 118 of file TMapFile.h. ◆ DeleteSemaphore(). void TMapFile::DeleteSemaphore ; (; ). protected . Delete the semaphore. ; Definition at line 877 of file TMapFile.cxx. ◆ FindShadowMapFile(). TMapFile * TMapFile::FindShadowMapFile ; (; ). protected . Returns shadow map file. ; Definition at line 1024 of file TMapFile.cxx. ◆ Get(). TObject * TMapFile::Get ; (; const char * ; name, . TObject * ; delObj = nullptr . ). Return pointer to object retrieved from shared memory. ; The object must be deleted after use. If delObj is a pointer to a previously allocated object it will be deleted. Returns 0 in case object with the given name does not exist. ; Definition at line 800 of file TMapFile.cxx. ◆ GetBaseAddr(). void * TMapFile::GetBaseAddr ; (; ); const. inl",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMapFile.html:1862,Usability,simpl,simple,1862,"originators unique address space and can not be used by the consumer process(es)). Consumer processes can map the memory region from this file and access the objects stored in it via the Get() method (which returns a copy of the object stored in the shared memory with correct vtbl ptr set). Only objects of classes with a Streamer() member function defined can be shared.; I know the current implementation is not ideal (you need to copy to and from the shared memory file) but the main problem is with the class' virtual_table pointer. This pointer points to a table unique for every process. Therefore, different options are:; One could allocate an object directly in shared memory in the producer, but the consumer still has to copy the object from shared memory into a local object which has the correct vtbl pointer for that process (copy ctor's can be used for creating the local copy).; Another possibility is to only allow objects without virtual functions in shared memory (like simple C structs), or to forbid (how?) the consumer from calling any virtual functions of the objects in shared memory.; A last option is to copy the object internals to shared memory and copy them again from there. This is what is done in the TMapFile (using the object Streamer() to make a deep copy). Option 1) saves one copy, but requires solid copy ctor's (along the full inheritance chain) to rebuild the object in the consumer. Most classes don't provide these copy ctor's, especially not when objects contain collections, etc. 2) is too limiting or dangerous (calling accidentally a virtual function will segv). So since we have a robust Streamer mechanism I opted for 3). ; Definition at line 26 of file TMapFile.h. Public Types; enum  { kDefaultMapSize = 0x80000; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , k",MatchSource.WIKI,doc/master/classTMapFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMapFile.html
https://root.cern/doc/master/classTMarker-members.html:1509,Availability,error,error,1509,"tual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &marker) const overrideTMarkervirtual; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; DeclFileName()TMarkerinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DisplayMarkerLineWidths()TMarkerstatic; DisplayMarkerTypes()TMarkerstatic; DistancetoPrimitive(Int_t px, Int_t py) overrideTMarkervirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTMarkervirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawMarker(Double_t x, Double_t y)TMarkervirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTMarkervirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fMarkerColorTAttMarkerprotected; fMarkerSizeTAttMarkerprotected; fMarkerStyleTAttMarkerprotected; fUniqueIDTObjectprivate; fXTMarkerprotected; fYTMarkerprotected; GetBBox() overrideTMarkervirtual; GetBBoxCenter() overrideTMarkervirtual; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIconName() constTObjectvirtual; GetMarkerColor() constTAttMarkerinlinevirtual; GetMarkerLineWidth(Style_t style)TAttMarkerstatic; GetMarkerSize() constTAttMarkerinlinevirtual; GetMarkerStyle() constTAttMarkerinlinevirtual; GetMarkerStyleBase(Style_t style)TAttMarkerstatic; GetName() constTObjectvirtual; GetObject",MatchSource.WIKI,doc/master/classTMarker-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker-members.html
https://root.cern/doc/master/classTMarker-members.html:1590,Availability,error,error,1590,"tual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &marker) const overrideTMarkervirtual; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; DeclFileName()TMarkerinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DisplayMarkerLineWidths()TMarkerstatic; DisplayMarkerTypes()TMarkerstatic; DistancetoPrimitive(Int_t px, Int_t py) overrideTMarkervirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTMarkervirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawMarker(Double_t x, Double_t y)TMarkervirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTMarkervirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fMarkerColorTAttMarkerprotected; fMarkerSizeTAttMarkerprotected; fMarkerStyleTAttMarkerprotected; fUniqueIDTObjectprivate; fXTMarkerprotected; fYTMarkerprotected; GetBBox() overrideTMarkervirtual; GetBBoxCenter() overrideTMarkervirtual; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIconName() constTObjectvirtual; GetMarkerColor() constTAttMarkerinlinevirtual; GetMarkerLineWidth(Style_t style)TAttMarkerstatic; GetMarkerSize() constTAttMarkerinlinevirtual; GetMarkerStyle() constTAttMarkerinlinevirtual; GetMarkerStyleBase(Style_t style)TAttMarkerstatic; GetName() constTObjectvirtual; GetObject",MatchSource.WIKI,doc/master/classTMarker-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker-members.html
https://root.cern/doc/master/classTMarker-members.html:187,Modifiability,inherit,inherited,187,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMarker Member List. This is the complete list of members for TMarker, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TMarkerstatic; Class_Name()TMarkerstatic; Class_Version()TMarkerinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &marker) const overrideTMarkervirtual; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; DeclFileName()TMarkerinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DisplayMarkerLineWidths()TMarkerstatic; DisplayMarkerTypes()TMarkerstatic; DistancetoPrimitive(Int_t px, Int_t py) overrideTMarkervirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTMarkervirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawMarker(Double_t x, Double_t y)TMarkervirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTMarkervirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fMarkerColorTAttMarkerprotected; fMarkerSizeTAttMar",MatchSource.WIKI,doc/master/classTMarker-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker-members.html
https://root.cern/doc/master/classTMarker.html:5960,Availability,error,error,5960,"ault action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about th",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:6049,Availability,error,error,6049,"nt Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const cha",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:6204,Availability,error,error,6204,"o which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTime",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:6381,Availability,error,error,6381,"Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:10465,Availability,error,error,10465,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttMarker;  TAttMarker ();  TAttMarker default constructor. ;  ;  TAttMarker (Color_t color, Style_t style, Size_t msize);  TAttMarker normal constructor. ;  ; virtual ~TAttMarker ();  TAttMarker destructor. ;  ; void Copy (TAttMarker &attmarker) const;  Copy this marker attributes to a new TA",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:18262,Deployability,release,released,18262,"py to a marker. ; Compute the closest distance of approach from point px,py to this marker. The distance is computed in pixels units. Returns0 if the distance <= markerRadius exact computed distance if dist in [markerRadius+1, markerRadius+2] 999 if larger than markerRadius + 3 9999 if no pad ; Reimplemented from TObject.; Definition at line 176 of file TMarker.cxx. ◆ Draw(). void TMarker::Draw ; (; Option_t * ; option = """"). overridevirtual . Draw this marker with its current attributes. ; Reimplemented from TObject.; Definition at line 199 of file TMarker.cxx. ◆ DrawMarker(). TMarker * TMarker::DrawMarker ; (; Double_t ; x, . Double_t ; y . ). virtual . Draw this marker with new coordinates. ; Definition at line 208 of file TMarker.cxx. ◆ ExecuteEvent(). void TMarker::ExecuteEvent ; (; Int_t ; event, . Int_t ; px, . Int_t ; py . ). overridevirtual . Execute action corresponding to one event. ; This member function is called when a marker is clicked with the locator; If Left button is clicked on a marker, the marker is moved to a new position when the mouse button is released. ; Reimplemented from TObject.; Definition at line 225 of file TMarker.cxx. ◆ GetBBox(). Rectangle_t TMarker::GetBBox ; (; ). overridevirtual . Return the bounding Box of the Line. ; Implements TAttBBox2D.; Definition at line 402 of file TMarker.cxx. ◆ GetBBoxCenter(). TPoint TMarker::GetBBoxCenter ; (; ). overridevirtual . Return the center of the BoundingBox as TPoint in pixels. ; Implements TAttBBox2D.; Definition at line 418 of file TMarker.cxx. ◆ GetX(). Double_t TMarker::GetX ; (; ); const. inline . Definition at line 44 of file TMarker.h. ◆ GetY(). Double_t TMarker::GetY ; (; ); const. inline . Definition at line 45 of file TMarker.h. ◆ IsA(). TClass * TMarker::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 69 of file TMarker.h. ◆ ls(). void TMarker::ls ; (; Option_t * ; option = """"); const. overridevi",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:5966,Integrability,message,message,5966,"ault action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about th",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:6387,Integrability,message,message,6387,"Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:7589,Integrability,message,message,7589,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle again",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:10471,Integrability,message,message,10471,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttMarker;  TAttMarker ();  TAttMarker default constructor. ;  ;  TAttMarker (Color_t color, Style_t style, Size_t msize);  TAttMarker normal constructor. ;  ; virtual ~TAttMarker ();  TAttMarker destructor. ;  ; void Copy (TAttMarker &attmarker) const;  Copy this marker attributes to a new TA",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:10844,Integrability,message,message,10844,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttMarker;  TAttMarker ();  TAttMarker default constructor. ;  ;  TAttMarker (Color_t color, Style_t style, Size_t msize);  TAttMarker normal constructor. ;  ; virtual ~TAttMarker ();  TAttMarker destructor. ;  ; void Copy (TAttMarker &attmarker) const;  Copy this marker attributes to a new TAttMarker. ;  ; virtual Color_t GetMarkerColor () const;  Return the marker color. ;  ; virtual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:1089,Modifiability,inherit,inherited,1089,"Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TMarker Class ReferenceGraphics » 2D Graphics » Basic graphics. ; Manages Markers. ; Use the TMarker constructor to create a marker.; TMarker(Double_t x,Double_t y,Int_t marker); TMarker::TMarkerTMarker()Marker default constructor.Definition TMarker.cxx:55; double; int; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; The parameters x and y are the marker coordinates and marker is the marker type.; Use the TPolyMarker to create an array on N points in a 2D space. At each point x[i], y[i] a marker is drawn.; Use the TAttMarker class to change the attributes color, style and size of a marker.; Example. Use the TAttMarker::SetMarkerSize(size) method to set the size of a marker. . Definition at line 22 of file TMarker.h. Public Types; enum  { kMarkerNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMarker ();  Marker default constructor. ;  ;  TMarker (const TMarker &marker);  Marker copy constructor. ;  ;  TMarker (Double_t x, Double_t y, Int_t marker);  Marker normal constructor. ;  ;  ~TMarker () override;  Marker default destructor. ;  ; void Copy (TObject &marker) const override;  Copy this marker to marker. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute dista",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:4464,Modifiability,inherit,inherited,4464,"oid SetBBoxCenterX (const Int_t x) override;  Set X coordinate of the center of the BoundingBox. ;  ; void SetBBoxCenterY (const Int_t y) override;  Set Y coordinate of the center of the BoundingBox. ;  ; void SetBBoxX1 (const Int_t x) override;  Set left hand side of BoundingBox to a value (resize in x direction on left) ;  ; void SetBBoxX2 (const Int_t x) override;  Set right hand side of BoundingBox to a value (resize in x direction on right) ;  ; void SetBBoxY1 (const Int_t y) override;  Set top of BoundingBox to a value (resize in y direction on top) ;  ; void SetBBoxY2 (const Int_t y) override;  Set bottom of BoundingBox to a value (resize in y direction on bottom) ;  ; virtual void SetNDC (Bool_t isNDC=kTRUE);  Set NDC mode on if isNDC = kTRUE, off otherwise. ;  ; virtual void SetX (Double_t x);  ; virtual void SetY (Double_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TMarker. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:5596,Modifiability,inherit,inheritance,5596,"ect ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:7687,Modifiability,inherit,inherits,7687,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality th",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:7804,Modifiability,inherit,inherits,7804,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden t",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:11151,Modifiability,inherit,inherited,11151,"wOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttMarker;  TAttMarker ();  TAttMarker default constructor. ;  ;  TAttMarker (Color_t color, Style_t style, Size_t msize);  TAttMarker normal constructor. ;  ; virtual ~TAttMarker ();  TAttMarker destructor. ;  ; void Copy (TAttMarker &attmarker) const;  Copy this marker attributes to a new TAttMarker. ;  ; virtual Color_t GetMarkerColor () const;  Return the marker color. ;  ; virtual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarke",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:12571,Modifiability,inherit,inherited,12571,"nst;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DisplayMarkerLineWidths ();  Display the table of markers with different line widths and their numbers. ;  ; static void DisplayMarkerTypes ();  Display the table of markers with their numbers. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:13120,Modifiability,inherit,inherited,13120,". ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DisplayMarkerLineWidths ();  Display the table of markers with different line widths and their numbers. ;  ; static void DisplayMarkerTypes ();  Display the table of markers with their numbers. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:13638,Modifiability,inherit,inherited,13638,"me ();  ; static void DisplayMarkerLineWidths ();  Display the table of markers with different line widths and their numbers. ;  ; static void DisplayMarkerTypes ();  Display the table of markers with their numbers. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Double_t fX;  X position of marker (left,center,etc..) ;  ; Double_t fY;  Y position of marker (left,center,etc..) ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int lev",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:14173,Modifiability,inherit,inherited,14173,"Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Double_t fX;  X position of marker (left,center,etc..) ;  ; Double_t fY;  Y position of marker (left,center,etc..) ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMarker.h>. Inheritance diagram for TMarker:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkMarkerNDC Marker",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:14519,Modifiability,inherit,inherited,14519,"l_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Double_t fX;  X position of marker (left,center,etc..) ;  ; Double_t fY;  Y position of marker (left,center,etc..) ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMarker.h>. Inheritance diagram for TMarker:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkMarkerNDC Marker position is in NDC. . Definition at line 30 of file TMarker.h. Constructor & Destructor Documentation. ◆ TMarker() [1/3]. TMarker::TMarker ; (; ). Marker default constructor. ; Definition at line 55 of file TMarker.cxx. ◆ TMarker() [2/3]. TMarker::TMarker ; (; Double_t ; x, . Double_t ; y,",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:14716,Modifiability,inherit,inherited,14716,"; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Double_t fX;  X position of marker (left,center,etc..) ;  ; Double_t fY;  Y position of marker (left,center,etc..) ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMarker.h>. Inheritance diagram for TMarker:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkMarkerNDC Marker position is in NDC. . Definition at line 30 of file TMarker.h. Constructor & Destructor Documentation. ◆ TMarker() [1/3]. TMarker::TMarker ; (; ). Marker default constructor. ; Definition at line 55 of file TMarker.cxx. ◆ TMarker() [2/3]. TMarker::TMarker ; (; Double_t ; x, . Double_t ; y, . Int_t ; marker . ). Marker normal constructor. ; Definition at line 64 of file TMarker.cxx. ◆ TMarker() [3/3]. TMarker::TMarker ; (; const TMarker & ; marker). Marker copy constructor. ; Definition at line 82 of file TMarker.cxx. ◆ ~TMarker(). TMarker::~TMarker ; (; ). override .",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:14815,Modifiability,inherit,inherited,14815,"; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Double_t fX;  X position of marker (left,center,etc..) ;  ; Double_t fY;  Y position of marker (left,center,etc..) ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMarker.h>. Inheritance diagram for TMarker:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkMarkerNDC Marker position is in NDC. . Definition at line 30 of file TMarker.h. Constructor & Destructor Documentation. ◆ TMarker() [1/3]. TMarker::TMarker ; (; ). Marker default constructor. ; Definition at line 55 of file TMarker.cxx. ◆ TMarker() [2/3]. TMarker::TMarker ; (; Double_t ; x, . Double_t ; y, . Int_t ; marker . ). Marker normal constructor. ; Definition at line 64 of file TMarker.cxx. ◆ TMarker() [3/3]. TMarker::TMarker ; (; const TMarker & ; marker). Marker copy constructor. ; Definition at line 82 of file TMarker.cxx. ◆ ~TMarker(). TMarker::~TMarker ; (; ). override .",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker.html:7318,Security,hash,hash,7318," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTMarker.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker.html
https://root.cern/doc/master/classTMarker3DBox.html:4034,Availability,error,error,4034,"lar Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about th",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:4123,Availability,error,error,4123,"f class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const cha",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:4278,Availability,error,error,4278,"ect using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTime",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:4455,Availability,error,error,4455,"py this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:8768,Availability,error,error,8768,"id Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:4040,Integrability,message,message,4040,"lar Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about th",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:4461,Integrability,message,message,4461,"py this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:5663,Integrability,message,message,5663,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:8774,Integrability,message,message,8774,"id Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t ",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:9147,Integrability,message,message,9147,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Ch",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:12354,Integrability,interface,interface,12354," ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void PaintH3 (TH1 *h, Option_t *option);  Paint 3-d histogram h with marker3dboxes. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Stat",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:2387,Modifiability,inherit,inherited,2387,"e event. ;  ; virtual void GetDirection (Float_t &theta, Float_t &phi) const;  ; virtual void GetPosition (Float_t &x, Float_t &y, Float_t &z) const;  ; TObject * GetRefObject () const;  ; virtual void GetSize (Float_t &dx, Float_t &dy, Float_t &dz) const;  ; TClass * IsA () const override;  ; void Paint (Option_t *option) override;  Paint marker 3D box. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; virtual void SetDirection (Float_t theta, Float_t phi);  Set direction. ;  ; virtual void SetPoints (Double_t *buff) const;  Set points. ;  ; virtual void SetPosition (Float_t x, Float_t y, Float_t z);  Set position. ;  ; virtual void SetRefObject (TObject *obj=nullptr);  ; virtual void SetSize (Float_t dx, Float_t dy, Float_t dz);  Set size. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TMarker3DBox. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:3670,Modifiability,inherit,inheritance,3670,"t to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:5761,Modifiability,inherit,inherits,5761,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:5878,Modifiability,inherit,inherits,5878,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:9454,Modifiability,inherit,inherited,9454,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ; ",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:10959,Modifiability,inherit,inherited,10959,";  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ; ",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:12214,Modifiability,inherit,inherited,12214," ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void PaintH3 (TH1 *h, Option_t *option);  Paint 3-d histogram h with marker3dboxes. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Stat",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:12751,Modifiability,inherit,inherited,12751,"ill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void PaintH3 (TH1 *h, Option_t *option);  Paint 3-d histogram h with marker3dboxes. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * De",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:13269,Modifiability,inherit,inherited,13269,"r Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void PaintH3 (TH1 *h, Option_t *option);  Paint 3-d histogram h with marker3dboxes. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Types; enum  { kTemporary = (1ULL << ( 23 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TMarker3DBox (const TMarker3DBox &);  copy constructor ;  ; TMarker3DBox & operator= (const TMarker3DBox &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ; Float_t fPhi;  ; TObject * fRefObject;  ; Float_t fTheta;  ; Float_t fX;  ; Float_t f",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:13481,Modifiability,inherit,inherited,13481,"r Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void PaintH3 (TH1 *h, Option_t *option);  Paint 3-d histogram h with marker3dboxes. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Types; enum  { kTemporary = (1ULL << ( 23 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TMarker3DBox (const TMarker3DBox &);  copy constructor ;  ; TMarker3DBox & operator= (const TMarker3DBox &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ; Float_t fPhi;  ; TObject * fRefObject;  ; Float_t fTheta;  ; Float_t fX;  ; Float_t f",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:13693,Modifiability,inherit,inherited,13693,"r Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void PaintH3 (TH1 *h, Option_t *option);  Paint 3-d histogram h with marker3dboxes. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Types; enum  { kTemporary = (1ULL << ( 23 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TMarker3DBox (const TMarker3DBox &);  copy constructor ;  ; TMarker3DBox & operator= (const TMarker3DBox &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ; Float_t fPhi;  ; TObject * fRefObject;  ; Float_t fTheta;  ; Float_t fX;  ; Float_t f",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:13950,Modifiability,inherit,inherited,13950,"t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Types; enum  { kTemporary = (1ULL << ( 23 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TMarker3DBox (const TMarker3DBox &);  copy constructor ;  ; TMarker3DBox & operator= (const TMarker3DBox &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ; Float_t fPhi;  ; TObject * fRefObject;  ; Float_t fTheta;  ; Float_t fX;  ; Float_t fY;  ; Float_t fZ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;  ",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:14213,Modifiability,inherit,inherited,14213,"acking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Types; enum  { kTemporary = (1ULL << ( 23 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TMarker3DBox (const TMarker3DBox &);  copy constructor ;  ; TMarker3DBox & operator= (const TMarker3DBox &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ; Float_t fPhi;  ; TObject * fRefObject;  ; Float_t fTheta;  ; Float_t fX;  ; Float_t fY;  ; Float_t fZ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); }; ",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:14594,Modifiability,inherit,inherited,14594,"lass ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Types; enum  { kTemporary = (1ULL << ( 23 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TMarker3DBox (const TMarker3DBox &);  copy constructor ;  ; TMarker3DBox & operator= (const TMarker3DBox &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ; Float_t fPhi;  ; TObject * fRefObject;  ; Float_t fTheta;  ; Float_t fX;  ; Float_t fY;  ; Float_t fZ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:14755,Modifiability,inherit,inherited,14755,"ame ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Types; enum  { kTemporary = (1ULL << ( 23 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TMarker3DBox (const TMarker3DBox &);  copy constructor ;  ; TMarker3DBox & operator= (const TMarker3DBox &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ; Float_t fPhi;  ; TObject * fRefObject;  ; Float_t fTheta;  ; Float_t fX;  ; Float_t fY;  ; Float_t fZ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . #include <TMarker3DBox.h>. Inheritance diagram for TMarker3DBox:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. protecte",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:14910,Modifiability,inherit,inherited,14910,"; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TMarker3DBox (const TMarker3DBox &);  copy constructor ;  ; TMarker3DBox & operator= (const TMarker3DBox &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t fDx;  ; Float_t fDy;  ; Float_t fDz;  ; Float_t fPhi;  ; TObject * fRefObject;  ; Float_t fTheta;  ; Float_t fX;  ; Float_t fY;  ; Float_t fZ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . #include <TMarker3DBox.h>. Inheritance diagram for TMarker3DBox:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. protected . EnumeratorkTemporary . Definition at line 54 of file TMarker3DBox.h. Constructor & Destructor Documentation. ◆ TMarker3DBox() [1/3]. TMarker3DBox::TMarker3DBox ; (; const TMarker3DBox & ; m3d). pro",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMarker3DBox.html:5392,Security,hash,hash,5392," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTMarker3DBox.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMarker3DBox.html
https://root.cern/doc/master/classTMaterial.html:4458,Availability,error,error,4458,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:4547,Availability,error,error,4547,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:4702,Availability,error,error,4702,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:4999,Availability,error,error,4999,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:9083,Availability,error,error,9083,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFil",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:4464,Integrability,message,message,4464,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:5005,Integrability,message,message,5005,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:5995,Integrability,message,message,5995,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:9089,Integrability,message,message,9089,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFil",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:9462,Integrability,message,message,9462," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttribu",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:1261,Modifiability,inherit,inherited,1261," 3D Graphics » Basic 3D graphics. ; Manages a detector material. ; See class TGeometry ; Definition at line 28 of file TMaterial.h. Public Member Functions;  TMaterial ();  Material default constructor. ;  ;  TMaterial (const char *name, const char *title, Float_t a, Float_t z, Float_t density);  Material normal constructor. ;  ;  TMaterial (const char *name, const char *title, Float_t a, Float_t z, Float_t density, Float_t radl, Float_t inter);  Material normal constructor. ;  ;  ~TMaterial () override;  Material default destructor. ;  ; virtual Float_t GetA () const;  ; virtual Float_t GetDensity () const;  ; virtual Float_t GetInterLength () const;  ; virtual Int_t GetNumber () const;  ; virtual Float_t GetRadLength () const;  ; virtual Float_t GetZ () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TMaterial. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:3001,Modifiability,inherit,inherited,3001,"ide;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:4094,Modifiability,inherit,inheritance,4094,"  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:6093,Modifiability,inherit,inherits,6093,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:6210,Modifiability,inherit,inherits,6210,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:9769,Modifiability,inherit,inherited,9769,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:11218,Modifiability,inherit,inherited,11218,"void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Float_t fA;  ; Float_t fDensity;  ; Float_t fInterLength;  ; Int_t fNumber;  ; Float_t fRadLength;  ; Float_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TStrin",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:11428,Modifiability,inherit,inherited,11428,"void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Float_t fA;  ; Float_t fDensity;  ; Float_t fInterLength;  ; Int_t fNumber;  ; Float_t fRadLength;  ; Float_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TStrin",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:11946,Modifiability,inherit,inherited,11946,"ber Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Float_t fA;  ; Float_t fDensity;  ; Float_t fInterLength;  ; Int_t fNumber;  ; Float_t fRadLength;  ; Float_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:12287,Modifiability,inherit,inherited,12287,"onst char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Float_t fA;  ; Float_t fDensity;  ; Float_t fInterLength;  ; Int_t fNumber;  ; Float_t fRadLength;  ; Float_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:12369,Modifiability,inherit,inherited,12369,"onst char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Float_t fA;  ; Float_t fDensity;  ; Float_t fInterLength;  ; Int_t fNumber;  ; Float_t fRadLength;  ; Float_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:12524,Modifiability,inherit,inherited,12524," DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Float_t fA;  ; Float_t fDensity;  ; Float_t fInterLength;  ; Int_t fNumber;  ; Float_t fRadLength;  ; Float_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMaterial.h>. Inheritance diagram for TMaterial:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera inst",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:13165,Modifiability,inherit,inherited,13165,"ributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMaterial.h>. Inheritance diagram for TMaterial:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMaterial() [1/3]. TMaterial::TMaterial ; (; ). Material default constructor. ; Definition at line 27 of file TMaterial.cxx. ◆ TMaterial() [2/3]. TMaterial::TMaterial ; (; const char * ; name, . const char * ; title, . Float_t ; a, . Float_t ; z, . Float_t ; density . ). Material normal constructor. ; Definition at line 40 of file TMaterial.cxx. ◆ TMaterial() [3/3]. TMaterial::TMaterial ; (; const char * ; name, . const char * ; title, . Float_t ; a, . Float_t ; z, . Float_t ; density, . Float_t ; radl, . Float_t ; inter . ). Material normal constructor. ; Definition at line 56 of file TMaterial.cxx. ◆ ~TMaterial(). TMaterial::",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:13264,Modifiability,inherit,inherited,13264,"ributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMaterial.h>. Inheritance diagram for TMaterial:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMaterial() [1/3]. TMaterial::TMaterial ; (; ). Material default constructor. ; Definition at line 27 of file TMaterial.cxx. ◆ TMaterial() [2/3]. TMaterial::TMaterial ; (; const char * ; name, . const char * ; title, . Float_t ; a, . Float_t ; z, . Float_t ; density . ). Material normal constructor. ; Definition at line 40 of file TMaterial.cxx. ◆ TMaterial() [3/3]. TMaterial::TMaterial ; (; const char * ; name, . const char * ; title, . Float_t ; a, . Float_t ; z, . Float_t ; density, . Float_t ; radl, . Float_t ; inter . ). Material normal constructor. ; Definition at line 56 of file TMaterial.cxx. ◆ ~TMaterial(). TMaterial::",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:327,Safety,detect,detector,327,". ROOT: TMaterial Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TMaterial Class ReferenceGraphics » 3D Graphics » Basic 3D graphics. ; Manages a detector material. ; See class TGeometry ; Definition at line 28 of file TMaterial.h. Public Member Functions;  TMaterial ();  Material default constructor. ;  ;  TMaterial (const char *name, const char *title, Float_t a, Float_t z, Float_t density);  Material normal constructor. ;  ;  TMaterial (const char *name, const char *title, Float_t a, Float_t z, Float_t density, Float_t radl, Float_t inter);  Material normal constructor. ;  ;  ~TMaterial () override;  Material default destructor. ;  ; virtual Float_t GetA () const;  ; virtual Float_t GetDensity () const;  ; virtual Float_t GetInterLength () const;  ; virtual Int_t GetNumber () const;  ; virtual Float_t GetRadLength () const;  ; virtual Float_t GetZ () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TMaterial. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name ",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMaterial.html:2129,Security,hash,hash,2129,"verride;  Stream an object of class TMaterial. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;",MatchSource.WIKI,doc/master/classTMaterial.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMaterial.html
https://root.cern/doc/master/classTMathText-members.html:1790,Availability,error,error,1790,") constTAttFill; DeclFileName()TMathTextinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTTextvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawMathText(Double_t x, Double_t y, const char *text)TMathText; DrawText(Double_t x, Double_t y, const char *text)TTextvirtual; DrawText(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const char *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTTextvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fNameTNamedprotected; fRendererTMathTextprotected; fTextAlignTAttTextprotected; fTextAngleTAttTextprotected; fTextColorTAttTextprotected; fTextFontTAttTextprotected; fTextSizeTAttTextprotected; fTitleTNamedprotected; fUniqueIDTObjectprivate; fWcsTitleTTextprotected; fXTTextprotected; fYTTextprotected; GetAlignPoint(Double_t &x0, Double_t &y0, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length, const Short_t align)TMathTextprotected; GetBBox() overrideTTextvirtual; GetBBoxCenter() overrideT",MatchSource.WIKI,doc/master/classTMathText-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText-members.html
https://root.cern/doc/master/classTMathText-members.html:1871,Availability,error,error,1871,") constTAttFill; DeclFileName()TMathTextinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTTextvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawMathText(Double_t x, Double_t y, const char *text)TMathText; DrawText(Double_t x, Double_t y, const char *text)TTextvirtual; DrawText(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const char *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTTextvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fNameTNamedprotected; fRendererTMathTextprotected; fTextAlignTAttTextprotected; fTextAngleTAttTextprotected; fTextColorTAttTextprotected; fTextFontTAttTextprotected; fTextSizeTAttTextprotected; fTitleTNamedprotected; fUniqueIDTObjectprivate; fWcsTitleTTextprotected; fXTTextprotected; fYTTextprotected; GetAlignPoint(Double_t &x0, Double_t &y0, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length, const Short_t align)TMathTextprotected; GetBBox() overrideTTextvirtual; GetBBoxCenter() overrideT",MatchSource.WIKI,doc/master/classTMathText-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText-members.html
https://root.cern/doc/master/classTMathText-members.html:191,Modifiability,inherit,inherited,191,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMathText Member List. This is the complete list of members for TMathText, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TMathTextstatic; Class_Name()TMathTextstatic; Class_Version()TMathTextinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &text) const overrideTMathTextvirtual; TText::TAttText::Copy(TAttText &atttext) constTAttText; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TMathTextinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTTextvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawMathText(Double_t x, Double_t y, const char *text)TMathText; DrawText(Double_t x, Double_t y, const char *text)TTextvirtual; DrawText(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const char *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTTextvirtual; Fatal(const char *method, const ",MatchSource.WIKI,doc/master/classTMathText-members.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText-members.html
https://root.cern/doc/master/classTMathText.html:2499,Availability,avail,available,2499,"left\\{{2\\over 1-\\Delta\\alpha} \\chi(s) \\left[ \\^{g}_\\nu^e \\^{g}_\\nu^f (1 + \\cos^2\\theta) + \\^{g}_a^e \\^{g}_a^f \\cos\\theta \\right] \\right\\}"");; l.DrawMathText(0.50, 0.330, ""p(n) = {1\\over\\pi\\sqrt{2}} \\sum_{k = 1}^\\infty \\sqrt{k} A_k(n) {d\\over dn} {\\sinh \\left\\{ {\\pi\\over k} \\sqrt{2\\over 3} \\sqrt{n - {1\\over 24}} \\right\\} \\over \\sqrt{n - {1\\over 24}}}"");; l.DrawMathText(0.13, 0.150, ""{(\\ell+1)C_{\\ell}^{TE} \\over 2\\pi}"");; l.DrawMathText(0.27, 0.110, ""\\mathbb{N} \\subset \\mathbb{R}"");; l.DrawMathText(0.63, 0.100, ""\\hbox{RHIC スピン物理 Нью-Йорк}"");; ; c1->Print(""c1.png"");; c1->Print(""c1.ps"");; ; return c1;; }; TCanvasThe Canvas class.Definition TCanvas.h:23; TLine::Printvoid Print(Option_t *option="""") const overrideDump this line with its attributes.Definition TLine.cxx:419; TMathTextTo draw TeX Mathematical Formula.Definition TMathText.h:19; c1return c1Definition legend1.C:41; lTLine lDefinition textangle.C:4; . The list of all available symbols is given in the following example:. Limitation:; TMathText rendering is not implemented for the PDF output. PostScript output should be used instead. ; Definition at line 19 of file TMathText.h. Public Types; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TText; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMath",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:12055,Availability,error,error,12055," (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:12144,Availability,error,error,12144,"owser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:12299,Availability,error,error,12299,"/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this obj",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:12476,Availability,error,error,12476,"object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:16309,Availability,error,error,16309,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a n",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:12061,Integrability,message,message,12061," (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:12482,Integrability,message,message,12482,"object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:13472,Integrability,message,message,13472,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:16315,Integrability,message,message,16315,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a n",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:16688,Integrability,message,message,16688,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Short_t GetTextAlign () const;  Return the text alignment. ;  ; virtual Float_t GetTextAngle () const;  Return the text angle. ;  ; virtual Color_t GetTextColor () const;  Return the text color. ;  ; virtual Font_t GetTextFont () const;  Return the text font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t Ge",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:2783,Modifiability,inherit,inherited,2783,"t\\} \\over \\sqrt{n - {1\\over 24}}}"");; l.DrawMathText(0.13, 0.150, ""{(\\ell+1)C_{\\ell}^{TE} \\over 2\\pi}"");; l.DrawMathText(0.27, 0.110, ""\\mathbb{N} \\subset \\mathbb{R}"");; l.DrawMathText(0.63, 0.100, ""\\hbox{RHIC スピン物理 Нью-Йорк}"");; ; c1->Print(""c1.png"");; c1->Print(""c1.ps"");; ; return c1;; }; TCanvasThe Canvas class.Definition TCanvas.h:23; TLine::Printvoid Print(Option_t *option="""") const overrideDump this line with its attributes.Definition TLine.cxx:419; TMathTextTo draw TeX Mathematical Formula.Definition TMathText.h:19; c1return c1Definition legend1.C:41; lTLine lDefinition textangle.C:4; . The list of all available symbols is given in the following example:. Limitation:; TMathText rendering is not implemented for the PDF output. PostScript output should be used instead. ; Definition at line 19 of file TMathText.h. Public Types; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TText; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMathText ();  Default constructor. ;  ;  TMathText (const TMathText &text);  Copy constructor. ;  ;  TMathText (Double_t x, Double_t y, const char *text);  Normal constructor. ;  ;  ~TMathText () override;  Destructor. ;  ; void Copy (TObject &text) const override;  Copy. ;  ; TMathText * DrawMathText (Double_t x, Double_t y, const char *text);  Make a copy",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:2862,Modifiability,inherit,inherited,2862,"t\\} \\over \\sqrt{n - {1\\over 24}}}"");; l.DrawMathText(0.13, 0.150, ""{(\\ell+1)C_{\\ell}^{TE} \\over 2\\pi}"");; l.DrawMathText(0.27, 0.110, ""\\mathbb{N} \\subset \\mathbb{R}"");; l.DrawMathText(0.63, 0.100, ""\\hbox{RHIC スピン物理 Нью-Йорк}"");; ; c1->Print(""c1.png"");; c1->Print(""c1.ps"");; ; return c1;; }; TCanvasThe Canvas class.Definition TCanvas.h:23; TLine::Printvoid Print(Option_t *option="""") const overrideDump this line with its attributes.Definition TLine.cxx:419; TMathTextTo draw TeX Mathematical Formula.Definition TMathText.h:19; c1return c1Definition legend1.C:41; lTLine lDefinition textangle.C:4; . The list of all available symbols is given in the following example:. Limitation:; TMathText rendering is not implemented for the PDF output. PostScript output should be used instead. ; Definition at line 19 of file TMathText.h. Public Types; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TText; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMathText ();  Default constructor. ;  ;  TMathText (const TMathText &text);  Copy constructor. ;  ;  TMathText (Double_t x, Double_t y, const char *text);  Normal constructor. ;  ;  ~TMathText () override;  Destructor. ;  ; void Copy (TObject &text) const override;  Copy. ;  ; TMathText * DrawMathText (Double_t x, Double_t y, const char *text);  Make a copy",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:4672,Modifiability,inherit,inherited,4672,");  Normal constructor. ;  ;  ~TMathText () override;  Destructor. ;  ; void Copy (TObject &text) const override;  Copy. ;  ; TMathText * DrawMathText (Double_t x, Double_t y, const char *text);  Make a copy of this object with the new parameters and copy object attributes. ;  ; void GetBoundingBox (UInt_t &w, UInt_t &h, Bool_t angle=kFALSE) override;  Get the text width and height. ;  ; Double_t GetXsize ();  Get X size. ;  ; Double_t GetYsize ();  Get Y size. ;  ; TClass * IsA () const override;  ; void Paint (Option_t *option="""") override;  Paint text. ;  ; virtual void PaintMathText (Double_t x, Double_t y, Double_t angle, Double_t size, const char *text);  Paint text (used by Paint()). ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TText;  TText ();  ;  TText (const TText &text);  Copy constructor. ;  ;  TText (Double_t x, Double_t y, const char *text);  Text normal constructor. ;  ;  TText (Double_t x, Double_t y, const wchar_t *text);  Text normal constructor. ;  ;  ~TText () override;  Text default destructor. ;  ; void Copy (TObject &text) const override;  Copy this text to text. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a string. ;  ; virtual TText * DrawText (Double_t x, Double_t y, const char *text);  Draw this text with new coordinates. ;  ; virtual TText * DrawText (Double_t x, Double_t y, const wchar_t *text);  Draw this text with new coordinates. ;  ; virtual TText * DrawTextNDC (Double_t x, Double_t y, const char *text);  Draw this text with new coordinates in NDC. ;  ; virtual TText * DrawTextNDC (Double_t x, Double_t y, const wchar_t *text);  Draw this text with new coordinates in NDC. ;  ; void ExecuteEvent (Int_t event",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:9315,Modifiability,inherit,inherited,9315,"undingBox to a value (resize in x direction on left) ;  ; void SetBBoxX2 (const Int_t) override;  Set right hand side of BoundingBox to a value (resize in x direction on right) ;  ; void SetBBoxY1 (const Int_t) override;  Set top of BoundingBox to a value (resize in y direction on top) ;  ; void SetBBoxY2 (const Int_t) override;  Set bottom of BoundingBox to a value (resize in y direction on bottom) ;  ; virtual void SetMbTitle (const wchar_t *title=L"""");  Change (i.e. set) the title of the TNamed. ;  ; virtual void SetNDC (Bool_t isNDC=kTRUE);  Set NDC mode on if isNDC = kTRUE, off otherwise. ;  ; virtual void SetText (Double_t x, Double_t y, const char *text);  ; virtual void SetText (Double_t x, Double_t y, const wchar_t *text);  ; virtual void SetX (Double_t x);  ; virtual void SetY (Double_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TText. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:10712,Modifiability,inherit,inherited,10712,"nst override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class in",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:11691,Modifiability,inherit,inheritance,11691,"Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:13570,Modifiability,inherit,inherits,13570,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:13687,Modifiability,inherit,inherits,13687,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:16995,Modifiability,inherit,inherited,16995,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Short_t GetTextAlign () const;  Return the text alignment. ;  ; virtual Float_t GetTextAngle () const;  Return the text angle. ;  ; virtual Color_t GetTextColor () const;  Return the text color. ;  ; virtual Font_t GetTextFont () const;  Return the text font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void ResetAttText (Option_t *toption="""");  Reset this text attributes to default values. ;  ; virtual void SaveTextAttributes (std::ostream &out, const char *name, Int_",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:18879,Modifiability,inherit,inherited,18879," ; virtual void SaveTextAttributes (std::ostream &out, const char *name, Int_t alidef=12, Float_t angdef=0, Int_t coldef=1, Int_t fondef=61, Float_t sizdef=1);  Save text attributes as C++ statement(s) on output stream out. ;  ; virtual void SetTextAlign (Short_t align=11);  Set the text alignment. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; ",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:19023,Modifiability,inherit,inherited,19023," ; virtual void SaveTextAttributes (std::ostream &out, const char *name, Int_t alidef=12, Float_t angdef=0, Int_t coldef=1, Int_t fondef=61, Float_t sizdef=1);  Save text attributes as C++ statement(s) on output stream out. ;  ; virtual void SetTextAlign (Short_t align=11);  Set the text alignment. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; ",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:20472,Modifiability,inherit,inherited,20472," SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const ch",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:20681,Modifiability,inherit,inherited,20681," SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const ch",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:20891,Modifiability,inherit,inherited,20891," SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const ch",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:21409,Modifiability,inherit,inherited,21409,"rom TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void GetAlignPoint (Double_t &x0, Double_t &y0, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length, const Short_t align);  Alignment. ;  ; void GetSize (Double_t &x0, Double_t &y0, Double_t &x1, Double_t &y1, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length);  Get the text bounding box. ;  ; TMathText & operator= (const TMathText &);  TMathText Painter. ;  ; void Render (const Double_t x, const Double_t y, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length);  Render the text. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int ",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:21621,Modifiability,inherit,inherited,21621,"rom TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void GetAlignPoint (Double_t &x0, Double_t &y0, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length, const Short_t align);  Alignment. ;  ; void GetSize (Double_t &x0, Double_t &y0, Double_t &x1, Double_t &y1, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length);  Get the text bounding box. ;  ; TMathText & operator= (const TMathText &);  TMathText Painter. ;  ; void Render (const Double_t x, const Double_t y, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length);  Render the text. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int ",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:21835,Modifiability,inherit,inherited,21835,"rom TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void GetAlignPoint (Double_t &x0, Double_t &y0, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length, const Short_t align);  Alignment. ;  ; void GetSize (Double_t &x0, Double_t &y0, Double_t &x1, Double_t &y1, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length);  Get the text bounding box. ;  ; TMathText & operator= (const TMathText &);  TMathText Painter. ;  ; void Render (const Double_t x, const Double_t y, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length);  Render the text. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int ",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:22643,Modifiability,inherit,inherited,22643,"Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void GetAlignPoint (Double_t &x0, Double_t &y0, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length, const Short_t align);  Alignment. ;  ; void GetSize (Double_t &x0, Double_t &y0, Double_t &x1, Double_t &y1, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length);  Get the text bounding box. ;  ; TMathText & operator= (const TMathText &);  TMathText Painter. ;  ; void Render (const Double_t x, const Double_t y, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length);  Render the text. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMathTextRenderer * fRenderer {nullptr};  ;  Protected Attributes inherited from TText; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Friends; class TMathTextRenderer;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL <",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:22914,Modifiability,inherit,inherited,22914,"constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void GetAlignPoint (Double_t &x0, Double_t &y0, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length, const Short_t align);  Alignment. ;  ; void GetSize (Double_t &x0, Double_t &y0, Double_t &x1, Double_t &y1, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length);  Get the text bounding box. ;  ; TMathText & operator= (const TMathText &);  TMathText Painter. ;  ; void Render (const Double_t x, const Double_t y, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length);  Render the text. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMathTextRenderer * fRenderer {nullptr};  ;  Protected Attributes inherited from TText; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Friends; class TMathTextRenderer;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMathText.h>. Inheritance diagram for TMathText:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymo",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:23135,Modifiability,inherit,inherited,23135,"  Alignment. ;  ; void GetSize (Double_t &x0, Double_t &y0, Double_t &x1, Double_t &y1, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length);  Get the text bounding box. ;  ; TMathText & operator= (const TMathText &);  TMathText Painter. ;  ; void Render (const Double_t x, const Double_t y, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length);  Render the text. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMathTextRenderer * fRenderer {nullptr};  ;  Protected Attributes inherited from TText; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Friends; class TMathTextRenderer;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMathText.h>. Inheritance diagram for TMathText:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkTextNDC . Definition at line 39 of file TMathText.h. Constructor & Destructor Documentation. ◆ TMathText() [1/3]. TMathText::TMathText ; (; ). Default constructor. ; Definition at line 345 of file TMathText.cxx. ◆ TMathText() [2/3]. TMath",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:23217,Modifiability,inherit,inherited,23217,"  Alignment. ;  ; void GetSize (Double_t &x0, Double_t &y0, Double_t &x1, Double_t &y1, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length);  Get the text bounding box. ;  ; TMathText & operator= (const TMathText &);  TMathText Painter. ;  ; void Render (const Double_t x, const Double_t y, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length);  Render the text. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMathTextRenderer * fRenderer {nullptr};  ;  Protected Attributes inherited from TText; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Friends; class TMathTextRenderer;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMathText.h>. Inheritance diagram for TMathText:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkTextNDC . Definition at line 39 of file TMathText.h. Constructor & Destructor Documentation. ◆ TMathText() [1/3]. TMathText::TMathText ; (; ). Default constructor. ; Definition at line 345 of file TMathText.cxx. ◆ TMathText() [2/3]. TMath",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:23453,Modifiability,inherit,inherited,23453,"der (const Double_t x, const Double_t y, const Double_t size, const Double_t angle, const Char_t *t, const Int_t length);  Render the text. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMathTextRenderer * fRenderer {nullptr};  ;  Protected Attributes inherited from TText; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Friends; class TMathTextRenderer;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMathText.h>. Inheritance diagram for TMathText:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkTextNDC . Definition at line 39 of file TMathText.h. Constructor & Destructor Documentation. ◆ TMathText() [1/3]. TMathText::TMathText ; (; ). Default constructor. ; Definition at line 345 of file TMathText.cxx. ◆ TMathText() [2/3]. TMathText::TMathText ; (; Double_t ; x, . Double_t ; y, . const char * ; text . ). Normal constructor. ; Definition at line 354 of file TMathText.cxx. ◆ TMathText() [3/3]. TMathText::TMathText ; (; const TMathText & ; text). Copy constructor. ; Definition at line 371 of file TMathTe",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:23648,Modifiability,inherit,inherited,23648,"Object; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMathTextRenderer * fRenderer {nullptr};  ;  Protected Attributes inherited from TText; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Friends; class TMathTextRenderer;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMathText.h>. Inheritance diagram for TMathText:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkTextNDC . Definition at line 39 of file TMathText.h. Constructor & Destructor Documentation. ◆ TMathText() [1/3]. TMathText::TMathText ; (; ). Default constructor. ; Definition at line 345 of file TMathText.cxx. ◆ TMathText() [2/3]. TMathText::TMathText ; (; Double_t ; x, . Double_t ; y, . const char * ; text . ). Normal constructor. ; Definition at line 354 of file TMathText.cxx. ◆ TMathText() [3/3]. TMathText::TMathText ; (; const TMathText & ; text). Copy constructor. ; Definition at line 371 of file TMathText.cxx. ◆ ~TMathText(). TMathText::~TMathText ; (; ). override . Destructor. ; Definition at line 363 of file TMathText.cxx. Member Function Documentation. ◆ Class(). static TClass * TMathT",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathText.html:10116,Security,hash,hash,10116,"t x);  ; virtual void SetY (Double_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TText. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to cu",MatchSource.WIKI,doc/master/classTMathText.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathText.html
https://root.cern/doc/master/classTMathTextRenderer.html:9046,Availability,error,error,9046," (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:9135,Availability,error,error,9135,"owser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:9290,Availability,error,error,9290,"/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this obj",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:9467,Availability,error,error,9467,"object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:13300,Availability,error,error,13300,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a n",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:9052,Integrability,message,message,9052," (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:9473,Integrability,message,message,9473,"object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:10463,Integrability,message,message,10463,"ssue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class shou",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:13306,Integrability,message,message,13306,"r new[] (size_t sz, void *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a n",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:13679,Integrability,message,message,13679,"move this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Short_t GetTextAlign () const;  Return the text alignment. ;  ; virtual Float_t GetTextAngle () const;  Return the text angle. ;  ; virtual Color_t GetTextColor () const;  Return the text color. ;  ; virtual Font_t GetTextFont () const;  Return the text font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t Ge",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:1556,Modifiability,inherit,inherited,1556,". ROOT: TMathTextRenderer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMathTextRenderer Class Reference. . Definition at line 54 of file TMathText.cxx. Public Member Functions;  TMathTextRenderer (TMathText *parent);  ; mathtext::bounding_box_t bounding_box (const std::wstring string, const unsigned int family=FAMILY_PLAIN) override;  ; mathtext::bounding_box_t bounding_box (const wchar_t character, float &current_x, const unsigned int family);  ; void filled_rectangle (const mathtext::bounding_box_t &bounding_box_0) override;  ; float font_size (const unsigned int family=FAMILY_PLAIN) const override;  ; void point (const float, const float) override;  ; void rectangle (const mathtext::bounding_box_t &) override;  ; void reset_font_size (const unsigned int) override;  ; void set_font_size (const float size) override;  ; void set_font_size (const float size, const unsigned int family) override;  ; void set_parameter (const float x, const float y, const float size, const float angle_degree);  ; void text_raw (const float x, const float y, const std::wstring string, const unsigned int family=FAMILY_PLAIN) override;  ; void text_with_bounding_box (const float, const float, const std::wstring, const unsigned int) override;  ; void transform_pad (double &xt, double &yt, const float x, const float y) const;  ;  Public Member Functions inherited from TText;  TText ();  ;  TText (const TText &text);  Copy constructor. ;  ;  TText (Double_t x, Double_t y, const char *text);  Text normal constructor. ;  ;  TText (Double_t x, Double_t y, const wchar_t *text);  Text normal constructor. ;  ;  ~TText () override;  Text default destructor. ;  ; void Copy (TObject &text) const override;  Copy this text to text. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute ",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:6306,Modifiability,inherit,inherited,6306,"undingBox to a value (resize in x direction on left) ;  ; void SetBBoxX2 (const Int_t) override;  Set right hand side of BoundingBox to a value (resize in x direction on right) ;  ; void SetBBoxY1 (const Int_t) override;  Set top of BoundingBox to a value (resize in y direction on top) ;  ; void SetBBoxY2 (const Int_t) override;  Set bottom of BoundingBox to a value (resize in y direction on bottom) ;  ; virtual void SetMbTitle (const wchar_t *title=L"""");  Change (i.e. set) the title of the TNamed. ;  ; virtual void SetNDC (Bool_t isNDC=kTRUE);  Set NDC mode on if isNDC = kTRUE, off otherwise. ;  ; virtual void SetText (Double_t x, Double_t y, const char *text);  ; virtual void SetText (Double_t x, Double_t y, const wchar_t *text);  ; virtual void SetX (Double_t x);  ; virtual void SetY (Double_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TText. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:7703,Modifiability,inherit,inherited,7703,"nst override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class in",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:8682,Modifiability,inherit,inheritance,8682,"Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:10561,Modifiability,inherit,inherits,10561,"e) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:10678,Modifiability,inherit,inherits,10678,"t be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:13986,Modifiability,inherit,inherited,13986,"tDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Short_t GetTextAlign () const;  Return the text alignment. ;  ; virtual Float_t GetTextAngle () const;  Return the text angle. ;  ; virtual Color_t GetTextColor () const;  Return the text color. ;  ; virtual Font_t GetTextFont () const;  Return the text font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void ResetAttText (Option_t *toption="""");  Reset this text attributes to default values. ;  ; virtual void SaveTextAttributes (std::ostream &out, const char *name, Int_",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:15870,Modifiability,inherit,inherited,15870," ; virtual void SaveTextAttributes (std::ostream &out, const char *name, Int_t alidef=12, Float_t angdef=0, Int_t coldef=1, Int_t fondef=61, Float_t sizdef=1);  Save text attributes as C++ statement(s) on output stream out. ;  ; virtual void SetTextAlign (Short_t align=11);  Set the text alignment. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual TClass * IsA () const;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the D",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:16014,Modifiability,inherit,inherited,16014," ; virtual void SaveTextAttributes (std::ostream &out, const char *name, Int_t alidef=12, Float_t angdef=0, Int_t coldef=1, Int_t fondef=61, Float_t sizdef=1);  Save text attributes as C++ statement(s) on output stream out. ;  ; virtual void SetTextAlign (Short_t align=11);  Set the text alignment. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual Color_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual TClass * IsA () const;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the D",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:17536,Modifiability,inherit,inherited,17536,"nsparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Protected Member Functions; mathtext::affine_transform_t transform_logical_to_pixel (void) const override;  ; mathtext::affine_transform_t transform_pixel_to_logical (void) const override;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; bool is_cyrillic_or_cjk (const wchar_t c) const;  ; size_t root_cjk_face_number (const bool serif=false) const;  ; size_t root_face_number (const unsigned int family, const bool serif=false) const;  . Private Attributes; float _angle_degree;  ; float _current_font_size [mathtext::math_text_renderer_t::NFAMILY];  ; float _font_size;  ; float _pad_pixel_transform [6];  ; float _pad_scale;  ; float _pad_scale_x;  ; float _pad_scale_x_relative;  ; float _pad_scale_y;  ; float _pad_scale_y_relative;  ; TMathText * _parent;  ; float _x0;  ; float _y0;  . Additional Inherited Members;  Public Types inherited from TText; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:18344,Modifiability,inherit,inherited,18344,"nsform_t transform_pixel_to_logical (void) const override;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; bool is_cyrillic_or_cjk (const wchar_t c) const;  ; size_t root_cjk_face_number (const bool serif=false) const;  ; size_t root_face_number (const unsigned int family, const bool serif=false) const;  . Private Attributes; float _angle_degree;  ; float _current_font_size [mathtext::math_text_renderer_t::NFAMILY];  ; float _font_size;  ; float _pad_pixel_transform [6];  ; float _pad_scale;  ; float _pad_scale_x;  ; float _pad_scale_x_relative;  ; float _pad_scale_y;  ; float _pad_scale_y_relative;  ; TMathText * _parent;  ; float _x0;  ; float _y0;  . Additional Inherited Members;  Public Types inherited from TText; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * ",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:18423,Modifiability,inherit,inherited,18423,"nsform_t transform_pixel_to_logical (void) const override;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; bool is_cyrillic_or_cjk (const wchar_t c) const;  ; size_t root_cjk_face_number (const bool serif=false) const;  ; size_t root_face_number (const unsigned int family, const bool serif=false) const;  . Private Attributes; float _angle_degree;  ; float _current_font_size [mathtext::math_text_renderer_t::NFAMILY];  ; float _font_size;  ; float _pad_pixel_transform [6];  ; float _pad_scale;  ; float _pad_scale_x;  ; float _pad_scale_x_relative;  ; float _pad_scale_y;  ; float _pad_scale_y_relative;  ; TMathText * _parent;  ; float _x0;  ; float _y0;  . Additional Inherited Members;  Public Types inherited from TText; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * ",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:19079,Modifiability,inherit,inherited,19079,"L << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * ",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:19288,Modifiability,inherit,inherited,19288,"L << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * ",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:19498,Modifiability,inherit,inherited,19498,"L << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * ",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:20016,Modifiability,inherit,inherited,20016,"();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TText; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Inheritance diagram for TMathTextRende",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:20228,Modifiability,inherit,inherited,20228,"();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TText; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Inheritance diagram for TMathTextRende",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:20442,Modifiability,inherit,inherited,20442,"();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TText; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Inheritance diagram for TMathTextRende",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:20639,Modifiability,inherit,inherited,20639,"();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TText; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Inheritance diagram for TMathTextRende",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:20732,Modifiability,inherit,inherited,20732,"();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TText; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Inheritance diagram for TMathTextRende",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:20953,Modifiability,inherit,inherited,20953,"tions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TText; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Inheritance diagram for TMathTextRenderer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMathTextRenderer(). TMathTextRenderer::TMathTextRenderer ; (; TMathText * ; parent). inline . Definition at line 114 of file TMathText.cxx. Member Function Documentation. ◆ bounding_box() [1/2]. mathtext::bounding_box_t TMathTextRenderer::bounding_box ; (; const std::wstring ; string, . const unsigned int ; family = FAMILY_PLAIN . ). inlineoverride . Definition at line 270 of file TMathText.cxx. ◆ bounding_box() [2/2]. mathtext::bounding_box",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:21035,Modifiability,inherit,inherited,21035,"tions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TText; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Inheritance diagram for TMathTextRenderer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMathTextRenderer(). TMathTextRenderer::TMathTextRenderer ; (; TMathText * ; parent). inline . Definition at line 114 of file TMathText.cxx. Member Function Documentation. ◆ bounding_box() [1/2]. mathtext::bounding_box_t TMathTextRenderer::bounding_box ; (; const std::wstring ; string, . const unsigned int ; family = FAMILY_PLAIN . ). inlineoverride . Definition at line 270 of file TMathText.cxx. ◆ bounding_box() [2/2]. mathtext::bounding_box",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:21271,Modifiability,inherit,inherited,21271,"ic const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TText; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Inheritance diagram for TMathTextRenderer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMathTextRenderer(). TMathTextRenderer::TMathTextRenderer ; (; TMathText * ; parent). inline . Definition at line 114 of file TMathText.cxx. Member Function Documentation. ◆ bounding_box() [1/2]. mathtext::bounding_box_t TMathTextRenderer::bounding_box ; (; const std::wstring ; string, . const unsigned int ; family = FAMILY_PLAIN . ). inlineoverride . Definition at line 270 of file TMathText.cxx. ◆ bounding_box() [2/2]. mathtext::bounding_box_t TMathTextRenderer::bounding_box ; (; const wchar_t ; character, . float & ; current_x, . const unsigned int ; family . ). inline . Definition at line 226 of file TMathText.cxx. ◆ filled_rectangle(). void TMathTextRenderer::filled_rectangle ; (; const mathtext::bounding_box_t",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMathTextRenderer.html:7107,Security,hash,hash,7107,"t x);  ; virtual void SetY (Double_t y);  ; void Streamer (TBuffer &) override;  Stream an object of class TText. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to cu",MatchSource.WIKI,doc/master/classTMathTextRenderer.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html
https://root.cern/doc/master/classTMatrixT.html:18573,Availability,error,error,18573," the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:18662,Availability,error,error,18662,"ns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:18817,Availability,error,error,18817,"y. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:19114,Availability,error,error,19114,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:23557,Availability,error,error,23557,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTBase< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static co",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:30740,Energy Efficiency,allocate,allocated,30740,"MatrixT< Element >::TMatrixT ; (; const TMatrixT< Element2 > & ; another). inline . Definition at line 70 of file TMatrixT.h. ◆ TMatrixT() [10/15]. template<class Element > . TMatrixT< Element >::TMatrixT ; (; EMatrixCreatorsOp1 ; op, . const TMatrixT< Element > & ; prototype . ). Constructor of matrix applying a specific operation to the prototype. ; Example: TMatrixT<Element> a(10,12); ...; TMatrixT<Element> b(TMatrixT::kTransposed, a); Supported operations are: kZero, kUnit, kTransposed, kInverted and kAtA. ; Definition at line 119 of file TMatrixT.cxx. ◆ TMatrixT() [11/15]. template<class Element > . TMatrixT< Element >::TMatrixT ; (; const TMatrixT< Element > & ; a, . EMatrixCreatorsOp2 ; op, . const TMatrixT< Element > & ; b . ). Constructor of matrix applying a specific operation to two prototypes. ; Example: TMatrixT<Element> a(10,12), b(12,5); ...; TMatrixT<Element> c(a, TMatrixT::kMult, b); Supported operations are: kMult (a*b), kTransposeMult (a'*b), kInvMult (a^(-1)*b); Whenever kInvMult is invoked and b is not squared, additional memory is allocated for a^(-1) ; Definition at line 165 of file TMatrixT.cxx. ◆ TMatrixT() [12/15]. template<class Element > . TMatrixT< Element >::TMatrixT ; (; const TMatrixT< Element > & ; a, . EMatrixCreatorsOp2 ; op, . const TMatrixTSym< Element > & ; b . ). Constructor of matrix applying a specific operation to two prototypes. ; Example: TMatrixT<Element> a(10,12), b(12,5); ...; TMatrixT<Element> c(a, TMatrixT::kMult, b); Supported operations are: kMult (a*b), kTransposeMult (a'*b), kInvMult (a^(-1)*b) ; Definition at line 227 of file TMatrixT.cxx. ◆ TMatrixT() [13/15]. template<class Element > . TMatrixT< Element >::TMatrixT ; (; const TMatrixTSym< Element > & ; a, . EMatrixCreatorsOp2 ; op, . const TMatrixT< Element > & ; b . ). Constructor of matrix applying a specific operation to two prototypes. ; Example: TMatrixT<Element> a(10,12), b(12,5); ...; TMatrixT<Element> c(a, TMatrixT::kMult, b); Supported operations are: ",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:31799,Energy Efficiency,allocate,allocated,31799,"memory is allocated for a^(-1) ; Definition at line 165 of file TMatrixT.cxx. ◆ TMatrixT() [12/15]. template<class Element > . TMatrixT< Element >::TMatrixT ; (; const TMatrixT< Element > & ; a, . EMatrixCreatorsOp2 ; op, . const TMatrixTSym< Element > & ; b . ). Constructor of matrix applying a specific operation to two prototypes. ; Example: TMatrixT<Element> a(10,12), b(12,5); ...; TMatrixT<Element> c(a, TMatrixT::kMult, b); Supported operations are: kMult (a*b), kTransposeMult (a'*b), kInvMult (a^(-1)*b) ; Definition at line 227 of file TMatrixT.cxx. ◆ TMatrixT() [13/15]. template<class Element > . TMatrixT< Element >::TMatrixT ; (; const TMatrixTSym< Element > & ; a, . EMatrixCreatorsOp2 ; op, . const TMatrixT< Element > & ; b . ). Constructor of matrix applying a specific operation to two prototypes. ; Example: TMatrixT<Element> a(10,12), b(12,5); ...; TMatrixT<Element> c(a, TMatrixT::kMult, b); Supported operations are: kMult (a*b), kTransposeMult (a'*b), kInvMult (a^(-1)*b) Whenever kInvMult is invoked and b is not squared, additional memory is allocated for a^(-1) ; Definition at line 281 of file TMatrixT.cxx. ◆ TMatrixT() [14/15]. template<class Element > . TMatrixT< Element >::TMatrixT ; (; const TMatrixTSym< Element > & ; a, . EMatrixCreatorsOp2 ; op, . const TMatrixTSym< Element > & ; b . ). Constructor of matrix applying a specific operation to two prototypes. ; Example: TMatrixT<Element> a(10,12), b(12,5); ...; TMatrixT<Element> c(a, TMatrixT::kMult, b); Supported operations are: kMult (a*b), kTransposeMult (a'*b), kInvMult (a^(-1)*b) ; Definition at line 343 of file TMatrixT.cxx. ◆ TMatrixT() [15/15]. template<class Element > . TMatrixT< Element >::TMatrixT ; (; const TMatrixTLazy< Element > & ; lazy_constructor). Constructor using the TMatrixTLazy class. ; Definition at line 394 of file TMatrixT.cxx. ◆ ~TMatrixT(). template<class Element > . TMatrixT< Element >::~TMatrixT ; (; ). inlineoverride . Definition at line 84 of file TMatrixT.h. Member Funct",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:4729,Integrability,depend,depends,4729,"ride;  Return the matrix determinant as d1,d2 where det = d1*TMath::Power(2.0,d2) ;  ; const TMatrixT< Element > EigenVectors (TVectorT< Element > &eigenValues) const;  Return a matrix containing the eigen-vectors ordered by descending values of Re^2+Im^2 of the complex eigen-values . ;  ; const Int_t * GetColIndexArray () const override;  ; Int_t * GetColIndexArray () override;  ; const Element * GetMatrixArray () const override;  ; Element * GetMatrixArray () override;  ; const Int_t * GetRowIndexArray () const override;  ; Int_t * GetRowIndexArray () override;  ; TMatrixT< Element > GetSub (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Option_t *option=""S"") const;  ; TMatrixTBase< Element > & GetSub (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, TMatrixTBase< Element > &target, Option_t *option=""S"") const override;  Get submatrix [row_lwb..row_upb] x [col_lwb..col_upb]; The indexing range of the returned matrix depends on the argument option: ;  ; TMatrixT< Element > & Invert (Double_t *det=nullptr);  Invert the matrix and calculate its determinant. ;  ; TMatrixT< Element > & InvertFast (Double_t *det=nullptr);  Invert the matrix and calculate its determinant, however upto (6x6) a fast Cramer inversion is used . ;  ; TClass * IsA () const override;  ; void Minus (const TMatrixT< Element > &a, const TMatrixT< Element > &b);  General matrix subtraction. Replace this matrix with C such that C = A - B. ;  ; void Minus (const TMatrixT< Element > &a, const TMatrixTSym< Element > &b);  General matrix subtraction. Replace this matrix with C such that C = A - B. ;  ; void Minus (const TMatrixTSym< Element > &a, const TMatrixT< Element > &b);  ; void Mult (const TMatrixT< Element > &a, const TMatrixT< Element > &b);  General matrix multiplication. Replace this matrix with C such that C = A * B. ;  ; void Mult (const TMatrixT< Element > &a, const TMatrixTSym< Element > &b);  Matrix multiplication, with A general and B symmetric. ;  ; void Mult (c",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:18579,Integrability,message,message,18579," the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:19120,Integrability,message,message,19120,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:20322,Integrability,message,message,20322,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:23563,Integrability,message,message,23563,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTBase< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static co",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:23936,Integrability,message,message,23936," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTBase< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Element & NaNValue ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor ",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:37281,Integrability,depend,depends,37281," Element >::GetRowIndexArray ; (; ); const. inlineoverridevirtual . Implements TMatrixTBase< Element >.; Definition at line 115 of file TMatrixT.h. ◆ GetRowIndexArray() [2/2]. template<class Element > . Int_t * TMatrixT< Element >::GetRowIndexArray ; (; ). inlineoverridevirtual . Implements TMatrixTBase< Element >.; Definition at line 116 of file TMatrixT.h. ◆ GetSub() [1/2]. template<class Element > . TMatrixT< Element > TMatrixT< Element >::GetSub ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb, . Option_t * ; option = ""S"" . ); const. inline . Definition at line 248 of file TMatrixT.h. ◆ GetSub() [2/2]. template<class Element > . TMatrixTBase< Element > & TMatrixT< Element >::GetSub ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb, . TMatrixTBase< Element > & ; target, . Option_t * ; option = ""S"" . ); const. overridevirtual . Get submatrix [row_lwb..row_upb] x [col_lwb..col_upb]; The indexing range of the returned matrix depends on the argument option: ; option == ""S"" : return [0..row_upb-row_lwb][0..col_upb-col_lwb] (default) else : return [row_lwb..row_upb][col_lwb..col_upb] ; Implements TMatrixTBase< Element >.; Definition at line 1082 of file TMatrixT.cxx. ◆ Invert(). template<class Element > . TMatrixT< Element > & TMatrixT< Element >::Invert ; (; Double_t * ; det = nullptr). Invert the matrix and calculate its determinant. ; Definition at line 1390 of file TMatrixT.cxx. ◆ InvertFast(). template<class Element > . TMatrixT< Element > & TMatrixT< Element >::InvertFast ; (; Double_t * ; det = nullptr). Invert the matrix and calculate its determinant, however upto (6x6) a fast Cramer inversion is used . ; Definition at line 1404 of file TMatrixT.cxx. ◆ IsA(). template<class Element > . TClass * TMatrixT< Element >::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 215 of file TMatrixT.h. ◆ Memcpy_m(). template<class Element",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:40533,Integrability,rout,routine,40533,"eral matrix multiplication. Replace this matrix with C such that C = A * B. ; Definition at line 644 of file TMatrixT.cxx. ◆ Mult() [2/4]. template<class Element > . void TMatrixT< Element >::Mult ; (; const TMatrixT< Element > & ; a, . const TMatrixTSym< Element > & ; b . ). Matrix multiplication, with A general and B symmetric. ; Replace this matrix with C such that C = A * B. ; Definition at line 745 of file TMatrixT.cxx. ◆ Mult() [3/4]. template<class Element > . void TMatrixT< Element >::Mult ; (; const TMatrixTSym< Element > & ; a, . const TMatrixT< Element > & ; b . ). Matrix multiplication, with A symmetric and B general. ; Replace this matrix with C such that C = A * B. ; Definition at line 693 of file TMatrixT.cxx. ◆ Mult() [4/4]. template<class Element > . void TMatrixT< Element >::Mult ; (; const TMatrixTSym< Element > & ; a, . const TMatrixTSym< Element > & ; b . ). Matrix multiplication, with A symmetric and B symmetric. ; (Actually copied for the moment routine for B general) Replace this matrix with C such that C = A * B. ; Definition at line 797 of file TMatrixT.cxx. ◆ MultT() [1/4]. template<class Element > . void TMatrixT< Element >::MultT ; (; const TMatrixT< Element > & ; a, . const TMatrixT< Element > & ; b . ). General matrix multiplication. Replace this matrix with C such that C = A * B^T. ; Definition at line 947 of file TMatrixT.cxx. ◆ MultT() [2/4]. template<class Element > . void TMatrixT< Element >::MultT ; (; const TMatrixT< Element > & ; a, . const TMatrixTSym< Element > & ; b . ). inline . Definition at line 107 of file TMatrixT.h. ◆ MultT() [3/4]. template<class Element > . void TMatrixT< Element >::MultT ; (; const TMatrixTSym< Element > & ; a, . const TMatrixT< Element > & ; b . ). Matrix multiplication, with A symmetric and B general. ; Replace this matrix with C such that C = A * B^T. ; Definition at line 999 of file TMatrixT.cxx. ◆ MultT() [4/4]. template<class Element > . void TMatrixT< Element >::MultT ; (; const TMatrixTSym< E",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:912,Modifiability,inherit,inherited,912,". ROOT: TMatrixT< Element > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TMatrixT< Element > Class Template ReferenceMath » Matrix Linear Algebra. ; template<class Element>; class TMatrixT< Element >TMatrixT. ; Template class of a general matrix in the linear algebra package; See the Matrix Linear Algebra page for the documentation of the linear algebra package ; Definition at line 40 of file TMatrixT.h. Public Types; enum  { kWorkMax = 100; };  ; enum  EMatrixCreatorsOp1 { ;   kZero; , kUnit; , kTransposed; , kInverted; , ;   kAtA. };  ; enum  EMatrixCreatorsOp2 { ;   kMult; , kTransposeMult; , kInvMult; , kMultTranspose; , ;   kPlus; , kMinus. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMatrixT ();  ;  TMatrixT (const TMatrixT< Element > &a, EMatrixCreatorsOp2 op, const TMatrixT< Element > &b);  Constructor of matrix applying a specific operation to two prototypes. ;  ;  TMatrixT (const TMatrixT< Element > &a, EMatrixCreatorsOp2 op, const TMatrixTSym< Element > &b);  Constructor of matrix applying a specific operation to two prototypes. ;  ;  TMatrixT (const TMatrixT< Element > &another);  Copy constructor. ;  ; temp",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:13133,Modifiability,inherit,inherited,13133,"< Element > &b);  Replace this matrix with C such that C = A' * B. ;  ; void TMult (const TMatrixTSym< Element > &a, const TMatrixT< Element > &b);  ; void TMult (const TMatrixTSym< Element > &a, const TMatrixTSym< Element > &b);  ; TMatrixT< Element > & Transpose (const TMatrixT< Element > &source);  Transpose matrix source. ;  ; const TMatrixT< Element > & Use (const TMatrixT< Element > &a) const;  ; const TMatrixT< Element > & Use (Int_t nrows, Int_t ncols, const Element *data) const;  ; TMatrixT< Element > & Use (Int_t nrows, Int_t ncols, Element *data);  ; const TMatrixT< Element > & Use (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, const Element *data) const;  ; TMatrixT< Element > & Use (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Element *data);  Use the array data to fill the matrix ([row_lwb..row_upb] x [col_lwb..col_upb]) ;  ; TMatrixT< Element > & Use (TMatrixT< Element > &a);  ;  Public Member Functions inherited from TMatrixTBase< Element >;  TMatrixTBase ();  ;  ~TMatrixTBase () override;  ; virtual TMatrixTBase< Element > & Abs ();  Take an absolute value of a matrix, i.e. apply Abs() to each element. ;  ; virtual TMatrixTBase< Element > & Apply (const TElementActionT< Element > &action);  Apply action to each matrix element. ;  ; virtual TMatrixTBase< Element > & Apply (const TElementPosActionT< Element > &action);  Apply action to each element of the matrix. ;  ; TClass * Class ();  ; virtual Element ColNorm () const;  Column matrix norm, MAX{ SUM{ |M(i,j)|, over i}, over j}. ;  ; void Draw (Option_t *option="""") override;  Draw this matrix The histogram is named ""TMatrixT"" by default and no title. ;  ; virtual Element E2Norm () const;  Square of the Euclidean norm, SUM{ m(i,j)^2 }. ;  ; virtual void ExtractRow (Int_t row, Int_t col, Element *v, Int_t n=-1) const;  Store in array v, n matrix elements of row rown starting at column coln. ;  ; Int_t GetColLwb () const;  ; Int_t GetColUpb () const;  ; virtual void GetMatr",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:16935,Modifiability,inherit,inherited,16935,"trix norm, MAX{ SUM{ |M(i,j)|, over j}, over i}. ;  ; virtual TMatrixTBase< Element > & SetMatrixArray (const Element *data, Option_t *option="""");  Copy array data to matrix . ;  ; Element SetTol (Element tol);  ; virtual TMatrixTBase< Element > & Shift (Int_t row_shift, Int_t col_shift);  Shift the row index by adding row_shift and the column index by adding col_shift, respectively. ;  ; virtual TMatrixTBase< Element > & Sqr ();  Square each element of the matrix. ;  ; virtual TMatrixTBase< Element > & Sqrt ();  Take square root of all elements. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TMatrixTBase<Element>. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Element Sum () const;  Compute sum of elements. ;  ; virtual TMatrixTBase< Element > & UnitMatrix ();  Make a unit matrix (matrix need not be a square one). ;  ; virtual TMatrixTBase< Element > & Zero ();  Set matrix elements to zero. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object)",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:18209,Modifiability,inherit,inheritance,18209,"don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:20420,Modifiability,inherit,inherits,20420,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:20537,Modifiability,inherit,inherits,20537,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:24437,Modifiability,inherit,inherited,24437,"R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTBase< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Element & NaNValue ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void Allocate (Int_t nrows, Int_t ncols, Int_t row_lwb=0, Int_t col_lwb=0, Int_t init=0, Int_t=-1);  Allocate new matrix. ;  ; void Delete_m (Int_t size, Element *&);  Delete data pointer m, if it was assigned on the heap. ;  ; Int_t Memcpy_m (Element *newp, const Element *oldp, Int_t copySize, Int_t newSize, Int_t oldSize);  Copy copySize doubles from *oldp to *ne",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:24697,Modifiability,inherit,inherited,24697,"R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTBase< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Element & NaNValue ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void Allocate (Int_t nrows, Int_t ncols, Int_t row_lwb=0, Int_t col_lwb=0, Int_t init=0, Int_t=-1);  Allocate new matrix. ;  ; void Delete_m (Int_t size, Element *&);  Delete data pointer m, if it was assigned on the heap. ;  ; Int_t Memcpy_m (Element *newp, const Element *oldp, Int_t copySize, Int_t newSize, Int_t oldSize);  Copy copySize doubles from *oldp to *ne",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:25674,Modifiability,inherit,inherited,25674," * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void Allocate (Int_t nrows, Int_t ncols, Int_t row_lwb=0, Int_t col_lwb=0, Int_t init=0, Int_t=-1);  Allocate new matrix. ;  ; void Delete_m (Int_t size, Element *&);  Delete data pointer m, if it was assigned on the heap. ;  ; Int_t Memcpy_m (Element *newp, const Element *oldp, Int_t copySize, Int_t newSize, Int_t oldSize);  Copy copySize doubles from *oldp to *newp . ;  ; Element * New_m (Int_t size);  Return data pointer . ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Element fDataStack [TMatrixTBase< Element >::kSizeMax];  ; Element * fElements;  data container ;  ;  Protected Attributes inherited from TMatrixTBase< Element >; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Additional Inherited Members;  Protected Types inherited from TMatrixTBase< Element >; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMatrixTBase< Element >; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, In",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:26002,Modifiability,inherit,inherited,26002,"void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void Allocate (Int_t nrows, Int_t ncols, Int_t row_lwb=0, Int_t col_lwb=0, Int_t init=0, Int_t=-1);  Allocate new matrix. ;  ; void Delete_m (Int_t size, Element *&);  Delete data pointer m, if it was assigned on the heap. ;  ; Int_t Memcpy_m (Element *newp, const Element *oldp, Int_t copySize, Int_t newSize, Int_t oldSize);  Copy copySize doubles from *oldp to *newp . ;  ; Element * New_m (Int_t size);  Return data pointer . ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Element fDataStack [TMatrixTBase< Element >::kSizeMax];  ; Element * fElements;  data container ;  ;  Protected Attributes inherited from TMatrixTBase< Element >; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Additional Inherited Members;  Protected Types inherited from TMatrixTBase< Element >; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMatrixTBase< Element >; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int_t swapSecond, Int_t *index);  Lexical sort on array data using indices first and second. ;  . #include <TMatrixT.h>. Inheritance diagram for TMatrixT< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [lege",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:26235,Modifiability,inherit,inherited,26235," Int_t oldSize);  Copy copySize doubles from *oldp to *newp . ;  ; Element * New_m (Int_t size);  Return data pointer . ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Element fDataStack [TMatrixTBase< Element >::kSizeMax];  ; Element * fElements;  data container ;  ;  Protected Attributes inherited from TMatrixTBase< Element >; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Additional Inherited Members;  Protected Types inherited from TMatrixTBase< Element >; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMatrixTBase< Element >; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int_t swapSecond, Int_t *index);  Lexical sort on array data using indices first and second. ;  . #include <TMatrixT.h>. Inheritance diagram for TMatrixT< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. template<class Element > . anonymous enum. EnumeratorkWorkMax . Definition at line 58 of file TMatrixT.h. ◆ EMatrixCreatorsOp1. template<class Element > . enum TMatrixT::EMatrixCreatorsOp1. EnumeratorkZero ; kUnit ; kTransposed ; kInverted ; kAtA . Definition at line 59 of file TMatrixT.h. ◆ EMatrixCreatorsOp2. template<class Element > . enum TMatrixT::EMatrixCreatorsOp2. EnumeratorkMult ; kTransposeMult ; kInvMult ; kMultTranspose ; kPlus",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:26411,Modifiability,inherit,inherited,26411," Int_t oldSize);  Copy copySize doubles from *oldp to *newp . ;  ; Element * New_m (Int_t size);  Return data pointer . ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Element fDataStack [TMatrixTBase< Element >::kSizeMax];  ; Element * fElements;  data container ;  ;  Protected Attributes inherited from TMatrixTBase< Element >; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Additional Inherited Members;  Protected Types inherited from TMatrixTBase< Element >; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMatrixTBase< Element >; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int_t swapSecond, Int_t *index);  Lexical sort on array data using indices first and second. ;  . #include <TMatrixT.h>. Inheritance diagram for TMatrixT< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. template<class Element > . anonymous enum. EnumeratorkWorkMax . Definition at line 58 of file TMatrixT.h. ◆ EMatrixCreatorsOp1. template<class Element > . enum TMatrixT::EMatrixCreatorsOp1. EnumeratorkZero ; kUnit ; kTransposed ; kInverted ; kAtA . Definition at line 59 of file TMatrixT.h. ◆ EMatrixCreatorsOp2. template<class Element > . enum TMatrixT::EMatrixCreatorsOp2. EnumeratorkMult ; kTransposeMult ; kInvMult ; kMultTranspose ; kPlus",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:26517,Modifiability,inherit,inherited,26517," Int_t oldSize);  Copy copySize doubles from *oldp to *newp . ;  ; Element * New_m (Int_t size);  Return data pointer . ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Element fDataStack [TMatrixTBase< Element >::kSizeMax];  ; Element * fElements;  data container ;  ;  Protected Attributes inherited from TMatrixTBase< Element >; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Additional Inherited Members;  Protected Types inherited from TMatrixTBase< Element >; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMatrixTBase< Element >; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int_t swapSecond, Int_t *index);  Lexical sort on array data using indices first and second. ;  . #include <TMatrixT.h>. Inheritance diagram for TMatrixT< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. template<class Element > . anonymous enum. EnumeratorkWorkMax . Definition at line 58 of file TMatrixT.h. ◆ EMatrixCreatorsOp1. template<class Element > . enum TMatrixT::EMatrixCreatorsOp1. EnumeratorkZero ; kUnit ; kTransposed ; kInverted ; kAtA . Definition at line 59 of file TMatrixT.h. ◆ EMatrixCreatorsOp2. template<class Element > . enum TMatrixT::EMatrixCreatorsOp2. EnumeratorkMult ; kTransposeMult ; kInvMult ; kMultTranspose ; kPlus",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixT.html:20051,Security,hash,hash,20051," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTMatrixT.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixT.html
https://root.cern/doc/master/classTMatrixTBase.html:7447,Availability,error,error,7447," the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTBase.html:7536,Availability,error,error,7536,"ns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTBase.html:7691,Availability,error,error,7691,"y. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTBase.html:7988,Availability,error,error,7988,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTBase.html:12431,Availability,error,error,12431,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Element & NaNValue ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTBase.html:7453,Integrability,message,message,7453," the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTBase.html:7994,Integrability,message,message,7994,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTBase.html:9196,Integrability,message,message,9196,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTBase.html:12437,Integrability,message,message,12437,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Element & NaNValue ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTBase.html:12810,Integrability,message,message,12810," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Element & NaNValue ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of object",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTBase.html:5809,Modifiability,inherit,inherited,5809," TMatrixTBase< Element > & SetRowIndexArray (Int_t *data)=0;  ; virtual TMatrixTBase< Element > & SetSub (Int_t row_lwb, Int_t col_lwb, const TMatrixTBase< Element > &source)=0;  ; Element SetTol (Element tol);  ; virtual TMatrixTBase< Element > & Shift (Int_t row_shift, Int_t col_shift);  Shift the row index by adding row_shift and the column index by adding col_shift, respectively. ;  ; virtual TMatrixTBase< Element > & Sqr ();  Square each element of the matrix. ;  ; virtual TMatrixTBase< Element > & Sqrt ();  Take square root of all elements. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TMatrixTBase<Element>. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Element Sum () const;  Compute sum of elements. ;  ; virtual TMatrixTBase< Element > & UnitMatrix ();  Make a unit matrix (matrix need not be a square one). ;  ; virtual TMatrixTBase< Element > & Zero ();  Set matrix elements to zero. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object)",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTBase.html:7083,Modifiability,inherit,inheritance,7083,"don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTBase.html:9294,Modifiability,inherit,inherits,9294,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTBase.html:9411,Modifiability,inherit,inherits,9411,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTBase.html:13344,Modifiability,inherit,inherited,13344,";  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Element & NaNValue ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Static Protected Member Functions; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int_t swapSecond, Int_t *index);  Lexical ",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTBase.html:13983,Modifiability,inherit,inherited,13983,"rectory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Element & NaNValue ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Static Protected Member Functions; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int_t swapSecond, Int_t *index);  Lexical sort on array data using indices first and second. ;  . Protected Attributes; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Private Member Functions; Element * GetElements ();  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 ));",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTBase.html:14661,Modifiability,inherit,inherited,14661,". ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Static Protected Member Functions; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int_t swapSecond, Int_t *index);  Lexical sort on array data using indices first and second. ;  . Protected Attributes; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Private Member Functions; Element * GetElements ();  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMatrixTBase.h>. Inheritance diagram for TMatrixTBase< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. tem",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTBase.html:15313,Modifiability,inherit,inherited,15313,"irst and second. ;  . Protected Attributes; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Private Member Functions; Element * GetElements ();  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMatrixTBase.h>. Inheritance diagram for TMatrixTBase< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. template<class Element > . anonymous enum. protected . EnumeratorkSizeMax . Definition at line 106 of file TMatrixTBase.h. ◆ anonymous enum. template<class Element > . anonymous enum. protected . EnumeratorkWorkMax . Definition at line 107 of file TMatrixTBase.h. ◆ EMatrixStatusBits. template<class Element > . enum TMatrixTBase::EMatrixStatusBits. protected . EnumeratorkStatus . Definition at line 109 of file TMatrixTBase.h. Constructor & Destructor Documentation. ◆ TMatrixTBase(). template<class Element > . TMatrixTBase< Element >::TMatrixTBase ; (; ). inline . Definition at line 115 of file TMatrixTBase.h. ◆ ~TMatrixTBase(). template<class El",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTBase.html:8925,Security,hash,hash,8925," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTMatrixTBase.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html
https://root.cern/doc/master/classTMatrixTColumn.html:2074,Modifiability,inherit,inherited,2074,"t of the matrix column with the corresponding element of column mc. ;  ; void operator*= (Element val);  Multiply every element of the matrix column with val. ;  ; void operator+= (const TMatrixTColumn_const< Element > &c);  Add to every element of the matrix row the corresponding element of row mc. ;  ; void operator+= (Element val);  Add val to every element of the matrix column. ;  ; TMatrixTColumn< Element > & operator= (const TMatrixTColumn< Element > &c);  ; void operator= (const TMatrixTColumn_const< Element > &c);  Assignment operator. ;  ; void operator= (const TVectorT< Element > &vec);  Assign a vector to a matrix column. ;  ; void operator= (Element val);  ; void operator= (std::initializer_list< Element > l);  Assign element of the matrix column using given initializer list. ;  ; Element & operator[] (Int_t i);  ; const Element & operator[] (Int_t i) const;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMatrixTColumn_const< Element >;  TMatrixTColumn_const ();  ;  TMatrixTColumn_const (const TMatrixT< Element > &matrix, Int_t col);  Constructor with column ""col"" of matrix. ;  ;  TMatrixTColumn_const (const TMatrixTColumn_const< Element > &trc);  ;  TMatrixTColumn_const (const TMatrixTSym< Element > &matrix, Int_t col);  Constructor with column ""col"" of matrix. ;  ; virtual ~TMatrixTColumn_const ();  ; Int_t GetColIndex () const;  ; Int_t GetInc () const;  ; const TMatrixTBase< Element > * GetMatrix () const;  ; const Element * GetPtr () const;  ; const Element & operator() (Int_t i) const;  ; TMatrixTColumn_const< Element > & operator= (const TMatrixTColumn_const< Element > &trc);  ; const Element & operator[] (Int_t i) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char",MatchSource.WIKI,doc/master/classTMatrixTColumn.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTColumn.html
https://root.cern/doc/master/classTMatrixTColumn.html:3115,Modifiability,inherit,inherited,3115,"nst< Element >;  TMatrixTColumn_const ();  ;  TMatrixTColumn_const (const TMatrixT< Element > &matrix, Int_t col);  Constructor with column ""col"" of matrix. ;  ;  TMatrixTColumn_const (const TMatrixTColumn_const< Element > &trc);  ;  TMatrixTColumn_const (const TMatrixTSym< Element > &matrix, Int_t col);  Constructor with column ""col"" of matrix. ;  ; virtual ~TMatrixTColumn_const ();  ; Int_t GetColIndex () const;  ; Int_t GetInc () const;  ; const TMatrixTBase< Element > * GetMatrix () const;  ; const Element * GetPtr () const;  ; const Element & operator() (Int_t i) const;  ; TMatrixTColumn_const< Element > & operator= (const TMatrixTColumn_const< Element > &trc);  ; const Element & operator[] (Int_t i) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTColumn_const< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Protected Attributes inherited from TMatrixTColumn_const< Element >; Int_t fColInd;  ; Int_t fInc;  ; const TMatrixTBase< Element > * fMatrix;  ; const Element * fPtr;  . #include <TMatrixTUtils.h>. Inheritance diagram for TMatrixTColumn< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMatrixTColumn() [1/4]. template<class Element > . TMatrixTColumn< Element >::TMatrixTColumn ; (; ). inline . Definition at line 252 of file TMatrixTUtils.h. ◆ TMatrixTColumn() [2/4]. template<class Element > . TMatrixTColumn< Element >::TMatrixTColumn ; (; TMatrixT< Element > & ; matrix, . Int_t ; col . ). Constructor with column ""col"" of matrix. ; Definition at li",MatchSource.WIKI,doc/master/classTMatrixTColumn.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTColumn.html
https://root.cern/doc/master/classTMatrixTColumn.html:3370,Modifiability,inherit,inherited,3370,"ructor with column ""col"" of matrix. ;  ; virtual ~TMatrixTColumn_const ();  ; Int_t GetColIndex () const;  ; Int_t GetInc () const;  ; const TMatrixTBase< Element > * GetMatrix () const;  ; const Element * GetPtr () const;  ; const Element & operator() (Int_t i) const;  ; TMatrixTColumn_const< Element > & operator= (const TMatrixTColumn_const< Element > &trc);  ; const Element & operator[] (Int_t i) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTColumn_const< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Protected Attributes inherited from TMatrixTColumn_const< Element >; Int_t fColInd;  ; Int_t fInc;  ; const TMatrixTBase< Element > * fMatrix;  ; const Element * fPtr;  . #include <TMatrixTUtils.h>. Inheritance diagram for TMatrixTColumn< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMatrixTColumn() [1/4]. template<class Element > . TMatrixTColumn< Element >::TMatrixTColumn ; (; ). inline . Definition at line 252 of file TMatrixTUtils.h. ◆ TMatrixTColumn() [2/4]. template<class Element > . TMatrixTColumn< Element >::TMatrixTColumn ; (; TMatrixT< Element > & ; matrix, . Int_t ; col . ). Constructor with column ""col"" of matrix. ; Definition at line 296 of file TMatrixTUtils.cxx. ◆ TMatrixTColumn() [3/4]. template<class Element > . TMatrixTColumn< Element >::TMatrixTColumn ; (; TMatrixTSym< Element > & ; matrix, . Int_t ; col . ). Constructor with column ""col"" of matrix. ; Definition at line 305 of file TMatrixTUtils.cxx. ◆ TMatrixTColumn() [4/4]. templ",MatchSource.WIKI,doc/master/classTMatrixTColumn.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTColumn.html
https://root.cern/doc/master/classTMatrixTDiag.html:1838,Modifiability,inherit,inherited,1838,oid operator*= (const TMatrixTDiag_const< Element > &d);  Multiply every element of the matrix diagonal with the corresponding element of diagonal md. ;  ; void operator*= (Element val);  Assign val to every element of the matrix diagonal. ;  ; void operator+= (const TMatrixTDiag_const< Element > &d);  Add to every element of the matrix diagonal the corresponding element of diagonal md. ;  ; void operator+= (Element val);  Assign val to every element of the matrix diagonal. ;  ; TMatrixTDiag< Element > & operator= (const TMatrixTDiag< Element > &d);  ; void operator= (const TMatrixTDiag_const< Element > &d);  Assignment operator. ;  ; void operator= (const TVectorT< Element > &vec);  Assign a vector to the matrix diagonal. ;  ; void operator= (Element val);  Assign val to every element of the matrix diagonal. ;  ; Element & operator[] (Int_t i);  ; const Element & operator[] (Int_t i) const;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMatrixTDiag_const< Element >;  TMatrixTDiag_const ();  ;  TMatrixTDiag_const (const TMatrixT< Element > &matrix);  Constructor. ;  ;  TMatrixTDiag_const (const TMatrixTDiag_const< Element > &trc);  ;  TMatrixTDiag_const (const TMatrixTSym< Element > &matrix);  Constructor. ;  ; virtual ~TMatrixTDiag_const ();  ; Int_t GetInc () const;  ; const TMatrixTBase< Element > * GetMatrix () const;  ; Int_t GetNdiags () const;  ; const Element * GetPtr () const;  ; const Element & operator() (Int_t i) const;  ; TMatrixTDiag_const< Element > & operator= (const TMatrixTDiag_const< Element > &trc);  ; const Element & operator[] (Int_t i) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatr,MatchSource.WIKI,doc/master/classTMatrixTDiag.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTDiag.html
https://root.cern/doc/master/classTMatrixTDiag.html:2781,Modifiability,inherit,inherited,2781,"TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMatrixTDiag_const< Element >;  TMatrixTDiag_const ();  ;  TMatrixTDiag_const (const TMatrixT< Element > &matrix);  Constructor. ;  ;  TMatrixTDiag_const (const TMatrixTDiag_const< Element > &trc);  ;  TMatrixTDiag_const (const TMatrixTSym< Element > &matrix);  Constructor. ;  ; virtual ~TMatrixTDiag_const ();  ; Int_t GetInc () const;  ; const TMatrixTBase< Element > * GetMatrix () const;  ; Int_t GetNdiags () const;  ; const Element * GetPtr () const;  ; const Element & operator() (Int_t i) const;  ; TMatrixTDiag_const< Element > & operator= (const TMatrixTDiag_const< Element > &trc);  ; const Element & operator[] (Int_t i) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTDiag_const< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Protected Attributes inherited from TMatrixTDiag_const< Element >; Int_t fInc;  ; const TMatrixTBase< Element > * fMatrix;  ; Int_t fNdiag;  ; const Element * fPtr;  . #include <TMatrixTUtils.h>. Inheritance diagram for TMatrixTDiag< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMatrixTDiag() [1/4]. template<class Element > . TMatrixTDiag< Element >::TMatrixTDiag ; (; ). inline . Definition at line 352 of file TMatrixTUtils.h. ◆ TMatrixTDiag() [2/4]. template<class Element > . TMatrixTDiag< Element >::TMatrixTDiag ; (; TMatrixT< Element > & ; matrix). Constructor. ; Definition at line 490 of file TMatrixTUtils.cxx. ◆ TMatrixTDiag() [3/4]. templa",MatchSource.WIKI,doc/master/classTMatrixTDiag.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTDiag.html
https://root.cern/doc/master/classTMatrixTDiag.html:3034,Modifiability,inherit,inherited,3034," TMatrixTSym< Element > &matrix);  Constructor. ;  ; virtual ~TMatrixTDiag_const ();  ; Int_t GetInc () const;  ; const TMatrixTBase< Element > * GetMatrix () const;  ; Int_t GetNdiags () const;  ; const Element * GetPtr () const;  ; const Element & operator() (Int_t i) const;  ; TMatrixTDiag_const< Element > & operator= (const TMatrixTDiag_const< Element > &trc);  ; const Element & operator[] (Int_t i) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTDiag_const< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Protected Attributes inherited from TMatrixTDiag_const< Element >; Int_t fInc;  ; const TMatrixTBase< Element > * fMatrix;  ; Int_t fNdiag;  ; const Element * fPtr;  . #include <TMatrixTUtils.h>. Inheritance diagram for TMatrixTDiag< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMatrixTDiag() [1/4]. template<class Element > . TMatrixTDiag< Element >::TMatrixTDiag ; (; ). inline . Definition at line 352 of file TMatrixTUtils.h. ◆ TMatrixTDiag() [2/4]. template<class Element > . TMatrixTDiag< Element >::TMatrixTDiag ; (; TMatrixT< Element > & ; matrix). Constructor. ; Definition at line 490 of file TMatrixTUtils.cxx. ◆ TMatrixTDiag() [3/4]. template<class Element > . TMatrixTDiag< Element >::TMatrixTDiag ; (; TMatrixTSym< Element > & ; matrix). Constructor. ; Definition at line 499 of file TMatrixTUtils.cxx. ◆ TMatrixTDiag() [4/4]. template<class Element > . TMatrixTDiag< Element >::TMatrixTDiag ; (; const TMatrixTDiag< Element > & ; md). Copy constru",MatchSource.WIKI,doc/master/classTMatrixTDiag.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTDiag.html
https://root.cern/doc/master/classTMatrixTLazy.html:3182,Availability,error,error,3182,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTLazy.html:3271,Availability,error,error,3271,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTLazy.html:3426,Availability,error,error,3426,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTLazy.html:3723,Availability,error,error,3723,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTLazy.html:8287,Availability,error,error,8287," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTLazy.html:3188,Integrability,message,message,3188,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTLazy.html:3729,Integrability,message,message,3729,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTLazy.html:4931,Integrability,message,message,4931,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTLazy.html:8293,Integrability,message,message,8293," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTLazy.html:8666,Integrability,message,message,8666," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Prote",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTLazy.html:1421,Modifiability,inherit,inherited,1421,"atrix Linear Algebra. ; template<class Element>; class TMatrixTLazy< Element >Templates of Lazy Matrix classes. ; TMatrixTLazy; TMatrixTSymLazy; THaarMatrixT; THilbertMatrixT; THilbertMatrixTSym; THaarMatrixTDefinition TMatrixTLazy.h:122; THilbertMatrixTSymDefinition TMatrixTLazy.h:161; THilbertMatrixTDefinition TMatrixTLazy.h:141; TMatrixTLazyTemplates of Lazy Matrix classes.Definition TMatrixTLazy.h:43; TMatrixTSymLazyDefinition TMatrixTLazy.h:86. Definition at line 43 of file TMatrixTLazy.h. Public Member Functions;  TMatrixTLazy ();  ;  TMatrixTLazy (Int_t nrows, Int_t ncols);  ;  TMatrixTLazy (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb);  ;  ~TMatrixTLazy () override;  ; Int_t GetColLwb () const;  ; Int_t GetColUpb () const;  ; Int_t GetRowLwb () const;  ; Int_t GetRowUpb () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTLazy.html:2818,Modifiability,inherit,inheritance,2818,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTLazy.html:5029,Modifiability,inherit,inherits,5029,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTLazy.html:5146,Modifiability,inherit,inherits,5146,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTLazy.html:9167,Modifiability,inherit,inherited,9167,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMatrixTLazy (const TMatrixTLazy< Element > &);  ; void operator= (const TMatrixTLazy< Element > &);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fColLwb;  ; Int_t fColUpb;  ; Int_t fRowLwb;  ; Int_t fRowUpb;  . Private Member Functions; virtual void FillIn (TMatrixT< Element > &m) const =0;  . Fri",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTLazy.html:9814,Modifiability,inherit,inherited,9814," virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMatrixTLazy (const TMatrixTLazy< Element > &);  ; void operator= (const TMatrixTLazy< Element > &);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fColLwb;  ; Int_t fColUpb;  ; Int_t fRowLwb;  ; Int_t fRowUpb;  . Private Member Functions; virtual void FillIn (TMatrixT< Element > &m) const =0;  . Friends; class TMatrixT< Element >;  ; class TMatrixTBase< Element >;  ; class TVectorT< Element >;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTLazy.html:10322,Modifiability,inherit,inherited,10322,"rn destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMatrixTLazy (const TMatrixTLazy< Element > &);  ; void operator= (const TMatrixTLazy< Element > &);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fColLwb;  ; Int_t fColUpb;  ; Int_t fRowLwb;  ; Int_t fRowUpb;  . Private Member Functions; virtual void FillIn (TMatrixT< Element > &m) const =0;  . Friends; class TMatrixT< Element >;  ; class TMatrixTBase< Element >;  ; class TVectorT< Element >;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMatrixTLazy.h>. Inheritance diagram for TMatrixTLazy< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMatrixTLazy() [1/4]. template<class Element > . TMatrixTLazy< Element >::TMatrixTLazy ; (; const TMatrixTLazy< Element > & ; ). inlinep",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTLazy.html:10963,Modifiability,inherit,inherited,10963,"bie ();  . Protected Attributes; Int_t fColLwb;  ; Int_t fColUpb;  ; Int_t fRowLwb;  ; Int_t fRowUpb;  . Private Member Functions; virtual void FillIn (TMatrixT< Element > &m) const =0;  . Friends; class TMatrixT< Element >;  ; class TMatrixTBase< Element >;  ; class TVectorT< Element >;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMatrixTLazy.h>. Inheritance diagram for TMatrixTLazy< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMatrixTLazy() [1/4]. template<class Element > . TMatrixTLazy< Element >::TMatrixTLazy ; (; const TMatrixTLazy< Element > & ; ). inlineprotected . Definition at line 55 of file TMatrixTLazy.h. ◆ TMatrixTLazy() [2/4]. template<class Element > . TMatrixTLazy< Element >::TMatrixTLazy ; (; ). inline . Definition at line 62 of file TMatrixTLazy.h. ◆ TMatrixTLazy() [3/4]. template<class Element > . TMatrixTLazy< Element >::TMatrixTLazy ; (; Int_t ; nrows, . Int_t ; ncols . ). inline . Definition at line 63 of file TMatrixTLazy.h. ◆ TMatrixTLazy() [4/4]. template<class Element > . TMatrixTLazy< Element >::TMatrixTLazy ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb . ). inline . Definition at line 65 of f",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTLazy.html:4660,Security,hash,hash,4660," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTMatrixTLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTLazy.html
https://root.cern/doc/master/classTMatrixTRow.html:1927,Modifiability,inherit,inherited,1927,"  ; Element & operator() (Int_t i);  ; const Element & operator() (Int_t i) const;  ; void operator*= (const TMatrixTRow_const< Element > &r);  Multiply every element of the matrix row with the corresponding element of row r. ;  ; void operator*= (Element val);  Multiply every element of the matrix row with val. ;  ; void operator+= (const TMatrixTRow_const< Element > &r);  Add to every element of the matrix row the corresponding element of row r. ;  ; void operator+= (Element val);  Add val to every element of the matrix row. ;  ; TMatrixTRow< Element > & operator= (const TMatrixTRow< Element > &r);  ; void operator= (const TMatrixTRow_const< Element > &r);  Assignment operator. ;  ; void operator= (const TVectorT< Element > &vec);  Assign a vector to a matrix row. ;  ; void operator= (std::initializer_list< Element > l);  ; Element & operator[] (Int_t i);  ; const Element & operator[] (Int_t i) const;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMatrixTRow_const< Element >;  TMatrixTRow_const ();  ;  TMatrixTRow_const (const TMatrixT< Element > &matrix, Int_t row);  Constructor with row ""row"" of matrix. ;  ;  TMatrixTRow_const (const TMatrixTRow_const< Element > &trc);  ;  TMatrixTRow_const (const TMatrixTSym< Element > &matrix, Int_t row);  Constructor with row ""row"" of symmetric matrix. ;  ; virtual ~TMatrixTRow_const ();  ; Int_t GetInc () const;  ; const TMatrixTBase< Element > * GetMatrix () const;  ; const Element * GetPtr () const;  ; Int_t GetRowIndex () const;  ; const Element & operator() (Int_t i) const;  ; TMatrixTRow_const< Element > & operator= (const TMatrixTRow_const< Element > &trc);  ; const Element & operator[] (Int_t i) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static",MatchSource.WIKI,doc/master/classTMatrixTRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTRow.html
https://root.cern/doc/master/classTMatrixTRow.html:2945,Modifiability,inherit,inherited,2945,"ed from TMatrixTRow_const< Element >;  TMatrixTRow_const ();  ;  TMatrixTRow_const (const TMatrixT< Element > &matrix, Int_t row);  Constructor with row ""row"" of matrix. ;  ;  TMatrixTRow_const (const TMatrixTRow_const< Element > &trc);  ;  TMatrixTRow_const (const TMatrixTSym< Element > &matrix, Int_t row);  Constructor with row ""row"" of symmetric matrix. ;  ; virtual ~TMatrixTRow_const ();  ; Int_t GetInc () const;  ; const TMatrixTBase< Element > * GetMatrix () const;  ; const Element * GetPtr () const;  ; Int_t GetRowIndex () const;  ; const Element & operator() (Int_t i) const;  ; TMatrixTRow_const< Element > & operator= (const TMatrixTRow_const< Element > &trc);  ; const Element & operator[] (Int_t i) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTRow_const< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Protected Attributes inherited from TMatrixTRow_const< Element >; Int_t fInc;  ; const TMatrixTBase< Element > * fMatrix;  ; const Element * fPtr;  ; Int_t fRowInd;  . #include <TMatrixTUtils.h>. Inheritance diagram for TMatrixTRow< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMatrixTRow() [1/4]. template<class Element > . TMatrixTRow< Element >::TMatrixTRow ; (; ). inline . Definition at line 152 of file TMatrixTUtils.h. ◆ TMatrixTRow() [2/4]. template<class Element > . TMatrixTRow< Element >::TMatrixTRow ; (; TMatrixT< Element > & ; matrix, . Int_t ; row . ). Constructor with row ""row"" of symmetric matrix. ; Definition at line 90 of file TMatr",MatchSource.WIKI,doc/master/classTMatrixTRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTRow.html
https://root.cern/doc/master/classTMatrixTRow.html:3197,Modifiability,inherit,inherited,3197,"  Constructor with row ""row"" of symmetric matrix. ;  ; virtual ~TMatrixTRow_const ();  ; Int_t GetInc () const;  ; const TMatrixTBase< Element > * GetMatrix () const;  ; const Element * GetPtr () const;  ; Int_t GetRowIndex () const;  ; const Element & operator() (Int_t i) const;  ; TMatrixTRow_const< Element > & operator= (const TMatrixTRow_const< Element > &trc);  ; const Element & operator[] (Int_t i) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTRow_const< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Protected Attributes inherited from TMatrixTRow_const< Element >; Int_t fInc;  ; const TMatrixTBase< Element > * fMatrix;  ; const Element * fPtr;  ; Int_t fRowInd;  . #include <TMatrixTUtils.h>. Inheritance diagram for TMatrixTRow< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMatrixTRow() [1/4]. template<class Element > . TMatrixTRow< Element >::TMatrixTRow ; (; ). inline . Definition at line 152 of file TMatrixTUtils.h. ◆ TMatrixTRow() [2/4]. template<class Element > . TMatrixTRow< Element >::TMatrixTRow ; (; TMatrixT< Element > & ; matrix, . Int_t ; row . ). Constructor with row ""row"" of symmetric matrix. ; Definition at line 90 of file TMatrixTUtils.cxx. ◆ TMatrixTRow() [3/4]. template<class Element > . TMatrixTRow< Element >::TMatrixTRow ; (; TMatrixTSym< Element > & ; matrix, . Int_t ; row . ). Constructor with row ""row"" of symmetric matrix. ; Definition at line 99 of file TMatrixTUtils.cxx. ◆ TMatrixTRow() [4/4]. template<class Element > . T",MatchSource.WIKI,doc/master/classTMatrixTRow.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTRow.html
https://root.cern/doc/master/classTMatrixTSparse.html:18319,Availability,error,error,18319," the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:18408,Availability,error,error,18408,"ns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:18563,Availability,error,error,18563,"y. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:18860,Availability,error,error,18860,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:23303,Availability,error,error,23303,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTBase< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static co",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:6254,Energy Efficiency,allocate,allocated,6254,"TMatrixTSparse ();  ;  TMatrixTSparse (const TMatrixT< Element > &a, EMatrixCreatorsOp2 op, const TMatrixTSparse< Element > &b);  Create a matrix applying a specific operation to two prototypes. ;  ;  TMatrixTSparse (const TMatrixT< Element > &another);  ;  TMatrixTSparse (const TMatrixTSparse< Element > &a, EMatrixCreatorsOp2 op, const TMatrixT< Element > &b);  Create a matrix applying a specific operation to two prototypes. ;  ;  TMatrixTSparse (const TMatrixTSparse< Element > &a, EMatrixCreatorsOp2 op, const TMatrixTSparse< Element > &b);  Create a matrix applying a specific operation to two prototypes. ;  ;  TMatrixTSparse (const TMatrixTSparse< Element > &another);  ;  TMatrixTSparse (EMatrixCreatorsOp1 op, const TMatrixTSparse< Element > &prototype);  Create a matrix applying a specific operation to the prototype. ;  ;  TMatrixTSparse (Int_t nrows, Int_t ncols);  Space is allocated for row/column indices and data, but the sparse structure information has still to be set ! ;  ;  TMatrixTSparse (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Int_t *rowptr, Int_t *col, Element *data);  Space is allocated for row/column indices and data. ;  ;  TMatrixTSparse (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Int_t nr_nonzeros, Int_t *row, Int_t *col, Element *data);  Space is allocated for row/column indices and data. ;  ;  TMatrixTSparse (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Int_t nr_nonzeros=0);  Space is allocated for row/column indices and data, but the sparse structure information has still to be set ! ;  ;  ~TMatrixTSparse () override;  ; TClass * Class ();  ; void Clear (Option_t *="""") override;  ; Element ColNorm () const override;  Column matrix norm, MAX{ SUM{ |M(i,j)|, over i}, over j}. ;  ; void ExtractRow (Int_t row, Int_t col, Element *v, Int_t n=-1) const override;  Store in array v, n matrix elements of row rown starting at column coln. ;  ; const Int_t * GetColIndexArray () const override;  ; Int_t * Ge",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:6491,Energy Efficiency,allocate,allocated,6491,"TMatrixTSparse ();  ;  TMatrixTSparse (const TMatrixT< Element > &a, EMatrixCreatorsOp2 op, const TMatrixTSparse< Element > &b);  Create a matrix applying a specific operation to two prototypes. ;  ;  TMatrixTSparse (const TMatrixT< Element > &another);  ;  TMatrixTSparse (const TMatrixTSparse< Element > &a, EMatrixCreatorsOp2 op, const TMatrixT< Element > &b);  Create a matrix applying a specific operation to two prototypes. ;  ;  TMatrixTSparse (const TMatrixTSparse< Element > &a, EMatrixCreatorsOp2 op, const TMatrixTSparse< Element > &b);  Create a matrix applying a specific operation to two prototypes. ;  ;  TMatrixTSparse (const TMatrixTSparse< Element > &another);  ;  TMatrixTSparse (EMatrixCreatorsOp1 op, const TMatrixTSparse< Element > &prototype);  Create a matrix applying a specific operation to the prototype. ;  ;  TMatrixTSparse (Int_t nrows, Int_t ncols);  Space is allocated for row/column indices and data, but the sparse structure information has still to be set ! ;  ;  TMatrixTSparse (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Int_t *rowptr, Int_t *col, Element *data);  Space is allocated for row/column indices and data. ;  ;  TMatrixTSparse (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Int_t nr_nonzeros, Int_t *row, Int_t *col, Element *data);  Space is allocated for row/column indices and data. ;  ;  TMatrixTSparse (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Int_t nr_nonzeros=0);  Space is allocated for row/column indices and data, but the sparse structure information has still to be set ! ;  ;  ~TMatrixTSparse () override;  ; TClass * Class ();  ; void Clear (Option_t *="""") override;  ; Element ColNorm () const override;  Column matrix norm, MAX{ SUM{ |M(i,j)|, over i}, over j}. ;  ; void ExtractRow (Int_t row, Int_t col, Element *v, Int_t n=-1) const override;  Store in array v, n matrix elements of row rown starting at column coln. ;  ; const Int_t * GetColIndexArray () const override;  ; Int_t * Ge",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:6685,Energy Efficiency,allocate,allocated,6685,"parse (const TMatrixTSparse< Element > &a, EMatrixCreatorsOp2 op, const TMatrixT< Element > &b);  Create a matrix applying a specific operation to two prototypes. ;  ;  TMatrixTSparse (const TMatrixTSparse< Element > &a, EMatrixCreatorsOp2 op, const TMatrixTSparse< Element > &b);  Create a matrix applying a specific operation to two prototypes. ;  ;  TMatrixTSparse (const TMatrixTSparse< Element > &another);  ;  TMatrixTSparse (EMatrixCreatorsOp1 op, const TMatrixTSparse< Element > &prototype);  Create a matrix applying a specific operation to the prototype. ;  ;  TMatrixTSparse (Int_t nrows, Int_t ncols);  Space is allocated for row/column indices and data, but the sparse structure information has still to be set ! ;  ;  TMatrixTSparse (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Int_t *rowptr, Int_t *col, Element *data);  Space is allocated for row/column indices and data. ;  ;  TMatrixTSparse (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Int_t nr_nonzeros, Int_t *row, Int_t *col, Element *data);  Space is allocated for row/column indices and data. ;  ;  TMatrixTSparse (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Int_t nr_nonzeros=0);  Space is allocated for row/column indices and data, but the sparse structure information has still to be set ! ;  ;  ~TMatrixTSparse () override;  ; TClass * Class ();  ; void Clear (Option_t *="""") override;  ; Element ColNorm () const override;  Column matrix norm, MAX{ SUM{ |M(i,j)|, over i}, over j}. ;  ; void ExtractRow (Int_t row, Int_t col, Element *v, Int_t n=-1) const override;  Store in array v, n matrix elements of row rown starting at column coln. ;  ; const Int_t * GetColIndexArray () const override;  ; Int_t * GetColIndexArray () override;  ; void GetMatrix2Array (Element *data, Option_t *="""") const override;  Copy matrix data to array . It is assumed that array is of size >= fNelems. ;  ; const Element * GetMatrixArray () const override;  ; Element * GetMatrixArray () over",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:6842,Energy Efficiency,allocate,allocated,6842,"ying a specific operation to two prototypes. ;  ;  TMatrixTSparse (const TMatrixTSparse< Element > &another);  ;  TMatrixTSparse (EMatrixCreatorsOp1 op, const TMatrixTSparse< Element > &prototype);  Create a matrix applying a specific operation to the prototype. ;  ;  TMatrixTSparse (Int_t nrows, Int_t ncols);  Space is allocated for row/column indices and data, but the sparse structure information has still to be set ! ;  ;  TMatrixTSparse (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Int_t *rowptr, Int_t *col, Element *data);  Space is allocated for row/column indices and data. ;  ;  TMatrixTSparse (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Int_t nr_nonzeros, Int_t *row, Int_t *col, Element *data);  Space is allocated for row/column indices and data. ;  ;  TMatrixTSparse (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Int_t nr_nonzeros=0);  Space is allocated for row/column indices and data, but the sparse structure information has still to be set ! ;  ;  ~TMatrixTSparse () override;  ; TClass * Class ();  ; void Clear (Option_t *="""") override;  ; Element ColNorm () const override;  Column matrix norm, MAX{ SUM{ |M(i,j)|, over i}, over j}. ;  ; void ExtractRow (Int_t row, Int_t col, Element *v, Int_t n=-1) const override;  Store in array v, n matrix elements of row rown starting at column coln. ;  ; const Int_t * GetColIndexArray () const override;  ; Int_t * GetColIndexArray () override;  ; void GetMatrix2Array (Element *data, Option_t *="""") const override;  Copy matrix data to array . It is assumed that array is of size >= fNelems. ;  ; const Element * GetMatrixArray () const override;  ; Element * GetMatrixArray () override;  ; const Int_t * GetRowIndexArray () const override;  ; Int_t * GetRowIndexArray () override;  ; TMatrixTSparse< Element > GetSub (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Option_t *option=""S"") const;  ; TMatrixTBase< Element > & GetSub (Int_t row_lwb, Int_t row_upb, Int_t col",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:12226,Energy Efficiency,allocate,allocated,12226,"er j}, over i}. ;  ; TMatrixTBase< Element > & SetColIndexArray (Int_t *data) override;  ; TMatrixTBase< Element > & SetMatrixArray (const Element *data, Option_t *="""") override;  Copy array data to matrix . ;  ; virtual TMatrixTBase< Element > & SetMatrixArray (Int_t nr_nonzeros, Int_t *irow, Int_t *icol, Element *data);  Copy nr elements from row/col index and data array to matrix . ;  ; virtual TMatrixTBase< Element > & SetMatrixArray (Int_t nr_nonzeros, Int_t nrows, Int_t ncols, Int_t *irow, Int_t *icol, Element *data);  ; TMatrixTBase< Element > & SetRowIndexArray (Int_t *data) override;  ; TMatrixTSparse< Element > & SetSparseIndex (const TMatrixTBase< Element > &another);  Use non-zero data of matrix source to set the sparse structure. ;  ; TMatrixTSparse< Element > & SetSparseIndex (Int_t nelem_new);  Increase/decrease the number of non-zero elements to nelems_new. ;  ; TMatrixTSparse< Element > & SetSparseIndexAB (const TMatrixT< Element > &a, const TMatrixTSparse< Element > &b);  Set the row/column indices to the ""sum"" of matrices a and b It is checked that enough space has been allocated. ;  ; TMatrixTSparse< Element > & SetSparseIndexAB (const TMatrixTSparse< Element > &a, const TMatrixT< Element > &b);  ; TMatrixTSparse< Element > & SetSparseIndexAB (const TMatrixTSparse< Element > &a, const TMatrixTSparse< Element > &b);  Set the row/column indices to the ""sum"" of matrices a and b It is checked that enough space has been allocated. ;  ; TMatrixTBase< Element > & SetSub (Int_t row_lwb, Int_t col_lwb, const TMatrixTBase< Element > &source) override;  Insert matrix source starting at [row_lwb][col_lwb], thereby overwriting the part [row_lwb..row_lwb+nrows_source-1][col_lwb..col_lwb+ncols_source-1];. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TMatrixTSparse. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TMatrixTSparse< Element > & T ();  ; TMatrixTSparse< Element > & Transpose (const TMatrixTSparse< Element >",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:12579,Energy Efficiency,allocate,allocated,12579,"w, Int_t *icol, Element *data);  Copy nr elements from row/col index and data array to matrix . ;  ; virtual TMatrixTBase< Element > & SetMatrixArray (Int_t nr_nonzeros, Int_t nrows, Int_t ncols, Int_t *irow, Int_t *icol, Element *data);  ; TMatrixTBase< Element > & SetRowIndexArray (Int_t *data) override;  ; TMatrixTSparse< Element > & SetSparseIndex (const TMatrixTBase< Element > &another);  Use non-zero data of matrix source to set the sparse structure. ;  ; TMatrixTSparse< Element > & SetSparseIndex (Int_t nelem_new);  Increase/decrease the number of non-zero elements to nelems_new. ;  ; TMatrixTSparse< Element > & SetSparseIndexAB (const TMatrixT< Element > &a, const TMatrixTSparse< Element > &b);  Set the row/column indices to the ""sum"" of matrices a and b It is checked that enough space has been allocated. ;  ; TMatrixTSparse< Element > & SetSparseIndexAB (const TMatrixTSparse< Element > &a, const TMatrixT< Element > &b);  ; TMatrixTSparse< Element > & SetSparseIndexAB (const TMatrixTSparse< Element > &a, const TMatrixTSparse< Element > &b);  Set the row/column indices to the ""sum"" of matrices a and b It is checked that enough space has been allocated. ;  ; TMatrixTBase< Element > & SetSub (Int_t row_lwb, Int_t col_lwb, const TMatrixTBase< Element > &source) override;  Insert matrix source starting at [row_lwb][col_lwb], thereby overwriting the part [row_lwb..row_lwb+nrows_source-1][col_lwb..col_lwb+ncols_source-1];. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TMatrixTSparse. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TMatrixTSparse< Element > & T ();  ; TMatrixTSparse< Element > & Transpose (const TMatrixTSparse< Element > &source);  Transpose a matrix. Set the matrix to ncols x nrows if nrows != ncols. ;  ; TMatrixTBase< Element > & UnitMatrix () override;  Make a unit matrix (matrix need not be a square one). ;  ; const TMatrixTSparse< Element > & Use (const TMatrixTSparse< Element > &a) const;  ; const TMa",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:28985,Energy Efficiency,allocate,allocated,28985,"clude <TMatrixTSparse.h>. Inheritance diagram for TMatrixTSparse< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EMatrixCreatorsOp1. template<class Element > . enum TMatrixTSparse::EMatrixCreatorsOp1. EnumeratorkZero ; kUnit ; kTransposed ; kAtA . Definition at line 80 of file TMatrixTSparse.h. ◆ EMatrixCreatorsOp2. template<class Element > . enum TMatrixTSparse::EMatrixCreatorsOp2. EnumeratorkMult ; kMultTranspose ; kPlus ; kMinus . Definition at line 81 of file TMatrixTSparse.h. Constructor & Destructor Documentation. ◆ TMatrixTSparse() [1/11]. template<class Element > . TMatrixTSparse< Element >::TMatrixTSparse ; (; ). inline . Definition at line 83 of file TMatrixTSparse.h. ◆ TMatrixTSparse() [2/11]. template<class Element > . TMatrixTSparse< Element >::TMatrixTSparse ; (; Int_t ; nrows, . Int_t ; ncols . ). Space is allocated for row/column indices and data, but the sparse structure information has still to be set ! ; Definition at line 107 of file TMatrixTSparse.cxx. ◆ TMatrixTSparse() [3/11]. template<class Element > . TMatrixTSparse< Element >::TMatrixTSparse ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb, . Int_t ; nr_nonzeros = 0 . ). Space is allocated for row/column indices and data, but the sparse structure information has still to be set ! ; Definition at line 117 of file TMatrixTSparse.cxx. ◆ TMatrixTSparse() [4/11]. template<class Element > . TMatrixTSparse< Element >::TMatrixTSparse ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb, . Int_t ; nr, . Int_t * ; row, . Int_t * ; col, . Element * ; data . ). Space is allocated for row/column indices and data. ; Sparse row/column index structure together with data is coming from the arrays, row, col and data, resp. Here row, col and data are arrays of length nr (number of nonzero elements), i.e. the matrix is stored in COO (coordinate) format. Note tha",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:29355,Energy Efficiency,allocate,allocated,29355,"file TMatrixTSparse.h. ◆ EMatrixCreatorsOp2. template<class Element > . enum TMatrixTSparse::EMatrixCreatorsOp2. EnumeratorkMult ; kMultTranspose ; kPlus ; kMinus . Definition at line 81 of file TMatrixTSparse.h. Constructor & Destructor Documentation. ◆ TMatrixTSparse() [1/11]. template<class Element > . TMatrixTSparse< Element >::TMatrixTSparse ; (; ). inline . Definition at line 83 of file TMatrixTSparse.h. ◆ TMatrixTSparse() [2/11]. template<class Element > . TMatrixTSparse< Element >::TMatrixTSparse ; (; Int_t ; nrows, . Int_t ; ncols . ). Space is allocated for row/column indices and data, but the sparse structure information has still to be set ! ; Definition at line 107 of file TMatrixTSparse.cxx. ◆ TMatrixTSparse() [3/11]. template<class Element > . TMatrixTSparse< Element >::TMatrixTSparse ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb, . Int_t ; nr_nonzeros = 0 . ). Space is allocated for row/column indices and data, but the sparse structure information has still to be set ! ; Definition at line 117 of file TMatrixTSparse.cxx. ◆ TMatrixTSparse() [4/11]. template<class Element > . TMatrixTSparse< Element >::TMatrixTSparse ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb, . Int_t ; nr, . Int_t * ; row, . Int_t * ; col, . Element * ; data . ). Space is allocated for row/column indices and data. ; Sparse row/column index structure together with data is coming from the arrays, row, col and data, resp. Here row, col and data are arrays of length nr (number of nonzero elements), i.e. the matrix is stored in COO (coordinate) format. Note that the input arrays are not passed as const since they will be modified ! ; Definition at line 130 of file TMatrixTSparse.cxx. ◆ TMatrixTSparse() [5/11]. template<class Element > . TMatrixTSparse< Element >::TMatrixTSparse ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb, . Int_t * ; rowptr, . Int_t * ; col, . Element * ; data . ). Space is",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:29766,Energy Efficiency,allocate,allocated,29766,"inline . Definition at line 83 of file TMatrixTSparse.h. ◆ TMatrixTSparse() [2/11]. template<class Element > . TMatrixTSparse< Element >::TMatrixTSparse ; (; Int_t ; nrows, . Int_t ; ncols . ). Space is allocated for row/column indices and data, but the sparse structure information has still to be set ! ; Definition at line 107 of file TMatrixTSparse.cxx. ◆ TMatrixTSparse() [3/11]. template<class Element > . TMatrixTSparse< Element >::TMatrixTSparse ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb, . Int_t ; nr_nonzeros = 0 . ). Space is allocated for row/column indices and data, but the sparse structure information has still to be set ! ; Definition at line 117 of file TMatrixTSparse.cxx. ◆ TMatrixTSparse() [4/11]. template<class Element > . TMatrixTSparse< Element >::TMatrixTSparse ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb, . Int_t ; nr, . Int_t * ; row, . Int_t * ; col, . Element * ; data . ). Space is allocated for row/column indices and data. ; Sparse row/column index structure together with data is coming from the arrays, row, col and data, resp. Here row, col and data are arrays of length nr (number of nonzero elements), i.e. the matrix is stored in COO (coordinate) format. Note that the input arrays are not passed as const since they will be modified ! ; Definition at line 130 of file TMatrixTSparse.cxx. ◆ TMatrixTSparse() [5/11]. template<class Element > . TMatrixTSparse< Element >::TMatrixTSparse ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb, . Int_t * ; rowptr, . Int_t * ; col, . Element * ; data . ). Space is allocated for row/column indices and data. ; Sparsity pattern is given by column indices and row pointers from arrays col and rowptr, resp, while matrix entries come from the array data. Arrays col and data are assumed to have length nr (number of nonzero elements), while array rowptr has length (n+1), where n=row_upb-row_lwb+1 is the number of rows. ; D",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:30426,Energy Efficiency,allocate,allocated,30426,"ll to be set ! ; Definition at line 117 of file TMatrixTSparse.cxx. ◆ TMatrixTSparse() [4/11]. template<class Element > . TMatrixTSparse< Element >::TMatrixTSparse ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb, . Int_t ; nr, . Int_t * ; row, . Int_t * ; col, . Element * ; data . ). Space is allocated for row/column indices and data. ; Sparse row/column index structure together with data is coming from the arrays, row, col and data, resp. Here row, col and data are arrays of length nr (number of nonzero elements), i.e. the matrix is stored in COO (coordinate) format. Note that the input arrays are not passed as const since they will be modified ! ; Definition at line 130 of file TMatrixTSparse.cxx. ◆ TMatrixTSparse() [5/11]. template<class Element > . TMatrixTSparse< Element >::TMatrixTSparse ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb, . Int_t * ; rowptr, . Int_t * ; col, . Element * ; data . ). Space is allocated for row/column indices and data. ; Sparsity pattern is given by column indices and row pointers from arrays col and rowptr, resp, while matrix entries come from the array data. Arrays col and data are assumed to have length nr (number of nonzero elements), while array rowptr has length (n+1), where n=row_upb-row_lwb+1 is the number of rows. ; Definition at line 174 of file TMatrixTSparse.cxx. ◆ TMatrixTSparse() [6/11]. template<class Element > . TMatrixTSparse< Element >::TMatrixTSparse ; (; const TMatrixTSparse< Element > & ; another). Definition at line 211 of file TMatrixTSparse.cxx. ◆ TMatrixTSparse() [7/11]. template<class Element > . TMatrixTSparse< Element >::TMatrixTSparse ; (; const TMatrixT< Element > & ; another). Definition at line 224 of file TMatrixTSparse.cxx. ◆ TMatrixTSparse() [8/11]. template<class Element > . TMatrixTSparse< Element >::TMatrixTSparse ; (; EMatrixCreatorsOp1 ; op, . const TMatrixTSparse< Element > & ; prototype . ). Create a matrix applying a specific opera",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:33823,Energy Efficiency,allocate,allocated,33823,".cxx. ◆ ~TMatrixTSparse(). template<class Element > . TMatrixTSparse< Element >::~TMatrixTSparse ; (; ). inlineoverride . Definition at line 97 of file TMatrixTSparse.h. Member Function Documentation. ◆ Allocate(). template<class Element > . void TMatrixTSparse< Element >::Allocate ; (; Int_t ; no_rows, . Int_t ; no_cols, . Int_t ; row_lwb = 0, . Int_t ; col_lwb = 0, . Int_t ; init = 0, . Int_t ; nr_nonzeros = 0 . ). protected . Allocate new matrix. ; Arguments are number of rows, columns, row lowerbound (0 default) and column lowerbound (0 default), 0 initialization flag and number of non-zero elements (only relevant for sparse format). ; Definition at line 384 of file TMatrixTSparse.cxx. ◆ AMinusB() [1/3]. template<class Element > . void TMatrixTSparse< Element >::AMinusB ; (; const TMatrixT< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix subtraction. ; Replace this matrix with C such that C = A - B. Note, matrix C is allocated for constr=1. ; Definition at line 1151 of file TMatrixTSparse.cxx. ◆ AMinusB() [2/3]. template<class Element > . void TMatrixTSparse< Element >::AMinusB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixT< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix subtraction. ; Replace this matrix with C such that C = A - B. Note, matrix C is allocated for constr=1. ; Definition at line 1080 of file TMatrixTSparse.cxx. ◆ AMinusB() [3/3]. template<class Element > . void TMatrixTSparse< Element >::AMinusB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix subtraction. ; Replace this matrix with C such that C = A - B. Note, matrix C is allocated for constr=1. ; Definition at line 998 of file TMatrixTSparse.cxx. ◆ AMultB() [1/3]. template<class Element > . void TMatrixTSparse< Element >::AMultB ; (; const TMatrixT< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . ",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:34200,Energy Efficiency,allocate,allocated,34200," ; init = 0, . Int_t ; nr_nonzeros = 0 . ). protected . Allocate new matrix. ; Arguments are number of rows, columns, row lowerbound (0 default) and column lowerbound (0 default), 0 initialization flag and number of non-zero elements (only relevant for sparse format). ; Definition at line 384 of file TMatrixTSparse.cxx. ◆ AMinusB() [1/3]. template<class Element > . void TMatrixTSparse< Element >::AMinusB ; (; const TMatrixT< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix subtraction. ; Replace this matrix with C such that C = A - B. Note, matrix C is allocated for constr=1. ; Definition at line 1151 of file TMatrixTSparse.cxx. ◆ AMinusB() [2/3]. template<class Element > . void TMatrixTSparse< Element >::AMinusB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixT< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix subtraction. ; Replace this matrix with C such that C = A - B. Note, matrix C is allocated for constr=1. ; Definition at line 1080 of file TMatrixTSparse.cxx. ◆ AMinusB() [3/3]. template<class Element > . void TMatrixTSparse< Element >::AMinusB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix subtraction. ; Replace this matrix with C such that C = A - B. Note, matrix C is allocated for constr=1. ; Definition at line 998 of file TMatrixTSparse.cxx. ◆ AMultB() [1/3]. template<class Element > . void TMatrixTSparse< Element >::AMultB ; (; const TMatrixT< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). inlineprotected . Definition at line 54 of file TMatrixTSparse.h. ◆ AMultB() [2/3]. template<class Element > . void TMatrixTSparse< Element >::AMultB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixT< Element > & ; b, . Int_t ; constr = 0 . ). inlineprotected . Definition at line 51 of file TMatrixTSparse.h. ◆ AMultB() [3/3]. template<class",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:34583,Energy Efficiency,allocate,allocated,34583,"arse< Element >::AMinusB ; (; const TMatrixT< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix subtraction. ; Replace this matrix with C such that C = A - B. Note, matrix C is allocated for constr=1. ; Definition at line 1151 of file TMatrixTSparse.cxx. ◆ AMinusB() [2/3]. template<class Element > . void TMatrixTSparse< Element >::AMinusB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixT< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix subtraction. ; Replace this matrix with C such that C = A - B. Note, matrix C is allocated for constr=1. ; Definition at line 1080 of file TMatrixTSparse.cxx. ◆ AMinusB() [3/3]. template<class Element > . void TMatrixTSparse< Element >::AMinusB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix subtraction. ; Replace this matrix with C such that C = A - B. Note, matrix C is allocated for constr=1. ; Definition at line 998 of file TMatrixTSparse.cxx. ◆ AMultB() [1/3]. template<class Element > . void TMatrixTSparse< Element >::AMultB ; (; const TMatrixT< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). inlineprotected . Definition at line 54 of file TMatrixTSparse.h. ◆ AMultB() [2/3]. template<class Element > . void TMatrixTSparse< Element >::AMultB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixT< Element > & ; b, . Int_t ; constr = 0 . ). inlineprotected . Definition at line 51 of file TMatrixTSparse.h. ◆ AMultB() [3/3]. template<class Element > . void TMatrixTSparse< Element >::AMultB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). inlineprotected . Definition at line 48 of file TMatrixTSparse.h. ◆ AMultBt() [1/3]. template<class Element > . void TMatrixTSparse< Element >::AMultBt ; (; const TMatrixT< Element > & ; a, . const TMatrixTSparse< Elemen",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:35734,Energy Efficiency,allocate,allocated,35734,":AMultB ; (; const TMatrixT< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). inlineprotected . Definition at line 54 of file TMatrixTSparse.h. ◆ AMultB() [2/3]. template<class Element > . void TMatrixTSparse< Element >::AMultB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixT< Element > & ; b, . Int_t ; constr = 0 . ). inlineprotected . Definition at line 51 of file TMatrixTSparse.h. ◆ AMultB() [3/3]. template<class Element > . void TMatrixTSparse< Element >::AMultB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). inlineprotected . Definition at line 48 of file TMatrixTSparse.h. ◆ AMultBt() [1/3]. template<class Element > . void TMatrixTSparse< Element >::AMultBt ; (; const TMatrixT< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix multiplication. ; Replace this matrix with C such that C = A * B'. Note, matrix C is allocated for constr=1. ; Definition at line 753 of file TMatrixTSparse.cxx. ◆ AMultBt() [2/3]. template<class Element > . void TMatrixTSparse< Element >::AMultBt ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixT< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix multiplication. ; Replace this matrix with C such that C = A * B'. Note, matrix C is allocated for constr=1. ; Definition at line 662 of file TMatrixTSparse.cxx. ◆ AMultBt() [3/3]. template<class Element > . void TMatrixTSparse< Element >::AMultBt ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). inlineprotected . Definition at line 57 of file TMatrixTSparse.h. ◆ APlusB() [1/3]. template<class Element > . void TMatrixTSparse< Element >::APlusB ; (; const TMatrixT< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). inlineprotected . Definition at line 67 of file TMatrixTSparse.h. ◆ APlusB() [2/3]. template<",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:36114,Energy Efficiency,allocate,allocated,36114,"ted . Definition at line 51 of file TMatrixTSparse.h. ◆ AMultB() [3/3]. template<class Element > . void TMatrixTSparse< Element >::AMultB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). inlineprotected . Definition at line 48 of file TMatrixTSparse.h. ◆ AMultBt() [1/3]. template<class Element > . void TMatrixTSparse< Element >::AMultBt ; (; const TMatrixT< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix multiplication. ; Replace this matrix with C such that C = A * B'. Note, matrix C is allocated for constr=1. ; Definition at line 753 of file TMatrixTSparse.cxx. ◆ AMultBt() [2/3]. template<class Element > . void TMatrixTSparse< Element >::AMultBt ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixT< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix multiplication. ; Replace this matrix with C such that C = A * B'. Note, matrix C is allocated for constr=1. ; Definition at line 662 of file TMatrixTSparse.cxx. ◆ AMultBt() [3/3]. template<class Element > . void TMatrixTSparse< Element >::AMultBt ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). inlineprotected . Definition at line 57 of file TMatrixTSparse.h. ◆ APlusB() [1/3]. template<class Element > . void TMatrixTSparse< Element >::APlusB ; (; const TMatrixT< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). inlineprotected . Definition at line 67 of file TMatrixTSparse.h. ◆ APlusB() [2/3]. template<class Element > . void TMatrixTSparse< Element >::APlusB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixT< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix addition. ; Replace this matrix with C such that C = A + B. Note, matrix C is allocated for constr=1. ; Definition at line 927 of file TMatrixTSparse.cxx. ◆ APlusB() [3/3]. template<class Ele",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:37003,Energy Efficiency,allocate,allocated,37003,"tected . General matrix multiplication. ; Replace this matrix with C such that C = A * B'. Note, matrix C is allocated for constr=1. ; Definition at line 662 of file TMatrixTSparse.cxx. ◆ AMultBt() [3/3]. template<class Element > . void TMatrixTSparse< Element >::AMultBt ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). inlineprotected . Definition at line 57 of file TMatrixTSparse.h. ◆ APlusB() [1/3]. template<class Element > . void TMatrixTSparse< Element >::APlusB ; (; const TMatrixT< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). inlineprotected . Definition at line 67 of file TMatrixTSparse.h. ◆ APlusB() [2/3]. template<class Element > . void TMatrixTSparse< Element >::APlusB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixT< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix addition. ; Replace this matrix with C such that C = A + B. Note, matrix C is allocated for constr=1. ; Definition at line 927 of file TMatrixTSparse.cxx. ◆ APlusB() [3/3]. template<class Element > . void TMatrixTSparse< Element >::APlusB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix addition. ; Replace this matrix with C such that C = A + B. Note, matrix C is allocated for constr=1. ; Definition at line 845 of file TMatrixTSparse.cxx. ◆ Class() [1/2]. template<class Element > . static TClass * TMatrixTSparse< Element >::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class() [2/2]. TClass * TMatrixTSparse< double >::Class ; (; ). ◆ Class_Name(). template<class Element > . static const char * TMatrixTSparse< Element >::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). template<class Element > . static constexpr Version_t TMatrixTSparse< Element >::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition ",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:37380,Energy Efficiency,allocate,allocated,37380," . ). inlineprotected . Definition at line 57 of file TMatrixTSparse.h. ◆ APlusB() [1/3]. template<class Element > . void TMatrixTSparse< Element >::APlusB ; (; const TMatrixT< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). inlineprotected . Definition at line 67 of file TMatrixTSparse.h. ◆ APlusB() [2/3]. template<class Element > . void TMatrixTSparse< Element >::APlusB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixT< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix addition. ; Replace this matrix with C such that C = A + B. Note, matrix C is allocated for constr=1. ; Definition at line 927 of file TMatrixTSparse.cxx. ◆ APlusB() [3/3]. template<class Element > . void TMatrixTSparse< Element >::APlusB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix addition. ; Replace this matrix with C such that C = A + B. Note, matrix C is allocated for constr=1. ; Definition at line 845 of file TMatrixTSparse.cxx. ◆ Class() [1/2]. template<class Element > . static TClass * TMatrixTSparse< Element >::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class() [2/2]. TClass * TMatrixTSparse< double >::Class ; (; ). ◆ Class_Name(). template<class Element > . static const char * TMatrixTSparse< Element >::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). template<class Element > . static constexpr Version_t TMatrixTSparse< Element >::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 215 of file TMatrixTSparse.h. ◆ Clear(). template<class Element > . void TMatrixTSparse< Element >::Clear ; (; Option_t * ; = """"). inlineoverridevirtual . Implements TMatrixTBase< Element >.; Definition at line 130 of file TMatrixTSparse.h. ◆ ColNorm(). template<class Element > . Element TMatrixTSparse< Element >::ColNorm. overridevirtual . Column matrix norm, MAX{ S",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:38891,Energy Efficiency,adapt,adaptation,38891,"rse< Element >::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 215 of file TMatrixTSparse.h. ◆ Clear(). template<class Element > . void TMatrixTSparse< Element >::Clear ; (; Option_t * ; = """"). inlineoverridevirtual . Implements TMatrixTBase< Element >.; Definition at line 130 of file TMatrixTSparse.h. ◆ ColNorm(). template<class Element > . Element TMatrixTSparse< Element >::ColNorm. overridevirtual . Column matrix norm, MAX{ SUM{ |M(i,j)|, over i}, over j}. ; The norm is induced by the 1 vector norm. ; Reimplemented from TMatrixTBase< Element >.; Definition at line 2341 of file TMatrixTSparse.cxx. ◆ conservative_sparse_sparse_product_impl(). template<class Element > . void TMatrixTSparse< Element >::conservative_sparse_sparse_product_impl ; (; const TMatrixTSparse< Element > & ; lhs, . const TMatrixTSparse< Element > & ; rhs, . Int_t ; constr = 0 . ). protected . General Sparse Matrix Multiplication (SpMM). ; This code is an adaptation of Eigen SpMM implementation. This product is conservative, meaning that it preserves the symbolic non zeros. Given lhs, rhs, it computes this = rhs * lhs. Note, result matrix is only allocated when constr=1. ; Definition at line 552 of file TMatrixTSparse.cxx. ◆ DeclFileName(). template<class Element > . static const char * TMatrixTSparse< Element >::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 215 of file TMatrixTSparse.h. ◆ ExtractRow(). template<class Element > . void TMatrixTSparse< Element >::ExtractRow ; (; Int_t ; row, . Int_t ; col, . Element * ; v, . Int_t ; n = -1 . ); const. overridevirtual . Store in array v, n matrix elements of row rown starting at column coln. ; Reimplemented from TMatrixTBase< Element >.; Definition at line 509 of file TMatrixTSparse.cxx. ◆ GetColIndexArray() [1/2]. template<class Element > . const Int_t * TMatrixTSparse< Element >::GetColIndexArray. inlineoverridevirtual . Implements",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:39086,Energy Efficiency,allocate,allocated,39086,"id TMatrixTSparse< Element >::Clear ; (; Option_t * ; = """"). inlineoverridevirtual . Implements TMatrixTBase< Element >.; Definition at line 130 of file TMatrixTSparse.h. ◆ ColNorm(). template<class Element > . Element TMatrixTSparse< Element >::ColNorm. overridevirtual . Column matrix norm, MAX{ SUM{ |M(i,j)|, over i}, over j}. ; The norm is induced by the 1 vector norm. ; Reimplemented from TMatrixTBase< Element >.; Definition at line 2341 of file TMatrixTSparse.cxx. ◆ conservative_sparse_sparse_product_impl(). template<class Element > . void TMatrixTSparse< Element >::conservative_sparse_sparse_product_impl ; (; const TMatrixTSparse< Element > & ; lhs, . const TMatrixTSparse< Element > & ; rhs, . Int_t ; constr = 0 . ). protected . General Sparse Matrix Multiplication (SpMM). ; This code is an adaptation of Eigen SpMM implementation. This product is conservative, meaning that it preserves the symbolic non zeros. Given lhs, rhs, it computes this = rhs * lhs. Note, result matrix is only allocated when constr=1. ; Definition at line 552 of file TMatrixTSparse.cxx. ◆ DeclFileName(). template<class Element > . static const char * TMatrixTSparse< Element >::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 215 of file TMatrixTSparse.h. ◆ ExtractRow(). template<class Element > . void TMatrixTSparse< Element >::ExtractRow ; (; Int_t ; row, . Int_t ; col, . Element * ; v, . Int_t ; n = -1 . ); const. overridevirtual . Store in array v, n matrix elements of row rown starting at column coln. ; Reimplemented from TMatrixTBase< Element >.; Definition at line 509 of file TMatrixTSparse.cxx. ◆ GetColIndexArray() [1/2]. template<class Element > . const Int_t * TMatrixTSparse< Element >::GetColIndexArray. inlineoverridevirtual . Implements TMatrixTBase< Element >.; Definition at line 231 of file TMatrixTSparse.h. ◆ GetColIndexArray() [2/2]. template<class Element > . Int_t * TMatrixTSparse< Element >::GetColIndexArray",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:48792,Energy Efficiency,reduce,reduced,48792,"or[] ; (; Int_t ; rown); const. inline . Definition at line 181 of file TMatrixTSparse.h. ◆ Randomize(). template<class Element > . TMatrixTBase< Element > & TMatrixTSparse< Element >::Randomize ; (; Element ; alpha, . Element ; beta, . Double_t & ; seed . ). overridevirtual . randomize matrix element values ; Reimplemented from TMatrixTBase< Element >.; Definition at line 2568 of file TMatrixTSparse.cxx. ◆ RandomizePD(). template<class Element > . TMatrixTSparse< Element > & TMatrixTSparse< Element >::RandomizePD ; (; Element ; alpha, . Element ; beta, . Double_t & ; seed . ). virtual . randomize matrix element values but keep matrix symmetric positive definite ; Definition at line 2615 of file TMatrixTSparse.cxx. ◆ ReduceSparseMatrix(). template<class Element > . Int_t TMatrixTSparse< Element >::ReduceSparseMatrix ; (; Int_t ; nr, . Int_t * ; row, . Int_t * ; col, . Element * ; data . ). protected . Sum matrix entries corresponding to the same matrix element (i,j). ; The reduced extries remain dangling. It is assumed that the arrays row, col and data are sorted with DoubleLexSort. Note that the input arrays are not passed as const since they will be modified ! ; Definition at line 1328 of file TMatrixTSparse.cxx. ◆ ResizeTo() [1/3]. template<class Element > . TMatrixTBase< Element > & TMatrixTSparse< Element >::ResizeTo ; (; const TMatrixTSparse< Element > & ; m). inline . Definition at line 127 of file TMatrixTSparse.h. ◆ ResizeTo() [2/3]. template<class Element > . TMatrixTBase< Element > & TMatrixTSparse< Element >::ResizeTo ; (; Int_t ; nrows, . Int_t ; ncols, . Int_t ; nr_nonzeros = -1 . ). overridevirtual . Set size of the matrix to nrows x ncols with nr_nonzeros non-zero entries if nr_nonzeros > 0 . ; New dynamic elements are created, the overlapping part of the old ones are copied to the new structures, then the old elements are deleted. ; Implements TMatrixTBase< Element >.; Definition at line 1733 of file TMatrixTSparse.cxx. ◆ ResizeTo() [3/3]. template<c",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:53376,Energy Efficiency,allocate,allocated,53376,"& TMatrixTSparse< Element >::SetRowIndexArray ; (; Int_t * ; data). inlineoverridevirtual . Implements TMatrixTBase< Element >.; Definition at line 106 of file TMatrixTSparse.h. ◆ SetSparseIndex() [1/2]. template<class Element > . TMatrixTSparse< Element > & TMatrixTSparse< Element >::SetSparseIndex ; (; const TMatrixTBase< Element > & ; another). Use non-zero data of matrix source to set the sparse structure. ; Definition at line 1511 of file TMatrixTSparse.cxx. ◆ SetSparseIndex() [2/2]. template<class Element > . TMatrixTSparse< Element > & TMatrixTSparse< Element >::SetSparseIndex ; (; Int_t ; nelem_new). Increase/decrease the number of non-zero elements to nelems_new. ; Definition at line 1477 of file TMatrixTSparse.cxx. ◆ SetSparseIndexAB() [1/3]. template<class Element > . TMatrixTSparse< Element > & TMatrixTSparse< Element >::SetSparseIndexAB ; (; const TMatrixT< Element > & ; a, . const TMatrixTSparse< Element > & ; b . ). Set the row/column indices to the ""sum"" of matrices a and b It is checked that enough space has been allocated. ; Definition at line 1648 of file TMatrixTSparse.cxx. ◆ SetSparseIndexAB() [2/3]. template<class Element > . TMatrixTSparse< Element > & TMatrixTSparse< Element >::SetSparseIndexAB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixT< Element > & ; b . ). inline . Definition at line 113 of file TMatrixTSparse.h. ◆ SetSparseIndexAB() [3/3]. template<class Element > . TMatrixTSparse< Element > & TMatrixTSparse< Element >::SetSparseIndexAB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixTSparse< Element > & ; b . ). Set the row/column indices to the ""sum"" of matrices a and b It is checked that enough space has been allocated. ; Definition at line 1554 of file TMatrixTSparse.cxx. ◆ SetSub(). template<class Element > . TMatrixTBase< Element > & TMatrixTSparse< Element >::SetSub ; (; Int_t ; row_lwb, . Int_t ; col_lwb, . const TMatrixTBase< Element > & ; source . ). overridevirtual . Insert matrix source starting at ",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:54026,Energy Efficiency,allocate,allocated,54026,"n-zero elements to nelems_new. ; Definition at line 1477 of file TMatrixTSparse.cxx. ◆ SetSparseIndexAB() [1/3]. template<class Element > . TMatrixTSparse< Element > & TMatrixTSparse< Element >::SetSparseIndexAB ; (; const TMatrixT< Element > & ; a, . const TMatrixTSparse< Element > & ; b . ). Set the row/column indices to the ""sum"" of matrices a and b It is checked that enough space has been allocated. ; Definition at line 1648 of file TMatrixTSparse.cxx. ◆ SetSparseIndexAB() [2/3]. template<class Element > . TMatrixTSparse< Element > & TMatrixTSparse< Element >::SetSparseIndexAB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixT< Element > & ; b . ). inline . Definition at line 113 of file TMatrixTSparse.h. ◆ SetSparseIndexAB() [3/3]. template<class Element > . TMatrixTSparse< Element > & TMatrixTSparse< Element >::SetSparseIndexAB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixTSparse< Element > & ; b . ). Set the row/column indices to the ""sum"" of matrices a and b It is checked that enough space has been allocated. ; Definition at line 1554 of file TMatrixTSparse.cxx. ◆ SetSub(). template<class Element > . TMatrixTBase< Element > & TMatrixTSparse< Element >::SetSub ; (; Int_t ; row_lwb, . Int_t ; col_lwb, . const TMatrixTBase< Element > & ; source . ). overridevirtual . Insert matrix source starting at [row_lwb][col_lwb], thereby overwriting the part [row_lwb..row_lwb+nrows_source-1][col_lwb..col_lwb+ncols_source-1];. ; Implements TMatrixTBase< Element >.; Definition at line 2066 of file TMatrixTSparse.cxx. ◆ Streamer(). template<class Element > . void TMatrixTSparse< Element >::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TMatrixTSparse. ; Reimplemented from TMatrixTBase< Element >.; Definition at line 2989 of file TMatrixTSparse.cxx. ◆ StreamerNVirtual(). template<class Element > . void TMatrixTSparse< Element >::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 215",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:3542,Integrability,rout,routine,3542,"rformance. In the constructor, always the shape of the matrix has to be specified in some form . Data can be entered through the following methods :; constructor from COO matrix format TMatrixTSparse(Int_t row_lwb,Int_t row_upb,Int_t dol_lwb,; Int_t col_upb,Int_t nr_nonzeros,; Int_t *row, Int_t *col,Element *data);; TMatrixTSparse::TMatrixTSparseTMatrixTSparse()Definition TMatrixTSparse.h:83; It uses SetMatrixArray(..), see below; constructor from Harwell-Boeing (CSR) matrix format TMatrixTSparse(Int_t row_lwb,Int_t row_upb,Int_t dol_lwb,; Int_t col_upb,; Int_t *rowptr, Int_t *col,Element *data);; It copies input arrays into matrix .; copy constructors; SetMatrixArray(Int_t nr,Int_t *irow,Int_t *icol,Element *data) where it is expected that the irow,icol and data array contain nr entries . Only the entries with non-zero data[i] value are inserted. Be aware that the input data array will be modified inside the routine for doing the necessary sorting of indices !; SetMatrixArray(Int_t nr,Int_t nrows,Int_t ncols,Int_t *irow,; Int_t *icol,Element *data) where it is expected that the irow, icol and data array contain nr entries . It allows to reshape the matrix according to nrows and ncols. Only the entries with non-zero data[i] value are inserted. Be aware that the input data array will be modified inside the routine for doing the necessary sorting of indices !; TMatrixTSparse a(n,m); for(....) { a(i,j) = .... This is a very flexible method but expensive :; if no entry for slot (i,j) is found in the sparse index table it will be entered, which involves some memory management !; before invoking this method in a loop it is smart to first set the index table through a call to SetSparseIndex(..). SetSub(Int_t row_lwb,Int_t col_lwb,const TMatrixTBase &source) the matrix to be inserted at position (row_lwb,col_lwb) can be both dense or sparse . . Definition at line 36 of file TMatrixTSparse.h. Public Types; enum  EMatrixCreatorsOp1 { kZero; , kUnit; , kTransposed; , kAtA; };  ",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:3946,Integrability,rout,routine,3946,"atrixTSparseTMatrixTSparse()Definition TMatrixTSparse.h:83; It uses SetMatrixArray(..), see below; constructor from Harwell-Boeing (CSR) matrix format TMatrixTSparse(Int_t row_lwb,Int_t row_upb,Int_t dol_lwb,; Int_t col_upb,; Int_t *rowptr, Int_t *col,Element *data);; It copies input arrays into matrix .; copy constructors; SetMatrixArray(Int_t nr,Int_t *irow,Int_t *icol,Element *data) where it is expected that the irow,icol and data array contain nr entries . Only the entries with non-zero data[i] value are inserted. Be aware that the input data array will be modified inside the routine for doing the necessary sorting of indices !; SetMatrixArray(Int_t nr,Int_t nrows,Int_t ncols,Int_t *irow,; Int_t *icol,Element *data) where it is expected that the irow, icol and data array contain nr entries . It allows to reshape the matrix according to nrows and ncols. Only the entries with non-zero data[i] value are inserted. Be aware that the input data array will be modified inside the routine for doing the necessary sorting of indices !; TMatrixTSparse a(n,m); for(....) { a(i,j) = .... This is a very flexible method but expensive :; if no entry for slot (i,j) is found in the sparse index table it will be entered, which involves some memory management !; before invoking this method in a loop it is smart to first set the index table through a call to SetSparseIndex(..). SetSub(Int_t row_lwb,Int_t col_lwb,const TMatrixTBase &source) the matrix to be inserted at position (row_lwb,col_lwb) can be both dense or sparse . . Definition at line 36 of file TMatrixTSparse.h. Public Types; enum  EMatrixCreatorsOp1 { kZero; , kUnit; , kTransposed; , kAtA; };  ; enum  EMatrixCreatorsOp2 { kMult; , kMultTranspose; , kPlus; , kMinus; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:8119,Integrability,depend,depends,8119,"*v, Int_t n=-1) const override;  Store in array v, n matrix elements of row rown starting at column coln. ;  ; const Int_t * GetColIndexArray () const override;  ; Int_t * GetColIndexArray () override;  ; void GetMatrix2Array (Element *data, Option_t *="""") const override;  Copy matrix data to array . It is assumed that array is of size >= fNelems. ;  ; const Element * GetMatrixArray () const override;  ; Element * GetMatrixArray () override;  ; const Int_t * GetRowIndexArray () const override;  ; Int_t * GetRowIndexArray () override;  ; TMatrixTSparse< Element > GetSub (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Option_t *option=""S"") const;  ; TMatrixTBase< Element > & GetSub (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, TMatrixTBase< Element > &target, Option_t *option=""S"") const override;  Get submatrix [row_lwb..row_upb][col_lwb..col_upb]; The indexing range of the returned matrix depends on the argument option: ;  ; TMatrixTBase< Element > & InsertRow (Int_t row, Int_t col, const Element *v, Int_t n=-1) override;  Insert in row rown, n elements of array v at column coln. ;  ; TClass * IsA () const override;  ; Bool_t IsSymmetric () const override;  Check whether matrix is symmetric. ;  ; void Mult (const TMatrixTSparse< Element > &a, const TMatrixTSparse< Element > &b);  ; Int_t NonZeros () const override;  Compute the number of elements != 0.0. ;  ; TMatrixTBase< Element > & NormByDiag (const TVectorT< Element > &, Option_t *) override;  option: ;  ; Element operator() (Int_t rown, Int_t coln) const override;  ; Element & operator() (Int_t rown, Int_t coln) override;  ; TMatrixTSparse< Element > & operator*= (const TMatrixT< Element > &source);  ; TMatrixTSparse< Element > & operator*= (const TMatrixTSparse< Element > &source);  ; TMatrixTSparse< Element > & operator*= (Element val);  Multiply every element of the matrix with val. ;  ; TMatrixTSparse< Element > & operator+= (const TMatrixT< Element > &source);  ; TMatrixTSparse< ",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:18325,Integrability,message,message,18325," the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:18866,Integrability,message,message,18866,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:20068,Integrability,message,message,20068,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:23309,Integrability,message,message,23309,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTBase< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static co",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:23682,Integrability,message,message,23682," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTBase< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Element & NaNValue ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor ",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:42076,Integrability,depend,depends,42076,"IndexArray. inlineoverridevirtual . Implements TMatrixTBase< Element >.; Definition at line 229 of file TMatrixTSparse.h. ◆ GetRowIndexArray() [2/2]. template<class Element > . Int_t * TMatrixTSparse< Element >::GetRowIndexArray. inlineoverridevirtual . Implements TMatrixTBase< Element >.; Definition at line 230 of file TMatrixTSparse.h. ◆ GetSub() [1/2]. template<class Element > . TMatrixTSparse< Element > TMatrixTSparse< Element >::GetSub ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb, . Option_t * ; option = ""S"" . ); const. inline . Definition at line 256 of file TMatrixTSparse.h. ◆ GetSub() [2/2]. template<class Element > . TMatrixTBase< Element > & TMatrixTSparse< Element >::GetSub ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb, . TMatrixTBase< Element > & ; target, . Option_t * ; option = ""S"" . ); const. overridevirtual . Get submatrix [row_lwb..row_upb][col_lwb..col_upb]; The indexing range of the returned matrix depends on the argument option: ; option == ""S"" : return [0..row_upb-row_lwb+1][0..col_upb-col_lwb+1] (default) else : return [row_lwb..row_upb][col_lwb..col_upb] ; Implements TMatrixTBase< Element >.; Definition at line 1966 of file TMatrixTSparse.cxx. ◆ InsertRow(). template<class Element > . TMatrixTBase< Element > & TMatrixTSparse< Element >::InsertRow ; (; Int_t ; row, . Int_t ; col, . const Element * ; v, . Int_t ; n = -1 . ). overridevirtual . Insert in row rown, n elements of array v at column coln. ; Reimplemented from TMatrixTBase< Element >.; Definition at line 426 of file TMatrixTSparse.cxx. ◆ IsA(). template<class Element > . TClass * TMatrixTSparse< Element >::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TMatrixTBase< Element >.; Definition at line 215 of file TMatrixTSparse.h. ◆ IsSymmetric(). template<class Element > . Bool_t TMatrixTSparse< Element >::IsSymmetric ; (; ); const. inlineoverridevirtual . Check whether",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:4064,Modifiability,flexible,flexible,4064,"wptr, Int_t *col,Element *data);; It copies input arrays into matrix .; copy constructors; SetMatrixArray(Int_t nr,Int_t *irow,Int_t *icol,Element *data) where it is expected that the irow,icol and data array contain nr entries . Only the entries with non-zero data[i] value are inserted. Be aware that the input data array will be modified inside the routine for doing the necessary sorting of indices !; SetMatrixArray(Int_t nr,Int_t nrows,Int_t ncols,Int_t *irow,; Int_t *icol,Element *data) where it is expected that the irow, icol and data array contain nr entries . It allows to reshape the matrix according to nrows and ncols. Only the entries with non-zero data[i] value are inserted. Be aware that the input data array will be modified inside the routine for doing the necessary sorting of indices !; TMatrixTSparse a(n,m); for(....) { a(i,j) = .... This is a very flexible method but expensive :; if no entry for slot (i,j) is found in the sparse index table it will be entered, which involves some memory management !; before invoking this method in a loop it is smart to first set the index table through a call to SetSparseIndex(..). SetSub(Int_t row_lwb,Int_t col_lwb,const TMatrixTBase &source) the matrix to be inserted at position (row_lwb,col_lwb) can be both dense or sparse . . Definition at line 36 of file TMatrixTSparse.h. Public Types; enum  EMatrixCreatorsOp1 { kZero; , kUnit; , kTransposed; , kAtA; };  ; enum  EMatrixCreatorsOp2 { kMult; , kMultTranspose; , kPlus; , kMinus; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); ",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:4713,Modifiability,inherit,inherited,4713,"t the irow, icol and data array contain nr entries . It allows to reshape the matrix according to nrows and ncols. Only the entries with non-zero data[i] value are inserted. Be aware that the input data array will be modified inside the routine for doing the necessary sorting of indices !; TMatrixTSparse a(n,m); for(....) { a(i,j) = .... This is a very flexible method but expensive :; if no entry for slot (i,j) is found in the sparse index table it will be entered, which involves some memory management !; before invoking this method in a loop it is smart to first set the index table through a call to SetSparseIndex(..). SetSub(Int_t row_lwb,Int_t col_lwb,const TMatrixTBase &source) the matrix to be inserted at position (row_lwb,col_lwb) can be both dense or sparse . . Definition at line 36 of file TMatrixTSparse.h. Public Types; enum  EMatrixCreatorsOp1 { kZero; , kUnit; , kTransposed; , kAtA; };  ; enum  EMatrixCreatorsOp2 { kMult; , kMultTranspose; , kPlus; , kMinus; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMatrixTSparse ();  ;  TMatrixTSparse (const TMatrixT< Element > &a, EMatrixCreatorsOp2 op, const TMatrixTSparse< Element > &b);  Create a matrix applying a specific operation to two prototypes. ;  ;  TMatrixTSparse (const TMatrixT< Element > &another);  ;  TMatrixTSparse (const TMatrixTSparse< Element > &a, EMatrixCreatorsOp2 op, const TMatrix",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:14239,Modifiability,inherit,inherited,14239,"e). ;  ; const TMatrixTSparse< Element > & Use (const TMatrixTSparse< Element > &a) const;  ; const TMatrixTSparse< Element > & Use (Int_t nrows, Int_t ncols, Int_t nr_nonzeros, const Int_t *pRowIndex, const Int_t *pColIndex, const Element *pData) const;  ; TMatrixTSparse< Element > & Use (Int_t nrows, Int_t ncols, Int_t nr_nonzeros, Int_t *pRowIndex, Int_t *pColIndex, Element *pData);  ; const TMatrixTSparse< Element > & Use (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Int_t nr_nonzeros, const Int_t *pRowIndex, const Int_t *pColIndex, const Element *pData) const;  ; TMatrixTSparse< Element > & Use (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Int_t nr_nonzeros, Int_t *pRowIndex, Int_t *pColIndex, Element *pData);  ; TMatrixTSparse< Element > & Use (TMatrixTSparse< Element > &a);  ; TMatrixTBase< Element > & Zero () override;  Set matrix elements to zero. ;  ;  Public Member Functions inherited from TMatrixTBase< Element >;  TMatrixTBase ();  ;  ~TMatrixTBase () override;  ; virtual TMatrixTBase< Element > & Abs ();  Take an absolute value of a matrix, i.e. apply Abs() to each element. ;  ; virtual TMatrixTBase< Element > & Apply (const TElementActionT< Element > &action);  Apply action to each matrix element. ;  ; virtual TMatrixTBase< Element > & Apply (const TElementPosActionT< Element > &action);  Apply action to each element of the matrix. ;  ; TClass * Class ();  ; virtual Double_t Determinant () const;  ; virtual void Determinant (Double_t &d1, Double_t &d2) const;  ; void Draw (Option_t *option="""") override;  Draw this matrix The histogram is named ""TMatrixT"" by default and no title. ;  ; virtual Element E2Norm () const;  Square of the Euclidean norm, SUM{ m(i,j)^2 }. ;  ; Int_t GetColLwb () const;  ; Int_t GetColUpb () const;  ; Int_t GetNcols () const;  ; Int_t GetNoElements () const;  ; Int_t GetNrows () const;  ; Int_t GetRowLwb () const;  ; Int_t GetRowUpb () const;  ; Element GetTol () const;  ; void Invalidate ();  ; Boo",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:16681,Modifiability,inherit,inherited,16681,"ent val) const;  Are all matrix elements < val? ;  ; Bool_t operator<= (Element val) const;  Are all matrix elements <= val? ;  ; Bool_t operator== (Element val) const;  Are all matrix elements equal to val? ;  ; Bool_t operator> (Element val) const;  Are all matrix elements > val? ;  ; Bool_t operator>= (Element val) const;  Are all matrix elements >= val? ;  ; void Print (Option_t *name="""") const override;  Print the matrix as a table of elements. ;  ; Element SetTol (Element tol);  ; virtual TMatrixTBase< Element > & Shift (Int_t row_shift, Int_t col_shift);  Shift the row index by adding row_shift and the column index by adding col_shift, respectively. ;  ; virtual TMatrixTBase< Element > & Sqr ();  Square each element of the matrix. ;  ; virtual TMatrixTBase< Element > & Sqrt ();  Take square root of all elements. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Element Sum () const;  Compute sum of elements. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object)",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:17955,Modifiability,inherit,inheritance,17955,"don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:20166,Modifiability,inherit,inherits,20166,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:20283,Modifiability,inherit,inherits,20283,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:24183,Modifiability,inherit,inherited,24183,"R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTBase< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Element & NaNValue ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void Allocate (Int_t nrows, Int_t ncols, Int_t row_lwb=0, Int_t col_lwb=0, Int_t init=0, Int_t nr_nonzeros=0);  Allocate new matrix. ;  ; void AMinusB (const TMatrixT< Element > &a, const TMatrixTSparse< Element > &b, Int_t constr=0);  General matrix subtraction. ;  ; void AMinusB (const TMatrixTSparse< Element > &a, const TMatrixT< Element > &b, Int_t constr=0);  ",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:24443,Modifiability,inherit,inherited,24443,"R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTBase< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Element & NaNValue ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void Allocate (Int_t nrows, Int_t ncols, Int_t row_lwb=0, Int_t col_lwb=0, Int_t init=0, Int_t nr_nonzeros=0);  Allocate new matrix. ;  ; void AMinusB (const TMatrixT< Element > &a, const TMatrixTSparse< Element > &b, Int_t constr=0);  General matrix subtraction. ;  ; void AMinusB (const TMatrixTSparse< Element > &a, const TMatrixT< Element > &b, Int_t constr=0);  ",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:26897,Modifiability,inherit,inherited,26897,"xTSparse< Element > &a, const TMatrixT< Element > &b, Int_t constr=0);  General matrix multiplication. ;  ; void AMultBt (const TMatrixTSparse< Element > &a, const TMatrixTSparse< Element > &b, Int_t constr=0);  ; void APlusB (const TMatrixT< Element > &a, const TMatrixTSparse< Element > &b, Int_t constr=0);  ; void APlusB (const TMatrixTSparse< Element > &a, const TMatrixT< Element > &b, Int_t constr=0);  General matrix addition. ;  ; void APlusB (const TMatrixTSparse< Element > &a, const TMatrixTSparse< Element > &b, Int_t constr=0);  General matrix addition. ;  ; void conservative_sparse_sparse_product_impl (const TMatrixTSparse< Element > &lhs, const TMatrixTSparse< Element > &rhs, Int_t constr=0);  General Sparse Matrix Multiplication (SpMM). ;  ; Int_t ReduceSparseMatrix (Int_t nr, Int_t *row, Int_t *col, Element *data);  Sum matrix entries corresponding to the same matrix element (i,j). ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t * fColIndex;  ; Element * fElements;  ; Int_t * fRowIndex;  ;  Protected Attributes inherited from TMatrixTBase< Element >; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Additional Inherited Members;  Protected Types inherited from TMatrixTBase< Element >; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMatrixTBase< Element >; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:27192,Modifiability,inherit,inherited,27192,"Sparse< Element > &b, Int_t constr=0);  ; void APlusB (const TMatrixTSparse< Element > &a, const TMatrixT< Element > &b, Int_t constr=0);  General matrix addition. ;  ; void APlusB (const TMatrixTSparse< Element > &a, const TMatrixTSparse< Element > &b, Int_t constr=0);  General matrix addition. ;  ; void conservative_sparse_sparse_product_impl (const TMatrixTSparse< Element > &lhs, const TMatrixTSparse< Element > &rhs, Int_t constr=0);  General Sparse Matrix Multiplication (SpMM). ;  ; Int_t ReduceSparseMatrix (Int_t nr, Int_t *row, Int_t *col, Element *data);  Sum matrix entries corresponding to the same matrix element (i,j). ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t * fColIndex;  ; Element * fElements;  ; Int_t * fRowIndex;  ;  Protected Attributes inherited from TMatrixTBase< Element >; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Additional Inherited Members;  Protected Types inherited from TMatrixTBase< Element >; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMatrixTBase< Element >; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int_t swapSecond, Int_t *index);  Lexical sort on array data using indices first and second. ;  . #include <TMatrixTSparse.h>. Inheritance diagram for TMatrixTSparse< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend];",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:27425,Modifiability,inherit,inherited,27425,"M). ;  ; Int_t ReduceSparseMatrix (Int_t nr, Int_t *row, Int_t *col, Element *data);  Sum matrix entries corresponding to the same matrix element (i,j). ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t * fColIndex;  ; Element * fElements;  ; Int_t * fRowIndex;  ;  Protected Attributes inherited from TMatrixTBase< Element >; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Additional Inherited Members;  Protected Types inherited from TMatrixTBase< Element >; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMatrixTBase< Element >; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int_t swapSecond, Int_t *index);  Lexical sort on array data using indices first and second. ;  . #include <TMatrixTSparse.h>. Inheritance diagram for TMatrixTSparse< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EMatrixCreatorsOp1. template<class Element > . enum TMatrixTSparse::EMatrixCreatorsOp1. EnumeratorkZero ; kUnit ; kTransposed ; kAtA . Definition at line 80 of file TMatrixTSparse.h. ◆ EMatrixCreatorsOp2. template<class Element > . enum TMatrixTSparse::EMatrixCreatorsOp2. EnumeratorkMult ; kMultTranspose ; kPlus ; kMinus . Definition at line 81 of file TMatrixTSparse.h. Constructor & Destructor Documentation. ◆ TMatrixTSparse() [1/11]. templat",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:27601,Modifiability,inherit,inherited,27601,"M). ;  ; Int_t ReduceSparseMatrix (Int_t nr, Int_t *row, Int_t *col, Element *data);  Sum matrix entries corresponding to the same matrix element (i,j). ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t * fColIndex;  ; Element * fElements;  ; Int_t * fRowIndex;  ;  Protected Attributes inherited from TMatrixTBase< Element >; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Additional Inherited Members;  Protected Types inherited from TMatrixTBase< Element >; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMatrixTBase< Element >; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int_t swapSecond, Int_t *index);  Lexical sort on array data using indices first and second. ;  . #include <TMatrixTSparse.h>. Inheritance diagram for TMatrixTSparse< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EMatrixCreatorsOp1. template<class Element > . enum TMatrixTSparse::EMatrixCreatorsOp1. EnumeratorkZero ; kUnit ; kTransposed ; kAtA . Definition at line 80 of file TMatrixTSparse.h. ◆ EMatrixCreatorsOp2. template<class Element > . enum TMatrixTSparse::EMatrixCreatorsOp2. EnumeratorkMult ; kMultTranspose ; kPlus ; kMinus . Definition at line 81 of file TMatrixTSparse.h. Constructor & Destructor Documentation. ◆ TMatrixTSparse() [1/11]. templat",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:27707,Modifiability,inherit,inherited,27707,"M). ;  ; Int_t ReduceSparseMatrix (Int_t nr, Int_t *row, Int_t *col, Element *data);  Sum matrix entries corresponding to the same matrix element (i,j). ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t * fColIndex;  ; Element * fElements;  ; Int_t * fRowIndex;  ;  Protected Attributes inherited from TMatrixTBase< Element >; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Additional Inherited Members;  Protected Types inherited from TMatrixTBase< Element >; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMatrixTBase< Element >; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int_t swapSecond, Int_t *index);  Lexical sort on array data using indices first and second. ;  . #include <TMatrixTSparse.h>. Inheritance diagram for TMatrixTSparse< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EMatrixCreatorsOp1. template<class Element > . enum TMatrixTSparse::EMatrixCreatorsOp1. EnumeratorkZero ; kUnit ; kTransposed ; kAtA . Definition at line 80 of file TMatrixTSparse.h. ◆ EMatrixCreatorsOp2. template<class Element > . enum TMatrixTSparse::EMatrixCreatorsOp2. EnumeratorkMult ; kMultTranspose ; kPlus ; kMinus . Definition at line 81 of file TMatrixTSparse.h. Constructor & Destructor Documentation. ◆ TMatrixTSparse() [1/11]. templat",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:38891,Modifiability,adapt,adaptation,38891,"rse< Element >::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 215 of file TMatrixTSparse.h. ◆ Clear(). template<class Element > . void TMatrixTSparse< Element >::Clear ; (; Option_t * ; = """"). inlineoverridevirtual . Implements TMatrixTBase< Element >.; Definition at line 130 of file TMatrixTSparse.h. ◆ ColNorm(). template<class Element > . Element TMatrixTSparse< Element >::ColNorm. overridevirtual . Column matrix norm, MAX{ SUM{ |M(i,j)|, over i}, over j}. ; The norm is induced by the 1 vector norm. ; Reimplemented from TMatrixTBase< Element >.; Definition at line 2341 of file TMatrixTSparse.cxx. ◆ conservative_sparse_sparse_product_impl(). template<class Element > . void TMatrixTSparse< Element >::conservative_sparse_sparse_product_impl ; (; const TMatrixTSparse< Element > & ; lhs, . const TMatrixTSparse< Element > & ; rhs, . Int_t ; constr = 0 . ). protected . General Sparse Matrix Multiplication (SpMM). ; This code is an adaptation of Eigen SpMM implementation. This product is conservative, meaning that it preserves the symbolic non zeros. Given lhs, rhs, it computes this = rhs * lhs. Note, result matrix is only allocated when constr=1. ; Definition at line 552 of file TMatrixTSparse.cxx. ◆ DeclFileName(). template<class Element > . static const char * TMatrixTSparse< Element >::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 215 of file TMatrixTSparse.h. ◆ ExtractRow(). template<class Element > . void TMatrixTSparse< Element >::ExtractRow ; (; Int_t ; row, . Int_t ; col, . Element * ; v, . Int_t ; n = -1 . ); const. overridevirtual . Store in array v, n matrix elements of row rown starting at column coln. ; Reimplemented from TMatrixTBase< Element >.; Definition at line 509 of file TMatrixTSparse.cxx. ◆ GetColIndexArray() [1/2]. template<class Element > . const Int_t * TMatrixTSparse< Element >::GetColIndexArray. inlineoverridevirtual . Implements",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:2617,Performance,perform,performance,2617,"rse.h:40; TMatrixTSparse::fColIndexInt_t * fColIndexDefinition TMatrixTSparse.h:41; As an example how to access all sparse data elements:; for (Int_t irow = 0; irow < this->fNrows; irow++) {; const Int_t sIndex = fRowIndex[irow];; const Int_t eIndex = fRowIndex[irow+1];; for (Int_t index = sIndex; index < eIndex; index++) {; const Int_t icol = fColIndex[index];; const Element data = fElements[index];; printf(""data(%d,%d) = %.4e\n"",irow+this->fRowLwb,icol+; this->fColLwb,data);; }; }; TMatrixTBase::fColLwbInt_t fColLwbDefinition TMatrixTBase.h:93; TMatrixTBase::fRowLwbInt_t fRowLwbDefinition TMatrixTBase.h:92; TMatrixTSparse::fElementsElement * fElementsDefinition TMatrixTSparse.h:42; int; When checking whether sparse matrices are compatible (like in an assignment !), not only the shape parameters are compared but also the sparse structure through fRowIndex and fColIndex .; Several methods exist to fill a sparse matrix with data entries. Most are the same like for dense matrices but some care has to be taken with regard to performance. In the constructor, always the shape of the matrix has to be specified in some form . Data can be entered through the following methods :; constructor from COO matrix format TMatrixTSparse(Int_t row_lwb,Int_t row_upb,Int_t dol_lwb,; Int_t col_upb,Int_t nr_nonzeros,; Int_t *row, Int_t *col,Element *data);; TMatrixTSparse::TMatrixTSparseTMatrixTSparse()Definition TMatrixTSparse.h:83; It uses SetMatrixArray(..), see below; constructor from Harwell-Boeing (CSR) matrix format TMatrixTSparse(Int_t row_lwb,Int_t row_upb,Int_t dol_lwb,; Int_t col_upb,; Int_t *rowptr, Int_t *col,Element *data);; It copies input arrays into matrix .; copy constructors; SetMatrixArray(Int_t nr,Int_t *irow,Int_t *icol,Element *data) where it is expected that the irow,icol and data array contain nr entries . Only the entries with non-zero data[i] value are inserted. Be aware that the input data array will be modified inside the routine for doing the necessary sorti",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:1684,Security,access,access,1684,"and column array; fColIndex[0,..,fNelems-1]: Stores the column number for each data; element != 0; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; indexOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t indexDefinition TGWin32VirtualXProxy.cxx:168; TMatrixTBase::fNelemsInt_t fNelemsDefinition TMatrixTBase.h:94; TMatrixTBase::fNrowsInt_t fNrowsDefinition TMatrixTBase.h:90; TMatrixTSparse::fRowIndexInt_t * fRowIndexDefinition TMatrixTSparse.h:40; TMatrixTSparse::fColIndexInt_t * fColIndexDefinition TMatrixTSparse.h:41; As an example how to access all sparse data elements:; for (Int_t irow = 0; irow < this->fNrows; irow++) {; const Int_t sIndex = fRowIndex[irow];; const Int_t eIndex = fRowIndex[irow+1];; for (Int_t index = sIndex; index < eIndex; index++) {; const Int_t icol = fColIndex[index];; const Element data = fElements[index];; printf(""data(%d,%d) = %.4e\n"",irow+this->fRowLwb,icol+; this->fColLwb,data);; }; }; TMatrixTBase::fColLwbInt_t fColLwbDefinition TMatrixTBase.h:93; TMatrixTBase::fRowLwbInt_t fRowLwbDefinition TMatrixTBase.h:92; TMatrixTSparse::fElementsElement * fElementsDefinition TMatrixTSparse.h:42; int; When checking whether sparse matrices are compatible (like in an assignment !), not only the shape parameters are compared but also the sparse structure through fRowIndex and fColIndex .; Several methods exist to fill a sparse matrix with data entries. Most are the same like for dense matrices but some care has to be taken with regard to performance. In the constructor, always the shape of the matrix has to be specified in some form . Data can be entered through the following methods :; constructor from COO matrix format TMatrixTSparse(Int_t row_lwb,",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSparse.html:19797,Security,hash,hash,19797," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTMatrixTSparse.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html
https://root.cern/doc/master/classTMatrixTSub.html:2234,Modifiability,inherit,inherited,2234,". ;  ; void operator+= (const TMatrixTBase< Element > &m);  Add to every element of the submatrix the corresponding element of matrix mt. ;  ; void operator+= (const TMatrixTSub_const< Element > &s);  Add to every element of the submatrix the corresponding element of submatrix ms. ;  ; void operator+= (Element val);  Add val to every element of the sub matrix. ;  ; void operator= (const TMatrixTBase< Element > &m);  Assignment operator. ;  ; TMatrixTSub< Element > & operator= (const TMatrixTSub< Element > &s);  ; void operator= (const TMatrixTSub_const< Element > &s);  Assignment operator. ;  ; void operator= (Element val);  Assign val to every element of the sub matrix. ;  ; void Rank1Update (const TVectorT< Element > &vec, Element alpha=1.0);  Perform a rank 1 operation on the matrix: A += alpha * v * v^T. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMatrixTSub_const< Element >;  TMatrixTSub_const ();  ;  TMatrixTSub_const (const TMatrixT< Element > &matrix, Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb);  make a reference to submatrix [row_lwbs..row_upbs][col_lwbs..col_upbs]; The indexing range of the reference is [0..row_upbs-row_lwbs+1][0..col_upb-col_lwbs+1] (default) ;  ;  TMatrixTSub_const (const TMatrixTSym< Element > &matrix, Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb);  make a reference to submatrix [row_lwbs..row_upbs][col_lwbs..col_upbs]; The indexing range of the reference is [0..row_upbs-row_lwbs+1][0..col_upb-col_lwbs+1] (default) ;  ; virtual ~TMatrixTSub_const ();  ; Int_t GetColOff () const;  ; const TMatrixTBase< Element > * GetMatrix () const;  ; Int_t GetNcols () const;  ; Int_t GetNrows () const;  ; Int_t GetRowOff () const;  ; const Element & operator() (Int_t rown, Int_t coln) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; ",MatchSource.WIKI,doc/master/classTMatrixTSub.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSub.html
https://root.cern/doc/master/classTMatrixTSub.html:3439,Modifiability,inherit,inherited,3439," reference to submatrix [row_lwbs..row_upbs][col_lwbs..col_upbs]; The indexing range of the reference is [0..row_upbs-row_lwbs+1][0..col_upb-col_lwbs+1] (default) ;  ;  TMatrixTSub_const (const TMatrixTSym< Element > &matrix, Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb);  make a reference to submatrix [row_lwbs..row_upbs][col_lwbs..col_upbs]; The indexing range of the reference is [0..row_upbs-row_lwbs+1][0..col_upb-col_lwbs+1] (default) ;  ; virtual ~TMatrixTSub_const ();  ; Int_t GetColOff () const;  ; const TMatrixTBase< Element > * GetMatrix () const;  ; Int_t GetNcols () const;  ; Int_t GetNrows () const;  ; Int_t GetRowOff () const;  ; const Element & operator() (Int_t rown, Int_t coln) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTSub_const< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Protected Attributes inherited from TMatrixTSub_const< Element >; Int_t fColOff;  ; const TMatrixTBase< Element > * fMatrix;  ; Int_t fNcolsSub;  ; Int_t fNrowsSub;  ; Int_t fRowOff;  . #include <TMatrixTUtils.h>. Inheritance diagram for TMatrixTSub< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. template<class Element > . anonymous enum. EnumeratorkWorkMax . Definition at line 531 of file TMatrixTUtils.h. Constructor & Destructor Documentation. ◆ TMatrixTSub() [1/4]. template<class Element > . TMatrixTSub< Element >::TMatrixTSub ; (; ). inline . Definition at line 533 of file TMatrixTUtils.h. ◆ TMatrixTSub() [2/4]. template<class Element",MatchSource.WIKI,doc/master/classTMatrixTSub.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSub.html
https://root.cern/doc/master/classTMatrixTSub.html:3691,Modifiability,inherit,inherited,3691,"[row_lwbs..row_upbs][col_lwbs..col_upbs]; The indexing range of the reference is [0..row_upbs-row_lwbs+1][0..col_upb-col_lwbs+1] (default) ;  ; virtual ~TMatrixTSub_const ();  ; Int_t GetColOff () const;  ; const TMatrixTBase< Element > * GetMatrix () const;  ; Int_t GetNcols () const;  ; Int_t GetNrows () const;  ; Int_t GetRowOff () const;  ; const Element & operator() (Int_t rown, Int_t coln) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTSub_const< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Protected Attributes inherited from TMatrixTSub_const< Element >; Int_t fColOff;  ; const TMatrixTBase< Element > * fMatrix;  ; Int_t fNcolsSub;  ; Int_t fNrowsSub;  ; Int_t fRowOff;  . #include <TMatrixTUtils.h>. Inheritance diagram for TMatrixTSub< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. template<class Element > . anonymous enum. EnumeratorkWorkMax . Definition at line 531 of file TMatrixTUtils.h. Constructor & Destructor Documentation. ◆ TMatrixTSub() [1/4]. template<class Element > . TMatrixTSub< Element >::TMatrixTSub ; (; ). inline . Definition at line 533 of file TMatrixTUtils.h. ◆ TMatrixTSub() [2/4]. template<class Element > . TMatrixTSub< Element >::TMatrixTSub ; (; TMatrixT< Element > & ; matrix, . Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb . ). Constructor. ; Definition at line 920 of file TMatrixTUtils.cxx. ◆ TMatrixTSub() [3/4]. template<class Element > . TMatrixTSub< Element >::TMatrixTSub ; (; TMat",MatchSource.WIKI,doc/master/classTMatrixTSub.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSub.html
https://root.cern/doc/master/classTMatrixTSym.html:14785,Availability,error,error,14785," the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:14874,Availability,error,error,14874,"ns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:15029,Availability,error,error,15029,"y. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:15326,Availability,error,error,15326,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:19769,Availability,error,error,19769,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTBase< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static co",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:695,Deployability,update,updated,695,". ROOT: TMatrixTSym< Element > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TMatrixTSym< Element > Class Template ReferenceMath » Matrix Linear Algebra. ; template<class Element>; class TMatrixTSym< Element >TMatrixTSym. ; Template class of a symmetric matrix in the linear algebra package.; See the Matrix Linear Algebra page for the documentation of the linear algebra package; Note that in this implementation both matrix element m[i][j] and m[j][i] are updated and stored in memory. However, when making the object persistent only the upper right triangle is stored. ; Definition at line 36 of file TMatrixTSym.h. Public Types; enum  { kWorkMax = 100; };  ; enum  EMatrixCreatorsOp1 { ;   kZero; , kUnit; , kTransposed; , kInverted; , ;   kAtA. };  ; enum  EMatrixCreatorsOp2 { kPlus; , kMinus; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMatrixTSym ();  ;  TMatrixTSym (const TMatrixTSym< Element > &a, EMatrixCreatorsOp2 op, const TMatrixTSym< Element > &b);  ;  TMatrixTSym (const TMatrixTSym< Element > &another);  ; template<class Element2 > ;  TMatrixTSym (const TMatrixTSym< Element2 > &another);  ;  TMatrixTSym (const TMatr",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:9106,Energy Efficiency,efficient,efficient,9106,"&source) override;  Insert matrix source starting at [row_lwb][col_lwb] in a symmetric fashion, thereby overwriting the part [row_lwb..row_lwb+nrows_source][row_lwb..row_lwb+nrows_source];. ;  ; TMatrixTBase< Element > & Shift (Int_t row_shift, Int_t col_shift) override;  Shift the row index by adding row_shift and the column index by adding col_shift, respectively. ;  ; TMatrixTSym< Element > & Similarity (const TMatrixT< Element > &n);  Calculate B * (*this) * B^T , final matrix will be (nrowsb x nrowsb) This is a similarity transform when B is orthogonal . ;  ; TMatrixTSym< Element > & Similarity (const TMatrixTSym< Element > &n);  Calculate B * (*this) * B^T , final matrix will be (nrowsb x nrowsb) This is a similarity transform when B is orthogonal . ;  ; Element Similarity (const TVectorT< Element > &v) const;  Calculate scalar v * (*this) * v^T. ;  ; TMatrixTSym< Element > & SimilarityT (const TMatrixT< Element > &n);  Calculate B^T * (*this) * B , final matrix will be (ncolsb x ncolsb) It is more efficient than applying the actual multiplication because this routine realizes that the final matrix is symmetric . ;  ; void Streamer (TBuffer &) override;  Stream an object of class TMatrixTSym. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TMatrixTSym< Element > & T ();  ; void TMult (const TMatrixT< Element > &a);  Replace this matrix with C such that C = A' * A. ;  ; void TMult (const TMatrixTSym< Element > &a);  Matrix multiplication, with A symmetric Replace this matrix with C such that C = A' * A = A * A = A * A'. ;  ; TMatrixTSym< Element > & Transpose (const TMatrixTSym< Element > &source);  Transpose a matrix. ;  ; const TMatrixTSym< Element > & Use (const TMatrixTSym< Element > &a) const;  ; const TMatrixTSym< Element > & Use (Int_t nrows, const Element *data) const;  ; TMatrixTSym< Element > & Use (Int_t nrows, Element *data);  ; const TMatrixTSym< Element > & Use (Int_t row_lwb, Int_t row_upb, const Element *data) const;  ; TMa",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:43396,Energy Efficiency,efficient,efficient,43396,"ric fashion, thereby overwriting the part [row_lwb..row_lwb+nrows_source][row_lwb..row_lwb+nrows_source];. ; Implements TMatrixTBase< Element >.; Definition at line 686 of file TMatrixTSym.cxx. ◆ Shift(). template<class Element > . TMatrixTBase< Element > & TMatrixTSym< Element >::Shift ; (; Int_t ; row_shift, . Int_t ; col_shift . ). overridevirtual . Shift the row index by adding row_shift and the column index by adding col_shift, respectively. ; So [rowLwb..rowUpb][colLwb..colUpb] becomes [rowLwb+row_shift..rowUpb+row_shift][colLwb+col_shift..colUpb+col_shift] ; Reimplemented from TMatrixTBase< Element >.; Definition at line 756 of file TMatrixTSym.cxx. ◆ Similarity() [1/3]. template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::Similarity ; (; const TMatrixT< Element > & ; b). Calculate B * (*this) * B^T , final matrix will be (nrowsb x nrowsb) This is a similarity transform when B is orthogonal . ; It is more efficient than applying the actual multiplication because this routine realizes that the final matrix is symmetric . ; Definition at line 1099 of file TMatrixTSym.cxx. ◆ Similarity() [2/3]. template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::Similarity ; (; const TMatrixTSym< Element > & ; b). Calculate B * (*this) * B^T , final matrix will be (nrowsb x nrowsb) This is a similarity transform when B is orthogonal . ; It is more efficient than applying the actual multiplication because this routine realizes that the final matrix is symmetric . ; Definition at line 1190 of file TMatrixTSym.cxx. ◆ Similarity() [3/3]. template<class Element > . Element TMatrixTSym< Element >::Similarity ; (; const TVectorT< Element > & ; v); const. Calculate scalar v * (*this) * v^T. ; Definition at line 1292 of file TMatrixTSym.cxx. ◆ SimilarityT(). template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::SimilarityT ; (; const TMatrixT< Element > & ; n). Calculate B^T * (*this) * B , final matrix will be (ncolsb ",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:43851,Energy Efficiency,efficient,efficient,43851," [rowLwb..rowUpb][colLwb..colUpb] becomes [rowLwb+row_shift..rowUpb+row_shift][colLwb+col_shift..colUpb+col_shift] ; Reimplemented from TMatrixTBase< Element >.; Definition at line 756 of file TMatrixTSym.cxx. ◆ Similarity() [1/3]. template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::Similarity ; (; const TMatrixT< Element > & ; b). Calculate B * (*this) * B^T , final matrix will be (nrowsb x nrowsb) This is a similarity transform when B is orthogonal . ; It is more efficient than applying the actual multiplication because this routine realizes that the final matrix is symmetric . ; Definition at line 1099 of file TMatrixTSym.cxx. ◆ Similarity() [2/3]. template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::Similarity ; (; const TMatrixTSym< Element > & ; b). Calculate B * (*this) * B^T , final matrix will be (nrowsb x nrowsb) This is a similarity transform when B is orthogonal . ; It is more efficient than applying the actual multiplication because this routine realizes that the final matrix is symmetric . ; Definition at line 1190 of file TMatrixTSym.cxx. ◆ Similarity() [3/3]. template<class Element > . Element TMatrixTSym< Element >::Similarity ; (; const TVectorT< Element > & ; v); const. Calculate scalar v * (*this) * v^T. ; Definition at line 1292 of file TMatrixTSym.cxx. ◆ SimilarityT(). template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::SimilarityT ; (; const TMatrixT< Element > & ; n). Calculate B^T * (*this) * B , final matrix will be (ncolsb x ncolsb) It is more efficient than applying the actual multiplication because this routine realizes that the final matrix is symmetric . ; Definition at line 1327 of file TMatrixTSym.cxx. ◆ Streamer(). template<class Element > . void TMatrixTSym< Element >::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TMatrixTSym. ; Reimplemented from TMatrixTBase< Element >.; Definition at line 2037 of file TMatrixTSym.cxx. ◆ Streamer",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:44468,Energy Efficiency,efficient,efficient,44468,"final matrix is symmetric . ; Definition at line 1099 of file TMatrixTSym.cxx. ◆ Similarity() [2/3]. template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::Similarity ; (; const TMatrixTSym< Element > & ; b). Calculate B * (*this) * B^T , final matrix will be (nrowsb x nrowsb) This is a similarity transform when B is orthogonal . ; It is more efficient than applying the actual multiplication because this routine realizes that the final matrix is symmetric . ; Definition at line 1190 of file TMatrixTSym.cxx. ◆ Similarity() [3/3]. template<class Element > . Element TMatrixTSym< Element >::Similarity ; (; const TVectorT< Element > & ; v); const. Calculate scalar v * (*this) * v^T. ; Definition at line 1292 of file TMatrixTSym.cxx. ◆ SimilarityT(). template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::SimilarityT ; (; const TMatrixT< Element > & ; n). Calculate B^T * (*this) * B , final matrix will be (ncolsb x ncolsb) It is more efficient than applying the actual multiplication because this routine realizes that the final matrix is symmetric . ; Definition at line 1327 of file TMatrixTSym.cxx. ◆ Streamer(). template<class Element > . void TMatrixTSym< Element >::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TMatrixTSym. ; Reimplemented from TMatrixTBase< Element >.; Definition at line 2037 of file TMatrixTSym.cxx. ◆ StreamerNVirtual(). template<class Element > . void TMatrixTSym< Element >::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 180 of file TMatrixTSym.h. ◆ T(). template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::T ; (; ). inline . Definition at line 131 of file TMatrixTSym.h. ◆ TMult() [1/2]. template<class Element > . void TMatrixTSym< Element >::TMult ; (; const TMatrixT< Element > & ; a). Replace this matrix with C such that C = A' * A. ; In other words, c[i,j] = SUM{ a[k,i] * a[k,j] }. ; Definition at line 381 of fil",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:3855,Integrability,depend,depends,3855,"t Determinant () const override;  ; void Determinant (Double_t &d1, Double_t &d2) const override;  ; const TMatrixT< Element > EigenVectors (TVectorT< Element > &eigenValues) const;  Return a matrix containing the eigen-vectors ordered by descending eigen-values. ;  ; const Int_t * GetColIndexArray () const override;  ; Int_t * GetColIndexArray () override;  ; const Element * GetMatrixArray () const override;  ; Element * GetMatrixArray () override;  ; const Int_t * GetRowIndexArray () const override;  ; Int_t * GetRowIndexArray () override;  ; TMatrixTSym< Element > GetSub (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Option_t *option=""S"") const;  ; TMatrixTBase< Element > & GetSub (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, TMatrixTBase< Element > &target, Option_t *option=""S"") const override;  Get submatrix [row_lwb..row_upb][col_lwb..col_upb]; The indexing range of the returned matrix depends on the argument option: ;  ; TMatrixTSym< Element > & GetSub (Int_t row_lwb, Int_t row_upb, TMatrixTSym< Element > &target, Option_t *option=""S"") const;  Get submatrix [row_lwb..row_upb][row_lwb..row_upb]; The indexing range of the returned matrix depends on the argument option: ;  ; TMatrixTSym< Element > & Invert (Double_t *det=nullptr);  Invert the matrix and calculate its determinant Notice that the LU decomposition is used instead of Bunch-Kaufman Bunch-Kaufman guarantees a symmetric inverted matrix but is slower than LU . ;  ; TMatrixTSym< Element > & InvertFast (Double_t *det=nullptr);  Invert the matrix and calculate its determinant. ;  ; TClass * IsA () const override;  ; Bool_t IsSymmetric () const override;  Check whether matrix is symmetric. ;  ; void Minus (const TMatrixTSym< Element > &a, const TMatrixTSym< Element > &b);  Symmetric matrix subtraction. Replace this matrix with C such that C = A - B. ;  ; void Mult (const TMatrixTSym< Element > &a);  ; Element operator() (Int_t rown, Int_t coln) const override;  ; Element & operat",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:4111,Integrability,depend,depends,4111,"st override;  ; Int_t * GetColIndexArray () override;  ; const Element * GetMatrixArray () const override;  ; Element * GetMatrixArray () override;  ; const Int_t * GetRowIndexArray () const override;  ; Int_t * GetRowIndexArray () override;  ; TMatrixTSym< Element > GetSub (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Option_t *option=""S"") const;  ; TMatrixTBase< Element > & GetSub (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, TMatrixTBase< Element > &target, Option_t *option=""S"") const override;  Get submatrix [row_lwb..row_upb][col_lwb..col_upb]; The indexing range of the returned matrix depends on the argument option: ;  ; TMatrixTSym< Element > & GetSub (Int_t row_lwb, Int_t row_upb, TMatrixTSym< Element > &target, Option_t *option=""S"") const;  Get submatrix [row_lwb..row_upb][row_lwb..row_upb]; The indexing range of the returned matrix depends on the argument option: ;  ; TMatrixTSym< Element > & Invert (Double_t *det=nullptr);  Invert the matrix and calculate its determinant Notice that the LU decomposition is used instead of Bunch-Kaufman Bunch-Kaufman guarantees a symmetric inverted matrix but is slower than LU . ;  ; TMatrixTSym< Element > & InvertFast (Double_t *det=nullptr);  Invert the matrix and calculate its determinant. ;  ; TClass * IsA () const override;  ; Bool_t IsSymmetric () const override;  Check whether matrix is symmetric. ;  ; void Minus (const TMatrixTSym< Element > &a, const TMatrixTSym< Element > &b);  Symmetric matrix subtraction. Replace this matrix with C such that C = A - B. ;  ; void Mult (const TMatrixTSym< Element > &a);  ; Element operator() (Int_t rown, Int_t coln) const override;  ; Element & operator() (Int_t rown, Int_t coln) override;  Access element a_ij where i=rown and j=coln. ;  ; TMatrixTSym< Element > & operator*= (Element val);  Multiply every element of the matrix with val. ;  ; TMatrixTSym & operator+= (const TMatrixTSym &source);  Add the source matrix. ;  ; TMatrixTSym< Element > & ope",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:9169,Integrability,rout,routine,9169,"&source) override;  Insert matrix source starting at [row_lwb][col_lwb] in a symmetric fashion, thereby overwriting the part [row_lwb..row_lwb+nrows_source][row_lwb..row_lwb+nrows_source];. ;  ; TMatrixTBase< Element > & Shift (Int_t row_shift, Int_t col_shift) override;  Shift the row index by adding row_shift and the column index by adding col_shift, respectively. ;  ; TMatrixTSym< Element > & Similarity (const TMatrixT< Element > &n);  Calculate B * (*this) * B^T , final matrix will be (nrowsb x nrowsb) This is a similarity transform when B is orthogonal . ;  ; TMatrixTSym< Element > & Similarity (const TMatrixTSym< Element > &n);  Calculate B * (*this) * B^T , final matrix will be (nrowsb x nrowsb) This is a similarity transform when B is orthogonal . ;  ; Element Similarity (const TVectorT< Element > &v) const;  Calculate scalar v * (*this) * v^T. ;  ; TMatrixTSym< Element > & SimilarityT (const TMatrixT< Element > &n);  Calculate B^T * (*this) * B , final matrix will be (ncolsb x ncolsb) It is more efficient than applying the actual multiplication because this routine realizes that the final matrix is symmetric . ;  ; void Streamer (TBuffer &) override;  Stream an object of class TMatrixTSym. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TMatrixTSym< Element > & T ();  ; void TMult (const TMatrixT< Element > &a);  Replace this matrix with C such that C = A' * A. ;  ; void TMult (const TMatrixTSym< Element > &a);  Matrix multiplication, with A symmetric Replace this matrix with C such that C = A' * A = A * A = A * A'. ;  ; TMatrixTSym< Element > & Transpose (const TMatrixTSym< Element > &source);  Transpose a matrix. ;  ; const TMatrixTSym< Element > & Use (const TMatrixTSym< Element > &a) const;  ; const TMatrixTSym< Element > & Use (Int_t nrows, const Element *data) const;  ; TMatrixTSym< Element > & Use (Int_t nrows, Element *data);  ; const TMatrixTSym< Element > & Use (Int_t row_lwb, Int_t row_upb, const Element *data) const;  ; TMa",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:14791,Integrability,message,message,14791," the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:15332,Integrability,message,message,15332,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:16534,Integrability,message,message,16534,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:19775,Integrability,message,message,19775,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTBase< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static co",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:20148,Integrability,message,message,20148," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTBase< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Element & NaNValue ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor ",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:31772,Integrability,depend,depends,31772,"owIndexArray ; (; ); const. inlineoverridevirtual . Implements TMatrixTBase< Element >.; Definition at line 88 of file TMatrixTSym.h. ◆ GetRowIndexArray() [2/2]. template<class Element > . Int_t * TMatrixTSym< Element >::GetRowIndexArray ; (; ). inlineoverridevirtual . Implements TMatrixTBase< Element >.; Definition at line 89 of file TMatrixTSym.h. ◆ GetSub() [1/3]. template<class Element > . TMatrixTSym< Element > TMatrixTSym< Element >::GetSub ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb, . Option_t * ; option = ""S"" . ); const. inline . Definition at line 202 of file TMatrixTSym.h. ◆ GetSub() [2/3]. template<class Element > . TMatrixTBase< Element > & TMatrixTSym< Element >::GetSub ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb, . TMatrixTBase< Element > & ; target, . Option_t * ; option = ""S"" . ); const. overridevirtual . Get submatrix [row_lwb..row_upb][col_lwb..col_upb]; The indexing range of the returned matrix depends on the argument option: ; option == ""S"" : return [0..row_upb-row_lwb+1][0..col_upb-col_lwb+1] (default) else : return [row_lwb..row_upb][col_lwb..col_upb] ; Implements TMatrixTBase< Element >.; Definition at line 569 of file TMatrixTSym.cxx. ◆ GetSub() [3/3]. template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::GetSub ; (; Int_t ; row_lwb, . Int_t ; row_upb, . TMatrixTSym< Element > & ; target, . Option_t * ; option = ""S"" . ); const. Get submatrix [row_lwb..row_upb][row_lwb..row_upb]; The indexing range of the returned matrix depends on the argument option: ; option == ""S"" : return [0..row_upb-row_lwb+1][0..row_upb-row_lwb+1] (default) else : return [row_lwb..row_upb][row_lwb..row_upb] ; Definition at line 503 of file TMatrixTSym.cxx. ◆ Invert(). template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::Invert ; (; Double_t * ; det = nullptr). Invert the matrix and calculate its determinant Notice that the LU decomposition is used instead of",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:32335,Integrability,depend,depends,32335,"const. inline . Definition at line 202 of file TMatrixTSym.h. ◆ GetSub() [2/3]. template<class Element > . TMatrixTBase< Element > & TMatrixTSym< Element >::GetSub ; (; Int_t ; row_lwb, . Int_t ; row_upb, . Int_t ; col_lwb, . Int_t ; col_upb, . TMatrixTBase< Element > & ; target, . Option_t * ; option = ""S"" . ); const. overridevirtual . Get submatrix [row_lwb..row_upb][col_lwb..col_upb]; The indexing range of the returned matrix depends on the argument option: ; option == ""S"" : return [0..row_upb-row_lwb+1][0..col_upb-col_lwb+1] (default) else : return [row_lwb..row_upb][col_lwb..col_upb] ; Implements TMatrixTBase< Element >.; Definition at line 569 of file TMatrixTSym.cxx. ◆ GetSub() [3/3]. template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::GetSub ; (; Int_t ; row_lwb, . Int_t ; row_upb, . TMatrixTSym< Element > & ; target, . Option_t * ; option = ""S"" . ); const. Get submatrix [row_lwb..row_upb][row_lwb..row_upb]; The indexing range of the returned matrix depends on the argument option: ; option == ""S"" : return [0..row_upb-row_lwb+1][0..row_upb-row_lwb+1] (default) else : return [row_lwb..row_upb][row_lwb..row_upb] ; Definition at line 503 of file TMatrixTSym.cxx. ◆ Invert(). template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::Invert ; (; Double_t * ; det = nullptr). Invert the matrix and calculate its determinant Notice that the LU decomposition is used instead of Bunch-Kaufman Bunch-Kaufman guarantees a symmetric inverted matrix but is slower than LU . ; The user can access Bunch-Kaufman through the TDecompBK class . ; Definition at line 961 of file TMatrixTSym.cxx. ◆ InvertFast(). template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::InvertFast ; (; Double_t * ; det = nullptr). Invert the matrix and calculate its determinant. ; Definition at line 979 of file TMatrixTSym.cxx. ◆ IsA(). template<class Element > . TClass * TMatrixTSym< Element >::IsA ; (; ); const. inlineoverridevirtual . Returns",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:43459,Integrability,rout,routine,43459,"ric fashion, thereby overwriting the part [row_lwb..row_lwb+nrows_source][row_lwb..row_lwb+nrows_source];. ; Implements TMatrixTBase< Element >.; Definition at line 686 of file TMatrixTSym.cxx. ◆ Shift(). template<class Element > . TMatrixTBase< Element > & TMatrixTSym< Element >::Shift ; (; Int_t ; row_shift, . Int_t ; col_shift . ). overridevirtual . Shift the row index by adding row_shift and the column index by adding col_shift, respectively. ; So [rowLwb..rowUpb][colLwb..colUpb] becomes [rowLwb+row_shift..rowUpb+row_shift][colLwb+col_shift..colUpb+col_shift] ; Reimplemented from TMatrixTBase< Element >.; Definition at line 756 of file TMatrixTSym.cxx. ◆ Similarity() [1/3]. template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::Similarity ; (; const TMatrixT< Element > & ; b). Calculate B * (*this) * B^T , final matrix will be (nrowsb x nrowsb) This is a similarity transform when B is orthogonal . ; It is more efficient than applying the actual multiplication because this routine realizes that the final matrix is symmetric . ; Definition at line 1099 of file TMatrixTSym.cxx. ◆ Similarity() [2/3]. template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::Similarity ; (; const TMatrixTSym< Element > & ; b). Calculate B * (*this) * B^T , final matrix will be (nrowsb x nrowsb) This is a similarity transform when B is orthogonal . ; It is more efficient than applying the actual multiplication because this routine realizes that the final matrix is symmetric . ; Definition at line 1190 of file TMatrixTSym.cxx. ◆ Similarity() [3/3]. template<class Element > . Element TMatrixTSym< Element >::Similarity ; (; const TVectorT< Element > & ; v); const. Calculate scalar v * (*this) * v^T. ; Definition at line 1292 of file TMatrixTSym.cxx. ◆ SimilarityT(). template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::SimilarityT ; (; const TMatrixT< Element > & ; n). Calculate B^T * (*this) * B , final matrix will be (ncolsb ",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:43914,Integrability,rout,routine,43914," [rowLwb..rowUpb][colLwb..colUpb] becomes [rowLwb+row_shift..rowUpb+row_shift][colLwb+col_shift..colUpb+col_shift] ; Reimplemented from TMatrixTBase< Element >.; Definition at line 756 of file TMatrixTSym.cxx. ◆ Similarity() [1/3]. template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::Similarity ; (; const TMatrixT< Element > & ; b). Calculate B * (*this) * B^T , final matrix will be (nrowsb x nrowsb) This is a similarity transform when B is orthogonal . ; It is more efficient than applying the actual multiplication because this routine realizes that the final matrix is symmetric . ; Definition at line 1099 of file TMatrixTSym.cxx. ◆ Similarity() [2/3]. template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::Similarity ; (; const TMatrixTSym< Element > & ; b). Calculate B * (*this) * B^T , final matrix will be (nrowsb x nrowsb) This is a similarity transform when B is orthogonal . ; It is more efficient than applying the actual multiplication because this routine realizes that the final matrix is symmetric . ; Definition at line 1190 of file TMatrixTSym.cxx. ◆ Similarity() [3/3]. template<class Element > . Element TMatrixTSym< Element >::Similarity ; (; const TVectorT< Element > & ; v); const. Calculate scalar v * (*this) * v^T. ; Definition at line 1292 of file TMatrixTSym.cxx. ◆ SimilarityT(). template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::SimilarityT ; (; const TMatrixT< Element > & ; n). Calculate B^T * (*this) * B , final matrix will be (ncolsb x ncolsb) It is more efficient than applying the actual multiplication because this routine realizes that the final matrix is symmetric . ; Definition at line 1327 of file TMatrixTSym.cxx. ◆ Streamer(). template<class Element > . void TMatrixTSym< Element >::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TMatrixTSym. ; Reimplemented from TMatrixTBase< Element >.; Definition at line 2037 of file TMatrixTSym.cxx. ◆ Streamer",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:44531,Integrability,rout,routine,44531,"final matrix is symmetric . ; Definition at line 1099 of file TMatrixTSym.cxx. ◆ Similarity() [2/3]. template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::Similarity ; (; const TMatrixTSym< Element > & ; b). Calculate B * (*this) * B^T , final matrix will be (nrowsb x nrowsb) This is a similarity transform when B is orthogonal . ; It is more efficient than applying the actual multiplication because this routine realizes that the final matrix is symmetric . ; Definition at line 1190 of file TMatrixTSym.cxx. ◆ Similarity() [3/3]. template<class Element > . Element TMatrixTSym< Element >::Similarity ; (; const TVectorT< Element > & ; v); const. Calculate scalar v * (*this) * v^T. ; Definition at line 1292 of file TMatrixTSym.cxx. ◆ SimilarityT(). template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::SimilarityT ; (; const TMatrixT< Element > & ; n). Calculate B^T * (*this) * B , final matrix will be (ncolsb x ncolsb) It is more efficient than applying the actual multiplication because this routine realizes that the final matrix is symmetric . ; Definition at line 1327 of file TMatrixTSym.cxx. ◆ Streamer(). template<class Element > . void TMatrixTSym< Element >::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TMatrixTSym. ; Reimplemented from TMatrixTBase< Element >.; Definition at line 2037 of file TMatrixTSym.cxx. ◆ StreamerNVirtual(). template<class Element > . void TMatrixTSym< Element >::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 180 of file TMatrixTSym.h. ◆ T(). template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::T ; (; ). inline . Definition at line 131 of file TMatrixTSym.h. ◆ TMult() [1/2]. template<class Element > . void TMatrixTSym< Element >::TMult ; (; const TMatrixT< Element > & ; a). Replace this matrix with C such that C = A' * A. ; In other words, c[i,j] = SUM{ a[k,i] * a[k,j] }. ; Definition at line 381 of fil",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:1057,Modifiability,inherit,inherited,1057,"g...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TMatrixTSym< Element > Class Template ReferenceMath » Matrix Linear Algebra. ; template<class Element>; class TMatrixTSym< Element >TMatrixTSym. ; Template class of a symmetric matrix in the linear algebra package.; See the Matrix Linear Algebra page for the documentation of the linear algebra package; Note that in this implementation both matrix element m[i][j] and m[j][i] are updated and stored in memory. However, when making the object persistent only the upper right triangle is stored. ; Definition at line 36 of file TMatrixTSym.h. Public Types; enum  { kWorkMax = 100; };  ; enum  EMatrixCreatorsOp1 { ;   kZero; , kUnit; , kTransposed; , kInverted; , ;   kAtA. };  ; enum  EMatrixCreatorsOp2 { kPlus; , kMinus; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMatrixTSym ();  ;  TMatrixTSym (const TMatrixTSym< Element > &a, EMatrixCreatorsOp2 op, const TMatrixTSym< Element > &b);  ;  TMatrixTSym (const TMatrixTSym< Element > &another);  ; template<class Element2 > ;  TMatrixTSym (const TMatrixTSym< Element2 > &another);  ;  TMatrixTSym (const TMatrixTSymLazy< Element > &lazy_constructor);  ;  TMatrixTSym (EMatrixCreatorsOp1 op, const TMatrixT< Element ",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:10248,Modifiability,inherit,inherited,10248,"lsb) It is more efficient than applying the actual multiplication because this routine realizes that the final matrix is symmetric . ;  ; void Streamer (TBuffer &) override;  Stream an object of class TMatrixTSym. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TMatrixTSym< Element > & T ();  ; void TMult (const TMatrixT< Element > &a);  Replace this matrix with C such that C = A' * A. ;  ; void TMult (const TMatrixTSym< Element > &a);  Matrix multiplication, with A symmetric Replace this matrix with C such that C = A' * A = A * A = A * A'. ;  ; TMatrixTSym< Element > & Transpose (const TMatrixTSym< Element > &source);  Transpose a matrix. ;  ; const TMatrixTSym< Element > & Use (const TMatrixTSym< Element > &a) const;  ; const TMatrixTSym< Element > & Use (Int_t nrows, const Element *data) const;  ; TMatrixTSym< Element > & Use (Int_t nrows, Element *data);  ; const TMatrixTSym< Element > & Use (Int_t row_lwb, Int_t row_upb, const Element *data) const;  ; TMatrixTSym< Element > & Use (Int_t row_lwb, Int_t row_upb, Element *data);  ; TMatrixTSym< Element > & Use (TMatrixTSym< Element > &a);  ;  Public Member Functions inherited from TMatrixTBase< Element >;  TMatrixTBase ();  ;  ~TMatrixTBase () override;  ; virtual TMatrixTBase< Element > & Abs ();  Take an absolute value of a matrix, i.e. apply Abs() to each element. ;  ; TClass * Class ();  ; virtual Element ColNorm () const;  Column matrix norm, MAX{ SUM{ |M(i,j)|, over i}, over j}. ;  ; void Draw (Option_t *option="""") override;  Draw this matrix The histogram is named ""TMatrixT"" by default and no title. ;  ; virtual Element E2Norm () const;  Square of the Euclidean norm, SUM{ m(i,j)^2 }. ;  ; virtual void ExtractRow (Int_t row, Int_t col, Element *v, Int_t n=-1) const;  Store in array v, n matrix elements of row rown starting at column coln. ;  ; Int_t GetColLwb () const;  ; Int_t GetColUpb () const;  ; virtual void GetMatrix2Array (Element *data, Option_t *option="""") const;  Copy matrix d",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:13147,Modifiability,inherit,inherited,13147,"rix elements <= val? ;  ; Bool_t operator== (Element val) const;  Are all matrix elements equal to val? ;  ; Bool_t operator> (Element val) const;  Are all matrix elements > val? ;  ; Bool_t operator>= (Element val) const;  Are all matrix elements >= val? ;  ; void Print (Option_t *name="""") const override;  Print the matrix as a table of elements. ;  ; virtual Element RowNorm () const;  Row matrix norm, MAX{ SUM{ |M(i,j)|, over j}, over i}. ;  ; Element SetTol (Element tol);  ; virtual TMatrixTBase< Element > & Sqr ();  Square each element of the matrix. ;  ; virtual TMatrixTBase< Element > & Sqrt ();  Take square root of all elements. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Element Sum () const;  Compute sum of elements. ;  ; virtual TMatrixTBase< Element > & UnitMatrix ();  Make a unit matrix (matrix need not be a square one). ;  ; virtual TMatrixTBase< Element > & Zero ();  Set matrix elements to zero. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object)",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:14421,Modifiability,inherit,inheritance,14421,"don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:16632,Modifiability,inherit,inherits,16632,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:16749,Modifiability,inherit,inherits,16749,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:20649,Modifiability,inherit,inherited,20649,"R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTBase< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Element & NaNValue ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void Allocate (Int_t nrows, Int_t ncols, Int_t row_lwb=0, Int_t col_lwb=0, Int_t init=0, Int_t=-1);  Allocate new matrix. ;  ; void Delete_m (Int_t size, Element *&);  delete data pointer m, if it was assigned on the heap ;  ; Int_t Memcpy_m (Element *newp, const Element *oldp, Int_t copySize, Int_t newSize, Int_t oldSize);  copy copySize doubles from *oldp to *new",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:20909,Modifiability,inherit,inherited,20909,"R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMatrixTBase< Element >; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Element & NaNValue ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void Allocate (Int_t nrows, Int_t ncols, Int_t row_lwb=0, Int_t col_lwb=0, Int_t init=0, Int_t=-1);  Allocate new matrix. ;  ; void Delete_m (Int_t size, Element *&);  delete data pointer m, if it was assigned on the heap ;  ; Int_t Memcpy_m (Element *newp, const Element *oldp, Int_t copySize, Int_t newSize, Int_t oldSize);  copy copySize doubles from *oldp to *new",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:21885,Modifiability,inherit,inherited,21885,"s * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void Allocate (Int_t nrows, Int_t ncols, Int_t row_lwb=0, Int_t col_lwb=0, Int_t init=0, Int_t=-1);  Allocate new matrix. ;  ; void Delete_m (Int_t size, Element *&);  delete data pointer m, if it was assigned on the heap ;  ; Int_t Memcpy_m (Element *newp, const Element *oldp, Int_t copySize, Int_t newSize, Int_t oldSize);  copy copySize doubles from *oldp to *newp . ;  ; Element * New_m (Int_t size);  return data pointer . ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Element fDataStack [TMatrixTBase< Element >::kSizeMax];  ; Element * fElements;  data container ;  ;  Protected Attributes inherited from TMatrixTBase< Element >; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Additional Inherited Members;  Protected Types inherited from TMatrixTBase< Element >; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMatrixTBase< Element >; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, In",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:22213,Modifiability,inherit,inherited,22213," void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void Allocate (Int_t nrows, Int_t ncols, Int_t row_lwb=0, Int_t col_lwb=0, Int_t init=0, Int_t=-1);  Allocate new matrix. ;  ; void Delete_m (Int_t size, Element *&);  delete data pointer m, if it was assigned on the heap ;  ; Int_t Memcpy_m (Element *newp, const Element *oldp, Int_t copySize, Int_t newSize, Int_t oldSize);  copy copySize doubles from *oldp to *newp . ;  ; Element * New_m (Int_t size);  return data pointer . ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Element fDataStack [TMatrixTBase< Element >::kSizeMax];  ; Element * fElements;  data container ;  ;  Protected Attributes inherited from TMatrixTBase< Element >; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Additional Inherited Members;  Protected Types inherited from TMatrixTBase< Element >; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMatrixTBase< Element >; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int_t swapSecond, Int_t *index);  Lexical sort on array data using indices first and second. ;  . #include <TMatrixTSym.h>. Inheritance diagram for TMatrixTSym< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.;",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:22446,Modifiability,inherit,inherited,22446," Int_t oldSize);  copy copySize doubles from *oldp to *newp . ;  ; Element * New_m (Int_t size);  return data pointer . ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Element fDataStack [TMatrixTBase< Element >::kSizeMax];  ; Element * fElements;  data container ;  ;  Protected Attributes inherited from TMatrixTBase< Element >; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Additional Inherited Members;  Protected Types inherited from TMatrixTBase< Element >; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMatrixTBase< Element >; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int_t swapSecond, Int_t *index);  Lexical sort on array data using indices first and second. ;  . #include <TMatrixTSym.h>. Inheritance diagram for TMatrixTSym< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. template<class Element > . anonymous enum. EnumeratorkWorkMax . Definition at line 52 of file TMatrixTSym.h. ◆ EMatrixCreatorsOp1. template<class Element > . enum TMatrixTSym::EMatrixCreatorsOp1. EnumeratorkZero ; kUnit ; kTransposed ; kInverted ; kAtA . Definition at line 53 of file TMatrixTSym.h. ◆ EMatrixCreatorsOp2. template<class Element > . enum TMatrixTSym::EMatrixCreatorsOp2. EnumeratorkPlus ; kMinus . Definition at line 54 o",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:22622,Modifiability,inherit,inherited,22622," Int_t oldSize);  copy copySize doubles from *oldp to *newp . ;  ; Element * New_m (Int_t size);  return data pointer . ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Element fDataStack [TMatrixTBase< Element >::kSizeMax];  ; Element * fElements;  data container ;  ;  Protected Attributes inherited from TMatrixTBase< Element >; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Additional Inherited Members;  Protected Types inherited from TMatrixTBase< Element >; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMatrixTBase< Element >; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int_t swapSecond, Int_t *index);  Lexical sort on array data using indices first and second. ;  . #include <TMatrixTSym.h>. Inheritance diagram for TMatrixTSym< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. template<class Element > . anonymous enum. EnumeratorkWorkMax . Definition at line 52 of file TMatrixTSym.h. ◆ EMatrixCreatorsOp1. template<class Element > . enum TMatrixTSym::EMatrixCreatorsOp1. EnumeratorkZero ; kUnit ; kTransposed ; kInverted ; kAtA . Definition at line 53 of file TMatrixTSym.h. ◆ EMatrixCreatorsOp2. template<class Element > . enum TMatrixTSym::EMatrixCreatorsOp2. EnumeratorkPlus ; kMinus . Definition at line 54 o",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:22728,Modifiability,inherit,inherited,22728," Int_t oldSize);  copy copySize doubles from *oldp to *newp . ;  ; Element * New_m (Int_t size);  return data pointer . ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Element fDataStack [TMatrixTBase< Element >::kSizeMax];  ; Element * fElements;  data container ;  ;  Protected Attributes inherited from TMatrixTBase< Element >; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Additional Inherited Members;  Protected Types inherited from TMatrixTBase< Element >; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMatrixTBase< Element >; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int_t swapSecond, Int_t *index);  Lexical sort on array data using indices first and second. ;  . #include <TMatrixTSym.h>. Inheritance diagram for TMatrixTSym< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. template<class Element > . anonymous enum. EnumeratorkWorkMax . Definition at line 52 of file TMatrixTSym.h. ◆ EMatrixCreatorsOp1. template<class Element > . enum TMatrixTSym::EMatrixCreatorsOp1. EnumeratorkZero ; kUnit ; kTransposed ; kInverted ; kAtA . Definition at line 53 of file TMatrixTSym.h. ◆ EMatrixCreatorsOp2. template<class Element > . enum TMatrixTSym::EMatrixCreatorsOp2. EnumeratorkPlus ; kMinus . Definition at line 54 o",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:16263,Security,hash,hash,16263," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:32883,Security,access,access,32883,"ow_lwb..row_upb][col_lwb..col_upb] ; Implements TMatrixTBase< Element >.; Definition at line 569 of file TMatrixTSym.cxx. ◆ GetSub() [3/3]. template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::GetSub ; (; Int_t ; row_lwb, . Int_t ; row_upb, . TMatrixTSym< Element > & ; target, . Option_t * ; option = ""S"" . ); const. Get submatrix [row_lwb..row_upb][row_lwb..row_upb]; The indexing range of the returned matrix depends on the argument option: ; option == ""S"" : return [0..row_upb-row_lwb+1][0..row_upb-row_lwb+1] (default) else : return [row_lwb..row_upb][row_lwb..row_upb] ; Definition at line 503 of file TMatrixTSym.cxx. ◆ Invert(). template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::Invert ; (; Double_t * ; det = nullptr). Invert the matrix and calculate its determinant Notice that the LU decomposition is used instead of Bunch-Kaufman Bunch-Kaufman guarantees a symmetric inverted matrix but is slower than LU . ; The user can access Bunch-Kaufman through the TDecompBK class . ; Definition at line 961 of file TMatrixTSym.cxx. ◆ InvertFast(). template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::InvertFast ; (; Double_t * ; det = nullptr). Invert the matrix and calculate its determinant. ; Definition at line 979 of file TMatrixTSym.cxx. ◆ IsA(). template<class Element > . TClass * TMatrixTSym< Element >::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TMatrixTBase< Element >.; Definition at line 180 of file TMatrixTSym.h. ◆ IsSymmetric(). template<class Element > . Bool_t TMatrixTSym< Element >::IsSymmetric ; (; ); const. inlineoverridevirtual . Check whether matrix is symmetric. ; Reimplemented from TMatrixTBase< Element >.; Definition at line 99 of file TMatrixTSym.h. ◆ Memcpy_m(). template<class Element > . Int_t TMatrixTSym< Element >::Memcpy_m ; (; Element * ; newp, . const Element * ; oldp, . Int_t ; copySize, . Int_t ; newSize, . Int_t ; oldS",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSym.html:37675,Security,access,access,37675,"ent > & ; source). Definition at line 1414 of file TMatrixTSym.cxx. ◆ operator=() [2/4]. template<class Element > . template<class Element2 > . TMatrixTSym< Element > & TMatrixTSym< Element >::operator= ; (; const TMatrixTSym< Element2 > & ; source). inline . Definition at line 148 of file TMatrixTSym.h. ◆ operator=() [3/4]. template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::operator= ; (; const TMatrixTSymLazy< Element > & ; source). Definition at line 1431 of file TMatrixTSym.cxx. ◆ operator=() [4/4]. template<class Element > . TMatrixTSym< Element > & TMatrixTSym< Element >::operator= ; (; Element ; val). Assign val to every element of the matrix. ; Definition at line 1450 of file TMatrixTSym.cxx. ◆ operator[]() [1/2]. template<class Element > . TMatrixTRow< Element > TMatrixTSym< Element >::operator[] ; (; Int_t ; rown). inline . Access row a_i where i=rown. ; NoteA concatenated call to [coln] allows to access element a_ij where i=rown and j=coln ; WarningModifying this row by the caller breaks the symmetry of the matrix if a_j is not modified accordingly. ; Definition at line 144 of file TMatrixTSym.h. ◆ operator[]() [2/2]. template<class Element > . const TMatrixTRow_const< Element > TMatrixTSym< Element >::operator[] ; (; Int_t ; rown); const. inline . Definition at line 143 of file TMatrixTSym.h. ◆ Plus(). template<class Element > . void TMatrixTSym< Element >::Plus ; (; const TMatrixTSym< Element > & ; a, . const TMatrixTSym< Element > & ; b . ). Symmetric matrix summation. Replace this matrix with C such that C = A + B. ; Definition at line 312 of file TMatrixTSym.cxx. ◆ Randomize(). template<class Element > . TMatrixTBase< Element > & TMatrixTSym< Element >::Randomize ; (; Element ; alpha, . Element ; beta, . Double_t & ; seed . ). overridevirtual . randomize matrix element values but keep matrix symmetric ; Reimplemented from TMatrixTBase< Element >.; Definition at line 1608 of file TMatrixTSym.cxx. ◆ RandomizePD(). template<clas",MatchSource.WIKI,doc/master/classTMatrixTSym.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:2700,Availability,error,error,2700,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:2789,Availability,error,error,2789,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:2944,Availability,error,error,2944,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:3241,Availability,error,error,3241,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:7805,Availability,error,error,7805," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:2706,Integrability,message,message,2706,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:3247,Integrability,message,message,3247,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:4449,Integrability,message,message,4449,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:7811,Integrability,message,message,7811," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:8184,Integrability,message,message,8184," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Prote",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:939,Modifiability,inherit,inherited,939,". ROOT: TMatrixTSymLazy< Element > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TMatrixTSymLazy< Element > Class Template Referenceabstract. ; template<class Element>; class TMatrixTSymLazy< Element >; Definition at line 86 of file TMatrixTLazy.h. Public Member Functions;  TMatrixTSymLazy ();  ;  TMatrixTSymLazy (Int_t nrows);  ;  TMatrixTSymLazy (Int_t row_lwb, Int_t row_upb);  ;  ~TMatrixTSymLazy () override;  ; Int_t GetRowLwb () const;  ; Int_t GetRowUpb () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  ",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:2336,Modifiability,inherit,inheritance,2336,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:4547,Modifiability,inherit,inherits,4547,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:4664,Modifiability,inherit,inherits,4664,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:8685,Modifiability,inherit,inherited,8685,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMatrixTSymLazy (const TMatrixTSymLazy< Element > &);  ; void operator= (const TMatrixTSymLazy< Element > &);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fRowLwb;  ; Int_t fRowUpb;  . Private Member Functions; virtual void FillIn (TMatrixTSym< Element > &m) const =0;  . Friends; class TMatrixTBase",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:9341,Modifiability,inherit,inherited,9341,"tual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMatrixTSymLazy (const TMatrixTSymLazy< Element > &);  ; void operator= (const TMatrixTSymLazy< Element > &);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fRowLwb;  ; Int_t fRowUpb;  . Private Member Functions; virtual void FillIn (TMatrixTSym< Element > &m) const =0;  . Friends; class TMatrixTBase< Element >;  ; class TMatrixTSym< Element >;  ; class TVectorT< Element >;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   ",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:9819,Modifiability,inherit,inherited,9819,"GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMatrixTSymLazy (const TMatrixTSymLazy< Element > &);  ; void operator= (const TMatrixTSymLazy< Element > &);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fRowLwb;  ; Int_t fRowUpb;  . Private Member Functions; virtual void FillIn (TMatrixTSym< Element > &m) const =0;  . Friends; class TMatrixTBase< Element >;  ; class TMatrixTSym< Element >;  ; class TVectorT< Element >;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMatrixTLazy.h>. Inheritance diagram for TMatrixTSymLazy< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMatrixTSymLazy() [1/4]. template<class Element > . TMatrixTSymLazy< Element >::TMatrixTSymLazy ; (; const TMatrixTSymLazy< Element >",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:10460,Modifiability,inherit,inherited,10460,"(protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fRowLwb;  ; Int_t fRowUpb;  . Private Member Functions; virtual void FillIn (TMatrixTSym< Element > &m) const =0;  . Friends; class TMatrixTBase< Element >;  ; class TMatrixTSym< Element >;  ; class TVectorT< Element >;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMatrixTLazy.h>. Inheritance diagram for TMatrixTSymLazy< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMatrixTSymLazy() [1/4]. template<class Element > . TMatrixTSymLazy< Element >::TMatrixTSymLazy ; (; const TMatrixTSymLazy< Element > & ; ). inlineprotected . Definition at line 96 of file TMatrixTLazy.h. ◆ TMatrixTSymLazy() [2/4]. template<class Element > . TMatrixTSymLazy< Element >::TMatrixTSymLazy ; (; ). inline . Definition at line 103 of file TMatrixTLazy.h. ◆ TMatrixTSymLazy() [3/4]. template<class Element > . TMatrixTSymLazy< Element >::TMatrixTSymLazy ; (; Int_t ; nrows). inline . Definition at line 104 of file TMatrixTLazy.h. ◆ TMatrixTSymLazy() [4/4]. template<class Element > . TMatrixTSymLazy< Element >::TMatrixTSymLazy ; (; Int_t ; row_lwb, . Int_t ; row_upb . ). inline . Definition at line 106 of file TMatrixTL",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMatrixTSymLazy.html:4178,Security,hash,hash,4178," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTMatrixTSymLazy.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html
https://root.cern/doc/master/classTMehrotraSolver.html:5439,Availability,error,error,5439,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:5528,Availability,error,error,5528,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:5683,Availability,error,error,5683,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:5980,Availability,error,error,5980,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:10544,Availability,error,error,10544," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQpSolverBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ve",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:947,Energy Efficiency,monitor,monitor,947,". ROOT: TMehrotraSolver Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TMehrotraSolver Class Reference. ; Derived class of TQpSolverBase implementing the original Mehrotra predictor-corrector algorithm. ; Definition at line 55 of file TMehrotraSolver.h. Public Member Functions;  TMehrotraSolver ();  Default constructor. ;  ;  TMehrotraSolver (const TMehrotraSolver &another);  Copy constructor. ;  ;  TMehrotraSolver (TQpProbBase *of, TQpDataBase *prob, Int_t verbose=0);  Constructor. ;  ;  ~TMehrotraSolver () override;  Deconstructor. ;  ; void DefMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t status_code, Int_t level) override;  Print information about the optimization process and monitor the convergence status of thye algorithm. ;  ; TClass * IsA () const override;  ; TMehrotraSolver & operator= (const TMehrotraSolver &source);  Assignment operator. ;  ; Int_t Solve (TQpDataBase *prob, TQpVar *iterate, TQpResidual *resid) override;  Solve the quadratic programming problem as formulated through prob, store the final solution in iterate->fX . ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TQpSolverBase;  TQpSolverBase ();  Default constructor. ;  ;  TQpSolverBase (const TQpSolverBase &another);  Copy constructor. ;  ;  ~TQpSolverBase () override;  Deconstructor. ;  ; Double_t DataNorm ();  ; virtual void DefStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Default starting point. ;  ; virtual Int_t DefStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Default status method. ;  ",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:15411,Energy Efficiency,monitor,monitor,15411,"structor. ; Definition at line 213 of file TMehrotraSolver.cxx. Member Function Documentation. ◆ Class(). static TClass * TMehrotraSolver::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMehrotraSolver::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMehrotraSolver::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 85 of file TMehrotraSolver.h. ◆ DeclFileName(). static const char * TMehrotraSolver::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 85 of file TMehrotraSolver.h. ◆ DefMonitor(). void TMehrotraSolver::DefMonitor ; (; TQpDataBase * ; data, . TQpVar * ; vars, . TQpResidual * ; resids, . Double_t ; alpha, . Double_t ; sigma, . Int_t ; i, . Double_t ; mu, . Int_t ; status_code, . Int_t ; level . ). overridevirtual . Print information about the optimization process and monitor the convergence status of thye algorithm. ; Implements TQpSolverBase.; Definition at line 171 of file TMehrotraSolver.cxx. ◆ IsA(). TClass * TMehrotraSolver::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 85 of file TMehrotraSolver.h. ◆ operator=(). TMehrotraSolver & TMehrotraSolver::operator= ; (; const TMehrotraSolver & ; source). Assignment operator. ; Definition at line 222 of file TMehrotraSolver.cxx. ◆ Solve(). Int_t TMehrotraSolver::Solve ; (; TQpDataBase * ; prob, . TQpVar * ; iterate, . TQpResidual * ; resid . ). overridevirtual . Solve the quadratic programming problem as formulated through prob, store the final solution in iterate->fX . ; Monitor the residuals during the iterations through resid . The status is returned as defined in TQpSolverBase::ETerminationCode . ; Implements TQpSolverBase.; Definition at line 97 of file TMehrotraSolver.cxx. ◆ Streamer(). void TMehrotraSolver:",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:5445,Integrability,message,message,5445,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:5986,Integrability,message,message,5986,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:7188,Integrability,message,message,7188,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:10550,Integrability,message,message,10550," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQpSolverBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ve",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:10923,Integrability,message,message,10923," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQpSolverBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:1487,Modifiability,inherit,inherited,1487,"er ();  Default constructor. ;  ;  TMehrotraSolver (const TMehrotraSolver &another);  Copy constructor. ;  ;  TMehrotraSolver (TQpProbBase *of, TQpDataBase *prob, Int_t verbose=0);  Constructor. ;  ;  ~TMehrotraSolver () override;  Deconstructor. ;  ; void DefMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t status_code, Int_t level) override;  Print information about the optimization process and monitor the convergence status of thye algorithm. ;  ; TClass * IsA () const override;  ; TMehrotraSolver & operator= (const TMehrotraSolver &source);  Assignment operator. ;  ; Int_t Solve (TQpDataBase *prob, TQpVar *iterate, TQpResidual *resid) override;  Solve the quadratic programming problem as formulated through prob, store the final solution in iterate->fX . ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TQpSolverBase;  TQpSolverBase ();  Default constructor. ;  ;  TQpSolverBase (const TQpSolverBase &another);  Copy constructor. ;  ;  ~TQpSolverBase () override;  Deconstructor. ;  ; Double_t DataNorm ();  ; virtual void DefStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Default starting point. ;  ; virtual Int_t DefStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Default status method. ;  ; virtual void DoMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level);  Monitor progress / convergence aat each interior-point iteration. ;  ; virtual Int_t DoStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Tests for termination. ;  ; virtual void DumbStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResi",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:2566,Modifiability,variab,variables,2566,"Base ();  Default constructor. ;  ;  TQpSolverBase (const TQpSolverBase &another);  Copy constructor. ;  ;  ~TQpSolverBase () override;  Deconstructor. ;  ; Double_t DataNorm ();  ; virtual void DefStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Default starting point. ;  ; virtual Int_t DefStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Default status method. ;  ; virtual void DoMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level);  Monitor progress / convergence aat each interior-point iteration. ;  ; virtual Int_t DoStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Tests for termination. ;  ; virtual void DumbStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Alternative starting point heuristic: sets the ""complementary"" variables to a large positive value (based on the norm of the problem data) and the remaining variables to zero . ;  ; virtual Double_t FinalStepLength (TQpVar *iterate, TQpVar *step);  Implements a version of Mehrotra starting point heuristic, modified to ensure identical steps in the primal and dual variables. ;  ; Double_t GetArTol ();  ; TQpLinSolverBase * GetLinearSystem ();  ; Double_t GetMuTol ();  ; TClass * IsA () const override;  ; TQpSolverBase & operator= (const TQpSolverBase &source);  Assignment operator. ;  ; void SetArTol (Double_t ar);  ; void SetMuTol (Double_t m);  ; virtual void Start (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Implements a default starting-point heuristic. ;  ; virtual void SteveStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Starting point algorithm according to Stephen Wright. ;  ; void Streamer (T",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:2660,Modifiability,variab,variables,2660,"Base ();  Default constructor. ;  ;  TQpSolverBase (const TQpSolverBase &another);  Copy constructor. ;  ;  ~TQpSolverBase () override;  Deconstructor. ;  ; Double_t DataNorm ();  ; virtual void DefStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Default starting point. ;  ; virtual Int_t DefStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Default status method. ;  ; virtual void DoMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level);  Monitor progress / convergence aat each interior-point iteration. ;  ; virtual Int_t DoStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Tests for termination. ;  ; virtual void DumbStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Alternative starting point heuristic: sets the ""complementary"" variables to a large positive value (based on the norm of the problem data) and the remaining variables to zero . ;  ; virtual Double_t FinalStepLength (TQpVar *iterate, TQpVar *step);  Implements a version of Mehrotra starting point heuristic, modified to ensure identical steps in the primal and dual variables. ;  ; Double_t GetArTol ();  ; TQpLinSolverBase * GetLinearSystem ();  ; Double_t GetMuTol ();  ; TClass * IsA () const override;  ; TQpSolverBase & operator= (const TQpSolverBase &source);  Assignment operator. ;  ; void SetArTol (Double_t ar);  ; void SetMuTol (Double_t m);  ; virtual void Start (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Implements a default starting-point heuristic. ;  ; virtual void SteveStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Starting point algorithm according to Stephen Wright. ;  ; void Streamer (T",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:2869,Modifiability,variab,variables,2869,"ataBase *prob, TQpResidual *resid, TQpVar *step);  Default starting point. ;  ; virtual Int_t DefStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Default status method. ;  ; virtual void DoMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level);  Monitor progress / convergence aat each interior-point iteration. ;  ; virtual Int_t DoStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Tests for termination. ;  ; virtual void DumbStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Alternative starting point heuristic: sets the ""complementary"" variables to a large positive value (based on the norm of the problem data) and the remaining variables to zero . ;  ; virtual Double_t FinalStepLength (TQpVar *iterate, TQpVar *step);  Implements a version of Mehrotra starting point heuristic, modified to ensure identical steps in the primal and dual variables. ;  ; Double_t GetArTol ();  ; TQpLinSolverBase * GetLinearSystem ();  ; Double_t GetMuTol ();  ; TClass * IsA () const override;  ; TQpSolverBase & operator= (const TQpSolverBase &source);  Assignment operator. ;  ; void SetArTol (Double_t ar);  ; void SetMuTol (Double_t m);  ; virtual void Start (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Implements a default starting-point heuristic. ;  ; virtual void SteveStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Starting point algorithm according to Stephen Wright. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TO",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:3678,Modifiability,inherit,inherited,3678," variables to zero . ;  ; virtual Double_t FinalStepLength (TQpVar *iterate, TQpVar *step);  Implements a version of Mehrotra starting point heuristic, modified to ensure identical steps in the primal and dual variables. ;  ; Double_t GetArTol ();  ; TQpLinSolverBase * GetLinearSystem ();  ; Double_t GetMuTol ();  ; TClass * IsA () const override;  ; TQpSolverBase & operator= (const TQpSolverBase &source);  Assignment operator. ;  ; void SetArTol (Double_t ar);  ; void SetMuTol (Double_t m);  ; virtual void Start (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Implements a default starting-point heuristic. ;  ; virtual void SteveStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Starting point algorithm according to Stephen Wright. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:5075,Modifiability,inherit,inheritance,5075,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:7286,Modifiability,inherit,inherits,7286,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:7403,Modifiability,inherit,inherits,7403,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:11424,Modifiability,inherit,inherited,11424," error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQpSolverBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TQpProbBase * fFactory;  ; Int_t fPrintlevel;  ; TQpVar * fStep;  ; Double_t fTsig;  ;  Protected Attributes inherited from TQpSolverBase; Double_t fArtol;  ; Double_t fDnorm;  ; Double_t fGamma_a;  ; Double_t fGamma_f;  ; Int_t fMaxit;  ; Double_t * fMu_history;  ; Double_t fMutol;  ; Double_t fPhi;  ; Double_t * fPhi_history;  ; Double_t * fPhi_min_history;  ; Double_t * fRnorm_history;  ;",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:11641,Modifiability,inherit,inherited,11641," error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQpSolverBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TQpProbBase * fFactory;  ; Int_t fPrintlevel;  ; TQpVar * fStep;  ; Double_t fTsig;  ;  Protected Attributes inherited from TQpSolverBase; Double_t fArtol;  ; Double_t fDnorm;  ; Double_t fGamma_a;  ; Double_t fGamma_f;  ; Int_t fMaxit;  ; Double_t * fMu_history;  ; Double_t fMutol;  ; Double_t fPhi;  ; Double_t * fPhi_history;  ; Double_t * fPhi_min_history;  ; Double_t * fRnorm_history;  ;",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:12258,Modifiability,inherit,inherited,12258,"  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQpSolverBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TQpProbBase * fFactory;  ; Int_t fPrintlevel;  ; TQpVar * fStep;  ; Double_t fTsig;  ;  Protected Attributes inherited from TQpSolverBase; Double_t fArtol;  ; Double_t fDnorm;  ; Double_t fGamma_a;  ; Double_t fGamma_f;  ; Int_t fMaxit;  ; Double_t * fMu_history;  ; Double_t fMutol;  ; Double_t fPhi;  ; Double_t * fPhi_history;  ; Double_t * fPhi_min_history;  ; Double_t * fRnorm_history;  ; TQpLinSolverBase * fSys;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TQpSolverBase; Int_t fIter;  ;  Protected Types inherited from TObject; enu",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:12616,Modifiability,inherit,inherited,12616," * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TQpProbBase * fFactory;  ; Int_t fPrintlevel;  ; TQpVar * fStep;  ; Double_t fTsig;  ;  Protected Attributes inherited from TQpSolverBase; Double_t fArtol;  ; Double_t fDnorm;  ; Double_t fGamma_a;  ; Double_t fGamma_f;  ; Int_t fMaxit;  ; Double_t * fMu_history;  ; Double_t fMutol;  ; Double_t fPhi;  ; Double_t * fPhi_history;  ; Double_t * fPhi_min_history;  ; Double_t * fRnorm_history;  ; TQpLinSolverBase * fSys;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TQpSolverBase; Int_t fIter;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMehrotraSolver.h>. Inheritance diagram for TMehrotraSolver:. Thi",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:13259,Modifiability,inherit,inherited,13259,"history;  ; Double_t fMutol;  ; Double_t fPhi;  ; Double_t * fPhi_history;  ; Double_t * fPhi_min_history;  ; Double_t * fRnorm_history;  ; TQpLinSolverBase * fSys;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TQpSolverBase; Int_t fIter;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMehrotraSolver.h>. Inheritance diagram for TMehrotraSolver:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMehrotraSolver() [1/3]. TMehrotraSolver::TMehrotraSolver ; (; ). Default constructor. ; Definition at line 61 of file TMehrotraSolver.cxx. ◆ TMehrotraSolver() [2/3]. TMehrotraSolver::TMehrotraSolver ; (; TQpProbBase * ; of, . TQpDataBase * ; prob, . Int_t ; verbose = 0 . ). Constructor. ; Definition at line 73 of file TMehrotraSolver.cxx. ◆ TMehrotraSolver() [3/3]. TMehrotraSolver::TMehrotraSolver ; (; const TMehrotraSolver & ; another). Copy constructor. ; Definition at line 86 of file TMehrotraSolver.cxx. ◆ ~TMehrotraSolver(). TMehrotraSolver::~TMehrotraSolver ; (; ). override . D",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:13322,Modifiability,inherit,inherited,13322,"history;  ; Double_t fMutol;  ; Double_t fPhi;  ; Double_t * fPhi_history;  ; Double_t * fPhi_min_history;  ; Double_t * fRnorm_history;  ; TQpLinSolverBase * fSys;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TQpSolverBase; Int_t fIter;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMehrotraSolver.h>. Inheritance diagram for TMehrotraSolver:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMehrotraSolver() [1/3]. TMehrotraSolver::TMehrotraSolver ; (; ). Default constructor. ; Definition at line 61 of file TMehrotraSolver.cxx. ◆ TMehrotraSolver() [2/3]. TMehrotraSolver::TMehrotraSolver ; (; TQpProbBase * ; of, . TQpDataBase * ; prob, . Int_t ; verbose = 0 . ). Constructor. ; Definition at line 73 of file TMehrotraSolver.cxx. ◆ TMehrotraSolver() [3/3]. TMehrotraSolver::TMehrotraSolver ; (; const TMehrotraSolver & ; another). Copy constructor. ; Definition at line 86 of file TMehrotraSolver.cxx. ◆ ~TMehrotraSolver(). TMehrotraSolver::~TMehrotraSolver ; (; ). override . D",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:13421,Modifiability,inherit,inherited,13421,"history;  ; Double_t fMutol;  ; Double_t fPhi;  ; Double_t * fPhi_history;  ; Double_t * fPhi_min_history;  ; Double_t * fRnorm_history;  ; TQpLinSolverBase * fSys;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TQpSolverBase; Int_t fIter;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMehrotraSolver.h>. Inheritance diagram for TMehrotraSolver:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMehrotraSolver() [1/3]. TMehrotraSolver::TMehrotraSolver ; (; ). Default constructor. ; Definition at line 61 of file TMehrotraSolver.cxx. ◆ TMehrotraSolver() [2/3]. TMehrotraSolver::TMehrotraSolver ; (; TQpProbBase * ; of, . TQpDataBase * ; prob, . Int_t ; verbose = 0 . ). Constructor. ; Definition at line 73 of file TMehrotraSolver.cxx. ◆ TMehrotraSolver() [3/3]. TMehrotraSolver::TMehrotraSolver ; (; const TMehrotraSolver & ; another). Copy constructor. ; Definition at line 86 of file TMehrotraSolver.cxx. ◆ ~TMehrotraSolver(). TMehrotraSolver::~TMehrotraSolver ; (; ). override . D",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:922,Performance,optimiz,optimization,922,". ROOT: TMehrotraSolver Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TMehrotraSolver Class Reference. ; Derived class of TQpSolverBase implementing the original Mehrotra predictor-corrector algorithm. ; Definition at line 55 of file TMehrotraSolver.h. Public Member Functions;  TMehrotraSolver ();  Default constructor. ;  ;  TMehrotraSolver (const TMehrotraSolver &another);  Copy constructor. ;  ;  TMehrotraSolver (TQpProbBase *of, TQpDataBase *prob, Int_t verbose=0);  Constructor. ;  ;  ~TMehrotraSolver () override;  Deconstructor. ;  ; void DefMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t status_code, Int_t level) override;  Print information about the optimization process and monitor the convergence status of thye algorithm. ;  ; TClass * IsA () const override;  ; TMehrotraSolver & operator= (const TMehrotraSolver &source);  Assignment operator. ;  ; Int_t Solve (TQpDataBase *prob, TQpVar *iterate, TQpResidual *resid) override;  Solve the quadratic programming problem as formulated through prob, store the final solution in iterate->fX . ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TQpSolverBase;  TQpSolverBase ();  Default constructor. ;  ;  TQpSolverBase (const TQpSolverBase &another);  Copy constructor. ;  ;  ~TQpSolverBase () override;  Deconstructor. ;  ; Double_t DataNorm ();  ; virtual void DefStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Default starting point. ;  ; virtual Int_t DefStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Default status method. ;  ",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:15386,Performance,optimiz,optimization,15386,"structor. ; Definition at line 213 of file TMehrotraSolver.cxx. Member Function Documentation. ◆ Class(). static TClass * TMehrotraSolver::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMehrotraSolver::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMehrotraSolver::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 85 of file TMehrotraSolver.h. ◆ DeclFileName(). static const char * TMehrotraSolver::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 85 of file TMehrotraSolver.h. ◆ DefMonitor(). void TMehrotraSolver::DefMonitor ; (; TQpDataBase * ; data, . TQpVar * ; vars, . TQpResidual * ; resids, . Double_t ; alpha, . Double_t ; sigma, . Int_t ; i, . Double_t ; mu, . Int_t ; status_code, . Int_t ; level . ). overridevirtual . Print information about the optimization process and monitor the convergence status of thye algorithm. ; Implements TQpSolverBase.; Definition at line 171 of file TMehrotraSolver.cxx. ◆ IsA(). TClass * TMehrotraSolver::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 85 of file TMehrotraSolver.h. ◆ operator=(). TMehrotraSolver & TMehrotraSolver::operator= ; (; const TMehrotraSolver & ; source). Assignment operator. ; Definition at line 222 of file TMehrotraSolver.cxx. ◆ Solve(). Int_t TMehrotraSolver::Solve ; (; TQpDataBase * ; prob, . TQpVar * ; iterate, . TQpResidual * ; resid . ). overridevirtual . Solve the quadratic programming problem as formulated through prob, store the final solution in iterate->fX . ; Monitor the residuals during the iterations through resid . The status is returned as defined in TQpSolverBase::ETerminationCode . ; Implements TQpSolverBase.; Definition at line 97 of file TMehrotraSolver.cxx. ◆ Streamer(). void TMehrotraSolver:",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:353,Safety,predict,predictor-corrector,353,". ROOT: TMehrotraSolver Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TMehrotraSolver Class Reference. ; Derived class of TQpSolverBase implementing the original Mehrotra predictor-corrector algorithm. ; Definition at line 55 of file TMehrotraSolver.h. Public Member Functions;  TMehrotraSolver ();  Default constructor. ;  ;  TMehrotraSolver (const TMehrotraSolver &another);  Copy constructor. ;  ;  TMehrotraSolver (TQpProbBase *of, TQpDataBase *prob, Int_t verbose=0);  Constructor. ;  ;  ~TMehrotraSolver () override;  Deconstructor. ;  ; void DefMonitor (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t status_code, Int_t level) override;  Print information about the optimization process and monitor the convergence status of thye algorithm. ;  ; TClass * IsA () const override;  ; TMehrotraSolver & operator= (const TMehrotraSolver &source);  Assignment operator. ;  ; Int_t Solve (TQpDataBase *prob, TQpVar *iterate, TQpResidual *resid) override;  Solve the quadratic programming problem as formulated through prob, store the final solution in iterate->fX . ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TQpSolverBase;  TQpSolverBase ();  Default constructor. ;  ;  TQpSolverBase (const TQpSolverBase &another);  Copy constructor. ;  ;  ~TQpSolverBase () override;  Deconstructor. ;  ; Double_t DataNorm ();  ; virtual void DefStart (TQpProbBase *formulation, TQpVar *iterate, TQpDataBase *prob, TQpResidual *resid, TQpVar *step);  Default starting point. ;  ; virtual Int_t DefStatus (TQpDataBase *data, TQpVar *vars, TQpResidual *resids, Int_t i, Double_t mu, Int_t level);  Default status method. ;  ",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMehrotraSolver.html:6917,Security,hash,hash,6917," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTMehrotraSolver.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMehrotraSolver.html
https://root.cern/doc/master/classTMemberInspector.html:403,Security,access,accessing,403,". ROOT: TMemberInspector Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMemberInspector Class ReferenceCore ROOT classes » Base ROOT classes. ; Abstract base class for accessing the data-members of a class. ; Classes derived from this class can be given as argument to the ShowMembers() methods of ROOT classes. This feature facilitates the writing of class browsers and inspectors. ; Definition at line 31 of file TMemberInspector.h. Classes; class  TParentBuf;  . Public Types; enum  EObjectPointerState { kUnset; , kNoObjectGiven; , kValidObjectGiven; };  . Public Member Functions;  TMemberInspector ();  ; virtual ~TMemberInspector ();  ; void AddToParent (const char *name);  ; void GenericShowMembers (const char *topClassName, const void *obj, Bool_t transientMember);  ; EObjectPointerState GetObjectValidity () const;  ; const char * GetParent () const;  ; Ssiz_t GetParentLen () const;  ; virtual void Inspect (TClass *cl, const char *parent, const char *name, const void *addr);  ; virtual void Inspect (TClass *cl, const char *parent, const char *name, const void *addr, Bool_t);  ; void InspectMember (const char *topclassname, const void *pobj, const char *name, Bool_t transient);  ; template<class T > ; void InspectMember (const T &obj, const char *name, Bool_t isTransient);  ; void InspectMember (const TObject &obj, const char *name, Bool_t isTransient);  ; void InspectMember (TClass *cl, const void *pobj, const char *name, Bool_t isTransient);  ; virtual TClass * IsA () const;  ; virtual Bool_t IsTreatingNonAccessibleTypes ();  ; void RemoveFromParent (Ssiz_t startingAt);  ; void SetObjectValidity (EObjectPointerState val);  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static P",MatchSource.WIKI,doc/master/classTMemberInspector.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemberInspector.html
https://root.cern/doc/master/classTMemFile.html:4268,Availability,alive,alive,4268,"eCompiledDefault, Long64_t defBlockSize=0LL);  Usual Constructor. ;  ;  TMemFile (const char *name, std::unique_ptr< TBufferFile > buffer);  Constructor to create a read-only TMemFile using an std::unique_ptr<TBufferFile> ;  ;  TMemFile (const TMemFile &orig);  Copying the content of the TMemFile into another TMemFile. ;  ;  ~TMemFile () override;  Close and clean-up file. ;  ; virtual void CopyTo (TBuffer &tobuf) const;  Copy the binary representation of the TMemFile into the TBuffer tobuf. ;  ; virtual Long64_t CopyTo (void *to, Long64_t maxsize) const;  Copy the binary representation of the TMemFile into the memory area starting at 'to' and of length at most 'maxsize' returns the number of bytes actually copied. ;  ; Long64_t GetSize () const override;  Return the current size of the memory file. ;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; void ResetAfterMerge (TFileMergeInfo *) override;  Wipe all the data from the permanent buffer but keep, the in-memory object alive. ;  ; void ResetErrno () const override;  Simply calls TSystem::ResetErrno(). ;  ; void Streamer (TBuffer &) override;  Stream a TFile object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TFile;  TFile ();  File default Constructor. ;  ;  TFile (const char *fname, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Opens or creates a local ROOT file. ;  ;  ~TFile () override;  File destructor. ;  ; void Close (Option_t *option="""") override;  Close a file. ;  ; void Copy (TObject &) const override;  Copy this to obj. ;  ; virtual Bool_t Cp (const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy this file to the dst URL. ;  ; virtual TKey * CreateKey (TDirectory *mother, const TObject *obj, const char *name, Int_t bufsize);  Creates key for object and conver",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:9424,Availability,recover,recover,9424,"ption_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Int_t len);  Read a buffer from the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Read a buffer from the file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtua",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:22637,Availability,error,error,22637," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer)",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:22726,Availability,error,error,22726,"ave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:22881,Availability,error,error,22881,"hether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, ",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:23178,Availability,error,error,23178,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ; ",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:26671,Availability,error,error,26671," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t C",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:33111,Availability,alive,alive,33111,"bjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum class  EMode { kCreate; , kRecreate; , kUpdate; , kRead; };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; Bool_t IsExternalData () const;  ; Long64_t MemRead (Int_t fd, void *buf, Long64_t len) const;  ; bool NeedsExistingFile (EMode mode) const;  ; bool NeedsToWrite (EMode mode) const;  ; TMemFile & operator= (const TMemFile &)=delete;  ; EMode ParseOption (Option_t *option);  Parse option strings and set fOption. ;  ; void ResetObjects (TDirectoryFile *, TFileMergeInfo *) const;  Wipe all the data from the permanent buffer but keep, the in-memory object alive. ;  ; Int_t SysClose (Int_t fd) override;  Close the mem file. ;  ; Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode) override;  Open a file in 'MemFile'. ;  ; Int_t SysRead (Int_t fd, void *buf, Int_t len) override;  Read specified number of bytes from current offset into the buffer. ;  ; Int_t SysReadImpl (Int_t fd, void *buf, Long64_t len);  Read specified number of bytes from current offset into the buffer. ;  ; Long64_t SysSeek (Int_t fd, Long64_t offset, Int_t whence) override;  Seek to a specified position in the file. ;  ; Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime) override;  Perform a stat on the file; see TFile::SysStat(). ;  ; Int_t SysSync (Int_t fd) override;  Sync remaining data to disk. ;  ; Int_t SysWrite (Int_t fd, const void *buf, Int_t len) override;  Write a buffer into the file. ;  ; Int_t SysWriteImpl (Int_t fd, const void *buf, Long64_",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:48650,Availability,alive,alive,48650,"le.h. ◆ MemRead(). Long64_t TMemFile::MemRead ; (; Int_t ; fd, . void * ; buf, . Long64_t ; len . ); const. protected . ◆ NeedsExistingFile(). bool TMemFile::NeedsExistingFile ; (; EMode ; mode); const. inlineprotected . Definition at line 83 of file TMemFile.h. ◆ NeedsToWrite(). bool TMemFile::NeedsToWrite ; (; EMode ; mode); const. inlineprotected . Definition at line 82 of file TMemFile.h. ◆ operator=(). TMemFile & TMemFile::operator= ; (; const TMemFile & ; ). protecteddelete . ◆ ParseOption(). TMemFile::EMode TMemFile::ParseOption ; (; Option_t * ; option). protected . Parse option strings and set fOption. ; Definition at line 88 of file TMemFile.cxx. ◆ Print(). void TMemFile::Print ; (; Option_t * ; option = """"); const. overridevirtual . Print all objects in the file. ; Reimplemented from TFile.; Definition at line 298 of file TMemFile.cxx. ◆ ResetAfterMerge(). void TMemFile::ResetAfterMerge ; (; TFileMergeInfo * ; info). overridevirtual . Wipe all the data from the permanent buffer but keep, the in-memory object alive. ; Reimplemented from TDirectoryFile.; Definition at line 320 of file TMemFile.cxx. ◆ ResetErrno(). void TMemFile::ResetErrno ; (; ); const. overridevirtual . Simply calls TSystem::ResetErrno(). ; Reimplemented from TFile.; Definition at line 688 of file TMemFile.cxx. ◆ ResetObjects(). void TMemFile::ResetObjects ; (; TDirectoryFile * ; directory, . TFileMergeInfo * ; info . ); const. protected . Wipe all the data from the permanent buffer but keep, the in-memory object alive. ; Definition at line 387 of file TMemFile.cxx. ◆ Streamer(). void TMemFile::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a TFile object. ; Reimplemented from TFile.; Reimplemented in TParallelMergingFile. ◆ StreamerNVirtual(). void TMemFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 109 of file TMemFile.h. ◆ SysClose(). Int_t TMemFile::SysClose ; (; Int_t ; fd). overrideprotectedvirtual . Close the mem file. ; Rei",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:49131,Availability,alive,alive,49131,"ete . ◆ ParseOption(). TMemFile::EMode TMemFile::ParseOption ; (; Option_t * ; option). protected . Parse option strings and set fOption. ; Definition at line 88 of file TMemFile.cxx. ◆ Print(). void TMemFile::Print ; (; Option_t * ; option = """"); const. overridevirtual . Print all objects in the file. ; Reimplemented from TFile.; Definition at line 298 of file TMemFile.cxx. ◆ ResetAfterMerge(). void TMemFile::ResetAfterMerge ; (; TFileMergeInfo * ; info). overridevirtual . Wipe all the data from the permanent buffer but keep, the in-memory object alive. ; Reimplemented from TDirectoryFile.; Definition at line 320 of file TMemFile.cxx. ◆ ResetErrno(). void TMemFile::ResetErrno ; (; ); const. overridevirtual . Simply calls TSystem::ResetErrno(). ; Reimplemented from TFile.; Definition at line 688 of file TMemFile.cxx. ◆ ResetObjects(). void TMemFile::ResetObjects ; (; TDirectoryFile * ; directory, . TFileMergeInfo * ; info . ); const. protected . Wipe all the data from the permanent buffer but keep, the in-memory object alive. ; Definition at line 387 of file TMemFile.cxx. ◆ Streamer(). void TMemFile::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a TFile object. ; Reimplemented from TFile.; Reimplemented in TParallelMergingFile. ◆ StreamerNVirtual(). void TMemFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 109 of file TMemFile.h. ◆ SysClose(). Int_t TMemFile::SysClose ; (; Int_t ; fd). overrideprotectedvirtual . Close the mem file. ; Reimplemented from TFile.; Definition at line 590 of file TMemFile.cxx. ◆ SysOpen(). Int_t TMemFile::SysOpen ; (; const char * ; pathname, . Int_t ; flags, . UInt_t ; mode . ). overrideprotectedvirtual . Open a file in 'MemFile'. ; Reimplemented from TFile.; Definition at line 573 of file TMemFile.cxx. ◆ SysRead(). Int_t TMemFile::SysRead ; (; Int_t ; fd, . void * ; buf, . Int_t ; len . ). overrideprotectedvirtual . Read specified number of bytes from current offset into the buff",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:44375,Energy Efficiency,allocate,allocated,44375,"ddress of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  . #include <TMemFile.h>. Inheritance diagram for TMemFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ExternalDataPtr_t. using TMemFile::ExternalDataPtr_t = std::shared_ptr<const std::vector<char> >. Definition at line 21 of file TMemFile.h. Member Enumeration Documentation. ◆ EMode. enum class TMemFile::EMode. strongprotected . EnumeratorkCreate ; kRecreate ; kUpdate ; kRead . Definition at line 75 of file TMemFile.h. Constructor & Destructor Documentation. ◆ TMemFile() [1/6]. TMemFile::TMemFile ; (; const char * ; path, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, . Long64_t ; defBlockSize = 0LL . ). Usual Constructor. ; The defBlockSize parameter defines the size of the blocks of memory allocated when expanding the underlying TMemFileBuffer. If the value 0 is passed, the default block size, fgDefaultBlockSize, is adopted. See the TFile constructor for details. ; Definition at line 162 of file TMemFile.cxx. ◆ TMemFile() [2/6]. TMemFile::TMemFile ; (; const char * ; name, . char * ; buffer, . Long64_t ; size, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, . Long64_t ; defBlockSize = 0LL . ). Usual Constructor. See the TFile constructor for details. Copy data from buffer. ; Definition at line 170 of file TMemFile.cxx. ◆ TMemFile() [3/6]. TMemFile::TMemFile ; (; const char * ; name, . ExternalDataPtr_t ; data . ). Constructor to create a TMemFile re-using external storage. ; Definition at line 133 of file TMemFile.cxx. ◆ TMemFile() [4/6]. TMemFile::TMemFile ; (; const char * ; name, . const ZeroCopyView_t & ; datarange . ). Constructor to create a TMemFile re-using external ",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:22643,Integrability,message,message,22643," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer)",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:23184,Integrability,message,message,23184,"putes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ; ",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:23932,Integrability,message,message,23932,"ct with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be o",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:26677,Integrability,message,message,26677," operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t C",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:27050,Integrability,message,message,27050," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Cp (const char *src, const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy file from src to dst URL. ;  ; static TFile *& CurrentFile ();  Return the current ROOT file if any. ;  ; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get status of the async open request related to 'name'. ; ",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:29244,Integrability,protocol,protocol,29244,"const char * GetCacheFileDir ();  Get the directory where to locally stage/cache remote files. ;  ; static const TUrl * GetEndpointUrl (const char *name);  Get final URL for file being opened asynchronously. ;  ; static Long64_t GetFileBytesRead ();  Static function returning the total number of bytes read from all files. ;  ; static Long64_t GetFileBytesWritten ();  Static function returning the total number of bytes written to all files. ;  ; static Long64_t GetFileCounter ();  ; static Int_t GetFileReadCalls ();  Static function returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void ",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:749,Modifiability,inherit,inherited,749,". ROOT: TMemFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; TMemFile Class ReferenceInput/Output Library. ; A TMemFile is like a normal TFile except that it reads and writes only from memory. ; Definition at line 19 of file TMemFile.h. Classes; struct  TMemBlock;  ; struct  ZeroCopyView_t;  A read-only memory range which we do not control. More...;  . Public Types; using ExternalDataPtr_t = std::shared_ptr< const std::vector< char > >;  ;  Public Types inherited from TFile; enum  { kStartBigFile = 2000000000; };  ; enum  EAsyncOpenStatus { kAOSNotAsync = -1; , kAOSFailure = 0; , kAOSInProgress = 1; , kAOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsi",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:1773,Modifiability,inherit,inherited,1773,"AOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMemFile (const char *name, char *buffer, Long64_t size, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Long64_t defBlockSize=0LL);  Usual Constructor. See the TFile constructor for details. Copy data from buffer. ;  ;  TMemFile (const char *name, const ZeroCopyView_t &datarange);  Constructor to crea",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:1879,Modifiability,inherit,inherited,1879,"AOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMemFile (const char *name, char *buffer, Long64_t size, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Long64_t defBlockSize=0LL);  Usual Constructor. See the TFile constructor for details. Copy data from buffer. ;  ;  TMemFile (const char *name, const ZeroCopyView_t &datarange);  Constructor to crea",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:4512,Modifiability,inherit,inherited,4512," TMemFile into another TMemFile. ;  ;  ~TMemFile () override;  Close and clean-up file. ;  ; virtual void CopyTo (TBuffer &tobuf) const;  Copy the binary representation of the TMemFile into the TBuffer tobuf. ;  ; virtual Long64_t CopyTo (void *to, Long64_t maxsize) const;  Copy the binary representation of the TMemFile into the memory area starting at 'to' and of length at most 'maxsize' returns the number of bytes actually copied. ;  ; Long64_t GetSize () const override;  Return the current size of the memory file. ;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  Print all objects in the file. ;  ; void ResetAfterMerge (TFileMergeInfo *) override;  Wipe all the data from the permanent buffer but keep, the in-memory object alive. ;  ; void ResetErrno () const override;  Simply calls TSystem::ResetErrno(). ;  ; void Streamer (TBuffer &) override;  Stream a TFile object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TFile;  TFile ();  File default Constructor. ;  ;  TFile (const char *fname, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Opens or creates a local ROOT file. ;  ;  ~TFile () override;  File destructor. ;  ; void Close (Option_t *option="""") override;  Close a file. ;  ; void Copy (TObject &) const override;  Copy this to obj. ;  ; virtual Bool_t Cp (const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy this file to the dst URL. ;  ; virtual TKey * CreateKey (TDirectory *mother, const TObject *obj, const char *name, Int_t bufsize);  Creates key for object and converts data to buffer. ;  ; virtual TKey * CreateKey (TDirectory *mother, const void *obj, const TClass *cl, const char *name, Int_t bufsize);  Creates key for object and converts data to buffer. ;  ; void Delete (const char *namecycle="""") override;  Delete object namecycle. ;  ; void Draw (O",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:11866,Modifiability,inherit,inherited,11866,"amerNVirtual_b);  ; void SumBuffer (Int_t bufsize);  Increment statistics for buffer sizes of objects in this file. ;  ; Int_t Write (const char *name=nullptr, Int_t opt=0, Int_t bufsiz=0) const override;  One can not save a const TDirectory object. ;  ; Int_t Write (const char *name=nullptr, Int_t opt=0, Int_t bufsiz=0) override;  Write memory objects to this file. ;  ; virtual Bool_t WriteBuffer (const char *buf, Int_t len);  Write a buffer to the file. ;  ; virtual void WriteFree ();  Write FREE linked list on the file. ;  ; virtual void WriteHeader ();  Write File Header. ;  ; virtual UShort_t WriteProcessID (TProcessID *pid);  Check if the ProcessID pidd is already in the file, if not, add it and return the index number in the local file list. ;  ; virtual void WriteStreamerInfo ();  Write the list of TStreamerInfo as a single object in this file The class Streamer description for all classes written to this file is saved. ;  ;  Public Member Functions inherited from TDirectoryFile;  TDirectoryFile ();  Default TDirectoryFile constructor. ;  ;  TDirectoryFile (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new TDirectoryFile. ;  ;  ~TDirectoryFile () override;  Destructor. ;  ; void Add (TObject *obj, Bool_t replace=kFALSE) override;  ; void Append (TObject *obj, Bool_t replace=kFALSE) override;  Append object to this directory. ;  ; Int_t AppendKey (TKey *key) override;  Insert key in the linked list of keys of this directory. ;  ; void Browse (TBrowser *b) override;  Browse the content of the directory. ;  ; void Build (TFile *motherFile=nullptr, TDirectory *motherDir=nullptr) override;  ; Bool_t cd () override;  Change current directory to ""this"" directory. ;  ; Bool_t cd (const char *path) override;  Change current directory the directory described by the path if given one. ;  ; TObject * CloneObject (const TObject *obj, Bool_t autoadd=kTRUE) override;  Make a clone of an object using the Streamer facilit",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:17501,Modifiability,inherit,inherited,17501,"d in the dictionary of the parent class and store the corresponding exec number into fBits. ;  ; void SetWritable (Bool_t writable=kTRUE) override;  Set the new value of fWritable recursively. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void WriteDirHeader () override;  Overwrite the Directory header record. ;  ; void WriteKeys () override;  Write Keys linked list on the file. ;  ; Int_t WriteObjectAny (const void *obj, const char *classname, const char *name, Option_t *option="""", Int_t bufsize=0) override;  Write object from pointer of class classname in this directory. ;  ; Int_t WriteObjectAny (const void *obj, const TClass *cl, const char *name, Option_t *option="""", Int_t bufsize=0) override;  Write object of class with dictionary cl in this directory. ;  ; Int_t WriteTObject (const TObject *obj, const char *name=nullptr, Option_t *option="""", Int_t bufsize=0) override;  Write object obj to this directory. ;  ;  Public Member Functions inherited from TDirectory;  TDirectory ();  Directory default constructor. ;  ;  TDirectory (const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr);  Create a new Directory. ;  ; virtual ~TDirectory ();  Destructor. ;  ; void Clear (Option_t *option="""") override;  Delete all objects from a Directory list. ;  ; virtual void DeleteAll (Option_t *option="""");  Delete all objects from memory. ;  ; TObject * FindObject (const char *name) const override;  Find object by name in the list of memory objects. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object in the list of memory objects. ;  ; template<class T > ; T * Get (const char *namecycle);  See documentation of TDirectoryFile::Get(const char *namecycle) ;  ; virtual TList * GetList () const;  ; TObject * GetMother () const;  ; TDirectory * GetMotherDir () const;  ; template<class T > ; void GetObject (const char *namecycle, T *&ptr);  Get an object with proper type checking. ;  ; virtual const char * G",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:19935,Modifiability,inherit,inherited,19935,"ecursively remove object from a Directory. ;  ; virtual TObject * Remove (TObject *);  Remove an object from the in-memory list. ;  ; virtual void SetMother (TObject *mother);  ; void SetName (const char *newname) override;  Set the name for directory If the directory name is changed after the directory was written once, ROOT currently would NOT change the name of correspondent key in the mother directory. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; template<typename T > ; std::enable_if_t<!std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ; template<typename T > ; std::enable_if_t< std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:21435,Modifiability,inherit,inherited,21435," *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:22273,Modifiability,inherit,inheritance,22273,"amer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics sys",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:24030,Modifiability,inherit,inherits,24030,"Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op).",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:24147,Modifiability,inherit,inherits,24147,"nst char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method ",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:27283,Modifiability,inherit,inherited,27283,"t);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Cp (const char *src, const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy file from src to dst URL. ;  ; static TFile *& CurrentFile ();  Return the current ROOT file if any. ;  ; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get status of the async open request related to 'name'. ;  ; static EAsyncOpenStatus GetAsyncOpenStatus (TFileOpenHandle *handle);  Get status of the async open request related to 'handle'. ;  ; static const char * GetCacheFileDir ();  Get the directory where to locally stage/cache remote files. ;  ; static cons",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:30516,Modifiability,inherit,inherited,30516,"l_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:30734,Modifiability,inherit,inherited,30734,"l_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:31567,Modifiability,inherit,inherited,31567,"AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum class  EMode { kCreate; , kRecreate; , kUpdate; , kRead; };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; Bool_t IsExternalData () const;  ; Long64_t MemRead (Int_t fd, void *buf, Long64_t len) const;  ; bool NeedsExistingFil",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:31777,Modifiability,inherit,inherited,31777,"AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum class  EMode { kCreate; , kRecreate; , kUpdate; , kRead; };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; Bool_t IsExternalData () const;  ; Long64_t MemRead (Int_t fd, void *buf, Long64_t len) const;  ; bool NeedsExistingFil",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:32365,Modifiability,inherit,inherited,32365,"st char *namecycle, char *name, Short_t &cycle, const size_t namesize=0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum class  EMode { kCreate; , kRecreate; , kUpdate; , kRead; };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; Bool_t IsExternalData () const;  ; Long64_t MemRead (Int_t fd, void *buf, Long64_t len) const;  ; bool NeedsExistingFile (EMode mode) const;  ; bool NeedsToWrite (EMode mode) const;  ; TMemFile & operator= (const TMemFile &)=delete;  ; EMode ParseOption (Option_t *option);  Parse option strings and set fOption. ;  ; void ResetObjects (TDirectoryFile *, TFileMergeInfo *) const;  Wipe all the data from the permanent buffer but keep, the in-memory object alive. ;  ; Int_t SysClose (Int_t fd) override;  Close the mem file. ;  ; Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode) override;  Open a file in 'MemFile'. ;  ; Int_t SysRead (Int_t fd, void *buf, Int_t len) override;  Read specified number of bytes from current offset",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:32556,Modifiability,inherit,inherited,32556,"om TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum class  EMode { kCreate; , kRecreate; , kUpdate; , kRead; };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; Bool_t IsExternalData () const;  ; Long64_t MemRead (Int_t fd, void *buf, Long64_t len) const;  ; bool NeedsExistingFile (EMode mode) const;  ; bool NeedsToWrite (EMode mode) const;  ; TMemFile & operator= (const TMemFile &)=delete;  ; EMode ParseOption (Option_t *option);  Parse option strings and set fOption. ;  ; void ResetObjects (TDirectoryFile *, TFileMergeInfo *) const;  Wipe all the data from the permanent buffer but keep, the in-memory object alive. ;  ; Int_t SysClose (Int_t fd) override;  Close the mem file. ;  ; Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode) override;  Open a file in 'MemFile'. ;  ; Int_t SysRead (Int_t fd, void *buf, Int_t len) override;  Read specified number of bytes from current offset into the buffer. ;  ; Int_t SysReadImpl (Int_t fd, void *buf, Long64_t len);  Read specified number of bytes from current offset into the buffer. ;  ; Long64_t SysSeek (Int_t fd, Lo",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:34114,Modifiability,inherit,inherited,34114,"s, UInt_t mode) override;  Open a file in 'MemFile'. ;  ; Int_t SysRead (Int_t fd, void *buf, Int_t len) override;  Read specified number of bytes from current offset into the buffer. ;  ; Int_t SysReadImpl (Int_t fd, void *buf, Long64_t len);  Read specified number of bytes from current offset into the buffer. ;  ; Long64_t SysSeek (Int_t fd, Long64_t offset, Int_t whence) override;  Seek to a specified position in the file. ;  ; Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime) override;  Perform a stat on the file; see TFile::SysStat(). ;  ; Int_t SysSync (Int_t fd) override;  Sync remaining data to disk. ;  ; Int_t SysWrite (Int_t fd, const void *buf, Int_t len) override;  Write a buffer into the file. ;  ; Int_t SysWriteImpl (Int_t fd, const void *buf, Long64_t len);  Write a buffer into the file. ;  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise direc",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:35116,Modifiability,inherit,inherited,35116,"ry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr); ",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:35506,Modifiability,inherit,inherited,35506,"l void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . ",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:36395,Modifiability,inherit,inherited,36395,"ted data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMemBlock fBlockList;  Collection of memory blocks of size fgDefaultBlockSize. ;  ; Long64_t fBlockOffset {0};  Seek offset within the block. ;  ; TMemBlock * fBlockSeek {nullptr};  Pointer to the block we seeked to. ;  ; Long64_t fDefaultBlockSize = fgDefaultBlockSize;  ; ExternalDataPtr_t fExternalData;  shared file data / content ;  ; Bool_t fIsOwnedByROOT {kFALSE};  if this is a C-style memory region ;  ; Long64_t fSize {0};  Total file size (sum of the size of the chunks) ;  ; Long64_t fSysOffset {0};  Seek offset in file. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:37161,Modifiability,inherit,inherited,37161,"ectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMemBlock fBlockList;  Collection of memory blocks of size fgDefaultBlockSize. ;  ; Long64_t fBlockOffset {0};  Seek offset within the block. ;  ; TMemBlock * fBlockSeek {nullptr};  Pointer to the block we seeked to. ;  ; Long64_t fDefaultBlockSize = fgDefaultBlockSize;  ; ExternalDataPtr_t fExternalData;  shared file data / content ;  ; Bool_t fIsOwnedByROOT {kFALSE};  if this is a C-style memory region ;  ; Long64_t fSize {0};  Total file size (sum of the size of the chunks) ;  ; Long64_t fSysOffset {0};  Seek offset in file. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStreamerInfo classes written to this file ;  ; Int_t fCompress {0};  Compression level and algorithm. ;  ; Int_t fD {-1};  File descriptor. ;  ; Long64_t fEND {0};  Last used byte in file. ;  ; TList * fFree {nullptr};  Free segments linked list table. ;  ; b",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:40199,Modifiability,inherit,inherited,40199,;  !Seek offset cache ;  ; TList * fOpenPhases {nullptr};  !Time info about open phases ;  ; TString fOption;  File options. ;  ; TObjArray * fProcessIDs {nullptr};  !Array of pointers to TProcessIDs ;  ; Int_t fReadCalls {0};  Number of read calls ( not counting the cache calls ) ;  ; TString fRealName;  Effective real file name (not original url) ;  ; Long64_t fSeekFree {0};  Location on disk of free segments structure. ;  ; Long64_t fSeekInfo {0};  Location on disk of StreamerInfo record. ;  ; Double_t fSum2Buffer {0};  Sum of squares of buffer sizes of objects written so far. ;  ; Double_t fSumBuffer {0};  Sum of buffer sizes of objects written so far. ;  ; Char_t fUnits {0};  Number of bytes for file pointers. ;  ; TUrl fUrl;  !URL of file ;  ; Int_t fVersion {0};  File format version. ;  ; std::mutex fWriteMutex;  !Lock for writing baskets / keys into the file. ;  ; Int_t fWritten {0};  Number of objects written so far. ;  ;  Protected Attributes inherited from TDirectoryFile; Int_t fBufferSize {0};  Default buffer size to create new TKeys. ;  ; TDatime fDatimeC;  Date and time when directory is created. ;  ; TDatime fDatimeM;  Date and time of last modification. ;  ; TFile * fFile {nullptr};  Pointer to current file in memory. ;  ; TList * fKeys {nullptr};  Pointer to keys list in memory. ;  ; Bool_t fModified {kFALSE};  True if directory has been modified. ;  ; Int_t fNbytesKeys {0};  Number of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vect,MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:41035,Modifiability,inherit,inherited,41035,Lock for writing baskets / keys into the file. ;  ; Int_t fWritten {0};  Number of objects written so far. ;  ;  Protected Attributes inherited from TDirectoryFile; Int_t fBufferSize {0};  Default buffer size to create new TKeys. ;  ; TDatime fDatimeC;  Date and time when directory is created. ;  ; TDatime fDatimeM;  Date and time of last modification. ;  ; TFile * fFile {nullptr};  Pointer to current file in memory. ;  ; TList * fKeys {nullptr};  Pointer to keys list in memory. ;  ; Bool_t fModified {kFALSE};  True if directory has been modified. ;  ; Int_t fNbytesKeys {0};  Number of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static constexpr Long64_t fgDefaultBlockSize = 2 * 1024 * 1024;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRU,MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:41491,Modifiability,inherit,inherited,41491," fKeys {nullptr};  Pointer to keys list in memory. ;  ; Bool_t fModified {kFALSE};  True if directory has been modified. ;  ; Int_t fNbytesKeys {0};  Number of bytes for the keys. ;  ; Int_t fNbytesName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static constexpr Long64_t fgDefaultBlockSize = 2 * 1024 * 1024;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = T",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:41676,Modifiability,inherit,inherited,41676,"esName {0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static constexpr Long64_t fgDefaultBlockSize = 2 * 1024 * 1024;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgR",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:43005,Modifiability,inherit,inherited,43005,"bjects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgReadCalls {0};  Number of bytes read from all TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . Additional Inherited Members;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  . #include <TMemFile.h>. Inheritance diagram for TMemFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ExternalDataPtr_t. using TMemFile::ExternalDataPtr_t = std::shared_ptr<const std::vector<char> >. Definition at line 21 of file TMemFile.h. Member Enumeration Documentation. ◆ EMode. enum class TMemFile::EMode. strongprotected . EnumeratorkCreate ;",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:43183,Modifiability,inherit,inherited,43183,"Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgReadCalls {0};  Number of bytes read from all TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . Additional Inherited Members;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  . #include <TMemFile.h>. Inheritance diagram for TMemFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ExternalDataPtr_t. using TMemFile::ExternalDataPtr_t = std::shared_ptr<const std::vector<char> >. Definition at line 21 of file TMemFile.h. Member Enumeration Documentation. ◆ EMode. enum class TMemFile::EMode. strongprotected . EnumeratorkCreate ; kRecreate ; kUpdate ; kRead . Definition at line 75 of file TMemFile.h. Constructor & Destructor Documentation. ◆ TMemFile() [1/6]. TMemFile::TMemFile ; (; const char * ; path, . Option_t * ; option = """", . const char * ; ftitle = """", . Int_t ; compress = ROOT::RComp",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:6381,Performance,cache,cache,6381,"Int_t bufsize);  Creates key for object and converts data to buffer. ;  ; void Delete (const char *namecycle="""") override;  Delete object namecycle. ;  ; void Draw (Option_t *option="""") override;  Fill Graphics Structure and Paint. ;  ; virtual void DrawMap (const char *keys=""*"", Option_t *option="""");  Draw map of objects in this file. ;  ; void FillBuffer (char *&buffer) override;  Encode file output buffer. ;  ; virtual void Flush ();  Synchronize a file's in-memory and on-disk states. ;  ; TArchiveFile * GetArchive () const;  ; Long64_t GetArchiveOffset () const;  ; Int_t GetBestBuffer () const;  Return the best buffer size of objects on this file. ;  ; virtual Long64_t GetBytesRead () const;  ; virtual Long64_t GetBytesReadExtra () const;  ; virtual Int_t GetBytesToPrefetch () const;  Max number of bytes to prefetch. ;  ; virtual Long64_t GetBytesWritten () const;  Return the total number of bytes written so far to the file. ;  ; TFileCacheRead * GetCacheRead (const TObject *tree=nullptr) const;  Return a pointer to the current read cache. ;  ; TFileCacheWrite * GetCacheWrite () const;  Return a pointer to the current write cache. ;  ; TArrayC * GetClassIndex () const;  ; Int_t GetCompressionAlgorithm () const;  ; Float_t GetCompressionFactor ();  Return the file compression factor. ;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Long64_t GetEND () const;  ; virtual const TUrl * GetEndpointUrl () const;  ; virtual Int_t GetErrno () const;  Method returning errno. ;  ; Int_t GetFd () const;  ; TList * GetListOfFree () const;  ; TObjArray * GetListOfProcessIDs () const;  ; virtual Int_t GetNbytesFree () const;  ; virtual Int_t GetNbytesInfo () const;  ; virtual TString GetNewUrl ();  ; virtual Int_t GetNfree () const;  ; virtual Int_t GetNProcessIDs () const;  ; Option_t * GetOption () const override;  ; virtual Int_t GetReadCalls () const;  ; Int_t GetRecordHeader (char *buf, Long64_t first, Int_t maxbytes, Int_t &nbyt",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:6474,Performance,cache,cache,6474,"cle="""") override;  Delete object namecycle. ;  ; void Draw (Option_t *option="""") override;  Fill Graphics Structure and Paint. ;  ; virtual void DrawMap (const char *keys=""*"", Option_t *option="""");  Draw map of objects in this file. ;  ; void FillBuffer (char *&buffer) override;  Encode file output buffer. ;  ; virtual void Flush ();  Synchronize a file's in-memory and on-disk states. ;  ; TArchiveFile * GetArchive () const;  ; Long64_t GetArchiveOffset () const;  ; Int_t GetBestBuffer () const;  Return the best buffer size of objects on this file. ;  ; virtual Long64_t GetBytesRead () const;  ; virtual Long64_t GetBytesReadExtra () const;  ; virtual Int_t GetBytesToPrefetch () const;  Max number of bytes to prefetch. ;  ; virtual Long64_t GetBytesWritten () const;  Return the total number of bytes written so far to the file. ;  ; TFileCacheRead * GetCacheRead (const TObject *tree=nullptr) const;  Return a pointer to the current read cache. ;  ; TFileCacheWrite * GetCacheWrite () const;  Return a pointer to the current write cache. ;  ; TArrayC * GetClassIndex () const;  ; Int_t GetCompressionAlgorithm () const;  ; Float_t GetCompressionFactor ();  Return the file compression factor. ;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Long64_t GetEND () const;  ; virtual const TUrl * GetEndpointUrl () const;  ; virtual Int_t GetErrno () const;  Method returning errno. ;  ; Int_t GetFd () const;  ; TList * GetListOfFree () const;  ; TObjArray * GetListOfProcessIDs () const;  ; virtual Int_t GetNbytesFree () const;  ; virtual Int_t GetNbytesInfo () const;  ; virtual TString GetNewUrl ();  ; virtual Int_t GetNfree () const;  ; virtual Int_t GetNProcessIDs () const;  ; Option_t * GetOption () const override;  ; virtual Int_t GetReadCalls () const;  ; Int_t GetRecordHeader (char *buf, Long64_t first, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header starting at a certain postion. ;  ; Lo",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:7603,Performance,cache,cached,7603,"ssionAlgorithm () const;  ; Float_t GetCompressionFactor ();  Return the file compression factor. ;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Long64_t GetEND () const;  ; virtual const TUrl * GetEndpointUrl () const;  ; virtual Int_t GetErrno () const;  Method returning errno. ;  ; Int_t GetFd () const;  ; TList * GetListOfFree () const;  ; TObjArray * GetListOfProcessIDs () const;  ; virtual Int_t GetNbytesFree () const;  ; virtual Int_t GetNbytesInfo () const;  ; virtual TString GetNewUrl ();  ; virtual Int_t GetNfree () const;  ; virtual Int_t GetNProcessIDs () const;  ; Option_t * GetOption () const override;  ; virtual Int_t GetReadCalls () const;  ; Int_t GetRecordHeader (char *buf, Long64_t first, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header starting at a certain postion. ;  ; Long64_t GetRelOffset () const;  ; virtual Long64_t GetSeekFree () const;  ; virtual Long64_t GetSeekInfo () const;  ; const TList * GetStreamerInfoCache ();  Returns the cached list of StreamerInfos used in this file. ;  ; virtual TList * GetStreamerInfoList () final;  Read the list of TStreamerInfo objects written to this file. ;  ; Int_t GetVersion () const;  ; virtual void IncrementProcessIDs ();  ; virtual Bool_t IsArchive () const;  ; Bool_t IsBinary () const;  ; virtual Bool_t IsOpen () const;  Returns kTRUE in case file is open and kFALSE if file is not open. ;  ; Bool_t IsRaw () const;  ; void ls (Option_t *option="""") const override;  List file contents. ;  ; virtual void MakeFree (Long64_t first, Long64_t last);  Mark unused bytes on the file. ;  ; virtual void MakeProject (const char *dirname, const char *classes=""*"", Option_t *option=""new"");  Generate source code necessary to access the objects stored in the file. ;  ; virtual void Map ();  ; virtual void Map (Option_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRU",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:9739,Performance,cache,cache,9739,"ad a buffer from the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Read a buffer from the file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ; ",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:9830,Performance,cache,cache,9830,"ad a buffer from the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Read a buffer from the file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ; ",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:9887,Performance,cache,cache,9887," file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ;  ; Int_t Sizeof () const override;  Return the size in bytes of the file header. ;  ; void StreamerNVirtual (TBuffer &Cl",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:9923,Performance,cache,cache,9923," file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; virtual void SetOption (Option_t *option="">"");  ; virtual void SetReadCalls (Int_t readcalls=0);  ; virtual void ShowStreamerInfo ();  Show the StreamerInfo of all classes written to this file. ;  ; Int_t Sizeof () const override;  Return the size in bytes of the file header. ;  ; void StreamerNVirtual (TBuffer &Cl",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:14729,Performance,perform,performed,14729,"ject with name. ;  ; template<class T > ; T * Get (const char *namecycle);  See documentation of TDirectoryFile::Get(const char *namecycle) ;  ; TObject * Get (const char *namecycle) override;  Return pointer to object identified by namecycle. ;  ; Int_t GetBufferSize () const override;  Return the buffer size to create new TKeys. ;  ; const TDatime & GetCreationDate () const;  ; TDirectory * GetDirectory (const char *apath, Bool_t printError=false, const char *funcname=""GetDirectory"") override;  Find a directory named ""apath"". ;  ; TFile * GetFile () const override;  ; TKey * GetKey (const char *name, Short_t cycle=9999) const override;  Return pointer to key with name,cycle. ;  ; TList * GetListOfKeys () const override;  ; const TDatime & GetModificationDate () const;  ; Int_t GetNbytesKeys () const override;  ; Int_t GetNkeys () const override;  ; void * GetObjectChecked (const char *namecycle, const char *classname) override;  See documentation of TDirectoryFile::GetObjectCheck(const char *namecycle, const TClass *cl) ;  ; void * GetObjectChecked (const char *namecycle, const TClass *cl) override;  Return pointer to object identified by namecycle if and only if the actual object is a type suitable to be stored as a pointer to a ""expectedClass"" If expectedClass is null, no check is performed. ;  ; void * GetObjectUnchecked (const char *namecycle) override;  Return pointer to object identified by namecycle. ;  ; Long64_t GetSeekDir () const override;  ; Long64_t GetSeekKeys () const override;  ; Long64_t GetSeekParent () const override;  ; Bool_t IsModified () const override;  ; Bool_t IsWritable () const override;  ; TDirectory * mkdir (const char *name, const char *title="""", Bool_t returnExistingDirectory=kFALSE) override;  Create a sub-directory ""a"" or a hierarchy of sub-directories ""a/b/c/..."". ;  ; TFile * OpenFile (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t neto",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:28261,Performance,cache,cache,28261,"ar * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Cp (const char *src, const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy file from src to dst URL. ;  ; static TFile *& CurrentFile ();  Return the current ROOT file if any. ;  ; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get status of the async open request related to 'name'. ;  ; static EAsyncOpenStatus GetAsyncOpenStatus (TFileOpenHandle *handle);  Get status of the async open request related to 'handle'. ;  ; static const char * GetCacheFileDir ();  Get the directory where to locally stage/cache remote files. ;  ; static const TUrl * GetEndpointUrl (const char *name);  Get final URL for file being opened asynchronously. ;  ; static Long64_t GetFileBytesRead ();  Static function returning the total number of bytes read from all files. ;  ; static Long64_t GetFileBytesWritten ();  Static function returning the total number of bytes written to all files. ;  ; static Long64_t GetFileCounter ();  ; static Int_t GetFileReadCalls ();  Static function returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:29676,Performance,cache,cacheDir,29676,"nction returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public M",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:29794,Performance,cache,cache,29794,"nction returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public M",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:30452,Performance,cache,cache,30452,"=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static std::atomic< TDirectory * > & CurrentDirectory ();  Return the current directory for the current thread. ;  ; static const char * DeclFileName ();  ; static void DecodeNameCycle (const char *namecy",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:34368,Performance,cache,cache,34368,"s, UInt_t mode) override;  Open a file in 'MemFile'. ;  ; Int_t SysRead (Int_t fd, void *buf, Int_t len) override;  Read specified number of bytes from current offset into the buffer. ;  ; Int_t SysReadImpl (Int_t fd, void *buf, Long64_t len);  Read specified number of bytes from current offset into the buffer. ;  ; Long64_t SysSeek (Int_t fd, Long64_t offset, Int_t whence) override;  Seek to a specified position in the file. ;  ; Int_t SysStat (Int_t fd, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime) override;  Perform a stat on the file; see TFile::SysStat(). ;  ; Int_t SysSync (Int_t fd) override;  Sync remaining data to disk. ;  ; Int_t SysWrite (Int_t fd, const void *buf, Int_t len) override;  Write a buffer into the file. ;  ; Int_t SysWriteImpl (Int_t fd, const void *buf, Long64_t len);  Write a buffer into the file. ;  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise direc",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:34990,Performance,cache,cache,34990,"e a buffer into the file. ;  ; Int_t SysWriteImpl (Int_t fd, const void *buf, Long64_t len);  Write a buffer into the file. ;  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for direct",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:35076,Performance,cache,cache,35076,"64_t len);  Write a buffer into the file. ;  ;  Protected Member Functions inherited from TFile; virtual Long64_t DirCreateEntry (TDirectory *);  ; virtual Int_t DirReadKeys (TDirectory *);  ; virtual void DirWriteHeader (TDirectory *);  ; virtual void DirWriteKeys (TDirectory *);  ; Bool_t FlushWriteCache ();  Flush the write cache if active. ;  ; virtual EAsyncOpenStatus GetAsyncOpenStatus ();  ; virtual InfoListRet GetStreamerInfoListImpl (bool lookupSICache);  See documentation of GetStreamerInfoList for more details. ;  ; virtual void Init (Bool_t create);  Initialize a TFile object. ;  ; Int_t MakeProjectParMake (const char *packname, const char *filename);  Create makefile at 'filemake' for PAR package 'pack'. ;  ; Int_t MakeProjectParProofInf (const char *packname, const char *proofinfdir);  Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'. ;  ; Int_t ReadBufferViaCache (char *buf, Int_t len);  Read buffer via cache. ;  ; Int_t WriteBufferViaCache (const char *buf, Int_t len);  Write buffer via cache. ;  ;  Protected Member Functions inherited from TDirectoryFile; void BuildDirectoryFile (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.) ;  ; void InitDirectoryFile (TClass *cl=nullptr);  Initialize the key associated with this directory (and the related data members. ;  ;  Protected Member Functions inherited from TDirectory;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TCo",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:37866,Performance,cache,cache,37866,"memory region ;  ; Long64_t fSize {0};  Total file size (sum of the size of the chunks) ;  ; Long64_t fSysOffset {0};  Seek offset in file. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStreamerInfo classes written to this file ;  ; Int_t fCompress {0};  Compression level and algorithm. ;  ; Int_t fD {-1};  File descriptor. ;  ; Long64_t fEND {0};  Last used byte in file. ;  ; TList * fFree {nullptr};  Free segments linked list table. ;  ; bool fGlobalRegistration = true;  ! if true, bypass use of global lists ;  ; TList * fInfoCache {nullptr};  !Cached list of the streamer infos in this file ;  ; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes ",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:37940,Performance,cache,cache,37940,"memory region ;  ; Long64_t fSize {0};  Total file size (sum of the size of the chunks) ;  ; Long64_t fSysOffset {0};  Seek offset in file. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStreamerInfo classes written to this file ;  ; Int_t fCompress {0};  Compression level and algorithm. ;  ; Int_t fD {-1};  File descriptor. ;  ; Long64_t fEND {0};  Last used byte in file. ;  ; TList * fFree {nullptr};  Free segments linked list table. ;  ; bool fGlobalRegistration = true;  ! if true, bypass use of global lists ;  ; TList * fInfoCache {nullptr};  !Cached list of the streamer infos in this file ;  ; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes ",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:38024,Performance,cache,cache,38024,"memory region ;  ; Long64_t fSize {0};  Total file size (sum of the size of the chunks) ;  ; Long64_t fSysOffset {0};  Seek offset in file. ;  ;  Protected Attributes inherited from TFile; TArchiveFile * fArchive {nullptr};  !Archive file from which we read this file ;  ; Long64_t fArchiveOffset {0};  !Offset at which file starts in archive ;  ; TFileOpenHandle * fAsyncHandle {nullptr};  !For proper automatic cleanup ;  ; EAsyncOpenStatus fAsyncOpenStatus {kAOSNotAsync};  !Status of an asynchronous open request ;  ; Long64_t fBEGIN {0};  First used byte in file. ;  ; Long64_t fBytesRead {0};  Number of bytes read from this file. ;  ; Long64_t fBytesReadExtra {0};  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Long64_t fBytesWrite {0};  Number of bytes written to this file. ;  ; TFileCacheRead * fCacheRead {nullptr};  !Pointer to the read cache (if any) ;  ; TMap * fCacheReadMap {nullptr};  !Pointer to the read cache (if any) ;  ; TFileCacheWrite * fCacheWrite {nullptr};  !Pointer to the write cache (if any) ;  ; TArrayC * fClassIndex {nullptr};  !Index of TStreamerInfo classes written to this file ;  ; Int_t fCompress {0};  Compression level and algorithm. ;  ; Int_t fD {-1};  File descriptor. ;  ; Long64_t fEND {0};  Last used byte in file. ;  ; TList * fFree {nullptr};  Free segments linked list table. ;  ; bool fGlobalRegistration = true;  ! if true, bypass use of global lists ;  ; TList * fInfoCache {nullptr};  !Cached list of the streamer infos in this file ;  ; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes ",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:39248,Performance,cache,cache,39248,"; TList * fFree {nullptr};  Free segments linked list table. ;  ; bool fGlobalRegistration = true;  ! if true, bypass use of global lists ;  ; TList * fInfoCache {nullptr};  !Cached list of the streamer infos in this file ;  ; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes for StreamerInfo record. ;  ; Bool_t fNoAnchorInName {kFALSE};  !True if we don't want to force the anchor to be appended to the file name ;  ; Int_t fNProcessIDs {0};  Number of TProcessID written to this file. ;  ; Long64_t fOffset {0};  !Seek offset cache ;  ; TList * fOpenPhases {nullptr};  !Time info about open phases ;  ; TString fOption;  File options. ;  ; TObjArray * fProcessIDs {nullptr};  !Array of pointers to TProcessIDs ;  ; Int_t fReadCalls {0};  Number of read calls ( not counting the cache calls ) ;  ; TString fRealName;  Effective real file name (not original url) ;  ; Long64_t fSeekFree {0};  Location on disk of free segments structure. ;  ; Long64_t fSeekInfo {0};  Location on disk of StreamerInfo record. ;  ; Double_t fSum2Buffer {0};  Sum of squares of buffer sizes of objects written so far. ;  ; Double_t fSumBuffer {0};  Sum of buffer sizes of objects written so far. ;  ; Char_t fUnits {0};  Number of bytes for file pointers. ;  ; TUrl fUrl;  !URL of file ;  ; Int_t fVersion {0};  File format version. ;  ; std::mutex fWriteMutex;  !Lock for writing baskets / keys into the file. ;  ; Int_t fWritten {0};  Number of objects written so far. ;  ;  Protected Attributes inherited from TDirectoryFile; Int_t fBufferSize {0};  Default buffer size to crea",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:39500,Performance,cache,cache,39500,"; Bool_t fInitDone {kFALSE};  !True if the file has been initialized ;  ; Bool_t fIsArchive {kFALSE};  !True if this is a pure archive file ;  ; Bool_t fIsPcmFile {kFALSE};  !True if the file is a ROOT pcm file. ;  ; Bool_t fIsRootFile {kTRUE};  !True is this is a ROOT file, raw file otherwise ;  ; Bool_t fMustFlush {kTRUE};  !True if the file buffers must be flushed ;  ; Int_t fNbytesFree {0};  Number of bytes for free segments structure. ;  ; Int_t fNbytesInfo {0};  Number of bytes for StreamerInfo record. ;  ; Bool_t fNoAnchorInName {kFALSE};  !True if we don't want to force the anchor to be appended to the file name ;  ; Int_t fNProcessIDs {0};  Number of TProcessID written to this file. ;  ; Long64_t fOffset {0};  !Seek offset cache ;  ; TList * fOpenPhases {nullptr};  !Time info about open phases ;  ; TString fOption;  File options. ;  ; TObjArray * fProcessIDs {nullptr};  !Array of pointers to TProcessIDs ;  ; Int_t fReadCalls {0};  Number of read calls ( not counting the cache calls ) ;  ; TString fRealName;  Effective real file name (not original url) ;  ; Long64_t fSeekFree {0};  Location on disk of free segments structure. ;  ; Long64_t fSeekInfo {0};  Location on disk of StreamerInfo record. ;  ; Double_t fSum2Buffer {0};  Sum of squares of buffer sizes of objects written so far. ;  ; Double_t fSumBuffer {0};  Sum of buffer sizes of objects written so far. ;  ; Char_t fUnits {0};  Number of bytes for file pointers. ;  ; TUrl fUrl;  !URL of file ;  ; Int_t fVersion {0};  File format version. ;  ; std::mutex fWriteMutex;  !Lock for writing baskets / keys into the file. ;  ; Int_t fWritten {0};  Number of objects written so far. ;  ;  Protected Attributes inherited from TDirectoryFile; Int_t fBufferSize {0};  Default buffer size to create new TKeys. ;  ; TDatime fDatimeC;  Date and time when directory is created. ;  ; TDatime fDatimeM;  Date and time of last modification. ;  ; TFile * fFile {nullptr};  Pointer to current file in memory. ;  ; TList * fKeys {n",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:42110,Performance,cache,cache,42110,"ullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static constexpr Long64_t fgDefaultBlockSize = 2 * 1024 * 1024;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgReadCalls {0};  Number of bytes read from all TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't ",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:42140,Performance,cache,cached,42140,"ullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static constexpr Long64_t fgDefaultBlockSize = 2 * 1024 * 1024;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgReadCalls {0};  Number of bytes read from all TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't ",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:1290,Safety,timeout,timeout,1290,"Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; TMemFile Class ReferenceInput/Output Library. ; A TMemFile is like a normal TFile except that it reads and writes only from memory. ; Definition at line 19 of file TMemFile.h. Classes; struct  TMemBlock;  ; struct  ZeroCopyView_t;  A read-only memory range which we do not control. More...;  . Public Types; using ExternalDataPtr_t = std::shared_ptr< const std::vector< char > >;  ;  Public Types inherited from TFile; enum  { kStartBigFile = 2000000000; };  ; enum  EAsyncOpenStatus { kAOSNotAsync = -1; , kAOSFailure = 0; , kAOSInProgress = 1; , kAOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ; ",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:9424,Safety,recover,recover,9424,"ption_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Int_t len);  Read a buffer from the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Read a buffer from the file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtua",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:28897,Safety,timeout,timeout,28897,"; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get status of the async open request related to 'name'. ;  ; static EAsyncOpenStatus GetAsyncOpenStatus (TFileOpenHandle *handle);  Get status of the async open request related to 'handle'. ;  ; static const char * GetCacheFileDir ();  Get the directory where to locally stage/cache remote files. ;  ; static const TUrl * GetEndpointUrl (const char *name);  Get final URL for file being opened asynchronously. ;  ; static Long64_t GetFileBytesRead ();  Static function returning the total number of bytes read from all files. ;  ; static Long64_t GetFileBytesWritten ();  Static function returning the total number of bytes written to all files. ;  ; static Long64_t GetFileCounter ();  ; static Int_t GetFileReadCalls ();  Static function returning the total number of read calls from all files. ;  ; static Bool_t GetOnlyStaged ();  Returns staged only flag. ;  ; static UInt_t GetOpenTimeout ();  Returns open timeout (in ms). ;  ; static Int_t GetReadaheadSize ();  Static function returning the readahead buffer size. ;  ; static Bool_t GetReadStreamerInfo ();  If the streamerinfos are to be read at file opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static v",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:30094,Safety,timeout,timeout,30094,"e opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; s",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:30115,Safety,timeout,timeout,30115,"e opening. ;  ; static EFileType GetType (const char *name, Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; s",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:30154,Safety,timeout,timeout,30154," Option_t *option="""", TString *prefix=nullptr);  Resolve the file type as a function of the protocol field in 'name'. ;  ; static void IncrementFileCounter ();  ; static TFile * Open (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Create / open a file. ;  ; static TFile * Open (TFileOpenHandle *handle);  Waits for the completion of an asynchronous open request. ;  ; static Bool_t SetCacheFileDir (std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE);  Sets the directory where to locally stage/cache remote files. ;  ; static void SetFileBytesRead (Long64_t bytes=0);  ; static void SetFileBytesWritten (Long64_t bytes=0);  ; static void SetFileReadCalls (Int_t readcalls=0);  ; static Bool_t SetOnlyStaged (Bool_t onlystaged);  Sets only staged flag. ;  ; static UInt_t SetOpenTimeout (UInt_t timeout);  Sets open timeout time (in ms). Returns previous timeout value. ;  ; static void SetReadaheadSize (Int_t bufsize=256000);  ; static void SetReadStreamerInfo (Bool_t readinfo=kTRUE);  Specify if the streamerinfos must be read at file opening. ;  ; static Bool_t ShrinkCacheFileDir (Long64_t shrinkSize, Long_t cleanupInteval=0);  Try to shrink the cache to the desired size. ;  ;  Static Public Member Functions inherited from TDirectoryFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDirectory; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add objects like histograms, TGraph2D, etc in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: see TDirectory::AddDirectory for more comments. ;  ; static Bool_t Cd (const char *path);  Change current directory to ""path"". ;  ; static TClass * Class ();  ; static const char * Class_Name",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:8333,Security,access,access,8333,"f, Long64_t first, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header starting at a certain postion. ;  ; Long64_t GetRelOffset () const;  ; virtual Long64_t GetSeekFree () const;  ; virtual Long64_t GetSeekInfo () const;  ; const TList * GetStreamerInfoCache ();  Returns the cached list of StreamerInfos used in this file. ;  ; virtual TList * GetStreamerInfoList () final;  Read the list of TStreamerInfo objects written to this file. ;  ; Int_t GetVersion () const;  ; virtual void IncrementProcessIDs ();  ; virtual Bool_t IsArchive () const;  ; Bool_t IsBinary () const;  ; virtual Bool_t IsOpen () const;  Returns kTRUE in case file is open and kFALSE if file is not open. ;  ; Bool_t IsRaw () const;  ; void ls (Option_t *option="""") const override;  List file contents. ;  ; virtual void MakeFree (Long64_t first, Long64_t last);  Mark unused bytes on the file. ;  ; virtual void MakeProject (const char *dirname, const char *classes=""*"", Option_t *option=""new"");  Generate source code necessary to access the objects stored in the file. ;  ; virtual void Map ();  ; virtual void Map (Option_t *opt);  List the contents of a file sequentially. ;  ; virtual Bool_t Matches (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Int_t len);  Read a buffer from the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Read a buffer from the file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:9538,Security,access,access,9538," (const char *name);  Return kTRUE if 'url' matches the coordinates of this file. ;  ; virtual Bool_t MustFlush () const;  ; void Paint (Option_t *option="""") override;  Paint all objects in the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Int_t len);  Read a buffer from the file. ;  ; virtual Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Read a buffer from the file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void ReadFree ();  Read the FREE linked list. ;  ; virtual TProcessID * ReadProcessID (UShort_t pidf);  The TProcessID with number pidf is read from this file. ;  ; virtual void ReadStreamerInfo ();  Read the list of StreamerInfo from this file. ;  ; virtual Int_t Recover ();  Attempt to recover file if not correctly closed. ;  ; virtual Int_t ReOpen (Option_t *mode);  Reopen a file with a different access mode. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Seek to a specific position in the file. Pos it either kBeg, kCur or kEnd. ;  ; virtual void SetCacheRead (TFileCacheRead *cache, TObject *tree=nullptr, ECacheAction action=kDisconnect);  Set a pointer to the read cache. ;  ; virtual void SetCacheWrite (TFileCacheWrite *cache);  Set a pointer to the write cache. ;  ; virtual void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  See comments for function SetCompressionSettings. ;  ; virtual void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Used to specify the compression level and algorithm. ;  ; virtual void SetEND (Long64_t last);  ; virtual void SetOffset (Long64_t offset, ERelativeT",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:20722,Security,hash,hash,20722," std::enable_if_t< std::is_base_of< TObject, T >::value, Int_t > WriteObject (const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0);  Write an object with proper type checking. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you ",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:42933,Security,hash,hashes,42933,"bjects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgReadCalls {0};  Number of bytes read from all TFile objects. ;  ; static Bool_t fgReadInfo = kTRUE;  if true (default) ReadStreamerInfo is called when opening a file ;  ; static ROOT::Internal::RConcurrentHashColl fgTsSIHashes;  !TS Set of hashes built from read streamer infos ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . Additional Inherited Members;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  . #include <TMemFile.h>. Inheritance diagram for TMemFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ExternalDataPtr_t. using TMemFile::ExternalDataPtr_t = std::shared_ptr<const std::vector<char> >. Definition at line 21 of file TMemFile.h. Member Enumeration Documentation. ◆ EMode. enum class TMemFile::EMode. strongprotected . EnumeratorkCreate ;",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMemFile.html:7374,Testability,log,logical,7374,"es to prefetch. ;  ; virtual Long64_t GetBytesWritten () const;  Return the total number of bytes written so far to the file. ;  ; TFileCacheRead * GetCacheRead (const TObject *tree=nullptr) const;  Return a pointer to the current read cache. ;  ; TFileCacheWrite * GetCacheWrite () const;  Return a pointer to the current write cache. ;  ; TArrayC * GetClassIndex () const;  ; Int_t GetCompressionAlgorithm () const;  ; Float_t GetCompressionFactor ();  Return the file compression factor. ;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Long64_t GetEND () const;  ; virtual const TUrl * GetEndpointUrl () const;  ; virtual Int_t GetErrno () const;  Method returning errno. ;  ; Int_t GetFd () const;  ; TList * GetListOfFree () const;  ; TObjArray * GetListOfProcessIDs () const;  ; virtual Int_t GetNbytesFree () const;  ; virtual Int_t GetNbytesInfo () const;  ; virtual TString GetNewUrl ();  ; virtual Int_t GetNfree () const;  ; virtual Int_t GetNProcessIDs () const;  ; Option_t * GetOption () const override;  ; virtual Int_t GetReadCalls () const;  ; Int_t GetRecordHeader (char *buf, Long64_t first, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header starting at a certain postion. ;  ; Long64_t GetRelOffset () const;  ; virtual Long64_t GetSeekFree () const;  ; virtual Long64_t GetSeekInfo () const;  ; const TList * GetStreamerInfoCache ();  Returns the cached list of StreamerInfos used in this file. ;  ; virtual TList * GetStreamerInfoList () final;  Read the list of TStreamerInfo objects written to this file. ;  ; Int_t GetVersion () const;  ; virtual void IncrementProcessIDs ();  ; virtual Bool_t IsArchive () const;  ; Bool_t IsBinary () const;  ; virtual Bool_t IsOpen () const;  Returns kTRUE in case file is open and kFALSE if file is not open. ;  ; Bool_t IsRaw () const;  ; void ls (Option_t *option="""") const override;  List file contents. ;  ; virtual void MakeFree (Long64_t first",MatchSource.WIKI,doc/master/classTMemFile.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMemFile.html
https://root.cern/doc/master/classTMergerInfo.html:3129,Availability,error,error,3129,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMergerInfo.html:3218,Availability,error,error,3218,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMergerInfo.html:3373,Availability,error,error,3373,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMergerInfo.html:3670,Availability,error,error,3670,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMergerInfo.html:8234,Availability,error,error,8234," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMergerInfo.html:3135,Integrability,message,message,3135,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMergerInfo.html:3676,Integrability,message,message,3676,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMergerInfo.html:4878,Integrability,message,message,4878,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMergerInfo.html:8240,Integrability,message,message,8240," must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMergerInfo.html:8613,Integrability,message,message,8613," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Priva",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMergerInfo.html:1368,Modifiability,inherit,inherited,1368,"lic Member Functions;  TMergerInfo (TSlave *t, Int_t port, Int_t forHowManyWorkers);  ;  ~TMergerInfo () override;  Destructor. ;  ; void AddMergedObjects (Int_t objects);  ; void AddWorker (TSlave *sl);  Add new worker to the list of workers to be merged by this merger. ;  ; Bool_t AreAllWorkersAssigned ();  Return if the determined number of workers has been already assigned to this merger. ;  ; Bool_t AreAllWorkersMerged ();  Return if merger has already merged all workers, i.e. if it has finished its merging job. ;  ; void Deactivate ();  ; Int_t GetMergedObjects ();  ; Int_t GetMergedWorkers ();  ; TSlave * GetMerger ();  ; Int_t GetPort ();  ; TList * GetWorkers ();  ; Int_t GetWorkersToMerge ();  ; TClass * IsA () const override;  ; Bool_t IsActive ();  ; void SetMergedWorker ();  Increase number of already merged workers by 1. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMergerInfo.html:2765,Modifiability,inherit,inheritance,2765,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMergerInfo.html:4976,Modifiability,inherit,inherits,4976,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMergerInfo.html:5093,Modifiability,inherit,inherits,5093,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMergerInfo.html:9114,Modifiability,inherit,inherited,9114,"reamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TMergerInfo (const TMergerInfo &);  ; TMergerInfo & operator= (const TMergerInfo &);  . Private Attributes; Bool_t fIsActive;  ; Int_t fMergedObjects;  ; Int_t fMergedWorkers;  ; TSlave * fMerger;  ; Int_t fPort;  ; TList * fWorkers;  ; Int_t fWorkersToMerge;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingl",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMergerInfo.html:9934,Modifiability,inherit,inherited,9934,"atic constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TMergerInfo (const TMergerInfo &);  ; TMergerInfo & operator= (const TMergerInfo &);  . Private Attributes; Bool_t fIsActive;  ; Int_t fMergedObjects;  ; Int_t fMergedWorkers;  ; TSlave * fMerger;  ; Int_t fPort;  ; TList * fWorkers;  ; Int_t fWorkersToMerge;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TProof.h>. Inheritance diagram for TMergerInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera inste",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMergerInfo.html:10575,Modifiability,inherit,inherited,10575,"(const TMergerInfo &);  . Private Attributes; Bool_t fIsActive;  ; Int_t fMergedObjects;  ; Int_t fMergedWorkers;  ; TSlave * fMerger;  ; Int_t fPort;  ; TList * fWorkers;  ; Int_t fWorkersToMerge;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TProof.h>. Inheritance diagram for TMergerInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMergerInfo() [1/2]. TMergerInfo::TMergerInfo ; (; const TMergerInfo & ; ). private . ◆ TMergerInfo() [2/2]. TMergerInfo::TMergerInfo ; (; TSlave * ; t, . Int_t ; port, . Int_t ; forHowManyWorkers . ). inline . Definition at line 266 of file TProof.h. ◆ ~TMergerInfo(). TMergerInfo::~TMergerInfo ; (; ). override . Destructor. ; Definition at line 287 of file TProof.cxx. Member Function Documentation. ◆ AddMergedObjects(). void TMergerInfo::AddMergedObjects ; (; Int_t ; objects). inline . Definition at line 282 of file TProof.h. ◆ AddWorker(). void TMergerInfo::AddWorker ; (; TSlave * ; sl). Add new worker to the list of workers t",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMergerInfo.html:10674,Modifiability,inherit,inherited,10674,"(const TMergerInfo &);  . Private Attributes; Bool_t fIsActive;  ; Int_t fMergedObjects;  ; Int_t fMergedWorkers;  ; TSlave * fMerger;  ; Int_t fPort;  ; TList * fWorkers;  ; Int_t fWorkersToMerge;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TProof.h>. Inheritance diagram for TMergerInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMergerInfo() [1/2]. TMergerInfo::TMergerInfo ; (; const TMergerInfo & ; ). private . ◆ TMergerInfo() [2/2]. TMergerInfo::TMergerInfo ; (; TSlave * ; t, . Int_t ; port, . Int_t ; forHowManyWorkers . ). inline . Definition at line 266 of file TProof.h. ◆ ~TMergerInfo(). TMergerInfo::~TMergerInfo ; (; ). override . Destructor. ; Definition at line 287 of file TProof.cxx. Member Function Documentation. ◆ AddMergedObjects(). void TMergerInfo::AddMergedObjects ; (; Int_t ; objects). inline . Definition at line 282 of file TProof.h. ◆ AddWorker(). void TMergerInfo::AddWorker ; (; TSlave * ; sl). Add new worker to the list of workers t",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMergerInfo.html:4607,Security,hash,hash,4607," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTMergerInfo.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMergerInfo.html
https://root.cern/doc/master/classTMessage.html:26902,Availability,error,error,26902,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:26991,Availability,error,error,26991,"ar *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns strin",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:27146,Availability,error,error,27146,";  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:27443,Availability,error,error,27443,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:31890,Availability,error,error,31890,"ject drawn in a pad to the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EnableSchemaEvolutionForAll (Bool_t enable=kTRUE);  Static function enabling or disabling the automatic schema evolution. ;  ; static Bool_t UsesSchemaEvolutionForAll ();  Static function returning status of global schema evolution. ;  ;  Static Public Member Functions inherited from TBufferFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Versio",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:42372,Availability,error,error,42372,"file TMessage.cxx. ◆ ~TMessage(). TMessage::~TMessage ; (; ). virtual . Destructor. ; Definition at line 106 of file TMessage.cxx. Member Function Documentation. ◆ Class(). static TClass * TMessage::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMessage::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMessage::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 96 of file TMessage.h. ◆ CompBuffer(). char * TMessage::CompBuffer ; (; ); const. inline . Definition at line 89 of file TMessage.h. ◆ CompLength(). Int_t TMessage::CompLength ; (; ); const. inline . Definition at line 90 of file TMessage.h. ◆ Compress(). Int_t TMessage::Compress ; (; ). Compress the message. ; The message will only be compressed if the compression level > 0 and the if the message is > 256 bytes. Returns -1 in case of error (when compression fails or when the message increases in size in some pathological cases), otherwise returns 0. ; Definition at line 306 of file TMessage.cxx. ◆ DeclFileName(). static const char * TMessage::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 96 of file TMessage.h. ◆ EnableSchemaEvolution(). void TMessage::EnableSchemaEvolution ; (; Bool_t ; enable = kTRUE). inline . Definition at line 78 of file TMessage.h. ◆ EnableSchemaEvolutionForAll(). void TMessage::EnableSchemaEvolutionForAll ; (; Bool_t ; enable = kTRUE). static . Static function enabling or disabling the automatic schema evolution. ; By default schema evolution support is off. ; Definition at line 116 of file TMessage.cxx. ◆ ForceWriteInfo(). void TMessage::ForceWriteInfo ; (; TVirtualStreamerInfo * ; info, . Bool_t ; force . ). overridevirtual . Force writing the TStreamerInfo to the message. ; Reimplemented from TBufferIO.; Definition at line 132 of file TMessage.cxx. ◆ Forward(). void TM",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:47328,Availability,error,error,47328,"rInfo ; (; TVirtualStreamerInfo * ; info). overridevirtual . Remember that the StreamerInfo is being used in writing. ; When support for schema evolution is enabled the list of TStreamerInfo used to stream this object is kept in fInfos. This information is used by TSocket::Send that sends this list through the socket. This list is in turn used by TSocket::Recv to store the TStreamerInfo objects in the relevant TClass in case the TClass does not know yet about a particular class version. This feature is implemented to support clients and servers with either different ROOT versions or different user classes versions. ; Reimplemented from TBufferIO.; Definition at line 168 of file TMessage.cxx. ◆ TestBitNumber(). Bool_t TMessage::TestBitNumber ; (; UInt_t ; bitnumber); const. inlineprivate . Definition at line 59 of file TMessage.h. ◆ Uncompress(). Int_t TMessage::Uncompress ; (; ). Uncompress the message. ; The message will only be uncompressed when kMESS_ZIP is set. Returns -1 in case of error, 0 otherwise. ; Definition at line 389 of file TMessage.cxx. ◆ UsesSchemaEvolution(). Bool_t TMessage::UsesSchemaEvolution ; (; ); const. inline . Definition at line 79 of file TMessage.h. ◆ UsesSchemaEvolutionForAll(). Bool_t TMessage::UsesSchemaEvolutionForAll ; (; ). static . Static function returning status of global schema evolution. ; Definition at line 124 of file TMessage.cxx. ◆ What(). UInt_t TMessage::What ; (; ); const. inline . Definition at line 75 of file TMessage.h. ◆ WriteProcessID(). UShort_t TMessage::WriteProcessID ; (; TProcessID * ; pid). overridevirtual . Check if the ProcessID pid is already in the message. ; If not, then:; mark bit 0 of fBitsPIDs to indicate that a ProcessID has been found; mark bit uid+1 where uid id the uid of the ProcessID . Reimplemented from TBufferIO.; Definition at line 438 of file TMessage.cxx. Friends And Related Symbol Documentation. ◆ TAuthenticate. friend class TAuthenticate. friend . Definition at line 35 of file TMessage.h.",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:693,Integrability,message,message,693,". ROOT: TMessage Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; TMessage Class Reference. . Definition at line 33 of file TMessage.h. Public Member Functions;  TMessage (UInt_t what=kMESS_ANY, Int_t bufsiz=TBuffer::kInitialSize);  Create a TMessage object for storing objects. ;  ; virtual ~TMessage ();  Destructor. ;  ; char * CompBuffer () const;  ; Int_t CompLength () const;  ; Int_t Compress ();  Compress the message. ;  ; void EnableSchemaEvolution (Bool_t enable=kTRUE);  ; void ForceWriteInfo (TVirtualStreamerInfo *info, Bool_t force) override;  Force writing the TStreamerInfo to the message. ;  ; void Forward ();  Change a buffer that was received into one that can be send, i.e. ;  ; TClass * GetClass () const;  ; Int_t GetCompressionAlgorithm () const;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; TList * GetStreamerInfos () const;  ; TClass * IsA () const override;  ; void Reset () override;  Reset the message buffer so we can use (i.e. fill) it again. ;  ; void Reset (UInt_t what);  ; void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  Set compression algorithm. ;  ; void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  Set compression level. ;  ; void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Set compression settings. ;  ; void SetWhat (UInt_t what);  Using this method one can change the message type a-posteriori In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtua",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:873,Integrability,message,message,873,". ROOT: TMessage Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; TMessage Class Reference. . Definition at line 33 of file TMessage.h. Public Member Functions;  TMessage (UInt_t what=kMESS_ANY, Int_t bufsiz=TBuffer::kInitialSize);  Create a TMessage object for storing objects. ;  ; virtual ~TMessage ();  Destructor. ;  ; char * CompBuffer () const;  ; Int_t CompLength () const;  ; Int_t Compress ();  Compress the message. ;  ; void EnableSchemaEvolution (Bool_t enable=kTRUE);  ; void ForceWriteInfo (TVirtualStreamerInfo *info, Bool_t force) override;  Force writing the TStreamerInfo to the message. ;  ; void Forward ();  Change a buffer that was received into one that can be send, i.e. ;  ; TClass * GetClass () const;  ; Int_t GetCompressionAlgorithm () const;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; TList * GetStreamerInfos () const;  ; TClass * IsA () const override;  ; void Reset () override;  Reset the message buffer so we can use (i.e. fill) it again. ;  ; void Reset (UInt_t what);  ; void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  Set compression algorithm. ;  ; void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  Set compression level. ;  ; void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Set compression settings. ;  ; void SetWhat (UInt_t what);  Using this method one can change the message type a-posteriori In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtua",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:1239,Integrability,message,message,1239,"of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; TMessage Class Reference. . Definition at line 33 of file TMessage.h. Public Member Functions;  TMessage (UInt_t what=kMESS_ANY, Int_t bufsiz=TBuffer::kInitialSize);  Create a TMessage object for storing objects. ;  ; virtual ~TMessage ();  Destructor. ;  ; char * CompBuffer () const;  ; Int_t CompLength () const;  ; Int_t Compress ();  Compress the message. ;  ; void EnableSchemaEvolution (Bool_t enable=kTRUE);  ; void ForceWriteInfo (TVirtualStreamerInfo *info, Bool_t force) override;  Force writing the TStreamerInfo to the message. ;  ; void Forward ();  Change a buffer that was received into one that can be send, i.e. ;  ; TClass * GetClass () const;  ; Int_t GetCompressionAlgorithm () const;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; TList * GetStreamerInfos () const;  ; TClass * IsA () const override;  ; void Reset () override;  Reset the message buffer so we can use (i.e. fill) it again. ;  ; void Reset (UInt_t what);  ; void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  Set compression algorithm. ;  ; void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  Set compression level. ;  ; void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Set compression settings. ;  ; void SetWhat (UInt_t what);  Using this method one can change the message type a-posteriori In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TagStreamerInfo (TVirtualStreamerInfo *info) override;  Remember that ",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:1769,Integrability,message,message,1769,"Info *info, Bool_t force) override;  Force writing the TStreamerInfo to the message. ;  ; void Forward ();  Change a buffer that was received into one that can be send, i.e. ;  ; TClass * GetClass () const;  ; Int_t GetCompressionAlgorithm () const;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; TList * GetStreamerInfos () const;  ; TClass * IsA () const override;  ; void Reset () override;  Reset the message buffer so we can use (i.e. fill) it again. ;  ; void Reset (UInt_t what);  ; void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  Set compression algorithm. ;  ; void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  Set compression level. ;  ; void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Set compression settings. ;  ; void SetWhat (UInt_t what);  Using this method one can change the message type a-posteriori In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TagStreamerInfo (TVirtualStreamerInfo *info) override;  Remember that the StreamerInfo is being used in writing. ;  ; Int_t Uncompress ();  Uncompress the message. ;  ; Bool_t UsesSchemaEvolution () const;  ; UInt_t What () const;  ; UShort_t WriteProcessID (TProcessID *pid) override;  Check if the ProcessID pid is already in the message. ;  ;  Public Member Functions inherited from TBufferFile;  TBufferFile (TBuffer::EMode mode);  Create an I/O buffer object. ;  ;  TBufferFile (TBuffer::EMode mode, Int_t bufsiz);  Create an I/O buffer object. ;  ;  TBufferFile (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Create an I/O buffer object. ;  ;  ~TBufferFile () override;  Delete an ",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:1837,Integrability,message,message,1837,"Info *info, Bool_t force) override;  Force writing the TStreamerInfo to the message. ;  ; void Forward ();  Change a buffer that was received into one that can be send, i.e. ;  ; TClass * GetClass () const;  ; Int_t GetCompressionAlgorithm () const;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; TList * GetStreamerInfos () const;  ; TClass * IsA () const override;  ; void Reset () override;  Reset the message buffer so we can use (i.e. fill) it again. ;  ; void Reset (UInt_t what);  ; void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  Set compression algorithm. ;  ; void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  Set compression level. ;  ; void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Set compression settings. ;  ; void SetWhat (UInt_t what);  Using this method one can change the message type a-posteriori In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TagStreamerInfo (TVirtualStreamerInfo *info) override;  Remember that the StreamerInfo is being used in writing. ;  ; Int_t Uncompress ();  Uncompress the message. ;  ; Bool_t UsesSchemaEvolution () const;  ; UInt_t What () const;  ; UShort_t WriteProcessID (TProcessID *pid) override;  Check if the ProcessID pid is already in the message. ;  ;  Public Member Functions inherited from TBufferFile;  TBufferFile (TBuffer::EMode mode);  Create an I/O buffer object. ;  ;  TBufferFile (TBuffer::EMode mode, Int_t bufsiz);  Create an I/O buffer object. ;  ;  TBufferFile (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Create an I/O buffer object. ;  ;  ~TBufferFile () override;  Delete an ",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:2206,Integrability,message,message,2206,"st override;  ; void Reset () override;  Reset the message buffer so we can use (i.e. fill) it again. ;  ; void Reset (UInt_t what);  ; void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  Set compression algorithm. ;  ; void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  Set compression level. ;  ; void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Set compression settings. ;  ; void SetWhat (UInt_t what);  Using this method one can change the message type a-posteriori In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TagStreamerInfo (TVirtualStreamerInfo *info) override;  Remember that the StreamerInfo is being used in writing. ;  ; Int_t Uncompress ();  Uncompress the message. ;  ; Bool_t UsesSchemaEvolution () const;  ; UInt_t What () const;  ; UShort_t WriteProcessID (TProcessID *pid) override;  Check if the ProcessID pid is already in the message. ;  ;  Public Member Functions inherited from TBufferFile;  TBufferFile (TBuffer::EMode mode);  Create an I/O buffer object. ;  ;  TBufferFile (TBuffer::EMode mode, Int_t bufsiz);  Create an I/O buffer object. ;  ;  TBufferFile (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Create an I/O buffer object. ;  ;  ~TBufferFile () override;  Delete an I/O buffer object. ;  ; Int_t ApplySequence (const TStreamerInfoActions::TActionSequence &sequence, void *object) override;  Read one collection of objects from the buffer using the StreamerInfoLoopAction. ;  ; Int_t ApplySequence (const TStreamerInfoActions::TActionSequence &sequence, void *start_collection, void *end_collection) override;  Read one collection of objects from the buffer ",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:2383,Integrability,message,message,2383,"set (UInt_t what);  ; void SetCompressionAlgorithm (Int_t algorithm=ROOT::RCompressionSetting::EAlgorithm::kUseGlobal);  Set compression algorithm. ;  ; void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  Set compression level. ;  ; void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Set compression settings. ;  ; void SetWhat (UInt_t what);  Using this method one can change the message type a-posteriori In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TagStreamerInfo (TVirtualStreamerInfo *info) override;  Remember that the StreamerInfo is being used in writing. ;  ; Int_t Uncompress ();  Uncompress the message. ;  ; Bool_t UsesSchemaEvolution () const;  ; UInt_t What () const;  ; UShort_t WriteProcessID (TProcessID *pid) override;  Check if the ProcessID pid is already in the message. ;  ;  Public Member Functions inherited from TBufferFile;  TBufferFile (TBuffer::EMode mode);  Create an I/O buffer object. ;  ;  TBufferFile (TBuffer::EMode mode, Int_t bufsiz);  Create an I/O buffer object. ;  ;  TBufferFile (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Create an I/O buffer object. ;  ;  ~TBufferFile () override;  Delete an I/O buffer object. ;  ; Int_t ApplySequence (const TStreamerInfoActions::TActionSequence &sequence, void *object) override;  Read one collection of objects from the buffer using the StreamerInfoLoopAction. ;  ; Int_t ApplySequence (const TStreamerInfoActions::TActionSequence &sequence, void *start_collection, void *end_collection) override;  Read one collection of objects from the buffer using the StreamerInfoLoopAction. ;  ; Int_t ApplySequenceVecPtr (const TStreamerInfoActions::TActionSequence &seq",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:26908,Integrability,message,message,26908,"object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Return",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:27449,Integrability,message,message,27449,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:28651,Integrability,message,message,28651,"ived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this metho",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:31896,Integrability,message,message,31896,"ject drawn in a pad to the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EnableSchemaEvolutionForAll (Bool_t enable=kTRUE);  Static function enabling or disabling the automatic schema evolution. ;  ; static Bool_t UsesSchemaEvolutionForAll ();  Static function returning status of global schema evolution. ;  ;  Static Public Member Functions inherited from TBufferFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Versio",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:32269,Integrability,message,message,32269," Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EnableSchemaEvolutionForAll (Bool_t enable=kTRUE);  Static function enabling or disabling the automatic schema evolution. ;  ; static Bool_t UsesSchemaEvolutionForAll ();  Static function returning status of global schema evolution. ;  ;  Static Public Member Functions inherited from TBufferFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBufferIO; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetGlobalReadParam ();  Get default read map size. ;  ; static Int_t GetGlobalWriteParam ();  Get de",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:34639,Integrability,message,message,34639," * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TClass * GetClass (const char *className);  Forward to TROOT::GetClass(). ;  ; static TClass * GetClass (const std::type_info &typeinfo);  Forward to TROOT::GetClass(). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMessage (void *buf, Int_t bufsize);  Create a TMessage object for reading objects. ;  ; void SetLength () const;  Set the message length at the beginning of the message buffer. ;  ;  Protected Member Functions inherited from TBufferFile;  TBufferFile ();  ;  TBufferFile (const TBufferFile &)=delete;  not implemented ;  ; Int_t CheckByteCount (UInt_t startpos, UInt_t bcnt, const TClass *clss, const char *classname);  Check byte count with current buffer position. ;  ; void CheckCount (UInt_t offset) override;  Check if offset is not too large (< kMaxMapCount) when writing. ;  ; UInt_t CheckObject (UInt_t offset, const TClass *cl, Bool_t readClass=kFALSE);  Check for object in the read map. ;  ; void operator= (const TBufferFile &)=delete;  not implemented ;  ; void WriteObjectClass (const void *actualObjStart, const TClass *actualClass, Bool_t cacheReuse) override;  Write object to I/O buffer. ;  ;  Protected Member Functions inherited from TBufferIO;  TBufferIO ();  ;  TBufferIO (TBuffer::EMode mode);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz);  constructor ;  ;  TBufferIO (TBuffer::EMode m",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:34678,Integrability,message,message,34678," * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TClass * GetClass (const char *className);  Forward to TROOT::GetClass(). ;  ; static TClass * GetClass (const std::type_info &typeinfo);  Forward to TROOT::GetClass(). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMessage (void *buf, Int_t bufsize);  Create a TMessage object for reading objects. ;  ; void SetLength () const;  Set the message length at the beginning of the message buffer. ;  ;  Protected Member Functions inherited from TBufferFile;  TBufferFile ();  ;  TBufferFile (const TBufferFile &)=delete;  not implemented ;  ; Int_t CheckByteCount (UInt_t startpos, UInt_t bcnt, const TClass *clss, const char *classname);  Check byte count with current buffer position. ;  ; void CheckCount (UInt_t offset) override;  Check if offset is not too large (< kMaxMapCount) when writing. ;  ; UInt_t CheckObject (UInt_t offset, const TClass *cl, Bool_t readClass=kFALSE);  Check for object in the read map. ;  ; void operator= (const TBufferFile &)=delete;  not implemented ;  ; void WriteObjectClass (const void *actualObjStart, const TClass *actualClass, Bool_t cacheReuse) override;  Write object to I/O buffer. ;  ;  Protected Member Functions inherited from TBufferIO;  TBufferIO ();  ;  TBufferIO (TBuffer::EMode mode);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz);  constructor ;  ;  TBufferIO (TBuffer::EMode m",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:40643,Integrability,message,message,40643,". ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherited from TBuffer; char * fBufCur;  ; char * fBuffer;  ; char * fBufMax;  ; Int_t fBufSize;  ; CacheList_t fCacheStack;  Realloc function to be used when extending the buffer. ;  ; Bool_t fMode;  ; TObject * fParent;  ; ReAllocCharFun_t fReAllocFunc;  ; Int_t fVersion;  ;  Static Protected Attributes inherited from TBufferIO; static Int_t fgMapSize = kMapSize;  Default map size for all TBuffer objects. ;  . #include <TMessage.h>. Inheritance diagram for TMessage:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMessage() [1/3]. TMessage::TMessage ; (; const TMessage & ; ). private . ◆ TMessage() [2/3]. TMessage::TMessage ; (; void * ; buf, . Int_t ; bufsize . ). protected . Create a TMessage object for reading objects. ; The objects will be read from buf. Use the What() method to get the message type. ; Definition at line 71 of file TMessage.cxx. ◆ TMessage() [3/3]. TMessage::TMessage ; (; UInt_t ; what = kMESS_ANY, . Int_t ; bufsiz = TBuffer::kInitialSize . ). Create a TMessage object for storing objects. ; The ""what"" integer describes the type of message. Predefined ROOT system message types can be found in MessageTypes.h. Make sure your own message types are unique from the ROOT defined message types (i.e. 0 - 10000 are reserved by ROOT). In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. This makes the sending process synchronous. In case you OR ""what"" with kMESS_ZIP, the message will be compressed in TSocket using the zip algorithm (only if message is > 256 bytes). ; Definition at line 46 of file TMessage.cxx. ◆ ~TMessage(). TMessage::~TMessage ; (; ). virtual . Destructor. ; Definition at line 106 of file TMessage.cxx. Member Function Documentation. ◆ Class(). static TClass * TMessage::Class ; (; ). s",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:40909,Integrability,message,message,40909,"to be used when extending the buffer. ;  ; Bool_t fMode;  ; TObject * fParent;  ; ReAllocCharFun_t fReAllocFunc;  ; Int_t fVersion;  ;  Static Protected Attributes inherited from TBufferIO; static Int_t fgMapSize = kMapSize;  Default map size for all TBuffer objects. ;  . #include <TMessage.h>. Inheritance diagram for TMessage:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMessage() [1/3]. TMessage::TMessage ; (; const TMessage & ; ). private . ◆ TMessage() [2/3]. TMessage::TMessage ; (; void * ; buf, . Int_t ; bufsize . ). protected . Create a TMessage object for reading objects. ; The objects will be read from buf. Use the What() method to get the message type. ; Definition at line 71 of file TMessage.cxx. ◆ TMessage() [3/3]. TMessage::TMessage ; (; UInt_t ; what = kMESS_ANY, . Int_t ; bufsiz = TBuffer::kInitialSize . ). Create a TMessage object for storing objects. ; The ""what"" integer describes the type of message. Predefined ROOT system message types can be found in MessageTypes.h. Make sure your own message types are unique from the ROOT defined message types (i.e. 0 - 10000 are reserved by ROOT). In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. This makes the sending process synchronous. In case you OR ""what"" with kMESS_ZIP, the message will be compressed in TSocket using the zip algorithm (only if message is > 256 bytes). ; Definition at line 46 of file TMessage.cxx. ◆ ~TMessage(). TMessage::~TMessage ; (; ). virtual . Destructor. ; Definition at line 106 of file TMessage.cxx. Member Function Documentation. ◆ Class(). static TClass * TMessage::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMessage::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMessage::Class_Version ; (; ). inlinestaticconstexpr . ReturnsV",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:40941,Integrability,message,message,40941," TObject * fParent;  ; ReAllocCharFun_t fReAllocFunc;  ; Int_t fVersion;  ;  Static Protected Attributes inherited from TBufferIO; static Int_t fgMapSize = kMapSize;  Default map size for all TBuffer objects. ;  . #include <TMessage.h>. Inheritance diagram for TMessage:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMessage() [1/3]. TMessage::TMessage ; (; const TMessage & ; ). private . ◆ TMessage() [2/3]. TMessage::TMessage ; (; void * ; buf, . Int_t ; bufsize . ). protected . Create a TMessage object for reading objects. ; The objects will be read from buf. Use the What() method to get the message type. ; Definition at line 71 of file TMessage.cxx. ◆ TMessage() [3/3]. TMessage::TMessage ; (; UInt_t ; what = kMESS_ANY, . Int_t ; bufsiz = TBuffer::kInitialSize . ). Create a TMessage object for storing objects. ; The ""what"" integer describes the type of message. Predefined ROOT system message types can be found in MessageTypes.h. Make sure your own message types are unique from the ROOT defined message types (i.e. 0 - 10000 are reserved by ROOT). In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. This makes the sending process synchronous. In case you OR ""what"" with kMESS_ZIP, the message will be compressed in TSocket using the zip algorithm (only if message is > 256 bytes). ; Definition at line 46 of file TMessage.cxx. ◆ ~TMessage(). TMessage::~TMessage ; (; ). virtual . Destructor. ; Definition at line 106 of file TMessage.cxx. Member Function Documentation. ◆ Class(). static TClass * TMessage::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMessage::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMessage::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 96 of file TMessag",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:41006,Integrability,message,message,41006,"tatic Protected Attributes inherited from TBufferIO; static Int_t fgMapSize = kMapSize;  Default map size for all TBuffer objects. ;  . #include <TMessage.h>. Inheritance diagram for TMessage:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMessage() [1/3]. TMessage::TMessage ; (; const TMessage & ; ). private . ◆ TMessage() [2/3]. TMessage::TMessage ; (; void * ; buf, . Int_t ; bufsize . ). protected . Create a TMessage object for reading objects. ; The objects will be read from buf. Use the What() method to get the message type. ; Definition at line 71 of file TMessage.cxx. ◆ TMessage() [3/3]. TMessage::TMessage ; (; UInt_t ; what = kMESS_ANY, . Int_t ; bufsiz = TBuffer::kInitialSize . ). Create a TMessage object for storing objects. ; The ""what"" integer describes the type of message. Predefined ROOT system message types can be found in MessageTypes.h. Make sure your own message types are unique from the ROOT defined message types (i.e. 0 - 10000 are reserved by ROOT). In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. This makes the sending process synchronous. In case you OR ""what"" with kMESS_ZIP, the message will be compressed in TSocket using the zip algorithm (only if message is > 256 bytes). ; Definition at line 46 of file TMessage.cxx. ◆ ~TMessage(). TMessage::~TMessage ; (; ). virtual . Destructor. ; Definition at line 106 of file TMessage.cxx. Member Function Documentation. ◆ Class(). static TClass * TMessage::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMessage::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMessage::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 96 of file TMessage.h. ◆ CompBuffer(). char * TMessage::CompBuffer ; (; ); const. inline . Defi",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:41053,Integrability,message,message,41053,"tatic Protected Attributes inherited from TBufferIO; static Int_t fgMapSize = kMapSize;  Default map size for all TBuffer objects. ;  . #include <TMessage.h>. Inheritance diagram for TMessage:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMessage() [1/3]. TMessage::TMessage ; (; const TMessage & ; ). private . ◆ TMessage() [2/3]. TMessage::TMessage ; (; void * ; buf, . Int_t ; bufsize . ). protected . Create a TMessage object for reading objects. ; The objects will be read from buf. Use the What() method to get the message type. ; Definition at line 71 of file TMessage.cxx. ◆ TMessage() [3/3]. TMessage::TMessage ; (; UInt_t ; what = kMESS_ANY, . Int_t ; bufsiz = TBuffer::kInitialSize . ). Create a TMessage object for storing objects. ; The ""what"" integer describes the type of message. Predefined ROOT system message types can be found in MessageTypes.h. Make sure your own message types are unique from the ROOT defined message types (i.e. 0 - 10000 are reserved by ROOT). In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. This makes the sending process synchronous. In case you OR ""what"" with kMESS_ZIP, the message will be compressed in TSocket using the zip algorithm (only if message is > 256 bytes). ; Definition at line 46 of file TMessage.cxx. ◆ ~TMessage(). TMessage::~TMessage ; (; ). virtual . Destructor. ; Definition at line 106 of file TMessage.cxx. Member Function Documentation. ◆ Class(). static TClass * TMessage::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMessage::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMessage::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 96 of file TMessage.h. ◆ CompBuffer(). char * TMessage::CompBuffer ; (; ); const. inline . Defi",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:41148,Integrability,message,message,41148,". ;  . #include <TMessage.h>. Inheritance diagram for TMessage:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMessage() [1/3]. TMessage::TMessage ; (; const TMessage & ; ). private . ◆ TMessage() [2/3]. TMessage::TMessage ; (; void * ; buf, . Int_t ; bufsize . ). protected . Create a TMessage object for reading objects. ; The objects will be read from buf. Use the What() method to get the message type. ; Definition at line 71 of file TMessage.cxx. ◆ TMessage() [3/3]. TMessage::TMessage ; (; UInt_t ; what = kMESS_ANY, . Int_t ; bufsiz = TBuffer::kInitialSize . ). Create a TMessage object for storing objects. ; The ""what"" integer describes the type of message. Predefined ROOT system message types can be found in MessageTypes.h. Make sure your own message types are unique from the ROOT defined message types (i.e. 0 - 10000 are reserved by ROOT). In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. This makes the sending process synchronous. In case you OR ""what"" with kMESS_ZIP, the message will be compressed in TSocket using the zip algorithm (only if message is > 256 bytes). ; Definition at line 46 of file TMessage.cxx. ◆ ~TMessage(). TMessage::~TMessage ; (; ). virtual . Destructor. ; Definition at line 106 of file TMessage.cxx. Member Function Documentation. ◆ Class(). static TClass * TMessage::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMessage::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMessage::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 96 of file TMessage.h. ◆ CompBuffer(). char * TMessage::CompBuffer ; (; ); const. inline . Definition at line 89 of file TMessage.h. ◆ CompLength(). Int_t TMessage::CompLength ; (; ); const. inline . Definition at line 90 of",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:41296,Integrability,message,message,41296,"tructor & Destructor Documentation. ◆ TMessage() [1/3]. TMessage::TMessage ; (; const TMessage & ; ). private . ◆ TMessage() [2/3]. TMessage::TMessage ; (; void * ; buf, . Int_t ; bufsize . ). protected . Create a TMessage object for reading objects. ; The objects will be read from buf. Use the What() method to get the message type. ; Definition at line 71 of file TMessage.cxx. ◆ TMessage() [3/3]. TMessage::TMessage ; (; UInt_t ; what = kMESS_ANY, . Int_t ; bufsiz = TBuffer::kInitialSize . ). Create a TMessage object for storing objects. ; The ""what"" integer describes the type of message. Predefined ROOT system message types can be found in MessageTypes.h. Make sure your own message types are unique from the ROOT defined message types (i.e. 0 - 10000 are reserved by ROOT). In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. This makes the sending process synchronous. In case you OR ""what"" with kMESS_ZIP, the message will be compressed in TSocket using the zip algorithm (only if message is > 256 bytes). ; Definition at line 46 of file TMessage.cxx. ◆ ~TMessage(). TMessage::~TMessage ; (; ). virtual . Destructor. ; Definition at line 106 of file TMessage.cxx. Member Function Documentation. ◆ Class(). static TClass * TMessage::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMessage::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMessage::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 96 of file TMessage.h. ◆ CompBuffer(). char * TMessage::CompBuffer ; (; ); const. inline . Definition at line 89 of file TMessage.h. ◆ CompLength(). Int_t TMessage::CompLength ; (; ); const. inline . Definition at line 90 of file TMessage.h. ◆ Compress(). Int_t TMessage::Compress ; (; ). Compress the message. ; The message will only be compressed if the compression level > 0 and the if ",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:41367,Integrability,message,message,41367,"tructor & Destructor Documentation. ◆ TMessage() [1/3]. TMessage::TMessage ; (; const TMessage & ; ). private . ◆ TMessage() [2/3]. TMessage::TMessage ; (; void * ; buf, . Int_t ; bufsize . ). protected . Create a TMessage object for reading objects. ; The objects will be read from buf. Use the What() method to get the message type. ; Definition at line 71 of file TMessage.cxx. ◆ TMessage() [3/3]. TMessage::TMessage ; (; UInt_t ; what = kMESS_ANY, . Int_t ; bufsiz = TBuffer::kInitialSize . ). Create a TMessage object for storing objects. ; The ""what"" integer describes the type of message. Predefined ROOT system message types can be found in MessageTypes.h. Make sure your own message types are unique from the ROOT defined message types (i.e. 0 - 10000 are reserved by ROOT). In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. This makes the sending process synchronous. In case you OR ""what"" with kMESS_ZIP, the message will be compressed in TSocket using the zip algorithm (only if message is > 256 bytes). ; Definition at line 46 of file TMessage.cxx. ◆ ~TMessage(). TMessage::~TMessage ; (; ). virtual . Destructor. ; Definition at line 106 of file TMessage.cxx. Member Function Documentation. ◆ Class(). static TClass * TMessage::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMessage::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMessage::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 96 of file TMessage.h. ◆ CompBuffer(). char * TMessage::CompBuffer ; (; ); const. inline . Definition at line 89 of file TMessage.h. ◆ CompLength(). Int_t TMessage::CompLength ; (; ); const. inline . Definition at line 90 of file TMessage.h. ◆ Compress(). Int_t TMessage::Compress ; (; ). Compress the message. ; The message will only be compressed if the compression level > 0 and the if ",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:42235,Integrability,message,message,42235," process synchronous. In case you OR ""what"" with kMESS_ZIP, the message will be compressed in TSocket using the zip algorithm (only if message is > 256 bytes). ; Definition at line 46 of file TMessage.cxx. ◆ ~TMessage(). TMessage::~TMessage ; (; ). virtual . Destructor. ; Definition at line 106 of file TMessage.cxx. Member Function Documentation. ◆ Class(). static TClass * TMessage::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMessage::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMessage::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 96 of file TMessage.h. ◆ CompBuffer(). char * TMessage::CompBuffer ; (; ); const. inline . Definition at line 89 of file TMessage.h. ◆ CompLength(). Int_t TMessage::CompLength ; (; ); const. inline . Definition at line 90 of file TMessage.h. ◆ Compress(). Int_t TMessage::Compress ; (; ). Compress the message. ; The message will only be compressed if the compression level > 0 and the if the message is > 256 bytes. Returns -1 in case of error (when compression fails or when the message increases in size in some pathological cases), otherwise returns 0. ; Definition at line 306 of file TMessage.cxx. ◆ DeclFileName(). static const char * TMessage::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 96 of file TMessage.h. ◆ EnableSchemaEvolution(). void TMessage::EnableSchemaEvolution ; (; Bool_t ; enable = kTRUE). inline . Definition at line 78 of file TMessage.h. ◆ EnableSchemaEvolutionForAll(). void TMessage::EnableSchemaEvolutionForAll ; (; Bool_t ; enable = kTRUE). static . Static function enabling or disabling the automatic schema evolution. ; By default schema evolution support is off. ; Definition at line 116 of file TMessage.cxx. ◆ ForceWriteInfo(). void TMessage::ForceWriteInfo ; (; TVirtualStreamerInfo * ; info,",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:42250,Integrability,message,message,42250,"message will be compressed in TSocket using the zip algorithm (only if message is > 256 bytes). ; Definition at line 46 of file TMessage.cxx. ◆ ~TMessage(). TMessage::~TMessage ; (; ). virtual . Destructor. ; Definition at line 106 of file TMessage.cxx. Member Function Documentation. ◆ Class(). static TClass * TMessage::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMessage::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMessage::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 96 of file TMessage.h. ◆ CompBuffer(). char * TMessage::CompBuffer ; (; ); const. inline . Definition at line 89 of file TMessage.h. ◆ CompLength(). Int_t TMessage::CompLength ; (; ); const. inline . Definition at line 90 of file TMessage.h. ◆ Compress(). Int_t TMessage::Compress ; (; ). Compress the message. ; The message will only be compressed if the compression level > 0 and the if the message is > 256 bytes. Returns -1 in case of error (when compression fails or when the message increases in size in some pathological cases), otherwise returns 0. ; Definition at line 306 of file TMessage.cxx. ◆ DeclFileName(). static const char * TMessage::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 96 of file TMessage.h. ◆ EnableSchemaEvolution(). void TMessage::EnableSchemaEvolution ; (; Bool_t ; enable = kTRUE). inline . Definition at line 78 of file TMessage.h. ◆ EnableSchemaEvolutionForAll(). void TMessage::EnableSchemaEvolutionForAll ; (; Bool_t ; enable = kTRUE). static . Static function enabling or disabling the automatic schema evolution. ; By default schema evolution support is off. ; Definition at line 116 of file TMessage.cxx. ◆ ForceWriteInfo(). void TMessage::ForceWriteInfo ; (; TVirtualStreamerInfo * ; info, . Bool_t ; force . ). overridevirtual . Force writing the TStre",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:42326,Integrability,message,message,42326,"message will be compressed in TSocket using the zip algorithm (only if message is > 256 bytes). ; Definition at line 46 of file TMessage.cxx. ◆ ~TMessage(). TMessage::~TMessage ; (; ). virtual . Destructor. ; Definition at line 106 of file TMessage.cxx. Member Function Documentation. ◆ Class(). static TClass * TMessage::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMessage::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMessage::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 96 of file TMessage.h. ◆ CompBuffer(). char * TMessage::CompBuffer ; (; ); const. inline . Definition at line 89 of file TMessage.h. ◆ CompLength(). Int_t TMessage::CompLength ; (; ); const. inline . Definition at line 90 of file TMessage.h. ◆ Compress(). Int_t TMessage::Compress ; (; ). Compress the message. ; The message will only be compressed if the compression level > 0 and the if the message is > 256 bytes. Returns -1 in case of error (when compression fails or when the message increases in size in some pathological cases), otherwise returns 0. ; Definition at line 306 of file TMessage.cxx. ◆ DeclFileName(). static const char * TMessage::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 96 of file TMessage.h. ◆ EnableSchemaEvolution(). void TMessage::EnableSchemaEvolution ; (; Bool_t ; enable = kTRUE). inline . Definition at line 78 of file TMessage.h. ◆ EnableSchemaEvolutionForAll(). void TMessage::EnableSchemaEvolutionForAll ; (; Bool_t ; enable = kTRUE). static . Static function enabling or disabling the automatic schema evolution. ; By default schema evolution support is off. ; Definition at line 116 of file TMessage.cxx. ◆ ForceWriteInfo(). void TMessage::ForceWriteInfo ; (; TVirtualStreamerInfo * ; info, . Bool_t ; force . ). overridevirtual . Force writing the TStre",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:42414,Integrability,message,message,42414,"file TMessage.cxx. ◆ ~TMessage(). TMessage::~TMessage ; (; ). virtual . Destructor. ; Definition at line 106 of file TMessage.cxx. Member Function Documentation. ◆ Class(). static TClass * TMessage::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMessage::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMessage::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 96 of file TMessage.h. ◆ CompBuffer(). char * TMessage::CompBuffer ; (; ); const. inline . Definition at line 89 of file TMessage.h. ◆ CompLength(). Int_t TMessage::CompLength ; (; ); const. inline . Definition at line 90 of file TMessage.h. ◆ Compress(). Int_t TMessage::Compress ; (; ). Compress the message. ; The message will only be compressed if the compression level > 0 and the if the message is > 256 bytes. Returns -1 in case of error (when compression fails or when the message increases in size in some pathological cases), otherwise returns 0. ; Definition at line 306 of file TMessage.cxx. ◆ DeclFileName(). static const char * TMessage::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 96 of file TMessage.h. ◆ EnableSchemaEvolution(). void TMessage::EnableSchemaEvolution ; (; Bool_t ; enable = kTRUE). inline . Definition at line 78 of file TMessage.h. ◆ EnableSchemaEvolutionForAll(). void TMessage::EnableSchemaEvolutionForAll ; (; Bool_t ; enable = kTRUE). static . Static function enabling or disabling the automatic schema evolution. ; By default schema evolution support is off. ; Definition at line 116 of file TMessage.cxx. ◆ ForceWriteInfo(). void TMessage::ForceWriteInfo ; (; TVirtualStreamerInfo * ; info, . Bool_t ; force . ). overridevirtual . Force writing the TStreamerInfo to the message. ; Reimplemented from TBufferIO.; Definition at line 132 of file TMessage.cxx. ◆ Forward(). void TM",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:43312,Integrability,message,message,43312,"sion level > 0 and the if the message is > 256 bytes. Returns -1 in case of error (when compression fails or when the message increases in size in some pathological cases), otherwise returns 0. ; Definition at line 306 of file TMessage.cxx. ◆ DeclFileName(). static const char * TMessage::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 96 of file TMessage.h. ◆ EnableSchemaEvolution(). void TMessage::EnableSchemaEvolution ; (; Bool_t ; enable = kTRUE). inline . Definition at line 78 of file TMessage.h. ◆ EnableSchemaEvolutionForAll(). void TMessage::EnableSchemaEvolutionForAll ; (; Bool_t ; enable = kTRUE). static . Static function enabling or disabling the automatic schema evolution. ; By default schema evolution support is off. ; Definition at line 116 of file TMessage.cxx. ◆ ForceWriteInfo(). void TMessage::ForceWriteInfo ; (; TVirtualStreamerInfo * ; info, . Bool_t ; force . ). overridevirtual . Force writing the TStreamerInfo to the message. ; Reimplemented from TBufferIO.; Definition at line 132 of file TMessage.cxx. ◆ Forward(). void TMessage::Forward ; (; ). Change a buffer that was received into one that can be send, i.e. ; forward a just received message. ; Definition at line 144 of file TMessage.cxx. ◆ GetClass(). TClass * TMessage::GetClass ; (; ); const. inline . Definition at line 71 of file TMessage.h. ◆ GetCompressionAlgorithm(). Int_t TMessage::GetCompressionAlgorithm ; (; ); const. inline . Definition at line 100 of file TMessage.h. ◆ GetCompressionLevel(). Int_t TMessage::GetCompressionLevel ; (; ); const. inline . Definition at line 106 of file TMessage.h. ◆ GetCompressionSettings(). Int_t TMessage::GetCompressionSettings ; (; ); const. inline . Definition at line 112 of file TMessage.h. ◆ GetStreamerInfos(). TList * TMessage::GetStreamerInfos ; (; ); const. inline . Definition at line 80 of file TMessage.h. ◆ IsA(). TClass * TMessage::IsA ; (; ); const. inlineoverridevirtual . Retur",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:43535,Integrability,message,message,43535,"essage.cxx. ◆ DeclFileName(). static const char * TMessage::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 96 of file TMessage.h. ◆ EnableSchemaEvolution(). void TMessage::EnableSchemaEvolution ; (; Bool_t ; enable = kTRUE). inline . Definition at line 78 of file TMessage.h. ◆ EnableSchemaEvolutionForAll(). void TMessage::EnableSchemaEvolutionForAll ; (; Bool_t ; enable = kTRUE). static . Static function enabling or disabling the automatic schema evolution. ; By default schema evolution support is off. ; Definition at line 116 of file TMessage.cxx. ◆ ForceWriteInfo(). void TMessage::ForceWriteInfo ; (; TVirtualStreamerInfo * ; info, . Bool_t ; force . ). overridevirtual . Force writing the TStreamerInfo to the message. ; Reimplemented from TBufferIO.; Definition at line 132 of file TMessage.cxx. ◆ Forward(). void TMessage::Forward ; (; ). Change a buffer that was received into one that can be send, i.e. ; forward a just received message. ; Definition at line 144 of file TMessage.cxx. ◆ GetClass(). TClass * TMessage::GetClass ; (; ); const. inline . Definition at line 71 of file TMessage.h. ◆ GetCompressionAlgorithm(). Int_t TMessage::GetCompressionAlgorithm ; (; ); const. inline . Definition at line 100 of file TMessage.h. ◆ GetCompressionLevel(). Int_t TMessage::GetCompressionLevel ; (; ); const. inline . Definition at line 106 of file TMessage.h. ◆ GetCompressionSettings(). Int_t TMessage::GetCompressionSettings ; (; ); const. inline . Definition at line 112 of file TMessage.h. ◆ GetStreamerInfos(). TList * TMessage::GetStreamerInfos ; (; ); const. inline . Definition at line 80 of file TMessage.h. ◆ IsA(). TClass * TMessage::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TBufferFile.; Definition at line 96 of file TMessage.h. ◆ operator=(). void TMessage::operator= ; (; const TMessage & ; ). private . ◆ Reset() [1/2]. void TMessage::Reset ; (",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:44559,Integrability,message,message,44559,of file TMessage.cxx. ◆ GetClass(). TClass * TMessage::GetClass ; (; ); const. inline . Definition at line 71 of file TMessage.h. ◆ GetCompressionAlgorithm(). Int_t TMessage::GetCompressionAlgorithm ; (; ); const. inline . Definition at line 100 of file TMessage.h. ◆ GetCompressionLevel(). Int_t TMessage::GetCompressionLevel ; (; ); const. inline . Definition at line 106 of file TMessage.h. ◆ GetCompressionSettings(). Int_t TMessage::GetCompressionSettings ; (; ); const. inline . Definition at line 112 of file TMessage.h. ◆ GetStreamerInfos(). TList * TMessage::GetStreamerInfos ; (; ); const. inline . Definition at line 80 of file TMessage.h. ◆ IsA(). TClass * TMessage::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TBufferFile.; Definition at line 96 of file TMessage.h. ◆ operator=(). void TMessage::operator= ; (; const TMessage & ; ). private . ◆ Reset() [1/2]. void TMessage::Reset ; (; ). overridevirtual . Reset the message buffer so we can use (i.e. fill) it again. ; Reimplemented from TBufferIO.; Definition at line 179 of file TMessage.cxx. ◆ Reset() [2/2]. void TMessage::Reset ; (; UInt_t ; what). inline . Definition at line 74 of file TMessage.h. ◆ SetCompressionAlgorithm(). void TMessage::SetCompressionAlgorithm ; (; Int_t ; algorithm = ROOT::RCompressionSetting::EAlgorithm::kUseGlobal). Set compression algorithm. ; Definition at line 242 of file TMessage.cxx. ◆ SetCompressionLevel(). void TMessage::SetCompressionLevel ; (; Int_t ; level = ROOT::RCompressionSetting::ELevel::kUseMin). Set compression level. ; Definition at line 264 of file TMessage.cxx. ◆ SetCompressionSettings(). void TMessage::SetCompressionSettings ; (; Int_t ; settings = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault). Set compression settings. ; Definition at line 288 of file TMessage.cxx. ◆ SetLength(). void TMessage::SetLength ; (; ); const. protected . Set the message length at the beginning of the message buffer. ; Th,MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:45511,Integrability,message,message,45511,"erridevirtual . Reset the message buffer so we can use (i.e. fill) it again. ; Reimplemented from TBufferIO.; Definition at line 179 of file TMessage.cxx. ◆ Reset() [2/2]. void TMessage::Reset ; (; UInt_t ; what). inline . Definition at line 74 of file TMessage.h. ◆ SetCompressionAlgorithm(). void TMessage::SetCompressionAlgorithm ; (; Int_t ; algorithm = ROOT::RCompressionSetting::EAlgorithm::kUseGlobal). Set compression algorithm. ; Definition at line 242 of file TMessage.cxx. ◆ SetCompressionLevel(). void TMessage::SetCompressionLevel ; (; Int_t ; level = ROOT::RCompressionSetting::ELevel::kUseMin). Set compression level. ; Definition at line 264 of file TMessage.cxx. ◆ SetCompressionSettings(). void TMessage::SetCompressionSettings ; (; Int_t ; settings = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault). Set compression settings. ; Definition at line 288 of file TMessage.cxx. ◆ SetLength(). void TMessage::SetLength ; (; ); const. protected . Set the message length at the beginning of the message buffer. ; This method is only called by TSocket::Send(). ; Definition at line 202 of file TMessage.cxx. ◆ SetWhat(). void TMessage::SetWhat ; (; UInt_t ; what). Using this method one can change the message type a-posteriori In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. ; This makes the sending process synchronous. ; Definition at line 222 of file TMessage.cxx. ◆ Streamer(). void TMessage::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TBufferFile. ◆ StreamerNVirtual(). void TMessage::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 96 of file TMessage.h. ◆ TagStreamerInfo(). void TMessage::TagStreamerInfo ; (; TVirtualStreamerInfo * ; info). overridevirtual . Remember that the StreamerInfo is being used in writing. ; When support for schema evolution is enabled the list of TStreamerInfo used to stream th",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:45550,Integrability,message,message,45550,"erridevirtual . Reset the message buffer so we can use (i.e. fill) it again. ; Reimplemented from TBufferIO.; Definition at line 179 of file TMessage.cxx. ◆ Reset() [2/2]. void TMessage::Reset ; (; UInt_t ; what). inline . Definition at line 74 of file TMessage.h. ◆ SetCompressionAlgorithm(). void TMessage::SetCompressionAlgorithm ; (; Int_t ; algorithm = ROOT::RCompressionSetting::EAlgorithm::kUseGlobal). Set compression algorithm. ; Definition at line 242 of file TMessage.cxx. ◆ SetCompressionLevel(). void TMessage::SetCompressionLevel ; (; Int_t ; level = ROOT::RCompressionSetting::ELevel::kUseMin). Set compression level. ; Definition at line 264 of file TMessage.cxx. ◆ SetCompressionSettings(). void TMessage::SetCompressionSettings ; (; Int_t ; settings = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault). Set compression settings. ; Definition at line 288 of file TMessage.cxx. ◆ SetLength(). void TMessage::SetLength ; (; ); const. protected . Set the message length at the beginning of the message buffer. ; This method is only called by TSocket::Send(). ; Definition at line 202 of file TMessage.cxx. ◆ SetWhat(). void TMessage::SetWhat ; (; UInt_t ; what). Using this method one can change the message type a-posteriori In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. ; This makes the sending process synchronous. ; Definition at line 222 of file TMessage.cxx. ◆ Streamer(). void TMessage::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TBufferFile. ◆ StreamerNVirtual(). void TMessage::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 96 of file TMessage.h. ◆ TagStreamerInfo(). void TMessage::TagStreamerInfo ; (; TVirtualStreamerInfo * ; info). overridevirtual . Remember that the StreamerInfo is being used in writing. ; When support for schema evolution is enabled the list of TStreamerInfo used to stream th",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:45756,Integrability,message,message,45756,"etCompressionAlgorithm(). void TMessage::SetCompressionAlgorithm ; (; Int_t ; algorithm = ROOT::RCompressionSetting::EAlgorithm::kUseGlobal). Set compression algorithm. ; Definition at line 242 of file TMessage.cxx. ◆ SetCompressionLevel(). void TMessage::SetCompressionLevel ; (; Int_t ; level = ROOT::RCompressionSetting::ELevel::kUseMin). Set compression level. ; Definition at line 264 of file TMessage.cxx. ◆ SetCompressionSettings(). void TMessage::SetCompressionSettings ; (; Int_t ; settings = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault). Set compression settings. ; Definition at line 288 of file TMessage.cxx. ◆ SetLength(). void TMessage::SetLength ; (; ); const. protected . Set the message length at the beginning of the message buffer. ; This method is only called by TSocket::Send(). ; Definition at line 202 of file TMessage.cxx. ◆ SetWhat(). void TMessage::SetWhat ; (; UInt_t ; what). Using this method one can change the message type a-posteriori In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. ; This makes the sending process synchronous. ; Definition at line 222 of file TMessage.cxx. ◆ Streamer(). void TMessage::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TBufferFile. ◆ StreamerNVirtual(). void TMessage::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 96 of file TMessage.h. ◆ TagStreamerInfo(). void TMessage::TagStreamerInfo ; (; TVirtualStreamerInfo * ; info). overridevirtual . Remember that the StreamerInfo is being used in writing. ; When support for schema evolution is enabled the list of TStreamerInfo used to stream this object is kept in fInfos. This information is used by TSocket::Send that sends this list through the socket. This list is in turn used by TSocket::Recv to store the TStreamerInfo objects in the relevant TClass in case the TClass does not know yet about a particular",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:45824,Integrability,message,message,45824,"etCompressionAlgorithm(). void TMessage::SetCompressionAlgorithm ; (; Int_t ; algorithm = ROOT::RCompressionSetting::EAlgorithm::kUseGlobal). Set compression algorithm. ; Definition at line 242 of file TMessage.cxx. ◆ SetCompressionLevel(). void TMessage::SetCompressionLevel ; (; Int_t ; level = ROOT::RCompressionSetting::ELevel::kUseMin). Set compression level. ; Definition at line 264 of file TMessage.cxx. ◆ SetCompressionSettings(). void TMessage::SetCompressionSettings ; (; Int_t ; settings = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault). Set compression settings. ; Definition at line 288 of file TMessage.cxx. ◆ SetLength(). void TMessage::SetLength ; (; ); const. protected . Set the message length at the beginning of the message buffer. ; This method is only called by TSocket::Send(). ; Definition at line 202 of file TMessage.cxx. ◆ SetWhat(). void TMessage::SetWhat ; (; UInt_t ; what). Using this method one can change the message type a-posteriori In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. ; This makes the sending process synchronous. ; Definition at line 222 of file TMessage.cxx. ◆ Streamer(). void TMessage::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TBufferFile. ◆ StreamerNVirtual(). void TMessage::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 96 of file TMessage.h. ◆ TagStreamerInfo(). void TMessage::TagStreamerInfo ; (; TVirtualStreamerInfo * ; info). overridevirtual . Remember that the StreamerInfo is being used in writing. ; When support for schema evolution is enabled the list of TStreamerInfo used to stream this object is kept in fInfos. This information is used by TSocket::Send that sends this list through the socket. This list is in turn used by TSocket::Recv to store the TStreamerInfo objects in the relevant TClass in case the TClass does not know yet about a particular",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:47234,Integrability,message,message,47234,"nline . Definition at line 96 of file TMessage.h. ◆ TagStreamerInfo(). void TMessage::TagStreamerInfo ; (; TVirtualStreamerInfo * ; info). overridevirtual . Remember that the StreamerInfo is being used in writing. ; When support for schema evolution is enabled the list of TStreamerInfo used to stream this object is kept in fInfos. This information is used by TSocket::Send that sends this list through the socket. This list is in turn used by TSocket::Recv to store the TStreamerInfo objects in the relevant TClass in case the TClass does not know yet about a particular class version. This feature is implemented to support clients and servers with either different ROOT versions or different user classes versions. ; Reimplemented from TBufferIO.; Definition at line 168 of file TMessage.cxx. ◆ TestBitNumber(). Bool_t TMessage::TestBitNumber ; (; UInt_t ; bitnumber); const. inlineprivate . Definition at line 59 of file TMessage.h. ◆ Uncompress(). Int_t TMessage::Uncompress ; (; ). Uncompress the message. ; The message will only be uncompressed when kMESS_ZIP is set. Returns -1 in case of error, 0 otherwise. ; Definition at line 389 of file TMessage.cxx. ◆ UsesSchemaEvolution(). Bool_t TMessage::UsesSchemaEvolution ; (; ); const. inline . Definition at line 79 of file TMessage.h. ◆ UsesSchemaEvolutionForAll(). Bool_t TMessage::UsesSchemaEvolutionForAll ; (; ). static . Static function returning status of global schema evolution. ; Definition at line 124 of file TMessage.cxx. ◆ What(). UInt_t TMessage::What ; (; ); const. inline . Definition at line 75 of file TMessage.h. ◆ WriteProcessID(). UShort_t TMessage::WriteProcessID ; (; TProcessID * ; pid). overridevirtual . Check if the ProcessID pid is already in the message. ; If not, then:; mark bit 0 of fBitsPIDs to indicate that a ProcessID has been found; mark bit uid+1 where uid id the uid of the ProcessID . Reimplemented from TBufferIO.; Definition at line 438 of file TMessage.cxx. Friends And Related Symbol Documentation.",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:47249,Integrability,message,message,47249,"age.h. ◆ TagStreamerInfo(). void TMessage::TagStreamerInfo ; (; TVirtualStreamerInfo * ; info). overridevirtual . Remember that the StreamerInfo is being used in writing. ; When support for schema evolution is enabled the list of TStreamerInfo used to stream this object is kept in fInfos. This information is used by TSocket::Send that sends this list through the socket. This list is in turn used by TSocket::Recv to store the TStreamerInfo objects in the relevant TClass in case the TClass does not know yet about a particular class version. This feature is implemented to support clients and servers with either different ROOT versions or different user classes versions. ; Reimplemented from TBufferIO.; Definition at line 168 of file TMessage.cxx. ◆ TestBitNumber(). Bool_t TMessage::TestBitNumber ; (; UInt_t ; bitnumber); const. inlineprivate . Definition at line 59 of file TMessage.h. ◆ Uncompress(). Int_t TMessage::Uncompress ; (; ). Uncompress the message. ; The message will only be uncompressed when kMESS_ZIP is set. Returns -1 in case of error, 0 otherwise. ; Definition at line 389 of file TMessage.cxx. ◆ UsesSchemaEvolution(). Bool_t TMessage::UsesSchemaEvolution ; (; ); const. inline . Definition at line 79 of file TMessage.h. ◆ UsesSchemaEvolutionForAll(). Bool_t TMessage::UsesSchemaEvolutionForAll ; (; ). static . Static function returning status of global schema evolution. ; Definition at line 124 of file TMessage.cxx. ◆ What(). UInt_t TMessage::What ; (; ); const. inline . Definition at line 75 of file TMessage.h. ◆ WriteProcessID(). UShort_t TMessage::WriteProcessID ; (; TProcessID * ; pid). overridevirtual . Check if the ProcessID pid is already in the message. ; If not, then:; mark bit 0 of fBitsPIDs to indicate that a ProcessID has been found; mark bit uid+1 where uid id the uid of the ProcessID . Reimplemented from TBufferIO.; Definition at line 438 of file TMessage.cxx. Friends And Related Symbol Documentation. ◆ TAuthenticate. friend class TAuthenticate",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:47963,Integrability,message,message,47963,"ons. ; Reimplemented from TBufferIO.; Definition at line 168 of file TMessage.cxx. ◆ TestBitNumber(). Bool_t TMessage::TestBitNumber ; (; UInt_t ; bitnumber); const. inlineprivate . Definition at line 59 of file TMessage.h. ◆ Uncompress(). Int_t TMessage::Uncompress ; (; ). Uncompress the message. ; The message will only be uncompressed when kMESS_ZIP is set. Returns -1 in case of error, 0 otherwise. ; Definition at line 389 of file TMessage.cxx. ◆ UsesSchemaEvolution(). Bool_t TMessage::UsesSchemaEvolution ; (; ); const. inline . Definition at line 79 of file TMessage.h. ◆ UsesSchemaEvolutionForAll(). Bool_t TMessage::UsesSchemaEvolutionForAll ; (; ). static . Static function returning status of global schema evolution. ; Definition at line 124 of file TMessage.cxx. ◆ What(). UInt_t TMessage::What ; (; ); const. inline . Definition at line 75 of file TMessage.h. ◆ WriteProcessID(). UShort_t TMessage::WriteProcessID ; (; TProcessID * ; pid). overridevirtual . Check if the ProcessID pid is already in the message. ; If not, then:; mark bit 0 of fBitsPIDs to indicate that a ProcessID has been found; mark bit uid+1 where uid id the uid of the ProcessID . Reimplemented from TBufferIO.; Definition at line 438 of file TMessage.cxx. Friends And Related Symbol Documentation. ◆ TAuthenticate. friend class TAuthenticate. friend . Definition at line 35 of file TMessage.h. ◆ TPSocket. friend class TPSocket. friend . Definition at line 38 of file TMessage.h. ◆ TSocket. friend class TSocket. friend . Definition at line 36 of file TMessage.h. ◆ TUDPSocket. friend class TUDPSocket. friend . Definition at line 37 of file TMessage.h. ◆ TXSocket. friend class TXSocket. friend . Definition at line 39 of file TMessage.h. Member Data Documentation. ◆ fBitsPIDs. TBits TMessage::fBitsPIDs. private . Definition at line 43 of file TMessage.h. ◆ fBufComp. char* TMessage::fBufComp {nullptr}. private . Definition at line 47 of file TMessage.h. ◆ fBufCompCur. char* TMessage::fBufCompCur {nullptr}",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:2422,Modifiability,inherit,inherited,2422,"; void SetCompressionLevel (Int_t level=ROOT::RCompressionSetting::ELevel::kUseMin);  Set compression level. ;  ; void SetCompressionSettings (Int_t settings=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Set compression settings. ;  ; void SetWhat (UInt_t what);  Using this method one can change the message type a-posteriori In case you OR ""what"" with kMESS_ACK, the message will wait for an acknowledgment from the remote side. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TagStreamerInfo (TVirtualStreamerInfo *info) override;  Remember that the StreamerInfo is being used in writing. ;  ; Int_t Uncompress ();  Uncompress the message. ;  ; Bool_t UsesSchemaEvolution () const;  ; UInt_t What () const;  ; UShort_t WriteProcessID (TProcessID *pid) override;  Check if the ProcessID pid is already in the message. ;  ;  Public Member Functions inherited from TBufferFile;  TBufferFile (TBuffer::EMode mode);  Create an I/O buffer object. ;  ;  TBufferFile (TBuffer::EMode mode, Int_t bufsiz);  Create an I/O buffer object. ;  ;  TBufferFile (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Create an I/O buffer object. ;  ;  ~TBufferFile () override;  Delete an I/O buffer object. ;  ; Int_t ApplySequence (const TStreamerInfoActions::TActionSequence &sequence, void *object) override;  Read one collection of objects from the buffer using the StreamerInfoLoopAction. ;  ; Int_t ApplySequence (const TStreamerInfoActions::TActionSequence &sequence, void *start_collection, void *end_collection) override;  Read one collection of objects from the buffer using the StreamerInfoLoopAction. ;  ; Int_t ApplySequenceVecPtr (const TStreamerInfoActions::TActionSequence &sequence, void *start_collection, void *end_collection) override;  Read one collection of objects from the buffer using the StreamerInfoLoopAction. ;  ; ",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:13644,Modifiability,inherit,inheriting,13644,"e have been specified see comments about Double32_t encoding at TBufferFile::WriteDouble32(). ;  ; void ReadWithNbits (Double_t *ptr, Int_t nbits) override;  Read a Double32_t from the buffer when the number of bits is specified (explicitly or not) see comments about Double32_t encoding at TBufferFile::WriteDouble32(). ;  ; void ReadWithNbits (Float_t *ptr, Int_t nbits) override;  Read a Float16_t from the buffer when the number of bits is specified (explicitly or not) see comments about Float16_t encoding at TBufferFile::WriteFloat16(). ;  ; void SetByteCount (UInt_t cntpos, Bool_t packInVersion=kFALSE) override;  Set byte count at position cntpos in the buffer. ;  ; void SetStreamerElementNumber (TStreamerElement *, Int_t) override;  ; void SkipObjectAny () override;  Skip any kind of object from buffer. ;  ; void SkipVersion (const TClass *cl=nullptr) override;  Skip class version from I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void StreamObject (TObject *obj) override;  Stream an object inheriting from TObject using its streamer. ;  ; void StreamObject (void *obj, const char *className, const TClass *onFileClass=nullptr) override;  Stream an object given the name of its actual class. ;  ; void StreamObject (void *obj, const std::type_info &typeinfo, const TClass *onFileClass=nullptr) override;  Stream an object given its C++ typeinfo information. ;  ; void StreamObject (void *obj, const TClass *cl, const TClass *onFileClass=nullptr) override;  Stream an object given a pointer to its actual class. ;  ; void WriteArray (const Bool_t *b, Int_t n) override;  Write array of n bools into the I/O buffer. ;  ; void WriteArray (const Char_t *c, Int_t n) override;  Write array of n characters into the I/O buffer. ;  ; void WriteArray (const Double_t *d, Int_t n) override;  Write array of n doubles into the I/O buffer. ;  ; void WriteArray (const Float_t *f, Int_t n) override;  Write array of n floats into the I/O buffer. ;  ; void Wri",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:19917,Modifiability,inherit,inherited,19917," ; void WriteShort (Short_t s) override;  ; void WriteStdString (const std::string *s) override;  Write std::string to TBuffer. ;  ; virtual void WriteStdString (const std::string *s)=0;  ; virtual void WriteStdString (std::string &s);  ; void WriteString (const char *s) override;  Write string to I/O buffer. ;  ; void WriteTString (const TString &s) override;  Write TString to TBuffer. ;  ; void WriteUChar (UChar_t c) override;  ; void WriteUInt (UInt_t i) override;  ; void WriteULong (ULong_t l) override;  ; void WriteULong64 (ULong64_t l) override;  ; void WriteUShort (UShort_t s) override;  ; UInt_t WriteVersion (const TClass *cl, Bool_t useBcnt=kFALSE) override;  Write class version to I/O buffer. ;  ; UInt_t WriteVersionMemberWise (const TClass *cl, Bool_t useBcnt=kFALSE) override;  Write class version to I/O buffer after setting the kStreamedMemberWise bit in the version number. ;  ;  Public Member Functions inherited from TBufferIO;  ~TBufferIO () override;  destructor ;  ; Bool_t CheckObject (const TObject *obj) override;  Check if the specified object is already in the buffer. ;  ; Bool_t CheckObject (const void *obj, const TClass *ptrClass) override;  Check if the specified object of the specified class is already in the buffer. ;  ; void ForceWriteInfoClones (TClonesArray *a) override;  Make sure TStreamerInfo is not optimized, otherwise it will not be possible to support schema evolution in read mode. ;  ; Int_t GetBufferDisplacement () const override;  ; TProcessID * GetLastProcessID (TRefTable *reftable) const override;  Return the last TProcessID in the file. ;  ; Int_t GetMapCount () const override;  ; void GetMappedObject (UInt_t tag, void *&ptr, TClass *&ClassPtr) const override;  Retrieve the object stored in the buffer's object map at 'tag' Set ptr and ClassPtr respectively to the address of the object and a pointer to its TClass. ;  ; UShort_t GetPidOffset () const override;  ; UInt_t GetTRefExecId () override;  Return the exec id stored in the ",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:22881,Modifiability,inherit,inherited,22881,"This offset is used when a key (or basket) is transfered from one file to the other. ;  ; void SetReadParam (Int_t mapsize) override;  Set the initial size of the map used to store object and class references during reading. ;  ; void SetWriteParam (Int_t mapsize) override;  Set the initial size of the hashtable used to store object and class references during writing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteClones (TClonesArray *a, Int_t nobjects) override;  Interface to TStreamerInfo::WriteBufferClones. ;  ; template<class T > ; Int_t WriteObject (const T *objptr, Bool_t cacheReuse=kTRUE);  ; virtual void WriteObject (const TObject *obj, Bool_t cacheReuse)=0;  ; void WriteObject (const TObject *obj, Bool_t cacheReuse=kTRUE) override;  Write object to I/O buffer. ;  ; Int_t WriteObjectAny (const void *obj, const TClass *ptrClass, Bool_t cacheReuse=kTRUE) override;  Write object to I/O buffer. ;  ;  Public Member Functions inherited from TBuffer;  TBuffer (EMode mode);  Create an I/O buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz);  Create an I/O buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Create an I/O buffer object. ;  ; virtual ~TBuffer ();  Delete an I/O buffer object. ;  ; void AutoExpand (Int_t size_needed);  Automatically calculate a new size and expand the buffer to fit at least size_needed. ;  ; char * Buffer () const;  ; Int_t BufferSize () const;  ; Bool_t ByteSwapBuffer (Long64_t n, EDataType type);  Byte-swap N primitive-elements in the buffer. ;  ; void DetachBuffer ();  ; void Expand (Int_t newsize, Bool_t copy=kTRUE);  Expand (or shrink) the I/O buffer to newsize bytes. ;  ; Int_t GetBufferVersion () const;  ; char * GetCurrent () const;  ; TObject * GetParent () const;  Return pointer to parent of this buffer. ;  ; ReAllocCharFun_t GetReAllocFunc () const;  Return the reallocation method currently used. ;  ; Bool_t IsRea",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:25141,Modifiability,inherit,inherited,25141,"f area to be used for temporarily store 'missing' data members. ;  ; virtual TVirtualArray * PopDataCache ();  Pop and Return the 'current' data cache area from the list of area to be used for temporarily store 'missing' data members. ;  ; virtual void PushDataCache (TVirtualArray *);  Push a new data cache area onto the list of area to be used for temporarily store 'missing' data members. ;  ; void SetBuffer (void *buf, UInt_t bufsiz=0, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Sets a new buffer in an existing TBuffer object. ;  ; void SetBufferOffset (Int_t offset=0);  ; void SetParent (TObject *parent);  Set parent owning this buffer. ;  ; void SetReadMode ();  Set buffer in read mode. ;  ; void SetReAllocFunc (ReAllocCharFun_t reallocfunc=nullptr);  Set which memory reallocation method to use. ;  ; void SetWriteMode ();  Set buffer in write mode. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; template<class T > ; Int_t WriteObject (const T *objptr, Bool_t cacheReuse=kTRUE);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; v",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:26538,Modifiability,inherit,inheritance,26538,"pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in de",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:28749,Modifiability,inherit,inherits,28749,"ed by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a ",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:28866,Modifiability,inherit,inherits,28866,"ame of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:32752,Modifiability,inherit,inherited,32752," Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EnableSchemaEvolutionForAll (Bool_t enable=kTRUE);  Static function enabling or disabling the automatic schema evolution. ;  ; static Bool_t UsesSchemaEvolutionForAll ();  Static function returning status of global schema evolution. ;  ;  Static Public Member Functions inherited from TBufferFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBufferIO; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetGlobalReadParam ();  Get default read map size. ;  ; static Int_t GetGlobalWriteParam ();  Get default write map size. ;  ; static void SetGlobalReadParam (Int_t mapsize);  Set the initial size of the map used to store object and class references during reading. ;  ; static void SetGlobalWriteParam (Int_t mapsize);  Set the initial size of the map used to store object and class references during reading. ;  ;  Static Public Member Functions inherited from TBuffer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TClass * GetClass (const char *className);  Forward to TROOT::GetClass(). ;  ; static TClass * GetClass (const std::type_info &typeinfo);  Forward to TROOT::GetClass().",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:32967,Modifiability,inherit,inherited,32967," Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void EnableSchemaEvolutionForAll (Bool_t enable=kTRUE);  Static function enabling or disabling the automatic schema evolution. ;  ; static Bool_t UsesSchemaEvolutionForAll ();  Static function returning status of global schema evolution. ;  ;  Static Public Member Functions inherited from TBufferFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBufferIO; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetGlobalReadParam ();  Get default read map size. ;  ; static Int_t GetGlobalWriteParam ();  Get default write map size. ;  ; static void SetGlobalReadParam (Int_t mapsize);  Set the initial size of the map used to store object and class references during reading. ;  ; static void SetGlobalWriteParam (Int_t mapsize);  Set the initial size of the map used to store object and class references during reading. ;  ;  Static Public Member Functions inherited from TBuffer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TClass * GetClass (const char *className);  Forward to TROOT::GetClass(). ;  ; static TClass * GetClass (const std::type_info &typeinfo);  Forward to TROOT::GetClass().",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:33609,Modifiability,inherit,inherited,33609,"  Static Public Member Functions inherited from TBufferFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBufferIO; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetGlobalReadParam ();  Get default read map size. ;  ; static Int_t GetGlobalWriteParam ();  Get default write map size. ;  ; static void SetGlobalReadParam (Int_t mapsize);  Set the initial size of the map used to store object and class references during reading. ;  ; static void SetGlobalWriteParam (Int_t mapsize);  Set the initial size of the map used to store object and class references during reading. ;  ;  Static Public Member Functions inherited from TBuffer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TClass * GetClass (const char *className);  Forward to TROOT::GetClass(). ;  ; static TClass * GetClass (const std::type_info &typeinfo);  Forward to TROOT::GetClass(). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMessage (void *buf, Int_t bufsize);  Create a TMessage object for reading objects. ;  ; void SetLength () const;  Set the message length at the beginning of the message buffer. ;  ;  Protected Member Fun",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:34001,Modifiability,inherit,inherited,34001,");  ; static const char * DeclFileName ();  ; static Int_t GetGlobalReadParam ();  Get default read map size. ;  ; static Int_t GetGlobalWriteParam ();  Get default write map size. ;  ; static void SetGlobalReadParam (Int_t mapsize);  Set the initial size of the map used to store object and class references during reading. ;  ; static void SetGlobalWriteParam (Int_t mapsize);  Set the initial size of the map used to store object and class references during reading. ;  ;  Static Public Member Functions inherited from TBuffer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TClass * GetClass (const char *className);  Forward to TROOT::GetClass(). ;  ; static TClass * GetClass (const std::type_info &typeinfo);  Forward to TROOT::GetClass(). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMessage (void *buf, Int_t bufsize);  Create a TMessage object for reading objects. ;  ; void SetLength () const;  Set the message length at the beginning of the message buffer. ;  ;  Protected Member Functions inherited from TBufferFile;  TBufferFile ();  ;  TBufferFile (const TBufferFile &)=delete;  not implemented ;  ; Int_t CheckByteCount (UInt_t startpos, UInt_t bcnt, const TClass *clss, const char *classname);  Check byte count with current buffer position. ;  ; void CheckCount (UInt_t offset) override;  Check if offset is not too large (< kMaxMapCount) when writing. ;  ; UI",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:34727,Modifiability,inherit,inherited,34727," Forward to TROOT::GetClass(). ;  ; static TClass * GetClass (const std::type_info &typeinfo);  Forward to TROOT::GetClass(). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMessage (void *buf, Int_t bufsize);  Create a TMessage object for reading objects. ;  ; void SetLength () const;  Set the message length at the beginning of the message buffer. ;  ;  Protected Member Functions inherited from TBufferFile;  TBufferFile ();  ;  TBufferFile (const TBufferFile &)=delete;  not implemented ;  ; Int_t CheckByteCount (UInt_t startpos, UInt_t bcnt, const TClass *clss, const char *classname);  Check byte count with current buffer position. ;  ; void CheckCount (UInt_t offset) override;  Check if offset is not too large (< kMaxMapCount) when writing. ;  ; UInt_t CheckObject (UInt_t offset, const TClass *cl, Bool_t readClass=kFALSE);  Check for object in the read map. ;  ; void operator= (const TBufferFile &)=delete;  not implemented ;  ; void WriteObjectClass (const void *actualObjStart, const TClass *actualClass, Bool_t cacheReuse) override;  Write object to I/O buffer. ;  ;  Protected Member Functions inherited from TBufferIO;  TBufferIO ();  ;  TBufferIO (TBuffer::EMode mode);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  constructor ;  ; Long64_t GetObjectTag (const void *obj);  Returns tag for specified object from objec",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:35456,Modifiability,inherit,inherited,35456,"inning of the message buffer. ;  ;  Protected Member Functions inherited from TBufferFile;  TBufferFile ();  ;  TBufferFile (const TBufferFile &)=delete;  not implemented ;  ; Int_t CheckByteCount (UInt_t startpos, UInt_t bcnt, const TClass *clss, const char *classname);  Check byte count with current buffer position. ;  ; void CheckCount (UInt_t offset) override;  Check if offset is not too large (< kMaxMapCount) when writing. ;  ; UInt_t CheckObject (UInt_t offset, const TClass *cl, Bool_t readClass=kFALSE);  Check for object in the read map. ;  ; void operator= (const TBufferFile &)=delete;  not implemented ;  ; void WriteObjectClass (const void *actualObjStart, const TClass *actualClass, Bool_t cacheReuse) override;  Write object to I/O buffer. ;  ;  Protected Member Functions inherited from TBufferIO;  TBufferIO ();  ;  TBufferIO (TBuffer::EMode mode);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  constructor ;  ; Long64_t GetObjectTag (const void *obj);  Returns tag for specified object from objects map (if exists) Returns 0 if object not included into objects map. ;  ;  Protected Member Functions inherited from TBuffer;  TBuffer ();  ;  TBuffer (const TBuffer &)=delete;  ; void operator= (const TBuffer &)=delete;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) override;  Write this object to the current directory. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TMessage (co",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:35941,Modifiability,inherit,inherited,35941,"offset is not too large (< kMaxMapCount) when writing. ;  ; UInt_t CheckObject (UInt_t offset, const TClass *cl, Bool_t readClass=kFALSE);  Check for object in the read map. ;  ; void operator= (const TBufferFile &)=delete;  not implemented ;  ; void WriteObjectClass (const void *actualObjStart, const TClass *actualClass, Bool_t cacheReuse) override;  Write object to I/O buffer. ;  ;  Protected Member Functions inherited from TBufferIO;  TBufferIO ();  ;  TBufferIO (TBuffer::EMode mode);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  constructor ;  ; Long64_t GetObjectTag (const void *obj);  Returns tag for specified object from objects map (if exists) Returns 0 if object not included into objects map. ;  ;  Protected Member Functions inherited from TBuffer;  TBuffer ();  ;  TBuffer (const TBuffer &)=delete;  ; void operator= (const TBuffer &)=delete;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) override;  Write this object to the current directory. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TMessage (const TMessage &);  ; void operator= (const TMessage &);  ; Bool_t TestBitNumber (UInt_t bitnumber) const;  . Private Attributes; TBits fBitsPIDs;  ; char * fBufComp {nullptr};  ; char * fBufCompCur {nullptr};  ; TClass * fClass {nullptr};  ; char * fCompPos {nullptr};  ; Int_t fCompress {0};  ; Bool_t fEvolution {kFALSE};  ; TList * fInfos {nullptr};  ; UInt_t fWhat {0};  . ",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:36443,Modifiability,inherit,inherited,36443,"ufferIO (TBuffer::EMode mode);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  constructor ;  ; Long64_t GetObjectTag (const void *obj);  Returns tag for specified object from objects map (if exists) Returns 0 if object not included into objects map. ;  ;  Protected Member Functions inherited from TBuffer;  TBuffer ();  ;  TBuffer (const TBuffer &)=delete;  ; void operator= (const TBuffer &)=delete;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) override;  Write this object to the current directory. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TMessage (const TMessage &);  ; void operator= (const TMessage &);  ; Bool_t TestBitNumber (UInt_t bitnumber) const;  . Private Attributes; TBits fBitsPIDs;  ; char * fBufComp {nullptr};  ; char * fBufCompCur {nullptr};  ; TClass * fClass {nullptr};  ; char * fCompPos {nullptr};  ; Int_t fCompress {0};  ; Bool_t fEvolution {kFALSE};  ; TList * fInfos {nullptr};  ; UInt_t fWhat {0};  . Static Private Attributes; static Bool_t fgEvolution = kFALSE;  . Friends; class TAuthenticate;  ; class TPSocket;  ; class TSocket;  ; class TUDPSocket;  ; class TXSocket;  . Additional Inherited Members;  Public Types inherited from TBufferFile; enum  { kStreamedMemberWise = (1ULL << ( 14 )); };  ;  Public Types inherited from TBufferIO; enum  { kMapSize = 503; };  ; enum  EStatusBits { ;   kNotDecompressed = (1ULL << ( 15 )); , kTextBasedStreaming = (1ULL",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:37261,Modifiability,inherit,inherited,37261,"  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TMessage (const TMessage &);  ; void operator= (const TMessage &);  ; Bool_t TestBitNumber (UInt_t bitnumber) const;  . Private Attributes; TBits fBitsPIDs;  ; char * fBufComp {nullptr};  ; char * fBufCompCur {nullptr};  ; TClass * fClass {nullptr};  ; char * fCompPos {nullptr};  ; Int_t fCompress {0};  ; Bool_t fEvolution {kFALSE};  ; TList * fInfos {nullptr};  ; UInt_t fWhat {0};  . Static Private Attributes; static Bool_t fgEvolution = kFALSE;  . Friends; class TAuthenticate;  ; class TPSocket;  ; class TSocket;  ; class TUDPSocket;  ; class TXSocket;  . Additional Inherited Members;  Public Types inherited from TBufferFile; enum  { kStreamedMemberWise = (1ULL << ( 14 )); };  ;  Public Types inherited from TBufferIO; enum  { kMapSize = 503; };  ; enum  EStatusBits { ;   kNotDecompressed = (1ULL << ( 15 )); , kTextBasedStreaming = (1ULL << ( 18 )); , kUser1 = (1ULL << ( 21 )); , kUser2 = (1ULL << ( 22 )); , ;   kUser3 = (1ULL << ( 23 )). };  ;  Public Types inherited from TBuffer; enum  { kInitialSize = 1024; , kMinimalSize = 128; };  ; enum  EMode { kRead = 0; , kWrite = 1; };  ; enum  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL ",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:37357,Modifiability,inherit,inherited,37357,"  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions;  TMessage (const TMessage &);  ; void operator= (const TMessage &);  ; Bool_t TestBitNumber (UInt_t bitnumber) const;  . Private Attributes; TBits fBitsPIDs;  ; char * fBufComp {nullptr};  ; char * fBufCompCur {nullptr};  ; TClass * fClass {nullptr};  ; char * fCompPos {nullptr};  ; Int_t fCompress {0};  ; Bool_t fEvolution {kFALSE};  ; TList * fInfos {nullptr};  ; UInt_t fWhat {0};  . Static Private Attributes; static Bool_t fgEvolution = kFALSE;  . Friends; class TAuthenticate;  ; class TPSocket;  ; class TSocket;  ; class TUDPSocket;  ; class TXSocket;  . Additional Inherited Members;  Public Types inherited from TBufferFile; enum  { kStreamedMemberWise = (1ULL << ( 14 )); };  ;  Public Types inherited from TBufferIO; enum  { kMapSize = 503; };  ; enum  EStatusBits { ;   kNotDecompressed = (1ULL << ( 15 )); , kTextBasedStreaming = (1ULL << ( 18 )); , kUser1 = (1ULL << ( 21 )); , kUser2 = (1ULL << ( 22 )); , ;   kUser3 = (1ULL << ( 23 )). };  ;  Public Types inherited from TBuffer; enum  { kInitialSize = 1024; , kMinimalSize = 128; };  ; enum  EMode { kRead = 0; , kWrite = 1; };  ; enum  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL ",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:37627,Modifiability,inherit,inherited,37627,"mp {nullptr};  ; char * fBufCompCur {nullptr};  ; TClass * fClass {nullptr};  ; char * fCompPos {nullptr};  ; Int_t fCompress {0};  ; Bool_t fEvolution {kFALSE};  ; TList * fInfos {nullptr};  ; UInt_t fWhat {0};  . Static Private Attributes; static Bool_t fgEvolution = kFALSE;  . Friends; class TAuthenticate;  ; class TPSocket;  ; class TSocket;  ; class TUDPSocket;  ; class TXSocket;  . Additional Inherited Members;  Public Types inherited from TBufferFile; enum  { kStreamedMemberWise = (1ULL << ( 14 )); };  ;  Public Types inherited from TBufferIO; enum  { kMapSize = 503; };  ; enum  EStatusBits { ;   kNotDecompressed = (1ULL << ( 15 )); , kTextBasedStreaming = (1ULL << ( 18 )); , kUser1 = (1ULL << ( 21 )); , kUser2 = (1ULL << ( 22 )); , ;   kUser3 = (1ULL << ( 23 )). };  ;  Public Types inherited from TBuffer; enum  { kInitialSize = 1024; , kMinimalSize = 128; };  ; enum  EMode { kRead = 0; , kWrite = 1; };  ; enum  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBufferFile; typedef std::vector< TStreamerInfo * > InfoList_t;  ;  Protected Types inherited from TBufferIO; enum  { kNullTag = 0; };  ;  Protected Types inherited from TBuffer; typedef std::vector< TVirtualArray * > CacheList_t;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepSt",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:37877,Modifiability,inherit,inherited,37877,"mp {nullptr};  ; char * fBufCompCur {nullptr};  ; TClass * fClass {nullptr};  ; char * fCompPos {nullptr};  ; Int_t fCompress {0};  ; Bool_t fEvolution {kFALSE};  ; TList * fInfos {nullptr};  ; UInt_t fWhat {0};  . Static Private Attributes; static Bool_t fgEvolution = kFALSE;  . Friends; class TAuthenticate;  ; class TPSocket;  ; class TSocket;  ; class TUDPSocket;  ; class TXSocket;  . Additional Inherited Members;  Public Types inherited from TBufferFile; enum  { kStreamedMemberWise = (1ULL << ( 14 )); };  ;  Public Types inherited from TBufferIO; enum  { kMapSize = 503; };  ; enum  EStatusBits { ;   kNotDecompressed = (1ULL << ( 15 )); , kTextBasedStreaming = (1ULL << ( 18 )); , kUser1 = (1ULL << ( 21 )); , kUser2 = (1ULL << ( 22 )); , ;   kUser3 = (1ULL << ( 23 )). };  ;  Public Types inherited from TBuffer; enum  { kInitialSize = 1024; , kMinimalSize = 128; };  ; enum  EMode { kRead = 0; , kWrite = 1; };  ; enum  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBufferFile; typedef std::vector< TStreamerInfo * > InfoList_t;  ;  Protected Types inherited from TBufferIO; enum  { kNullTag = 0; };  ;  Protected Types inherited from TBuffer; typedef std::vector< TVirtualArray * > CacheList_t;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepSt",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:38518,Modifiability,inherit,inherited,38518,"um  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBufferFile; typedef std::vector< TStreamerInfo * > InfoList_t;  ;  Protected Types inherited from TBufferIO; enum  { kNullTag = 0; };  ;  Protected Types inherited from TBuffer; typedef std::vector< TVirtualArray * > CacheList_t;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  ;  Protected Attributes inherited from TBufferFile; TStreamerInfo * fInfo {nullptr};  Pointer to TStreamerInfo object writing/reading the buffer. ;  ; InfoList_t fInfoStack;  Stack of pointers to the TStreamerInfos. ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherit",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:38617,Modifiability,inherit,inherited,38617,"um  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBufferFile; typedef std::vector< TStreamerInfo * > InfoList_t;  ;  Protected Types inherited from TBufferIO; enum  { kNullTag = 0; };  ;  Protected Types inherited from TBuffer; typedef std::vector< TVirtualArray * > CacheList_t;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  ;  Protected Attributes inherited from TBufferFile; TStreamerInfo * fInfo {nullptr};  Pointer to TStreamerInfo object writing/reading the buffer. ;  ; InfoList_t fInfoStack;  Stack of pointers to the TStreamerInfos. ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherit",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:38688,Modifiability,inherit,inherited,38688,"um  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBufferFile; typedef std::vector< TStreamerInfo * > InfoList_t;  ;  Protected Types inherited from TBufferIO; enum  { kNullTag = 0; };  ;  Protected Types inherited from TBuffer; typedef std::vector< TVirtualArray * > CacheList_t;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  ;  Protected Attributes inherited from TBufferFile; TStreamerInfo * fInfo {nullptr};  Pointer to TStreamerInfo object writing/reading the buffer. ;  ; InfoList_t fInfoStack;  Stack of pointers to the TStreamerInfos. ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherit",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:38784,Modifiability,inherit,inherited,38784,"um  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBufferFile; typedef std::vector< TStreamerInfo * > InfoList_t;  ;  Protected Types inherited from TBufferIO; enum  { kNullTag = 0; };  ;  Protected Types inherited from TBuffer; typedef std::vector< TVirtualArray * > CacheList_t;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  ;  Protected Attributes inherited from TBufferFile; TStreamerInfo * fInfo {nullptr};  Pointer to TStreamerInfo object writing/reading the buffer. ;  ; InfoList_t fInfoStack;  Stack of pointers to the TStreamerInfos. ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherit",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:38890,Modifiability,inherit,inherited,38890,"um  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBufferFile; typedef std::vector< TStreamerInfo * > InfoList_t;  ;  Protected Types inherited from TBufferIO; enum  { kNullTag = 0; };  ;  Protected Types inherited from TBuffer; typedef std::vector< TVirtualArray * > CacheList_t;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  ;  Protected Attributes inherited from TBufferFile; TStreamerInfo * fInfo {nullptr};  Pointer to TStreamerInfo object writing/reading the buffer. ;  ; InfoList_t fInfoStack;  Stack of pointers to the TStreamerInfos. ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherit",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:39044,Modifiability,inherit,inherited,39044,"; , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBufferFile; typedef std::vector< TStreamerInfo * > InfoList_t;  ;  Protected Types inherited from TBufferIO; enum  { kNullTag = 0; };  ;  Protected Types inherited from TBuffer; typedef std::vector< TVirtualArray * > CacheList_t;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  ;  Protected Attributes inherited from TBufferFile; TStreamerInfo * fInfo {nullptr};  Pointer to TStreamerInfo object writing/reading the buffer. ;  ; InfoList_t fInfoStack;  Stack of pointers to the TStreamerInfos. ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherited from TBuffer; char * fBufCur;  ; char * fBuffer;  ; char * fBufMax;  ; Int_t fBufSize;  ; CacheList_t fCacheStack;  Realloc function to be used when extending the buffer. ;  ; Bool_t fMode;  ; TObject * fParent;  ; ReAllocCharFun_t fReAllocFunc;  ; Int_t fVersion;  ;  Static Protected Attributes inherited from TBufferIO; static Int",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:39263,Modifiability,inherit,inherited,39263," = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBufferFile; typedef std::vector< TStreamerInfo * > InfoList_t;  ;  Protected Types inherited from TBufferIO; enum  { kNullTag = 0; };  ;  Protected Types inherited from TBuffer; typedef std::vector< TVirtualArray * > CacheList_t;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  ;  Protected Attributes inherited from TBufferFile; TStreamerInfo * fInfo {nullptr};  Pointer to TStreamerInfo object writing/reading the buffer. ;  ; InfoList_t fInfoStack;  Stack of pointers to the TStreamerInfos. ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherited from TBuffer; char * fBufCur;  ; char * fBuffer;  ; char * fBufMax;  ; Int_t fBufSize;  ; CacheList_t fCacheStack;  Realloc function to be used when extending the buffer. ;  ; Bool_t fMode;  ; TObject * fParent;  ; ReAllocCharFun_t fReAllocFunc;  ; Int_t fVersion;  ;  Static Protected Attributes inherited from TBufferIO; static Int_t fgMapSize = kMapSize;  Default map size for all TBuffer objects. ;  . #include <TMessage.h>. Inheritance diagram for TMessage:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera ins",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:39748,Modifiability,inherit,inherited,39748,"pStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  ;  Protected Attributes inherited from TBufferFile; TStreamerInfo * fInfo {nullptr};  Pointer to TStreamerInfo object writing/reading the buffer. ;  ; InfoList_t fInfoStack;  Stack of pointers to the TStreamerInfos. ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherited from TBuffer; char * fBufCur;  ; char * fBuffer;  ; char * fBufMax;  ; Int_t fBufSize;  ; CacheList_t fCacheStack;  Realloc function to be used when extending the buffer. ;  ; Bool_t fMode;  ; TObject * fParent;  ; ReAllocCharFun_t fReAllocFunc;  ; Int_t fVersion;  ;  Static Protected Attributes inherited from TBufferIO; static Int_t fgMapSize = kMapSize;  Default map size for all TBuffer objects. ;  . #include <TMessage.h>. Inheritance diagram for TMessage:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMessage() [1/3]. TMessage::TMessage ; (; const TMessage & ; ). private . ◆ TMessage() [2/3]. TMessage::TMessage ; (; void * ; buf, . Int_t ; bufsize . ). protected . Create a TMessage object for reading objects. ; The objects will be read from buf. Use the What() method to get the message type. ; Definition at line 71 of file TMessage.cxx. ◆ TMessage() [3/3]. TMessage::TMessage ; (; UInt_t ; what = kMESS_ANY, . Int_t ; bufsiz = TBuffer::kInitialSize . ). Crea",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:39907,Modifiability,extend,extending,39907,"pStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  ;  Protected Attributes inherited from TBufferFile; TStreamerInfo * fInfo {nullptr};  Pointer to TStreamerInfo object writing/reading the buffer. ;  ; InfoList_t fInfoStack;  Stack of pointers to the TStreamerInfos. ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherited from TBuffer; char * fBufCur;  ; char * fBuffer;  ; char * fBufMax;  ; Int_t fBufSize;  ; CacheList_t fCacheStack;  Realloc function to be used when extending the buffer. ;  ; Bool_t fMode;  ; TObject * fParent;  ; ReAllocCharFun_t fReAllocFunc;  ; Int_t fVersion;  ;  Static Protected Attributes inherited from TBufferIO; static Int_t fgMapSize = kMapSize;  Default map size for all TBuffer objects. ;  . #include <TMessage.h>. Inheritance diagram for TMessage:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMessage() [1/3]. TMessage::TMessage ; (; const TMessage & ; ). private . ◆ TMessage() [2/3]. TMessage::TMessage ; (; void * ; buf, . Int_t ; bufsize . ). protected . Create a TMessage object for reading objects. ; The objects will be read from buf. Use the What() method to get the message type. ; Definition at line 71 of file TMessage.cxx. ◆ TMessage() [3/3]. TMessage::TMessage ; (; UInt_t ; what = kMESS_ANY, . Int_t ; bufsiz = TBuffer::kInitialSize . ). Crea",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:40055,Modifiability,inherit,inherited,40055," inherited from TBufferFile; TStreamerInfo * fInfo {nullptr};  Pointer to TStreamerInfo object writing/reading the buffer. ;  ; InfoList_t fInfoStack;  Stack of pointers to the TStreamerInfos. ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherited from TBuffer; char * fBufCur;  ; char * fBuffer;  ; char * fBufMax;  ; Int_t fBufSize;  ; CacheList_t fCacheStack;  Realloc function to be used when extending the buffer. ;  ; Bool_t fMode;  ; TObject * fParent;  ; ReAllocCharFun_t fReAllocFunc;  ; Int_t fVersion;  ;  Static Protected Attributes inherited from TBufferIO; static Int_t fgMapSize = kMapSize;  Default map size for all TBuffer objects. ;  . #include <TMessage.h>. Inheritance diagram for TMessage:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TMessage() [1/3]. TMessage::TMessage ; (; const TMessage & ; ). private . ◆ TMessage() [2/3]. TMessage::TMessage ; (; void * ; buf, . Int_t ; bufsize . ). protected . Create a TMessage object for reading objects. ; The objects will be read from buf. Use the What() method to get the message type. ; Definition at line 71 of file TMessage.cxx. ◆ TMessage() [3/3]. TMessage::TMessage ; (; UInt_t ; what = kMESS_ANY, . Int_t ; bufsiz = TBuffer::kInitialSize . ). Create a TMessage object for storing objects. ; The ""what"" integer describes the type of message. Predefined ROOT system message types can be found in MessageTypes.h. Make sure your own message types are unique from the ROO",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:20339,Performance,optimiz,optimized,20339," &s) override;  Write TString to TBuffer. ;  ; void WriteUChar (UChar_t c) override;  ; void WriteUInt (UInt_t i) override;  ; void WriteULong (ULong_t l) override;  ; void WriteULong64 (ULong64_t l) override;  ; void WriteUShort (UShort_t s) override;  ; UInt_t WriteVersion (const TClass *cl, Bool_t useBcnt=kFALSE) override;  Write class version to I/O buffer. ;  ; UInt_t WriteVersionMemberWise (const TClass *cl, Bool_t useBcnt=kFALSE) override;  Write class version to I/O buffer after setting the kStreamedMemberWise bit in the version number. ;  ;  Public Member Functions inherited from TBufferIO;  ~TBufferIO () override;  destructor ;  ; Bool_t CheckObject (const TObject *obj) override;  Check if the specified object is already in the buffer. ;  ; Bool_t CheckObject (const void *obj, const TClass *ptrClass) override;  Check if the specified object of the specified class is already in the buffer. ;  ; void ForceWriteInfoClones (TClonesArray *a) override;  Make sure TStreamerInfo is not optimized, otherwise it will not be possible to support schema evolution in read mode. ;  ; Int_t GetBufferDisplacement () const override;  ; TProcessID * GetLastProcessID (TRefTable *reftable) const override;  Return the last TProcessID in the file. ;  ; Int_t GetMapCount () const override;  ; void GetMappedObject (UInt_t tag, void *&ptr, TClass *&ClassPtr) const override;  Retrieve the object stored in the buffer's object map at 'tag' Set ptr and ClassPtr respectively to the address of the object and a pointer to its TClass. ;  ; UShort_t GetPidOffset () const override;  ; UInt_t GetTRefExecId () override;  Return the exec id stored in the current TStreamerInfo element. ;  ; Int_t GetVersionOwner () const override;  Return the version number of the owner file. ;  ; void InitMap () override;  Create the fMap container and initialize them with the null object. ;  ; void MapObject (const TObject *obj, UInt_t offset=1) override;  Add object to the fMap container. ;  ; void MapObject (",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:22524,Performance,cache,cacheReuse,22524,"dProcessID (UShort_t pidf) override;  The TProcessID with number pidf is read from file. ;  ; void ResetMap () override;  Delete existing fMap and reset map counter. ;  ; void SetBufferDisplacement () override;  ; void SetBufferDisplacement (Int_t skipped) override;  ; void SetPidOffset (UShort_t offset) override;  This offset is used when a key (or basket) is transfered from one file to the other. ;  ; void SetReadParam (Int_t mapsize) override;  Set the initial size of the map used to store object and class references during reading. ;  ; void SetWriteParam (Int_t mapsize) override;  Set the initial size of the hashtable used to store object and class references during writing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteClones (TClonesArray *a, Int_t nobjects) override;  Interface to TStreamerInfo::WriteBufferClones. ;  ; template<class T > ; Int_t WriteObject (const T *objptr, Bool_t cacheReuse=kTRUE);  ; virtual void WriteObject (const TObject *obj, Bool_t cacheReuse)=0;  ; void WriteObject (const TObject *obj, Bool_t cacheReuse=kTRUE) override;  Write object to I/O buffer. ;  ; Int_t WriteObjectAny (const void *obj, const TClass *ptrClass, Bool_t cacheReuse=kTRUE) override;  Write object to I/O buffer. ;  ;  Public Member Functions inherited from TBuffer;  TBuffer (EMode mode);  Create an I/O buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz);  Create an I/O buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Create an I/O buffer object. ;  ; virtual ~TBuffer ();  Delete an I/O buffer object. ;  ; void AutoExpand (Int_t size_needed);  Automatically calculate a new size and expand the buffer to fit at least size_needed. ;  ; char * Buffer () const;  ; Int_t BufferSize () const;  ; Bool_t ByteSwapBuffer (Long64_t n, EDataType type);  Byte-swap N primitive-elements in the buffer. ;  ; void DetachBuffer ();  ; void Expand (Int_t newsize, Bool_t copy",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:22599,Performance,cache,cacheReuse,22599,"dProcessID (UShort_t pidf) override;  The TProcessID with number pidf is read from file. ;  ; void ResetMap () override;  Delete existing fMap and reset map counter. ;  ; void SetBufferDisplacement () override;  ; void SetBufferDisplacement (Int_t skipped) override;  ; void SetPidOffset (UShort_t offset) override;  This offset is used when a key (or basket) is transfered from one file to the other. ;  ; void SetReadParam (Int_t mapsize) override;  Set the initial size of the map used to store object and class references during reading. ;  ; void SetWriteParam (Int_t mapsize) override;  Set the initial size of the hashtable used to store object and class references during writing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteClones (TClonesArray *a, Int_t nobjects) override;  Interface to TStreamerInfo::WriteBufferClones. ;  ; template<class T > ; Int_t WriteObject (const T *objptr, Bool_t cacheReuse=kTRUE);  ; virtual void WriteObject (const TObject *obj, Bool_t cacheReuse)=0;  ; void WriteObject (const TObject *obj, Bool_t cacheReuse=kTRUE) override;  Write object to I/O buffer. ;  ; Int_t WriteObjectAny (const void *obj, const TClass *ptrClass, Bool_t cacheReuse=kTRUE) override;  Write object to I/O buffer. ;  ;  Public Member Functions inherited from TBuffer;  TBuffer (EMode mode);  Create an I/O buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz);  Create an I/O buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Create an I/O buffer object. ;  ; virtual ~TBuffer ();  Delete an I/O buffer object. ;  ; void AutoExpand (Int_t size_needed);  Automatically calculate a new size and expand the buffer to fit at least size_needed. ;  ; char * Buffer () const;  ; Int_t BufferSize () const;  ; Bool_t ByteSwapBuffer (Long64_t n, EDataType type);  Byte-swap N primitive-elements in the buffer. ;  ; void DetachBuffer ();  ; void Expand (Int_t newsize, Bool_t copy",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:22662,Performance,cache,cacheReuse,22662,"dProcessID (UShort_t pidf) override;  The TProcessID with number pidf is read from file. ;  ; void ResetMap () override;  Delete existing fMap and reset map counter. ;  ; void SetBufferDisplacement () override;  ; void SetBufferDisplacement (Int_t skipped) override;  ; void SetPidOffset (UShort_t offset) override;  This offset is used when a key (or basket) is transfered from one file to the other. ;  ; void SetReadParam (Int_t mapsize) override;  Set the initial size of the map used to store object and class references during reading. ;  ; void SetWriteParam (Int_t mapsize) override;  Set the initial size of the hashtable used to store object and class references during writing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteClones (TClonesArray *a, Int_t nobjects) override;  Interface to TStreamerInfo::WriteBufferClones. ;  ; template<class T > ; Int_t WriteObject (const T *objptr, Bool_t cacheReuse=kTRUE);  ; virtual void WriteObject (const TObject *obj, Bool_t cacheReuse)=0;  ; void WriteObject (const TObject *obj, Bool_t cacheReuse=kTRUE) override;  Write object to I/O buffer. ;  ; Int_t WriteObjectAny (const void *obj, const TClass *ptrClass, Bool_t cacheReuse=kTRUE) override;  Write object to I/O buffer. ;  ;  Public Member Functions inherited from TBuffer;  TBuffer (EMode mode);  Create an I/O buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz);  Create an I/O buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Create an I/O buffer object. ;  ; virtual ~TBuffer ();  Delete an I/O buffer object. ;  ; void AutoExpand (Int_t size_needed);  Automatically calculate a new size and expand the buffer to fit at least size_needed. ;  ; char * Buffer () const;  ; Int_t BufferSize () const;  ; Bool_t ByteSwapBuffer (Long64_t n, EDataType type);  Byte-swap N primitive-elements in the buffer. ;  ; void DetachBuffer ();  ; void Expand (Int_t newsize, Bool_t copy",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:22794,Performance,cache,cacheReuse,22794,"() override;  ; void SetBufferDisplacement (Int_t skipped) override;  ; void SetPidOffset (UShort_t offset) override;  This offset is used when a key (or basket) is transfered from one file to the other. ;  ; void SetReadParam (Int_t mapsize) override;  Set the initial size of the map used to store object and class references during reading. ;  ; void SetWriteParam (Int_t mapsize) override;  Set the initial size of the hashtable used to store object and class references during writing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteClones (TClonesArray *a, Int_t nobjects) override;  Interface to TStreamerInfo::WriteBufferClones. ;  ; template<class T > ; Int_t WriteObject (const T *objptr, Bool_t cacheReuse=kTRUE);  ; virtual void WriteObject (const TObject *obj, Bool_t cacheReuse)=0;  ; void WriteObject (const TObject *obj, Bool_t cacheReuse=kTRUE) override;  Write object to I/O buffer. ;  ; Int_t WriteObjectAny (const void *obj, const TClass *ptrClass, Bool_t cacheReuse=kTRUE) override;  Write object to I/O buffer. ;  ;  Public Member Functions inherited from TBuffer;  TBuffer (EMode mode);  Create an I/O buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz);  Create an I/O buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Create an I/O buffer object. ;  ; virtual ~TBuffer ();  Delete an I/O buffer object. ;  ; void AutoExpand (Int_t size_needed);  Automatically calculate a new size and expand the buffer to fit at least size_needed. ;  ; char * Buffer () const;  ; Int_t BufferSize () const;  ; Bool_t ByteSwapBuffer (Long64_t n, EDataType type);  Byte-swap N primitive-elements in the buffer. ;  ; void DetachBuffer ();  ; void Expand (Int_t newsize, Bool_t copy=kTRUE);  Expand (or shrink) the I/O buffer to newsize bytes. ;  ; Int_t GetBufferVersion () const;  ; char * GetCurrent () const;  ; TObject * GetParent () const;  Return pointer to parent of this ",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:24053,Performance,cache,cache,24053," buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Create an I/O buffer object. ;  ; virtual ~TBuffer ();  Delete an I/O buffer object. ;  ; void AutoExpand (Int_t size_needed);  Automatically calculate a new size and expand the buffer to fit at least size_needed. ;  ; char * Buffer () const;  ; Int_t BufferSize () const;  ; Bool_t ByteSwapBuffer (Long64_t n, EDataType type);  Byte-swap N primitive-elements in the buffer. ;  ; void DetachBuffer ();  ; void Expand (Int_t newsize, Bool_t copy=kTRUE);  Expand (or shrink) the I/O buffer to newsize bytes. ;  ; Int_t GetBufferVersion () const;  ; char * GetCurrent () const;  ; TObject * GetParent () const;  Return pointer to parent of this buffer. ;  ; ReAllocCharFun_t GetReAllocFunc () const;  Return the reallocation method currently used. ;  ; Bool_t IsReading () const;  ; Bool_t IsWriting () const;  ; Int_t Length () const;  ; virtual TVirtualArray * PeekDataCache () const;  Return the 'current' data cache area from the list of area to be used for temporarily store 'missing' data members. ;  ; virtual TVirtualArray * PopDataCache ();  Pop and Return the 'current' data cache area from the list of area to be used for temporarily store 'missing' data members. ;  ; virtual void PushDataCache (TVirtualArray *);  Push a new data cache area onto the list of area to be used for temporarily store 'missing' data members. ;  ; void SetBuffer (void *buf, UInt_t bufsiz=0, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Sets a new buffer in an existing TBuffer object. ;  ; void SetBufferOffset (Int_t offset=0);  ; void SetParent (TObject *parent);  Set parent owning this buffer. ;  ; void SetReadMode ();  Set buffer in read mode. ;  ; void SetReAllocFunc (ReAllocCharFun_t reallocfunc=nullptr);  Set which memory reallocation method to use. ;  ; void SetWriteMode ();  Set buffer in write mode. ;  ; void StreamerNVirtual (TBuffer &ClassDef_Streamer",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:24224,Performance,cache,cache,24224,";  ; void AutoExpand (Int_t size_needed);  Automatically calculate a new size and expand the buffer to fit at least size_needed. ;  ; char * Buffer () const;  ; Int_t BufferSize () const;  ; Bool_t ByteSwapBuffer (Long64_t n, EDataType type);  Byte-swap N primitive-elements in the buffer. ;  ; void DetachBuffer ();  ; void Expand (Int_t newsize, Bool_t copy=kTRUE);  Expand (or shrink) the I/O buffer to newsize bytes. ;  ; Int_t GetBufferVersion () const;  ; char * GetCurrent () const;  ; TObject * GetParent () const;  Return pointer to parent of this buffer. ;  ; ReAllocCharFun_t GetReAllocFunc () const;  Return the reallocation method currently used. ;  ; Bool_t IsReading () const;  ; Bool_t IsWriting () const;  ; Int_t Length () const;  ; virtual TVirtualArray * PeekDataCache () const;  Return the 'current' data cache area from the list of area to be used for temporarily store 'missing' data members. ;  ; virtual TVirtualArray * PopDataCache ();  Pop and Return the 'current' data cache area from the list of area to be used for temporarily store 'missing' data members. ;  ; virtual void PushDataCache (TVirtualArray *);  Push a new data cache area onto the list of area to be used for temporarily store 'missing' data members. ;  ; void SetBuffer (void *buf, UInt_t bufsiz=0, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Sets a new buffer in an existing TBuffer object. ;  ; void SetBufferOffset (Int_t offset=0);  ; void SetParent (TObject *parent);  Set parent owning this buffer. ;  ; void SetReadMode ();  Set buffer in read mode. ;  ; void SetReAllocFunc (ReAllocCharFun_t reallocfunc=nullptr);  Set which memory reallocation method to use. ;  ; void SetWriteMode ();  Set buffer in write mode. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; template<class T > ; Int_t WriteObject (const T *objptr, Bool_t cacheReuse=kTRUE);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:24382,Performance,cache,cache,24382,"t BufferSize () const;  ; Bool_t ByteSwapBuffer (Long64_t n, EDataType type);  Byte-swap N primitive-elements in the buffer. ;  ; void DetachBuffer ();  ; void Expand (Int_t newsize, Bool_t copy=kTRUE);  Expand (or shrink) the I/O buffer to newsize bytes. ;  ; Int_t GetBufferVersion () const;  ; char * GetCurrent () const;  ; TObject * GetParent () const;  Return pointer to parent of this buffer. ;  ; ReAllocCharFun_t GetReAllocFunc () const;  Return the reallocation method currently used. ;  ; Bool_t IsReading () const;  ; Bool_t IsWriting () const;  ; Int_t Length () const;  ; virtual TVirtualArray * PeekDataCache () const;  Return the 'current' data cache area from the list of area to be used for temporarily store 'missing' data members. ;  ; virtual TVirtualArray * PopDataCache ();  Pop and Return the 'current' data cache area from the list of area to be used for temporarily store 'missing' data members. ;  ; virtual void PushDataCache (TVirtualArray *);  Push a new data cache area onto the list of area to be used for temporarily store 'missing' data members. ;  ; void SetBuffer (void *buf, UInt_t bufsiz=0, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Sets a new buffer in an existing TBuffer object. ;  ; void SetBufferOffset (Int_t offset=0);  ; void SetParent (TObject *parent);  Set parent owning this buffer. ;  ; void SetReadMode ();  Set buffer in read mode. ;  ; void SetReAllocFunc (ReAllocCharFun_t reallocfunc=nullptr);  Set which memory reallocation method to use. ;  ; void SetWriteMode ();  Set buffer in write mode. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; template<class T > ; Int_t WriteObject (const T *objptr, Bool_t cacheReuse=kTRUE);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:25094,Performance,cache,cacheReuse,25094,"f area to be used for temporarily store 'missing' data members. ;  ; virtual TVirtualArray * PopDataCache ();  Pop and Return the 'current' data cache area from the list of area to be used for temporarily store 'missing' data members. ;  ; virtual void PushDataCache (TVirtualArray *);  Push a new data cache area onto the list of area to be used for temporarily store 'missing' data members. ;  ; void SetBuffer (void *buf, UInt_t bufsiz=0, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Sets a new buffer in an existing TBuffer object. ;  ; void SetBufferOffset (Int_t offset=0);  ; void SetParent (TObject *parent);  Set parent owning this buffer. ;  ; void SetReadMode ();  Set buffer in read mode. ;  ; void SetReAllocFunc (ReAllocCharFun_t reallocfunc=nullptr);  Set which memory reallocation method to use. ;  ; void SetWriteMode ();  Set buffer in write mode. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; template<class T > ; Int_t WriteObject (const T *objptr, Bool_t cacheReuse=kTRUE);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; v",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:35372,Performance,cache,cacheReuse,35372,"static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TMessage (void *buf, Int_t bufsize);  Create a TMessage object for reading objects. ;  ; void SetLength () const;  Set the message length at the beginning of the message buffer. ;  ;  Protected Member Functions inherited from TBufferFile;  TBufferFile ();  ;  TBufferFile (const TBufferFile &)=delete;  not implemented ;  ; Int_t CheckByteCount (UInt_t startpos, UInt_t bcnt, const TClass *clss, const char *classname);  Check byte count with current buffer position. ;  ; void CheckCount (UInt_t offset) override;  Check if offset is not too large (< kMaxMapCount) when writing. ;  ; UInt_t CheckObject (UInt_t offset, const TClass *cl, Bool_t readClass=kFALSE);  Check for object in the read map. ;  ; void operator= (const TBufferFile &)=delete;  not implemented ;  ; void WriteObjectClass (const void *actualObjStart, const TClass *actualClass, Bool_t cacheReuse) override;  Write object to I/O buffer. ;  ;  Protected Member Functions inherited from TBufferIO;  TBufferIO ();  ;  TBufferIO (TBuffer::EMode mode);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  constructor ;  ; Long64_t GetObjectTag (const void *obj);  Returns tag for specified object from objects map (if exists) Returns 0 if object not included into objects map. ;  ;  Protected Member Functions inherited from TBuffer;  TBuffer ();  ;  TBuffer (const TBuffer &)=delete;  ; void operator= (const TBuffer &)=delete;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) const override;  Write this object to the current directory. ;  ; Int_t Write (cons",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:12172,Security,checksum,checksum,12172,"=nullptr) override;  Read array of floats (written as truncated float) from the I/O buffer. ;  ; virtual void ReadStdString (std::string &s);  ; void ReadStdString (std::string *s) override;  Read std::string from TBuffer. ;  ; virtual void ReadStdString (std::string *s)=0;  ; char * ReadString (char *s, Int_t max) override;  Read string from I/O buffer. ;  ; void ReadTString (TString &s) override;  Read TString from TBuffer. ;  ; void ReadUChar (UChar_t &c) override;  ; void ReadUInt (UInt_t &i) override;  ; void ReadULong (ULong_t &l) override;  ; void ReadULong64 (ULong64_t &l) override;  ; void ReadUShort (UShort_t &s) override;  ; Version_t ReadVersion (UInt_t *start=nullptr, UInt_t *bcnt=nullptr, const TClass *cl=nullptr) override;  Read class version from I/O buffer. ;  ; Version_t ReadVersionForMemberWise (const TClass *cl=nullptr) override;  Read class version from I/O buffer. ;  ; Version_t ReadVersionNoCheckSum (UInt_t *start=nullptr, UInt_t *bcnt=nullptr) override;  Read class version from I/O buffer, when the caller knows for sure that there is no checksum written/involved. ;  ; void ReadWithFactor (Double_t *ptr, Double_t factor, Double_t minvalue) override;  Read a Double32_t from the buffer when the factor and minimum value have been specified see comments about Double32_t encoding at TBufferFile::WriteDouble32(). ;  ; void ReadWithFactor (Float_t *ptr, Double_t factor, Double_t minvalue) override;  Read a Float16_t from the buffer when the factor and minimum value have been specified see comments about Double32_t encoding at TBufferFile::WriteDouble32(). ;  ; void ReadWithNbits (Double_t *ptr, Int_t nbits) override;  Read a Double32_t from the buffer when the number of bits is specified (explicitly or not) see comments about Double32_t encoding at TBufferFile::WriteDouble32(). ;  ; void ReadWithNbits (Float_t *ptr, Int_t nbits) override;  Read a Float16_t from the buffer when the number of bits is specified (explicitly or not) see comments about Floa",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:22207,Security,hash,hashtable,22207,"ull object. ;  ; void MapObject (const TObject *obj, UInt_t offset=1) override;  Add object to the fMap container. ;  ; void MapObject (const void *obj, const TClass *cl, UInt_t offset=1) override;  Add object to the fMap container. ;  ; Int_t ReadClones (TClonesArray *a, Int_t nobjects, Version_t objvers) override;  Interface to TStreamerInfo::ReadBufferClones. ;  ; TProcessID * ReadProcessID (UShort_t pidf) override;  The TProcessID with number pidf is read from file. ;  ; void ResetMap () override;  Delete existing fMap and reset map counter. ;  ; void SetBufferDisplacement () override;  ; void SetBufferDisplacement (Int_t skipped) override;  ; void SetPidOffset (UShort_t offset) override;  This offset is used when a key (or basket) is transfered from one file to the other. ;  ; void SetReadParam (Int_t mapsize) override;  Set the initial size of the map used to store object and class references during reading. ;  ; void SetWriteParam (Int_t mapsize) override;  Set the initial size of the hashtable used to store object and class references during writing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteClones (TClonesArray *a, Int_t nobjects) override;  Interface to TStreamerInfo::WriteBufferClones. ;  ; template<class T > ; Int_t WriteObject (const T *objptr, Bool_t cacheReuse=kTRUE);  ; virtual void WriteObject (const TObject *obj, Bool_t cacheReuse)=0;  ; void WriteObject (const TObject *obj, Bool_t cacheReuse=kTRUE) override;  Write object to I/O buffer. ;  ; Int_t WriteObjectAny (const void *obj, const TClass *ptrClass, Bool_t cacheReuse=kTRUE) override;  Write object to I/O buffer. ;  ;  Public Member Functions inherited from TBuffer;  TBuffer (EMode mode);  Create an I/O buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz);  Create an I/O buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Create an I/O buffer object. ;  ; virtual ~TBuffer ();  Del",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:28380,Security,hash,hash,28380," Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessage.html:38985,Security,hash,hash,38985,"um  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBufferFile; typedef std::vector< TStreamerInfo * > InfoList_t;  ;  Protected Types inherited from TBufferIO; enum  { kNullTag = 0; };  ;  Protected Types inherited from TBuffer; typedef std::vector< TVirtualArray * > CacheList_t;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  ;  Protected Attributes inherited from TBufferFile; TStreamerInfo * fInfo {nullptr};  Pointer to TStreamerInfo object writing/reading the buffer. ;  ; InfoList_t fInfoStack;  Stack of pointers to the TStreamerInfos. ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherit",MatchSource.WIKI,doc/master/classTMessage.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessage.html
https://root.cern/doc/master/classTMessageHandler.html:5664,Availability,error,error,5664,"ject. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,doc/master/classTMessageHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessageHandler.html
https://root.cern/doc/master/classTMessageHandler.html:5753,Availability,error,error,5753,"ecord whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual ",MatchSource.WIKI,doc/master/classTMessageHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessageHandler.html
https://root.cern/doc/master/classTMessageHandler.html:5908,Availability,error,error,5908,"Name () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,doc/master/classTMessageHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessageHandler.html
https://root.cern/doc/master/classTMessageHandler.html:6205,Availability,error,error,6205,"ption="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,doc/master/classTMessageHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessageHandler.html
https://root.cern/doc/master/classTMessageHandler.html:10160,Availability,error,error,10160,"n object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SaveAs (const char *filename="""", Option_t *option="""") const;  Save this object in the file specified by filename. ;  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class s",MatchSource.WIKI,doc/master/classTMessageHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessageHandler.html
https://root.cern/doc/master/classTMessageHandler.html:694,Deployability,install,install,694,". ROOT: TMessageHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TMessageHandler Class ReferenceCore ROOT classes » Base ROOT classes. ; Handle messages that might be generated by the system. ; By default a handler only keeps track of the different messages generated for a specific class. By deriving from this class and overriding Notify() one can implement custom message handling. In Notify() one has access to the message id and the object generating the message. One can install more than one message handler per class. A message handler can be removed or again added when needed. All Root ""Warnings"" are logged as message 1001; All Root ""Errors"" are logged as message 1002; All Root ""SysErrors"" are logged as message 1003; All Root ""Fatals"" are logged as message 1004 . Definition at line 34 of file TMessageHandler.h. Public Member Functions;  TMessageHandler (const char *cl, Bool_t derived=kTRUE);  Create a new message handler for class named cl and add it to the list of message handlers. ;  ;  TMessageHandler (const TClass *cl, Bool_t derived=kTRUE);  Create a new message handler for class cl and add it to the list of message handlers. ;  ; virtual ~TMessageHandler ();  Clean up the message handler. ;  ; virtual void Add ();  Add this message handler to the list of messages handlers. ;  ; virtual void Added ();  ; virtual Int_t GetMessageCount (Long_t messId) const;  Return counter for message with ID=messid. ;  ; Int_t GetSize () const;  ; virtual Int_t GetTotalMessageCount () const;  Return total number of messages. ;  ; Bool_t HandleDerived () const;  ; virtual void HandleMessage (Long_t id, const TObject *obj);  Store message origin, keep statistics and call Notify(). ;  ; TClass * IsA () const override;  ; virtual void Notified ();  ; Bool_t Notify ()",MatchSource.WIKI,doc/master/classTMessageHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessageHandler.html
https://root.cern/doc/master/classTMessageHandler.html:361,Integrability,message,messages,361,". ROOT: TMessageHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TMessageHandler Class ReferenceCore ROOT classes » Base ROOT classes. ; Handle messages that might be generated by the system. ; By default a handler only keeps track of the different messages generated for a specific class. By deriving from this class and overriding Notify() one can implement custom message handling. In Notify() one has access to the message id and the object generating the message. One can install more than one message handler per class. A message handler can be removed or again added when needed. All Root ""Warnings"" are logged as message 1001; All Root ""Errors"" are logged as message 1002; All Root ""SysErrors"" are logged as message 1003; All Root ""Fatals"" are logged as message 1004 . Definition at line 34 of file TMessageHandler.h. Public Member Functions;  TMessageHandler (const char *cl, Bool_t derived=kTRUE);  Create a new message handler for class named cl and add it to the list of message handlers. ;  ;  TMessageHandler (const TClass *cl, Bool_t derived=kTRUE);  Create a new message handler for class cl and add it to the list of message handlers. ;  ; virtual ~TMessageHandler ();  Clean up the message handler. ;  ; virtual void Add ();  Add this message handler to the list of messages handlers. ;  ; virtual void Added ();  ; virtual Int_t GetMessageCount (Long_t messId) const;  Return counter for message with ID=messid. ;  ; Int_t GetSize () const;  ; virtual Int_t GetTotalMessageCount () const;  Return total number of messages. ;  ; Bool_t HandleDerived () const;  ; virtual void HandleMessage (Long_t id, const TObject *obj);  Store message origin, keep statistics and call Notify(). ;  ; TClass * IsA () const override;  ; virtual void Notified ();  ; Bool_t Notify ()",MatchSource.WIKI,doc/master/classTMessageHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessageHandler.html
https://root.cern/doc/master/classTMessageHandler.html:466,Integrability,message,messages,466,". ROOT: TMessageHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TMessageHandler Class ReferenceCore ROOT classes » Base ROOT classes. ; Handle messages that might be generated by the system. ; By default a handler only keeps track of the different messages generated for a specific class. By deriving from this class and overriding Notify() one can implement custom message handling. In Notify() one has access to the message id and the object generating the message. One can install more than one message handler per class. A message handler can be removed or again added when needed. All Root ""Warnings"" are logged as message 1001; All Root ""Errors"" are logged as message 1002; All Root ""SysErrors"" are logged as message 1003; All Root ""Fatals"" are logged as message 1004 . Definition at line 34 of file TMessageHandler.h. Public Member Functions;  TMessageHandler (const char *cl, Bool_t derived=kTRUE);  Create a new message handler for class named cl and add it to the list of message handlers. ;  ;  TMessageHandler (const TClass *cl, Bool_t derived=kTRUE);  Create a new message handler for class cl and add it to the list of message handlers. ;  ; virtual ~TMessageHandler ();  Clean up the message handler. ;  ; virtual void Add ();  Add this message handler to the list of messages handlers. ;  ; virtual void Added ();  ; virtual Int_t GetMessageCount (Long_t messId) const;  Return counter for message with ID=messid. ;  ; Int_t GetSize () const;  ; virtual Int_t GetTotalMessageCount () const;  Return total number of messages. ;  ; Bool_t HandleDerived () const;  ; virtual void HandleMessage (Long_t id, const TObject *obj);  Store message origin, keep statistics and call Notify(). ;  ; TClass * IsA () const override;  ; virtual void Notified ();  ; Bool_t Notify ()",MatchSource.WIKI,doc/master/classTMessageHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessageHandler.html
https://root.cern/doc/master/classTMessageHandler.html:584,Integrability,message,message,584,". ROOT: TMessageHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TMessageHandler Class ReferenceCore ROOT classes » Base ROOT classes. ; Handle messages that might be generated by the system. ; By default a handler only keeps track of the different messages generated for a specific class. By deriving from this class and overriding Notify() one can implement custom message handling. In Notify() one has access to the message id and the object generating the message. One can install more than one message handler per class. A message handler can be removed or again added when needed. All Root ""Warnings"" are logged as message 1001; All Root ""Errors"" are logged as message 1002; All Root ""SysErrors"" are logged as message 1003; All Root ""Fatals"" are logged as message 1004 . Definition at line 34 of file TMessageHandler.h. Public Member Functions;  TMessageHandler (const char *cl, Bool_t derived=kTRUE);  Create a new message handler for class named cl and add it to the list of message handlers. ;  ;  TMessageHandler (const TClass *cl, Bool_t derived=kTRUE);  Create a new message handler for class cl and add it to the list of message handlers. ;  ; virtual ~TMessageHandler ();  Clean up the message handler. ;  ; virtual void Add ();  Add this message handler to the list of messages handlers. ;  ; virtual void Added ();  ; virtual Int_t GetMessageCount (Long_t messId) const;  Return counter for message with ID=messid. ;  ; Int_t GetSize () const;  ; virtual Int_t GetTotalMessageCount () const;  Return total number of messages. ;  ; Bool_t HandleDerived () const;  ; virtual void HandleMessage (Long_t id, const TObject *obj);  Store message origin, keep statistics and call Notify(). ;  ; TClass * IsA () const override;  ; virtual void Notified ();  ; Bool_t Notify ()",MatchSource.WIKI,doc/master/classTMessageHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessageHandler.html
https://root.cern/doc/master/classTMessageHandler.html:636,Integrability,message,message,636,". ROOT: TMessageHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TMessageHandler Class ReferenceCore ROOT classes » Base ROOT classes. ; Handle messages that might be generated by the system. ; By default a handler only keeps track of the different messages generated for a specific class. By deriving from this class and overriding Notify() one can implement custom message handling. In Notify() one has access to the message id and the object generating the message. One can install more than one message handler per class. A message handler can be removed or again added when needed. All Root ""Warnings"" are logged as message 1001; All Root ""Errors"" are logged as message 1002; All Root ""SysErrors"" are logged as message 1003; All Root ""Fatals"" are logged as message 1004 . Definition at line 34 of file TMessageHandler.h. Public Member Functions;  TMessageHandler (const char *cl, Bool_t derived=kTRUE);  Create a new message handler for class named cl and add it to the list of message handlers. ;  ;  TMessageHandler (const TClass *cl, Bool_t derived=kTRUE);  Create a new message handler for class cl and add it to the list of message handlers. ;  ; virtual ~TMessageHandler ();  Clean up the message handler. ;  ; virtual void Add ();  Add this message handler to the list of messages handlers. ;  ; virtual void Added ();  ; virtual Int_t GetMessageCount (Long_t messId) const;  Return counter for message with ID=messid. ;  ; Int_t GetSize () const;  ; virtual Int_t GetTotalMessageCount () const;  Return total number of messages. ;  ; Bool_t HandleDerived () const;  ; virtual void HandleMessage (Long_t id, const TObject *obj);  Store message origin, keep statistics and call Notify(). ;  ; TClass * IsA () const override;  ; virtual void Notified ();  ; Bool_t Notify ()",MatchSource.WIKI,doc/master/classTMessageHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessageHandler.html
https://root.cern/doc/master/classTMessageHandler.html:677,Integrability,message,message,677,". ROOT: TMessageHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TMessageHandler Class ReferenceCore ROOT classes » Base ROOT classes. ; Handle messages that might be generated by the system. ; By default a handler only keeps track of the different messages generated for a specific class. By deriving from this class and overriding Notify() one can implement custom message handling. In Notify() one has access to the message id and the object generating the message. One can install more than one message handler per class. A message handler can be removed or again added when needed. All Root ""Warnings"" are logged as message 1001; All Root ""Errors"" are logged as message 1002; All Root ""SysErrors"" are logged as message 1003; All Root ""Fatals"" are logged as message 1004 . Definition at line 34 of file TMessageHandler.h. Public Member Functions;  TMessageHandler (const char *cl, Bool_t derived=kTRUE);  Create a new message handler for class named cl and add it to the list of message handlers. ;  ;  TMessageHandler (const TClass *cl, Bool_t derived=kTRUE);  Create a new message handler for class cl and add it to the list of message handlers. ;  ; virtual ~TMessageHandler ();  Clean up the message handler. ;  ; virtual void Add ();  Add this message handler to the list of messages handlers. ;  ; virtual void Added ();  ; virtual Int_t GetMessageCount (Long_t messId) const;  Return counter for message with ID=messid. ;  ; Int_t GetSize () const;  ; virtual Int_t GetTotalMessageCount () const;  Return total number of messages. ;  ; Bool_t HandleDerived () const;  ; virtual void HandleMessage (Long_t id, const TObject *obj);  Store message origin, keep statistics and call Notify(). ;  ; TClass * IsA () const override;  ; virtual void Notified ();  ; Bool_t Notify ()",MatchSource.WIKI,doc/master/classTMessageHandler.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/classTMessageHandler.html
