id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:11690,Deployability,update,updated,11690,"; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped.; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Create a histogram that identifies th",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:12175,Deployability,update,updated,12175," the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped.; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with ",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:12945,Deployability,update,updated,12945,"aster rasterMask); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:489,Modifiability,extend,extends,489,". BufferedImageTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.awt.common; Class BufferedImageTools. java.lang.Object; qupath.lib.awt.common.BufferedImageTools. public final class BufferedImageTools; extends Object; Static methods for working with BufferedImages and QuPath objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static long; computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask). Count the number of above-threshold pixels in a specified band of a raster, with optional mask. static long; computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds). Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. static long[]; computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. static long[]; computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaste",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:4082,Modifiability,inherit,inherited,4082,"height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8bitColorType(int type). Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpolate). Resize the image to have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. static void; swapRGBOrder(BufferedImage img,; String order). Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale Buff",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:10266,Performance,perform,performed,10266,"nt finalHeight,; boolean smoothInterpolate); Resize the image to have the requested width/height, using area averaging and bilinear interpolation. Parameters:; img - input image to be resized; finalWidth - target output width; finalHeight - target output height; smoothInterpolate - if true, the resize method is permitted to use a smooth interpolation method.; If false, nearest-neighbor interpolation is used.; Returns:; resized image. computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - o",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:11199,Performance,perform,performed,11199,"e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped.; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created.",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:11598,Performance,perform,performance,11598,"ogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped.; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; Writab",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:13377,Performance,perform,performance,13377,"e skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds); Count the n",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:15020,Performance,perform,performance,15020,"tional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds); Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster). ",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:4156,Security,hash,hashCode,4156,"atic BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8bitColorType(int type). Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpolate). Resize the image to have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. static void; swapRGBOrder(BufferedImage img,; String order). Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html:884,Integrability,interface,interface,884,". AbstractObjectClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class AbstractObjectClassifier<T>. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. Direct Known Subclasses:; DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public abstract class AbstractObjectClassifier<T>; extends Object; implements ObjectClassifier<T>; Abstract class to help with the creation of object classifiers. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: O",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html:1632,Integrability,interface,interface,1632,"r, OpenCVModelObjectClassifier. public abstract class AbstractObjectClassifier<T>; extends Object; implements ObjectClassifier<T>; Abstract class to help with the creation of object classifiers. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<T>; Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.getCompatibleObjects(ImageData). getCompatibleObjects; public Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Description copied from inter",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html:1989,Integrability,interface,interface,1989,"t.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<T>; Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.getCompatibleObjects(ImageData). getCompatibleObjects; public Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Description copied from interface: ObjectClassifier; Get the objects from an ImageData that are compatible with this classifier. Specified by:; getCompatibleObjects in interface ObjectClassifier<T>; Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are found. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html:2257,Integrability,interface,interface,2257,"t.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<T>; Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.getCompatibleObjects(ImageData). getCompatibleObjects; public Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Description copied from interface: ObjectClassifier; Get the objects from an ImageData that are compatible with this classifier. Specified by:; getCompatibleObjects in interface ObjectClassifier<T>; Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are found. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html:2624,Integrability,interface,interface,2624,"t.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<T>; Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.getCompatibleObjects(ImageData). getCompatibleObjects; public Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Description copied from interface: ObjectClassifier; Get the objects from an ImageData that are compatible with this classifier. Specified by:; getCompatibleObjects in interface ObjectClassifier<T>; Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are found. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html:2768,Integrability,interface,interface,2768,"t.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<T>; Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.getCompatibleObjects(ImageData). getCompatibleObjects; public Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Description copied from interface: ObjectClassifier; Get the objects from an ImageData that are compatible with this classifier. Specified by:; getCompatibleObjects in interface ObjectClassifier<T>; Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are found. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html:711,Modifiability,extend,extends,711,". AbstractObjectClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class AbstractObjectClassifier<T>. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. Direct Known Subclasses:; DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public abstract class AbstractObjectClassifier<T>; extends Object; implements ObjectClassifier<T>; Abstract class to help with the creation of object classifiers. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: O",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html:869,Modifiability,inherit,inherited,869,". AbstractObjectClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class AbstractObjectClassifier<T>. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. Direct Known Subclasses:; DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public abstract class AbstractObjectClassifier<T>; extends Object; implements ObjectClassifier<T>; Abstract class to help with the creation of object classifiers. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: O",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html:1478,Modifiability,inherit,inherited,1478,"T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. Direct Known Subclasses:; DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public abstract class AbstractObjectClassifier<T>; extends Object; implements ObjectClassifier<T>; Abstract class to help with the creation of object classifiers. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<T>; Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.getCompatibleObjec",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html:1617,Modifiability,inherit,inherited,1617,"r, OpenCVModelObjectClassifier. public abstract class AbstractObjectClassifier<T>; extends Object; implements ObjectClassifier<T>; Abstract class to help with the creation of object classifiers. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<T>; Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.getCompatibleObjects(ImageData). getCompatibleObjects; public Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Description copied from inter",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html:1552,Security,hash,hashCode,1552,"r<T>. Direct Known Subclasses:; DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public abstract class AbstractObjectClassifier<T>; extends Object; implements ObjectClassifier<T>; Abstract class to help with the creation of object classifiers. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<T>; Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.getCompatibleObjects(ImageData). getCompatibleObjects; public Collection<PathObject> getCo",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html:4304,Availability,avail,available,4304,"s:; the number of objects whose classification was changed.; See Also:. getCompatibleObjects(ImageData). classifyObjects; int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. classifyObjects(ImageData, boolean); getCompatibleObjects(ImageData). getCompatibleObjects; Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Get the objects from an ImageData that are compatible with this classifier. Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are found. getMissingFeatures; Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html:561,Integrability,interface,interface,561,". ObjectClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Interface ObjectClassifier<T>. Type Parameters:; T - . All Known Implementing Classes:; AbstractObjectClassifier, DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public interface ObjectClassifier<T>; Interface defining object classifiers, which assign PathClasses to PathObjects. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROJECT_LOCATION. Default location to use when storing object classifiers in a project. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. getPathClasses; Collection<PathClass> getPat",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html:3119,Integrability,depend,depending,3119,"lassify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. getCompatibleObjects(ImageData). classifyObjects; int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. classifyObjects(ImageData, boolean); getCompatibleObjects(ImageData). getCompatibleObjects; Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Get the objects from an ImageData that are compatible with this classifier. Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are found. getMissingFeatures; Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be inclu",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html:1153,Modifiability,extend,extends,1153,"Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Interface ObjectClassifier<T>. Type Parameters:; T - . All Known Implementing Classes:; AbstractObjectClassifier, DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public interface ObjectClassifier<T>; Interface defining object classifiers, which assign PathClasses to PathObjects. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROJECT_LOCATION. Default location to use when storing object classifiers in a project. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. getPathClasses; Collection<PathClass> getPathClasses(); Get the classifications set by this classifier. Returns:. classifyObjects; int classifyObjects(ImageData<T> imageData,; boolean resetExisting",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html:1490,Modifiability,extend,extends,1490,"bjectClassifier, DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public interface ObjectClassifier<T>; Interface defining object classifiers, which assign PathClasses to PathObjects. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROJECT_LOCATION. Default location to use when storing object classifiers in a project. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. getPathClasses; Collection<PathClass> getPathClasses(); Get the classifications set by this classifier. Returns:. classifyObjects; int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html:2639,Modifiability,extend,extends,2639,"tPathClasses(). Get the classifications set by this classifier. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. getPathClasses; Collection<PathClass> getPathClasses(); Get the classifications set by this classifier. Returns:. classifyObjects; int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. getCompatibleObjects(ImageData). classifyObjects; int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. classifyObjects(ImageData, boolean); getCompatibleObjects(ImageData). getCompatibleObjects; Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Get the objects from an ImageData that are compatible with this classifier. Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are fo",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html:3759,Modifiability,extend,extends,3759,"s:; the number of objects whose classification was changed.; See Also:. getCompatibleObjects(ImageData). classifyObjects; int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. classifyObjects(ImageData, boolean); getCompatibleObjects(ImageData). getCompatibleObjects; Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Get the objects from an ImageData that are compatible with this classifier. Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are found. getMissingFeatures; Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html:2830,Safety,avoid,avoiding,2830,"hen storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. getPathClasses; Collection<PathClass> getPathClasses(); Get the classifications set by this classifier. Returns:. classifyObjects; int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. getCompatibleObjects(ImageData). classifyObjects; int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. classifyObjects(ImageData, boolean); getCompatibleObjects(ImageData). getCompatibleObjects; Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Get the objects from an ImageData that are compatible with this classifier. Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are found. getMissingFeatures; Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Check for missing featur",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html:4239,Testability,test,test,4239,"s:; the number of objects whose classification was changed.; See Also:. getCompatibleObjects(ImageData). classifyObjects; int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. classifyObjects(ImageData, boolean); getCompatibleObjects(ImageData). getCompatibleObjects; Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Get the objects from an ImageData that are compatible with this classifier. Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are found. getMissingFeatures; Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html:4270,Testability,test,test,4270,"s:; the number of objects whose classification was changed.; See Also:. getCompatibleObjects(ImageData). classifyObjects; int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. classifyObjects(ImageData, boolean); getCompatibleObjects(ImageData). getCompatibleObjects; Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Get the objects from an ImageData that are compatible with this classifier. Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are found. getMissingFeatures; Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html:688,Modifiability,extend,extends,688,". ObjectClassifiers.ClassifyByMeasurementBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers.ClassifyByMeasurementBuilder<T>. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Type Parameters:; T - . Enclosing class:; ObjectClassifiers. public static class ObjectClassifiers.ClassifyByMeasurementBuilder<T>; extends Object; Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. Constructor Summary; Constructors. Constructor; Description; ClassifyByMeasurementBuilder(String measurementName). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectClassifiers.ClassifyByMeasurementBuilder<T>; above(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value above the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; above(PathClass pathClass). Set the classification for objects for which the specified measurement has a value above the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; aboveEquals(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; aboveEquals(PathClass pathClass). Set the classification for objects for which the specified measurement has a value above or equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; below(String pathClassName). Set the classification ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html:3812,Modifiability,inherit,inherited,3812,"tBuilder<T>; cells(). Set the filter to accept cell objects only. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; detections(). Set the filter to accept all detection objects only. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(PathClass pathClass). Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; filter(PathObjectFilter filter). Define the filter used to identify objects compatible with this classifier. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; threshold(double threshold). Set the threshold value used for the classification. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; tiles(). Set the filter to accept tile objects only. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ClassifyByMeasurementBuilder; public ClassifyByMeasurementBuilder(String measurementName); Constructor. Parameters:; measurementName - name of the measurement used for classification (should be present within the object's MeasurementList). Method Details. filter; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> filter(PathObjectFilter filter); Define the filter used to identify objects compatible with this classifier. Parameters:; filter - ; Returns:; this builder. cells; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> cells(); Set the filter to accept cell objects only. Returns:; this builder. tiles; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> tiles(); Set the filter to accept tile objects only. Returns:; this builder. detections; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> detections(); Set the filter",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html:2937,Safety,detect,detections,2937,"easurementBuilder<T>; below(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value below the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; below(PathClass pathClass). Set the classification for objects for which the specified measurement has a value below the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; belowEquals(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value below or equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; belowEquals(PathClass pathClass). Set the classification for objects for which the specified measurement has a value below or equal to the threshold. ObjectClassifier<T>; build(). Build the classifier defined by the parameters of this builder. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; cells(). Set the filter to accept cell objects only. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; detections(). Set the filter to accept all detection objects only. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(PathClass pathClass). Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; filter(PathObjectFilter filter). Define the filter used to identify objects compatible with this classifier. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; threshold(double threshold). Set the threshold value used for the classification. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; tiles(). Set the filter to accept tile objects only. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wa",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html:2980,Safety,detect,detection,2980,". Set the classification (by name) for objects for which the specified measurement has a value below the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; below(PathClass pathClass). Set the classification for objects for which the specified measurement has a value below the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; belowEquals(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value below or equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; belowEquals(PathClass pathClass). Set the classification for objects for which the specified measurement has a value below or equal to the threshold. ObjectClassifier<T>; build(). Build the classifier defined by the parameters of this builder. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; cells(). Set the filter to accept cell objects only. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; detections(). Set the filter to accept all detection objects only. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(PathClass pathClass). Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; filter(PathObjectFilter filter). Define the filter used to identify objects compatible with this classifier. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; threshold(double threshold). Set the threshold value used for the classification. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; tiles(). Set the filter to accept tile objects only. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ClassifyByMea",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html:4724,Safety,detect,detections,4724,"lder<T>; tiles(). Set the filter to accept tile objects only. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ClassifyByMeasurementBuilder; public ClassifyByMeasurementBuilder(String measurementName); Constructor. Parameters:; measurementName - name of the measurement used for classification (should be present within the object's MeasurementList). Method Details. filter; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> filter(PathObjectFilter filter); Define the filter used to identify objects compatible with this classifier. Parameters:; filter - ; Returns:; this builder. cells; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> cells(); Set the filter to accept cell objects only. Returns:; this builder. tiles; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> tiles(); Set the filter to accept tile objects only. Returns:; this builder. detections; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> detections(); Set the filter to accept all detection objects only. Returns:; this builder. threshold; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> threshold(double threshold); Set the threshold value used for the classification. Parameters:; threshold - ; Returns:; this builder. above; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> above(String pathClassName); Set the classification (by name) for objects for which the specified measurement has a value above the threshold. Parameters:; pathClassName - ; Returns:; this builder; See Also:. threshold(double). aboveEquals; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> aboveEquals(String pathClassName); Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. Parameters:; pathClassName - ; Returns:; this builder; See Also:. threshold(double). belowEquals; public ObjectClassifiers.ClassifyByM",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html:4793,Safety,detect,detections,4793,"s inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ClassifyByMeasurementBuilder; public ClassifyByMeasurementBuilder(String measurementName); Constructor. Parameters:; measurementName - name of the measurement used for classification (should be present within the object's MeasurementList). Method Details. filter; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> filter(PathObjectFilter filter); Define the filter used to identify objects compatible with this classifier. Parameters:; filter - ; Returns:; this builder. cells; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> cells(); Set the filter to accept cell objects only. Returns:; this builder. tiles; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> tiles(); Set the filter to accept tile objects only. Returns:; this builder. detections; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> detections(); Set the filter to accept all detection objects only. Returns:; this builder. threshold; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> threshold(double threshold); Set the threshold value used for the classification. Parameters:; threshold - ; Returns:; this builder. above; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> above(String pathClassName); Set the classification (by name) for objects for which the specified measurement has a value above the threshold. Parameters:; pathClassName - ; Returns:; this builder; See Also:. threshold(double). aboveEquals; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> aboveEquals(String pathClassName); Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. Parameters:; pathClassName - ; Returns:; this builder; See Also:. threshold(double). belowEquals; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> belowEquals(String pathClassName); Set the clas",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html:4836,Safety,detect,detection,4836,"s inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ClassifyByMeasurementBuilder; public ClassifyByMeasurementBuilder(String measurementName); Constructor. Parameters:; measurementName - name of the measurement used for classification (should be present within the object's MeasurementList). Method Details. filter; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> filter(PathObjectFilter filter); Define the filter used to identify objects compatible with this classifier. Parameters:; filter - ; Returns:; this builder. cells; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> cells(); Set the filter to accept cell objects only. Returns:; this builder. tiles; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> tiles(); Set the filter to accept tile objects only. Returns:; this builder. detections; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> detections(); Set the filter to accept all detection objects only. Returns:; this builder. threshold; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> threshold(double threshold); Set the threshold value used for the classification. Parameters:; threshold - ; Returns:; this builder. above; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> above(String pathClassName); Set the classification (by name) for objects for which the specified measurement has a value above the threshold. Parameters:; pathClassName - ; Returns:; this builder; See Also:. threshold(double). aboveEquals; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> aboveEquals(String pathClassName); Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. Parameters:; pathClassName - ; Returns:; this builder; See Also:. threshold(double). belowEquals; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> belowEquals(String pathClassName); Set the clas",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html:3886,Security,hash,hashCode,3886,"Classifiers.ClassifyByMeasurementBuilder<T>; detections(). Set the filter to accept all detection objects only. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(PathClass pathClass). Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; filter(PathObjectFilter filter). Define the filter used to identify objects compatible with this classifier. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; threshold(double threshold). Set the threshold value used for the classification. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; tiles(). Set the filter to accept tile objects only. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ClassifyByMeasurementBuilder; public ClassifyByMeasurementBuilder(String measurementName); Constructor. Parameters:; measurementName - name of the measurement used for classification (should be present within the object's MeasurementList). Method Details. filter; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> filter(PathObjectFilter filter); Define the filter used to identify objects compatible with this classifier. Parameters:; filter - ; Returns:; this builder. cells; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> cells(); Set the filter to accept cell objects only. Returns:; this builder. tiles; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> tiles(); Set the filter to accept tile objects only. Returns:; this builder. detections; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> detections(); Set the filter to accept all detection objects only. Returns:; this builder. threshold",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html:724,Usability,simpl,simple,724,". ObjectClassifiers.ClassifyByMeasurementBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers.ClassifyByMeasurementBuilder<T>. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Type Parameters:; T - . Enclosing class:; ObjectClassifiers. public static class ObjectClassifiers.ClassifyByMeasurementBuilder<T>; extends Object; Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. Constructor Summary; Constructors. Constructor; Description; ClassifyByMeasurementBuilder(String measurementName). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectClassifiers.ClassifyByMeasurementBuilder<T>; above(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value above the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; above(PathClass pathClass). Set the classification for objects for which the specified measurement has a value above the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; aboveEquals(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; aboveEquals(PathClass pathClass). Set the classification for objects for which the specified measurement has a value above or equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; below(String pathClassName). Set the classification ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html:495,Modifiability,extend,extends,495,". ObjectClassifiers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers. public class ObjectClassifiers; extends Object; Helper class for creating ObjectClassifiers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. static class ; ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. Constructor Summary; Constructors. Constructor; Description; ObjectClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> ObjectClassifier<T>; createChannelClassifier(PathObjectFilter filter,; ImageChannel channel,; String measurement,; double threshold). Create a classifier that thresholds a single measurement, assigning a class based on an ImageChannel ; if the value is ≥ threshold. static <T> ObjectClassifier<T>; createCompositeClassifier(Collection<ObjectClassifier<T>> classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static <T> ObjectClassifier<T>; createCompositeClassifier(ObjectClassifier<T>... classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static TypeAdapterFactory; getTypeAdapterFactory(). Get a TypeAdapterFactory",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html:2250,Modifiability,inherit,inherited,2250,"<T>; createChannelClassifier(PathObjectFilter filter,; ImageChannel channel,; String measurement,; double threshold). Create a classifier that thresholds a single measurement, assigning a class based on an ImageChannel ; if the value is ≥ threshold. static <T> ObjectClassifier<T>; createCompositeClassifier(Collection<ObjectClassifier<T>> classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static <T> ObjectClassifier<T>; createCompositeClassifier(ObjectClassifier<T>... classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static TypeAdapterFactory; getTypeAdapterFactory(). Get a TypeAdapterFactory to handle ObjectClassifier instances. static <T> ObjectClassifier<T>; readClassifier(Path path). Read the classifier from a file. static <T> void; writeClassifier(ObjectClassifier<T> classifier,; Path path). Write the classifier to a file. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifiers; public ObjectClassifiers(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get a TypeAdapterFactory to handle ObjectClassifier instances. Returns:. createCompositeClassifier; public static <T> ObjectClassifier<T> createCompositeClassifier(ObjectClassifier<T>... classifiers); Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers.; This can be used for multiplexed images, where a single classifier may be trained for each marker. Type Parameters:; T - ; Parameters:; classifiers - an array of classifiers to combine; Returns:; the composite object classifier. createCompositeClassifier; public static <T> ObjectClassifier<T> createCompositeClassifier(Collection<ObjectClassifier<T>> classifiers); Create a composite ObjectClassifier,",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html:2324,Security,hash,hashCode,2324,"nel,; String measurement,; double threshold). Create a classifier that thresholds a single measurement, assigning a class based on an ImageChannel ; if the value is ≥ threshold. static <T> ObjectClassifier<T>; createCompositeClassifier(Collection<ObjectClassifier<T>> classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static <T> ObjectClassifier<T>; createCompositeClassifier(ObjectClassifier<T>... classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static TypeAdapterFactory; getTypeAdapterFactory(). Get a TypeAdapterFactory to handle ObjectClassifier instances. static <T> ObjectClassifier<T>; readClassifier(Path path). Read the classifier from a file. static <T> void; writeClassifier(ObjectClassifier<T> classifier,; Path path). Write the classifier to a file. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifiers; public ObjectClassifiers(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get a TypeAdapterFactory to handle ObjectClassifier instances. Returns:. createCompositeClassifier; public static <T> ObjectClassifier<T> createCompositeClassifier(ObjectClassifier<T>... classifiers); Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers.; This can be used for multiplexed images, where a single classifier may be trained for each marker. Type Parameters:; T - ; Parameters:; classifiers - an array of classifiers to combine; Returns:; the composite object classifier. createCompositeClassifier; public static <T> ObjectClassifier<T> createCompositeClassifier(Collection<ObjectClassifier<T>> classifiers); Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers.",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html:743,Usability,simpl,simple,743,". ObjectClassifiers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers. public class ObjectClassifiers; extends Object; Helper class for creating ObjectClassifiers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. static class ; ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. Constructor Summary; Constructors. Constructor; Description; ObjectClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> ObjectClassifier<T>; createChannelClassifier(PathObjectFilter filter,; ImageChannel channel,; String measurement,; double threshold). Create a classifier that thresholds a single measurement, assigning a class based on an ImageChannel ; if the value is ≥ threshold. static <T> ObjectClassifier<T>; createCompositeClassifier(Collection<ObjectClassifier<T>> classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static <T> ObjectClassifier<T>; createCompositeClassifier(ObjectClassifier<T>... classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static TypeAdapterFactory; getTypeAdapterFactory(). Get a TypeAdapterFactory",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html:1633,Integrability,interface,interface,1633,". ObjectClassifiers.ObjectClassifierTypeAdapterFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers.ObjectClassifierTypeAdapterFactory. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; ObjectClassifiers. public static class ObjectClassifiers.ObjectClassifierTypeAdapterFactory; extends Object; implements TypeAdapterFactory; TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <T> TypeAdapter<T>; create(Gson gson,; TypeToken<T> type);  ; static void; registerSubtype(Class<? extends ObjectClassifier> cls). Register a new ObjectClassifier subtype for compatibility with Gson serialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. registerSubtype; public static void registerSubtype(Class<? extends ObjectClassifier> cls); Register a new ObjectClassifier subtype for compatibility with Gson serialization. Parameters:; cls - . create; public <T> TypeAdapter<T> create(Gson gson,; TypeToken<T> type). Specified by:; create in interface TypeAdapterFactory. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html:728,Modifiability,extend,extends,728,". ObjectClassifiers.ObjectClassifierTypeAdapterFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers.ObjectClassifierTypeAdapterFactory. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; ObjectClassifiers. public static class ObjectClassifiers.ObjectClassifierTypeAdapterFactory; extends Object; implements TypeAdapterFactory; TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <T> TypeAdapter<T>; create(Gson gson,; TypeToken<T> type);  ; static void; registerSubtype(Class<? extends ObjectClassifier> cls). Register a new ObjectClassifier subtype for compatibility with Gson serialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. registerSubtype; public static void registerSubtype(Class<? extends ObjectClassifier> cls); Register a new ObjectClassifier subtype for compatibility with Gson serialization. Parameters:; cls - . create; public <T> TypeAdapter<T> create(Gson gson,; TypeToken<T> type). Specified by:; create in interface TypeAdapterFactory. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html:1069,Modifiability,extend,extends,1069,". ObjectClassifiers.ObjectClassifierTypeAdapterFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers.ObjectClassifierTypeAdapterFactory. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; ObjectClassifiers. public static class ObjectClassifiers.ObjectClassifierTypeAdapterFactory; extends Object; implements TypeAdapterFactory; TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <T> TypeAdapter<T>; create(Gson gson,; TypeToken<T> type);  ; static void; registerSubtype(Class<? extends ObjectClassifier> cls). Register a new ObjectClassifier subtype for compatibility with Gson serialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. registerSubtype; public static void registerSubtype(Class<? extends ObjectClassifier> cls); Register a new ObjectClassifier subtype for compatibility with Gson serialization. Parameters:; cls - . create; public <T> TypeAdapter<T> create(Gson gson,; TypeToken<T> type). Specified by:; create in interface TypeAdapterFactory. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html:1192,Modifiability,inherit,inherited,1192,". ObjectClassifiers.ObjectClassifierTypeAdapterFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers.ObjectClassifierTypeAdapterFactory. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; ObjectClassifiers. public static class ObjectClassifiers.ObjectClassifierTypeAdapterFactory; extends Object; implements TypeAdapterFactory; TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <T> TypeAdapter<T>; create(Gson gson,; TypeToken<T> type);  ; static void; registerSubtype(Class<? extends ObjectClassifier> cls). Register a new ObjectClassifier subtype for compatibility with Gson serialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. registerSubtype; public static void registerSubtype(Class<? extends ObjectClassifier> cls); Register a new ObjectClassifier subtype for compatibility with Gson serialization. Parameters:; cls - . create; public <T> TypeAdapter<T> create(Gson gson,; TypeToken<T> type). Specified by:; create in interface TypeAdapterFactory. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html:1399,Modifiability,extend,extends,1399,". ObjectClassifiers.ObjectClassifierTypeAdapterFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers.ObjectClassifierTypeAdapterFactory. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; ObjectClassifiers. public static class ObjectClassifiers.ObjectClassifierTypeAdapterFactory; extends Object; implements TypeAdapterFactory; TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <T> TypeAdapter<T>; create(Gson gson,; TypeToken<T> type);  ; static void; registerSubtype(Class<? extends ObjectClassifier> cls). Register a new ObjectClassifier subtype for compatibility with Gson serialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. registerSubtype; public static void registerSubtype(Class<? extends ObjectClassifier> cls); Register a new ObjectClassifier subtype for compatibility with Gson serialization. Parameters:; cls - . create; public <T> TypeAdapter<T> create(Gson gson,; TypeToken<T> type). Specified by:; create in interface TypeAdapterFactory. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html:1266,Security,hash,hashCode,1266,". ObjectClassifiers.ObjectClassifierTypeAdapterFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers.ObjectClassifierTypeAdapterFactory. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; ObjectClassifiers. public static class ObjectClassifiers.ObjectClassifierTypeAdapterFactory; extends Object; implements TypeAdapterFactory; TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <T> TypeAdapter<T>; create(Gson gson,; TypeToken<T> type);  ; static void; registerSubtype(Class<? extends ObjectClassifier> cls). Register a new ObjectClassifier subtype for compatibility with Gson serialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. registerSubtype; public static void registerSubtype(Class<? extends ObjectClassifier> cls); Register a new ObjectClassifier subtype for compatibility with Gson serialization. Parameters:; cls - . create; public <T> TypeAdapter<T> create(Gson gson,; TypeToken<T> type). Specified by:; create in interface TypeAdapterFactory. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/package-summary.html:517,Integrability,interface,interfaces,517,". qupath.lib.classifiers.object (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.classifiers.object. package qupath.lib.classifiers.object. Classes for object classification in QuPath. Related Packages. Package; Description; qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.pixel. Core support for pixel classification. All Classes and InterfacesInterfacesClasses. Class; Description; AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/package-summary.html:547,Usability,learn,learning,547,". qupath.lib.classifiers.object (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.classifiers.object. package qupath.lib.classifiers.object. Classes for object classification in QuPath. Related Packages. Package; Description; qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.pixel. Core support for pixel classification. All Classes and InterfacesInterfacesClasses. Class; Description; AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/package-summary.html:1032,Usability,simpl,simple,1032,". qupath.lib.classifiers.object (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.classifiers.object. package qupath.lib.classifiers.object. Classes for object classification in QuPath. Related Packages. Package; Description; qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.pixel. Core support for pixel classification. All Classes and InterfacesInterfacesClasses. Class; Description; AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/object/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/package-summary.html:508,Integrability,interface,interfaces,508,. qupath.lib.classifiers.pixel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.classifiers.pixel. package qupath.lib.classifiers.pixel. Core support for pixel classification. Related Packages. Package; Description; qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. All Classes and InterfacesInterfacesClasses. Class; Description; PixelClassificationImageServer. ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. PixelClassifier. Interface defining a pixel classifier. PixelClassifierMetadata. Metadata to control the behavior of a pixel classifier. PixelClassifierMetadata.Builder. Builder to create PixelClassifierMetadata objects. ,MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/package-summary.html:538,Usability,learn,learning,538,. qupath.lib.classifiers.pixel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.classifiers.pixel. package qupath.lib.classifiers.pixel. Core support for pixel classification. Related Packages. Package; Description; qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. All Classes and InterfacesInterfacesClasses. Class; Description; PixelClassificationImageServer. ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. PixelClassifier. Interface defining a pixel classifier. PixelClassifierMetadata. Metadata to control the behavior of a pixel classifier. PixelClassifierMetadata.Builder. Builder to create PixelClassifierMetadata objects. ,MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:7785,Availability,avail,available,7785,"geServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<BufferedImage>; Overrides:; getCachedTile in class AbstractImageServer<BufferedImage>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:3210,Integrability,interface,interface,3210,"id; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Constructor.; ; An ImageData is required because some forms of classification may required additional image properties ; (e.g. image type, stains), not simply an ImageServer. Parameters:; imageData - ; classifier - . PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel); Constructor. Parameters:; imageData - ; classifier - ; customID - optionally provide a custom ID (path). This is when the default (based upon the ImageData and PixelClassifier isn't sufficient), ; e.g. because the classifier can change output based upon ImageData status.; colorModel - optional colormodel. Method Details. readAllTi",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:4412,Integrability,depend,dependent,4412,"geData<BufferedImage> imageData,; PixelClassifier classifier); Constructor.; ; An ImageData is required because some forms of classification may required additional image properties ; (e.g. image type, stains), not simply an ImageServer. Parameters:; imageData - ; classifier - . PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel); Constructor. Parameters:; imageData - ; classifier - ; customID - optionally provide a custom ID (path). This is when the default (based upon the ImageData and PixelClassifier isn't sufficient), ; e.g. because the classifier can change output based upon ImageData status.; colorModel - optional colormodel. Method Details. readAllTiles; public void readAllTiles(); Read all the tiles.; This is useful for a classifier that can be applied in full to an image without causing memory issues ; (e.g. a density map), particularly if it is is dependent upon a changing property of the image ; (e.g. its object hierarchy).; After calling this method, tiles will be returned from an internal cache rather than being computed anew. getDefaultColorModel; protected ColorModel getDefaultColorModel(); throws IOException; Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:; Throws:; IOException. createID; protected String createID(); Returns a random UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this serve",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:5347,Integrability,interface,interface,5347,"memory issues ; (e.g. a density map), particularly if it is is dependent upon a changing property of the image ; (e.g. its object hierarchy).; After calling this method, tiles will be returned from an internal cache rather than being computed anew. getDefaultColorModel; protected ColorModel getDefaultColorModel(); throws IOException; Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:; Throws:; IOException. createID; protected String createID(); Returns a random UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the underlying ImageData used for classification. Returns:. getClassifier; public PixelClassifier getClassifier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: Ima",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:5602,Integrability,depend,depend,5602,"than being computed anew. getDefaultColorModel; protected ColorModel getDefaultColorModel(); throws IOException; Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:; Throws:; IOException. createID; protected String createID(); Returns a random UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the underlying ImageData used for classification. Returns:. getClassifier; public PixelClassifier getClassifier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); thr",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:6098,Integrability,interface,interface,6098,"IOException. createID; protected String createID(); Returns a random UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the underlying ImageData used for classification. Returns:. getClassifier; public PixelClassifier getClassifier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait fo",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:6336,Integrability,interface,interface,6336,"tion copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the underlying ImageData used for classification. Returns:. getClassifier; public PixelClassifier getClassifier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; I",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:6693,Integrability,interface,interface,6693,"ilder(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the underlying ImageData used for classification. Returns:. getClassifier; public PixelClassifier getClassifier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<BufferedImage>; Overrides:; getCachedTile in class AbstractImageServer<BufferedImage>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:7583,Integrability,interface,interface,7583,"geServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<BufferedImage>; Overrides:; getCachedTile in class AbstractImageServer<BufferedImage>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:734,Modifiability,extend,extends,734,". PixelClassificationImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.pixel; Class PixelClassificationImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.classifiers.pixel.PixelClassificationImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class PixelClassificationImageServer; extends AbstractTileableImageServer; ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Constructor. PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a random UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). BufferedImage; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. PixelClassifier; getClassifier(). Get the PixelClassifier performing the classification. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. ImageData<BufferedImage>; getImageData(). Get the underlying ImageData used for classification. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; g",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:2444,Modifiability,inherit,inherited,2444,"turns null (does not support ServerBuilders). BufferedImage; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. PixelClassifier; getClassifier(). Get the PixelClassifier performing the classification. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. ImageData<BufferedImage>; getImageData(). Get the underlying ImageData used for classification. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. void; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; Pix",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:2626,Modifiability,inherit,inherited,2626,"er(). Get the PixelClassifier performing the classification. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. ImageData<BufferedImage>; getImageData(). Get the underlying ImageData used for classification. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. void; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Constructor.; ; An ImageData is required because some forms of classification may required additional image properties ; (e.g. image type, stains), not simp",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:3076,Modifiability,inherit,inherited,3076," library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. void; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Constructor.; ; An ImageData is required because some forms of classification may required additional image properties ; (e.g. image type, stains), not simply an ImageServer. Parameters:; imageData - ; classifier - . PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel); Constructor. Parameters:; imageData - ; classifier - ; customID - optionally provide a custom ID (path). This is when the default (based upon the ImageData and PixelClassifier isn't sufficient), ; e.g. because ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:3195,Modifiability,inherit,inherited,3195,"id; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Constructor.; ; An ImageData is required because some forms of classification may required additional image properties ; (e.g. image type, stains), not simply an ImageServer. Parameters:; imageData - ; classifier - . PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel); Constructor. Parameters:; imageData - ; classifier - ; customID - optionally provide a custom ID (path). This is when the default (based upon the ImageData and PixelClassifier isn't sufficient), ; e.g. because the classifier can change output based upon ImageData status.; colorModel - optional colormodel. Method Details. readAllTi",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:1553,Performance,cache,cached,1553,"rs.pixel.PixelClassificationImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class PixelClassificationImageServer; extends AbstractTileableImageServer; ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Constructor. PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a random UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). BufferedImage; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. PixelClassifier; getClassifier(). Get the PixelClassifier performing the classification. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. ImageData<BufferedImage>; getImageData(). Get the underlying ImageData used for classification. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. void; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmpt",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:1599,Performance,cache,cached,1599,"rs.pixel.PixelClassificationImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class PixelClassificationImageServer; extends AbstractTileableImageServer; ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Constructor. PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a random UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). BufferedImage; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. PixelClassifier; getClassifier(). Get the PixelClassifier performing the classification. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. ImageData<BufferedImage>; getImageData(). Get the underlying ImageData used for classification. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. void; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmpt",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:1665,Performance,perform,performing,1665,"erver<BufferedImage>. public class PixelClassificationImageServer; extends AbstractTileableImageServer; ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Constructor. PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a random UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). BufferedImage; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. PixelClassifier; getClassifier(). Get the PixelClassifier performing the classification. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. ImageData<BufferedImage>; getImageData(). Get the underlying ImageData used for classification. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. void; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.ser",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:4559,Performance,cache,cache,4559,"classification may required additional image properties ; (e.g. image type, stains), not simply an ImageServer. Parameters:; imageData - ; classifier - . PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel); Constructor. Parameters:; imageData - ; classifier - ; customID - optionally provide a custom ID (path). This is when the default (based upon the ImageData and PixelClassifier isn't sufficient), ; e.g. because the classifier can change output based upon ImageData status.; colorModel - optional colormodel. Method Details. readAllTiles; public void readAllTiles(); Read all the tiles.; This is useful for a classifier that can be applied in full to an image without causing memory issues ; (e.g. a density map), particularly if it is is dependent upon a changing property of the image ; (e.g. its object hierarchy).; After calling this method, tiles will be returned from an internal cache rather than being computed anew. getDefaultColorModel; protected ColorModel getDefaultColorModel(); throws IOException; Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:; Throws:; IOException. createID; protected String createID(); Returns a random UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers ma",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:5987,Performance,perform,performing,5987,"r implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:; Throws:; IOException. createID; protected String createID(); Returns a random UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the underlying ImageData used for classification. Returns:. getClassifier; public PixelClassifier getClassifier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from cla",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:6993,Performance,cache,cached,6993,"fier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<BufferedImage>; Overrides:; getCachedTile in class AbstractImageServer<BufferedImage>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageSer",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:7039,Performance,cache,cached,7039,"fier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<BufferedImage>; Overrides:; getCachedTile in class AbstractImageServer<BufferedImage>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageSer",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:7180,Performance,cache,cached,7180,"ide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<BufferedImage>; Overrides:; getCachedTile in class AbstractImageServer<BufferedImage>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder()",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:7245,Performance,perform,performance,7245,"ide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<BufferedImage>; Overrides:; getCachedTile in class AbstractImageServer<BufferedImage>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder()",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:7748,Performance,cache,cached,7748,"geServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<BufferedImage>; Overrides:; getCachedTile in class AbstractImageServer<BufferedImage>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:7770,Performance,cache,cached,7770,"geServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<BufferedImage>; Overrides:; getCachedTile in class AbstractImageServer<BufferedImage>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:3140,Security,hash,hashCode,3140,"URIs(). Get the URIs for images required for this server. void; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Constructor.; ; An ImageData is required because some forms of classification may required additional image properties ; (e.g. image type, stains), not simply an ImageServer. Parameters:; imageData - ; classifier - . PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel); Constructor. Parameters:; imageData - ; classifier - ; customID - optionally provide a custom ID (path). This is when the default (based upon the ImageData and PixelClassifier isn't sufficient), ; e.g. because the classifier can change output based upon ImageData status.;",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:3632,Usability,simpl,simply,3632,"rited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Constructor.; ; An ImageData is required because some forms of classification may required additional image properties ; (e.g. image type, stains), not simply an ImageServer. Parameters:; imageData - ; classifier - . PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel); Constructor. Parameters:; imageData - ; classifier - ; customID - optionally provide a custom ID (path). This is when the default (based upon the ImageData and PixelClassifier isn't sufficient), ; e.g. because the classifier can change output based upon ImageData status.; colorModel - optional colormodel. Method Details. readAllTiles; public void readAllTiles(); Read all the tiles.; This is useful for a classifier that can be applied in full to an image without causing memory issues ; (e.g. a density map), particularly if it is is dependent upon a changing property of the image ; (e.g. its object hierarchy).; After calling this method, tiles will be returned from an internal cache rather than being computed anew. getDefaultColorModel; protected ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:5430,Usability,simpl,simplest,5430," its object hierarchy).; After calling this method, tiles will be returned from an internal cache rather than being computed anew. getDefaultColorModel; protected ColorModel getDefaultColorModel(); throws IOException; Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:; Throws:; IOException. createID; protected String createID(); Returns a random UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the underlying ImageData used for classification. Returns:. getClassifier; public PixelClassifier getClassifier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:5722,Usability,simpl,simple,5722," class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:; Throws:; IOException. createID; protected String createID(); Returns a random UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the underlying ImageData used for classification. Returns:. getClassifier; public PixelClassifier getClassifier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageS",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html:2248,Availability,down,downsampling,2248,"hod; Description; BufferedImage; applyClassification(ImageData<BufferedImage> server,; RegionRequest request). Apply pixel classifier to a specified region of an image. PixelClassifierMetadata; getMetadata(). Get metadata that describes how the classifier should be called, and the kind of output it provides. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether the classifier supports a particular image. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether the classifier supports a particular image.; It may not if the number of channels (for example) is incompatible. Parameters:; imageData - ; Returns:. applyClassification; BufferedImage applyClassification(ImageData<BufferedImage> server,; RegionRequest request); throws IOException; Apply pixel classifier to a specified region of an image.; ; An ImageData and RegionRequest are supplied, rather ; than a BufferedImage directly, because there may be a need to adapt ; to the image resolution and/or incorporate padding to reduce boundary effects.; ; There is no guarantee that the returned BufferedImage will be the same size ; as the input region (after downsampling), but rather that it should contain the full ; classification information for the specified region.; ; Practically, this means that there may be fewer pixels in the output because the classification ; inherently involves downsampling. Parameters:; server - ; request - ; Returns:; a BufferedImage representing the pixel classifications as separate bands.; Throws:; IOException - if unable to read pixels from server. getMetadata; PixelClassifierMetadata getMetadata(); Get metadata that describes how the classifier should be called, and the kind of output it provides. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html:2482,Availability,down,downsampling,2482,"hod; Description; BufferedImage; applyClassification(ImageData<BufferedImage> server,; RegionRequest request). Apply pixel classifier to a specified region of an image. PixelClassifierMetadata; getMetadata(). Get metadata that describes how the classifier should be called, and the kind of output it provides. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether the classifier supports a particular image. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether the classifier supports a particular image.; It may not if the number of channels (for example) is incompatible. Parameters:; imageData - ; Returns:. applyClassification; BufferedImage applyClassification(ImageData<BufferedImage> server,; RegionRequest request); throws IOException; Apply pixel classifier to a specified region of an image.; ; An ImageData and RegionRequest are supplied, rather ; than a BufferedImage directly, because there may be a need to adapt ; to the image resolution and/or incorporate padding to reduce boundary effects.; ; There is no guarantee that the returned BufferedImage will be the same size ; as the input region (after downsampling), but rather that it should contain the full ; classification information for the specified region.; ; Practically, this means that there may be fewer pixels in the output because the classification ; inherently involves downsampling. Parameters:; server - ; request - ; Returns:; a BufferedImage representing the pixel classifications as separate bands.; Throws:; IOException - if unable to read pixels from server. getMetadata; PixelClassifierMetadata getMetadata(); Get metadata that describes how the classifier should be called, and the kind of output it provides. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html:2053,Energy Efficiency,adapt,adapt,2053,"hod; Description; BufferedImage; applyClassification(ImageData<BufferedImage> server,; RegionRequest request). Apply pixel classifier to a specified region of an image. PixelClassifierMetadata; getMetadata(). Get metadata that describes how the classifier should be called, and the kind of output it provides. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether the classifier supports a particular image. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether the classifier supports a particular image.; It may not if the number of channels (for example) is incompatible. Parameters:; imageData - ; Returns:. applyClassification; BufferedImage applyClassification(ImageData<BufferedImage> server,; RegionRequest request); throws IOException; Apply pixel classifier to a specified region of an image.; ; An ImageData and RegionRequest are supplied, rather ; than a BufferedImage directly, because there may be a need to adapt ; to the image resolution and/or incorporate padding to reduce boundary effects.; ; There is no guarantee that the returned BufferedImage will be the same size ; as the input region (after downsampling), but rather that it should contain the full ; classification information for the specified region.; ; Practically, this means that there may be fewer pixels in the output because the classification ; inherently involves downsampling. Parameters:; server - ; request - ; Returns:; a BufferedImage representing the pixel classifications as separate bands.; Throws:; IOException - if unable to read pixels from server. getMetadata; PixelClassifierMetadata getMetadata(); Get metadata that describes how the classifier should be called, and the kind of output it provides. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html:2115,Energy Efficiency,reduce,reduce,2115,"hod; Description; BufferedImage; applyClassification(ImageData<BufferedImage> server,; RegionRequest request). Apply pixel classifier to a specified region of an image. PixelClassifierMetadata; getMetadata(). Get metadata that describes how the classifier should be called, and the kind of output it provides. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether the classifier supports a particular image. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether the classifier supports a particular image.; It may not if the number of channels (for example) is incompatible. Parameters:; imageData - ; Returns:. applyClassification; BufferedImage applyClassification(ImageData<BufferedImage> server,; RegionRequest request); throws IOException; Apply pixel classifier to a specified region of an image.; ; An ImageData and RegionRequest are supplied, rather ; than a BufferedImage directly, because there may be a need to adapt ; to the image resolution and/or incorporate padding to reduce boundary effects.; ; There is no guarantee that the returned BufferedImage will be the same size ; as the input region (after downsampling), but rather that it should contain the full ; classification information for the specified region.; ; Practically, this means that there may be fewer pixels in the output because the classification ; inherently involves downsampling. Parameters:; server - ; request - ; Returns:; a BufferedImage representing the pixel classifications as separate bands.; Throws:; IOException - if unable to read pixels from server. getMetadata; PixelClassifierMetadata getMetadata(); Get metadata that describes how the classifier should be called, and the kind of output it provides. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html:402,Integrability,interface,interface,402,". PixelClassifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.pixel; Interface PixelClassifier. public interface PixelClassifier; Interface defining a pixel classifier.; ; Pixel classifiers can be applied directly to an image, typically using colors and textures. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROJECT_LOCATION. Default location to use when storing object classifiers in a project. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; BufferedImage; applyClassification(ImageData<BufferedImage> server,; RegionRequest request). Apply pixel classifier to a specified region of an image. PixelClassifierMetadata; getMetadata(). Get metadata that describes how the classifier should be called, and the kind of output it provides. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether the classifier supports a particular image. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether the classifier supports a particular image.; It may not if the number of channels (for example) is incompatible. Parameters:; imageData - ; Returns:. applyClassification; BufferedImage applyClassification(ImageData<BufferedImage> server,; RegionRequest request); throws IOException; Apply pixel classifier to a specified region of an image.; ; An ImageData and RegionRequest are supplied, rather ; than a Buf",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html:2053,Modifiability,adapt,adapt,2053,"hod; Description; BufferedImage; applyClassification(ImageData<BufferedImage> server,; RegionRequest request). Apply pixel classifier to a specified region of an image. PixelClassifierMetadata; getMetadata(). Get metadata that describes how the classifier should be called, and the kind of output it provides. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether the classifier supports a particular image. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether the classifier supports a particular image.; It may not if the number of channels (for example) is incompatible. Parameters:; imageData - ; Returns:. applyClassification; BufferedImage applyClassification(ImageData<BufferedImage> server,; RegionRequest request); throws IOException; Apply pixel classifier to a specified region of an image.; ; An ImageData and RegionRequest are supplied, rather ; than a BufferedImage directly, because there may be a need to adapt ; to the image resolution and/or incorporate padding to reduce boundary effects.; ; There is no guarantee that the returned BufferedImage will be the same size ; as the input region (after downsampling), but rather that it should contain the full ; classification information for the specified region.; ; Practically, this means that there may be fewer pixels in the output because the classification ; inherently involves downsampling. Parameters:; server - ; request - ; Returns:; a BufferedImage representing the pixel classifications as separate bands.; Throws:; IOException - if unable to read pixels from server. getMetadata; PixelClassifierMetadata getMetadata(); Get metadata that describes how the classifier should be called, and the kind of output it provides. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html:2407,Energy Efficiency,reduce,reduce,2407,"width,; int height). Preferred input image width and height. PixelClassifierMetadata.Builder; outputChannels(Collection<ImageChannel> channels). Specify channels for output. PixelClassifierMetadata.Builder; outputChannels(ImageChannel... channels). Specify channels for output. PixelClassifierMetadata.Builder; outputPixelType(PixelType pixelType). Output pixel type. PixelClassifierMetadata.Builder; setChannelType(ImageServerMetadata.ChannelType type). Specify the output channel type. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. build; public PixelClassifierMetadata build(); Build a new PixelClassifierMetadata object. Returns:. inputPadding; public PixelClassifierMetadata.Builder inputPadding(int inputPadding); Amount of padding requested for the left, right, top and bottom of the image tile being classified.; This can be used to reduce boundary artifacts. Parameters:; inputPadding - ; Returns:. setChannelType; public PixelClassifierMetadata.Builder setChannelType(ImageServerMetadata.ChannelType type); Specify the output channel type. Parameters:; type - ; Returns:. inputResolution; public PixelClassifierMetadata.Builder inputResolution(PixelCalibration inputResolution); Pixel size defining the resolution at which the classifier should operate. Parameters:; inputResolution - ; Returns:. inputShape; public PixelClassifierMetadata.Builder inputShape(int width,; int height); Preferred input image width and height. This may either be a hint or strictly enforced. Parameters:; width - ; height - ; Returns:. outputPixelType; public PixelClassifierMetadata.Builder outputPixelType(PixelType pixelType); Output pixel type. Parameters:; pixelType - ; Returns:. outputChannels; public PixelClassifierMetadata.Builder outputChannels(ImageChannel... channels); Specify channels for output. Parameters:; channels - ; Returns:. outpu",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html:599,Modifiability,extend,extends,599,". PixelClassifierMetadata.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.pixel; Class PixelClassifierMetadata.Builder. java.lang.Object; qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Enclosing class:; PixelClassifierMetadata. public static class PixelClassifierMetadata.Builder; extends Object; Builder to create PixelClassifierMetadata objects. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelClassifierMetadata; build(). Build a new PixelClassifierMetadata object. PixelClassifierMetadata.Builder; classificationLabels(Map<Integer,PathClass> labels). Specify classification labels. PixelClassifierMetadata.Builder; inputPadding(int inputPadding). Amount of padding requested for the left, right, top and bottom of the image tile being classified. PixelClassifierMetadata.Builder; inputResolution(PixelCalibration inputResolution). Pixel size defining the resolution at which the classifier should operate. PixelClassifierMetadata.Builder; inputShape(int width,; int height). Preferred input image width and height. PixelClassifierMetadata.Builder; outputChannels(Collection<ImageChannel> channels). Specify channels for output. PixelClassifierMetadata.Builder; outputChannels(ImageChannel... channels). Specify channels for output. PixelClassifierMetadata.Builder; outputPixelType(PixelType pixelType). Output pixel type. PixelClassifierMetadata.Builder; setChannelType(ImageServerMetadata.ChannelType type). Specify the output channel type. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, noti",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html:1905,Modifiability,inherit,inherited,1905,"bject. PixelClassifierMetadata.Builder; classificationLabels(Map<Integer,PathClass> labels). Specify classification labels. PixelClassifierMetadata.Builder; inputPadding(int inputPadding). Amount of padding requested for the left, right, top and bottom of the image tile being classified. PixelClassifierMetadata.Builder; inputResolution(PixelCalibration inputResolution). Pixel size defining the resolution at which the classifier should operate. PixelClassifierMetadata.Builder; inputShape(int width,; int height). Preferred input image width and height. PixelClassifierMetadata.Builder; outputChannels(Collection<ImageChannel> channels). Specify channels for output. PixelClassifierMetadata.Builder; outputChannels(ImageChannel... channels). Specify channels for output. PixelClassifierMetadata.Builder; outputPixelType(PixelType pixelType). Output pixel type. PixelClassifierMetadata.Builder; setChannelType(ImageServerMetadata.ChannelType type). Specify the output channel type. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. build; public PixelClassifierMetadata build(); Build a new PixelClassifierMetadata object. Returns:. inputPadding; public PixelClassifierMetadata.Builder inputPadding(int inputPadding); Amount of padding requested for the left, right, top and bottom of the image tile being classified.; This can be used to reduce boundary artifacts. Parameters:; inputPadding - ; Returns:. setChannelType; public PixelClassifierMetadata.Builder setChannelType(ImageServerMetadata.ChannelType type); Specify the output channel type. Parameters:; type - ; Returns:. inputResolution; public PixelClassifierMetadata.Builder inputResolution(PixelCalibration inputResolution); Pixel size defining the resolution at which the classifier should operate. Parameters:; inputResolution - ; Returns:. inputShape; public PixelClassifierMetadat",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html:1979,Security,hash,hashCode,1979,",PathClass> labels). Specify classification labels. PixelClassifierMetadata.Builder; inputPadding(int inputPadding). Amount of padding requested for the left, right, top and bottom of the image tile being classified. PixelClassifierMetadata.Builder; inputResolution(PixelCalibration inputResolution). Pixel size defining the resolution at which the classifier should operate. PixelClassifierMetadata.Builder; inputShape(int width,; int height). Preferred input image width and height. PixelClassifierMetadata.Builder; outputChannels(Collection<ImageChannel> channels). Specify channels for output. PixelClassifierMetadata.Builder; outputChannels(ImageChannel... channels). Specify channels for output. PixelClassifierMetadata.Builder; outputPixelType(PixelType pixelType). Output pixel type. PixelClassifierMetadata.Builder; setChannelType(ImageServerMetadata.ChannelType type). Specify the output channel type. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. build; public PixelClassifierMetadata build(); Build a new PixelClassifierMetadata object. Returns:. inputPadding; public PixelClassifierMetadata.Builder inputPadding(int inputPadding); Amount of padding requested for the left, right, top and bottom of the image tile being classified.; This can be used to reduce boundary artifacts. Parameters:; inputPadding - ; Returns:. setChannelType; public PixelClassifierMetadata.Builder setChannelType(ImageServerMetadata.ChannelType type); Specify the output channel type. Parameters:; type - ; Returns:. inputResolution; public PixelClassifierMetadata.Builder inputResolution(PixelCalibration inputResolution); Pixel size defining the resolution at which the classifier should operate. Parameters:; inputResolution - ; Returns:. inputShape; public PixelClassifierMetadata.Builder inputShape(int width,; int height); Preferred input image widt",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html:517,Modifiability,extend,extends,517,". PixelClassifierMetadata (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.pixel; Class PixelClassifierMetadata. java.lang.Object; qupath.lib.classifiers.pixel.PixelClassifierMetadata. public class PixelClassifierMetadata; extends Object; Metadata to control the behavior of a pixel classifier. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelClassifierMetadata.Builder. Builder to create PixelClassifierMetadata objects. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Map<Integer,PathClass>; getClassificationLabels(). Map between integer labels and classifications. int; getInputHeight(). Requested height of input image, or -1 if the classifier is not fussy. int; getInputNumChannels(). Requested number of channels in input image; default is 3 (consistent with assuming RGB). int; getInputPadding(). Requested input padding (above, below, left and right). PixelCalibration; getInputResolution(). Requested pixel size for input. int; getInputWidth(). Requested width of input image, or -1 if the classifier is not fussy. List<ImageChannel>; getOutputChannels(). List representing the names & display colors for each output channel,; or for the output classifications if outputType == OutputType.Classification. PixelType; getOutputPixelType(). Pixel type of output; default is null indicating the pixel type is unknown. ImageServerMetadata.ChannelType; getOutputType(). Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wai",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html:1885,Modifiability,inherit,inherited,1885,"<Integer,PathClass>; getClassificationLabels(). Map between integer labels and classifications. int; getInputHeight(). Requested height of input image, or -1 if the classifier is not fussy. int; getInputNumChannels(). Requested number of channels in input image; default is 3 (consistent with assuming RGB). int; getInputPadding(). Requested input padding (above, below, left and right). PixelCalibration; getInputResolution(). Requested pixel size for input. int; getInputWidth(). Requested width of input image, or -1 if the classifier is not fussy. List<ImageChannel>; getOutputChannels(). List representing the names & display colors for each output channel,; or for the output classifications if outputType == OutputType.Classification. PixelType; getOutputPixelType(). Pixel type of output; default is null indicating the pixel type is unknown. ImageServerMetadata.ChannelType; getOutputType(). Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputResolution; public PixelCalibration getInputResolution(); Requested pixel size for input. Returns:. getInputPadding; public int getInputPadding(); Requested input padding (above, below, left and right). Returns:. getInputWidth; public int getInputWidth(); Requested width of input image, or -1 if the classifier is not fussy. Returns:. getInputHeight; public int getInputHeight(); Requested height of input image, or -1 if the classifier is not fussy. Returns:. getInputNumChannels; public int getInputNumChannels(); Requested number of channels in input image; default is 3 (consistent with assuming RGB). Returns:. getOutputType; public ImageServerMetadata.ChannelType getOutputType(); Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. Returns:. getOutputPixelType; public PixelType getOutputPixelType(); Pixel type of ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html
https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html:1959,Security,hash,hashCode,1959,"ls and classifications. int; getInputHeight(). Requested height of input image, or -1 if the classifier is not fussy. int; getInputNumChannels(). Requested number of channels in input image; default is 3 (consistent with assuming RGB). int; getInputPadding(). Requested input padding (above, below, left and right). PixelCalibration; getInputResolution(). Requested pixel size for input. int; getInputWidth(). Requested width of input image, or -1 if the classifier is not fussy. List<ImageChannel>; getOutputChannels(). List representing the names & display colors for each output channel,; or for the output classifications if outputType == OutputType.Classification. PixelType; getOutputPixelType(). Pixel type of output; default is null indicating the pixel type is unknown. ImageServerMetadata.ChannelType; getOutputType(). Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputResolution; public PixelCalibration getInputResolution(); Requested pixel size for input. Returns:. getInputPadding; public int getInputPadding(); Requested input padding (above, below, left and right). Returns:. getInputWidth; public int getInputWidth(); Requested width of input image, or -1 if the classifier is not fussy. Returns:. getInputHeight; public int getInputHeight(); Requested height of input image, or -1 if the classifier is not fussy. Returns:. getInputNumChannels; public int getInputNumChannels(); Requested number of channels in input image; default is 3 (consistent with assuming RGB). Returns:. getOutputType; public ImageServerMetadata.ChannelType getOutputType(); Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. Returns:. getOutputPixelType; public PixelType getOutputPixelType(); Pixel type of output; default is null indicating the pixel type is unknown. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html:876,Energy Efficiency,green,green,876,". ChannelColor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelColor. java.lang.Object; qupath.lib.display.settings.ChannelColor. public class ChannelColor; extends Object; A simple class to store the color of an image channel. Constructor Summary; Constructors. Constructor; Description; ChannelColor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelColor; fromPackedARGB(int argb). Create a channel color from a packed ARGB value. static ChannelColor; fromRGB(int red,; int green,; int blue). Create a channel color from 8-bit RGB values. int; getBlue(). Get the blue value. int; getGreen(). Get the green value. int; getRed(). Get the red value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelColor; public ChannelColor(). Method Details. fromRGB; public static ChannelColor fromRGB(int red,; int green,; int blue); throws IllegalArgumentException; Create a channel color from 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Returns:; Throws:; IllegalArgumentException - if any of the values are outside the range 0 to 255. fromPackedARGB; public static ChannelColor fromPackedARGB(int argb); Create a channel color from a packed ARGB value.; The alpha will be ignored. Parameters:; argb - ; Returns:. getRed; public int getRed(); Get the red value. Returns:. getGreen; public int getGreen(); Get the green value. Returns:. getBlue; public int getBlue(); Get the blue value. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelColor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html:1002,Energy Efficiency,green,green,1002,". ChannelColor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelColor. java.lang.Object; qupath.lib.display.settings.ChannelColor. public class ChannelColor; extends Object; A simple class to store the color of an image channel. Constructor Summary; Constructors. Constructor; Description; ChannelColor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelColor; fromPackedARGB(int argb). Create a channel color from a packed ARGB value. static ChannelColor; fromRGB(int red,; int green,; int blue). Create a channel color from 8-bit RGB values. int; getBlue(). Get the blue value. int; getGreen(). Get the green value. int; getRed(). Get the red value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelColor; public ChannelColor(). Method Details. fromRGB; public static ChannelColor fromRGB(int red,; int green,; int blue); throws IllegalArgumentException; Create a channel color from 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Returns:; Throws:; IllegalArgumentException - if any of the values are outside the range 0 to 255. fromPackedARGB; public static ChannelColor fromPackedARGB(int argb); Create a channel color from a packed ARGB value.; The alpha will be ignored. Parameters:; argb - ; Returns:. getRed; public int getRed(); Get the red value. Returns:. getGreen; public int getGreen(); Get the green value. Returns:. getBlue; public int getBlue(); Get the blue value. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelColor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html:1320,Energy Efficiency,green,green,1320,". ChannelColor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelColor. java.lang.Object; qupath.lib.display.settings.ChannelColor. public class ChannelColor; extends Object; A simple class to store the color of an image channel. Constructor Summary; Constructors. Constructor; Description; ChannelColor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelColor; fromPackedARGB(int argb). Create a channel color from a packed ARGB value. static ChannelColor; fromRGB(int red,; int green,; int blue). Create a channel color from 8-bit RGB values. int; getBlue(). Get the blue value. int; getGreen(). Get the green value. int; getRed(). Get the red value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelColor; public ChannelColor(). Method Details. fromRGB; public static ChannelColor fromRGB(int red,; int green,; int blue); throws IllegalArgumentException; Create a channel color from 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Returns:; Throws:; IllegalArgumentException - if any of the values are outside the range 0 to 255. fromPackedARGB; public static ChannelColor fromPackedARGB(int argb); Create a channel color from a packed ARGB value.; The alpha will be ignored. Parameters:; argb - ; Returns:. getRed; public int getRed(); Get the red value. Returns:. getGreen; public int getGreen(); Get the green value. Returns:. getBlue; public int getBlue(); Get the blue value. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelColor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html:1439,Energy Efficiency,green,green,1439,". ChannelColor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelColor. java.lang.Object; qupath.lib.display.settings.ChannelColor. public class ChannelColor; extends Object; A simple class to store the color of an image channel. Constructor Summary; Constructors. Constructor; Description; ChannelColor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelColor; fromPackedARGB(int argb). Create a channel color from a packed ARGB value. static ChannelColor; fromRGB(int red,; int green,; int blue). Create a channel color from 8-bit RGB values. int; getBlue(). Get the blue value. int; getGreen(). Get the green value. int; getRed(). Get the red value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelColor; public ChannelColor(). Method Details. fromRGB; public static ChannelColor fromRGB(int red,; int green,; int blue); throws IllegalArgumentException; Create a channel color from 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Returns:; Throws:; IllegalArgumentException - if any of the values are outside the range 0 to 255. fromPackedARGB; public static ChannelColor fromPackedARGB(int argb); Create a channel color from a packed ARGB value.; The alpha will be ignored. Parameters:; argb - ; Returns:. getRed; public int getRed(); Get the red value. Returns:. getGreen; public int getGreen(); Get the green value. Returns:. getBlue; public int getBlue(); Get the blue value. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelColor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html:1834,Energy Efficiency,green,green,1834,". ChannelColor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelColor. java.lang.Object; qupath.lib.display.settings.ChannelColor. public class ChannelColor; extends Object; A simple class to store the color of an image channel. Constructor Summary; Constructors. Constructor; Description; ChannelColor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelColor; fromPackedARGB(int argb). Create a channel color from a packed ARGB value. static ChannelColor; fromRGB(int red,; int green,; int blue). Create a channel color from 8-bit RGB values. int; getBlue(). Get the blue value. int; getGreen(). Get the green value. int; getRed(). Get the red value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelColor; public ChannelColor(). Method Details. fromRGB; public static ChannelColor fromRGB(int red,; int green,; int blue); throws IllegalArgumentException; Create a channel color from 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Returns:; Throws:; IllegalArgumentException - if any of the values are outside the range 0 to 255. fromPackedARGB; public static ChannelColor fromPackedARGB(int argb); Create a channel color from a packed ARGB value.; The alpha will be ignored. Parameters:; argb - ; Returns:. getRed; public int getRed(); Get the red value. Returns:. getGreen; public int getGreen(); Get the green value. Returns:. getBlue; public int getBlue(); Get the blue value. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelColor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html:471,Modifiability,extend,extends,471,". ChannelColor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelColor. java.lang.Object; qupath.lib.display.settings.ChannelColor. public class ChannelColor; extends Object; A simple class to store the color of an image channel. Constructor Summary; Constructors. Constructor; Description; ChannelColor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelColor; fromPackedARGB(int argb). Create a channel color from a packed ARGB value. static ChannelColor; fromRGB(int red,; int green,; int blue). Create a channel color from 8-bit RGB values. int; getBlue(). Get the blue value. int; getGreen(). Get the green value. int; getRed(). Get the red value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelColor; public ChannelColor(). Method Details. fromRGB; public static ChannelColor fromRGB(int red,; int green,; int blue); throws IllegalArgumentException; Create a channel color from 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Returns:; Throws:; IllegalArgumentException - if any of the values are outside the range 0 to 255. fromPackedARGB; public static ChannelColor fromPackedARGB(int argb); Create a channel color from a packed ARGB value.; The alpha will be ignored. Parameters:; argb - ; Returns:. getRed; public int getRed(); Get the red value. Returns:. getGreen; public int getGreen(); Get the green value. Returns:. getBlue; public int getBlue(); Get the blue value. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelColor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html:1057,Modifiability,inherit,inherited,1057,". ChannelColor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelColor. java.lang.Object; qupath.lib.display.settings.ChannelColor. public class ChannelColor; extends Object; A simple class to store the color of an image channel. Constructor Summary; Constructors. Constructor; Description; ChannelColor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelColor; fromPackedARGB(int argb). Create a channel color from a packed ARGB value. static ChannelColor; fromRGB(int red,; int green,; int blue). Create a channel color from 8-bit RGB values. int; getBlue(). Get the blue value. int; getGreen(). Get the green value. int; getRed(). Get the red value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelColor; public ChannelColor(). Method Details. fromRGB; public static ChannelColor fromRGB(int red,; int green,; int blue); throws IllegalArgumentException; Create a channel color from 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Returns:; Throws:; IllegalArgumentException - if any of the values are outside the range 0 to 255. fromPackedARGB; public static ChannelColor fromPackedARGB(int argb); Create a channel color from a packed ARGB value.; The alpha will be ignored. Parameters:; argb - ; Returns:. getRed; public int getRed(); Get the red value. Returns:. getGreen; public int getGreen(); Get the green value. Returns:. getBlue; public int getBlue(); Get the blue value. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelColor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html:1131,Security,hash,hashCode,1131,". ChannelColor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelColor. java.lang.Object; qupath.lib.display.settings.ChannelColor. public class ChannelColor; extends Object; A simple class to store the color of an image channel. Constructor Summary; Constructors. Constructor; Description; ChannelColor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelColor; fromPackedARGB(int argb). Create a channel color from a packed ARGB value. static ChannelColor; fromRGB(int red,; int green,; int blue). Create a channel color from 8-bit RGB values. int; getBlue(). Get the blue value. int; getGreen(). Get the green value. int; getRed(). Get the red value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelColor; public ChannelColor(). Method Details. fromRGB; public static ChannelColor fromRGB(int red,; int green,; int blue); throws IllegalArgumentException; Create a channel color from 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Returns:; Throws:; IllegalArgumentException - if any of the values are outside the range 0 to 255. fromPackedARGB; public static ChannelColor fromPackedARGB(int argb); Create a channel color from a packed ARGB value.; The alpha will be ignored. Parameters:; argb - ; Returns:. getRed; public int getRed(); Get the red value. Returns:. getGreen; public int getGreen(); Get the green value. Returns:. getBlue; public int getBlue(); Get the blue value. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelColor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html:489,Usability,simpl,simple,489,". ChannelColor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelColor. java.lang.Object; qupath.lib.display.settings.ChannelColor. public class ChannelColor; extends Object; A simple class to store the color of an image channel. Constructor Summary; Constructors. Constructor; Description; ChannelColor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelColor; fromPackedARGB(int argb). Create a channel color from a packed ARGB value. static ChannelColor; fromRGB(int red,; int green,; int blue). Create a channel color from 8-bit RGB values. int; getBlue(). Get the blue value. int; getGreen(). Get the green value. int; getRed(). Get the red value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelColor; public ChannelColor(). Method Details. fromRGB; public static ChannelColor fromRGB(int red,; int green,; int blue); throws IllegalArgumentException; Create a channel color from 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Returns:; Throws:; IllegalArgumentException - if any of the values are outside the range 0 to 255. fromPackedARGB; public static ChannelColor fromPackedARGB(int argb); Create a channel color from a packed ARGB value.; The alpha will be ignored. Parameters:; argb - ; Returns:. getRed; public int getRed(); Get the red value. Returns:. getGreen; public int getGreen(); Get the green value. Returns:. getBlue; public int getBlue(); Get the blue value. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelColor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelSettings.html:483,Modifiability,extend,extends,483,". ChannelSettings (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelSettings. java.lang.Object; qupath.lib.display.settings.ChannelSettings. public class ChannelSettings; extends Object; A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. Constructor Summary; Constructors. Constructor; Description; ChannelSettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelSettings; create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing). Create a new channel settings object. ChannelColor; getColor(). Get the color used to display the channel, or null if a color is not relevant. float; getMaxDisplay(). Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. float; getMinDisplay(). Get the requested minimum display value for the channel. String; getName(). Get the name of the channel. boolean; isShowing(). Get whether the channel should be displayed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelSettings; public ChannelSettings(). Method Details. create; public static ChannelSettings create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing); Create a new channel settings object. Parameters:; name - ; minDisplay - ; maxDisplay - ; color - ; isShowing - ; Returns:. getName; public String getName(); Get the name of the channel. Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelSettings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelSettings.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelSettings.html:1458,Modifiability,inherit,inherited,1458,"ChannelSettings; extends Object; A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. Constructor Summary; Constructors. Constructor; Description; ChannelSettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelSettings; create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing). Create a new channel settings object. ChannelColor; getColor(). Get the color used to display the channel, or null if a color is not relevant. float; getMaxDisplay(). Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. float; getMinDisplay(). Get the requested minimum display value for the channel. String; getName(). Get the name of the channel. boolean; isShowing(). Get whether the channel should be displayed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelSettings; public ChannelSettings(). Method Details. create; public static ChannelSettings create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing); Create a new channel settings object. Parameters:; name - ; minDisplay - ; maxDisplay - ; color - ; isShowing - ; Returns:. getName; public String getName(); Get the name of the channel. Returns:. getMinDisplay; public float getMinDisplay(); Get the requested minimum display value for the channel.; This should be used with the first entry in any lookup table. Returns:. getMaxDisplay; public float getMaxDisplay(); Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. Returns:. getColor; public ChannelColor getColor(); Get the color used to display the channel, or null if a color is not rel",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelSettings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelSettings.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelSettings.html:1532,Security,hash,hashCode,1532,"ation needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. Constructor Summary; Constructors. Constructor; Description; ChannelSettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelSettings; create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing). Create a new channel settings object. ChannelColor; getColor(). Get the color used to display the channel, or null if a color is not relevant. float; getMaxDisplay(). Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. float; getMinDisplay(). Get the requested minimum display value for the channel. String; getName(). Get the name of the channel. boolean; isShowing(). Get whether the channel should be displayed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelSettings; public ChannelSettings(). Method Details. create; public static ChannelSettings create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing); Create a new channel settings object. Parameters:; name - ; minDisplay - ; maxDisplay - ; color - ; isShowing - ; Returns:. getName; public String getName(); Get the name of the channel. Returns:. getMinDisplay; public float getMinDisplay(); Get the requested minimum display value for the channel.; This should be used with the first entry in any lookup table. Returns:. getMaxDisplay; public float getMaxDisplay(); Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. Returns:. getColor; public ChannelColor getColor(); Get the color used to display the channel, or null if a color is not relevant. Returns:. isShowing; public boolean isShowing(); Get whether the ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelSettings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelSettings.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelSettings.html:501,Usability,simpl,simple,501,". ChannelSettings (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelSettings. java.lang.Object; qupath.lib.display.settings.ChannelSettings. public class ChannelSettings; extends Object; A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. Constructor Summary; Constructors. Constructor; Description; ChannelSettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelSettings; create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing). Create a new channel settings object. ChannelColor; getColor(). Get the color used to display the channel, or null if a color is not relevant. float; getMaxDisplay(). Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. float; getMinDisplay(). Get the requested minimum display value for the channel. String; getName(). Get the name of the channel. boolean; isShowing(). Get whether the channel should be displayed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelSettings; public ChannelSettings(). Method Details. create; public static ChannelSettings create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing); Create a new channel settings object. Parameters:; name - ; minDisplay - ; maxDisplay - ; color - ; isShowing - ; Returns:. getName; public String getName(); Get the name of the channel. Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ChannelSettings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelSettings.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html:499,Modifiability,extend,extends,499,". DisplaySettingUtils (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class DisplaySettingUtils. java.lang.Object; qupath.lib.display.settings.DisplaySettingUtils. public class DisplaySettingUtils; extends Object; Utility class for working with image display and image display settings objects.; The former is used by QuPath to display images, while the latter is used to store; the settings in a JSON-friendly form. Constructor Summary; Constructors. Constructor; Description; DisplaySettingUtils();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; applySettingsToDisplay(ImageDisplay display,; ImageDisplaySettings settings). Apply the settings to the display, if they are compatible. static ImageDisplaySettings; displayToSettings(ImageDisplay display,; String name). Create a new image display settings object from the image display. static ResourceManager.Manager<ImageDisplaySettings>; getResourcesForProject(Project<?> project). Get the resource manager for image display settings from a project. static Optional<ImageDisplaySettings>; parseDisplaySettings(JsonElement element). Parse the JSON element into an image display settings object, if possible. static ImageDisplaySettings; parseDisplaySettings(Path path). Parse the JSON element into an image display settings object. static boolean; settingsCompatibleWithDisplay(ImageDisplay display,; ImageDisplaySettings settings). Check if the settings are compatible with the display. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DisplaySettingUtils; public Di",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html:1819,Modifiability,inherit,inherited,1819,"thodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; applySettingsToDisplay(ImageDisplay display,; ImageDisplaySettings settings). Apply the settings to the display, if they are compatible. static ImageDisplaySettings; displayToSettings(ImageDisplay display,; String name). Create a new image display settings object from the image display. static ResourceManager.Manager<ImageDisplaySettings>; getResourcesForProject(Project<?> project). Get the resource manager for image display settings from a project. static Optional<ImageDisplaySettings>; parseDisplaySettings(JsonElement element). Parse the JSON element into an image display settings object, if possible. static ImageDisplaySettings; parseDisplaySettings(Path path). Parse the JSON element into an image display settings object. static boolean; settingsCompatibleWithDisplay(ImageDisplay display,; ImageDisplaySettings settings). Check if the settings are compatible with the display. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DisplaySettingUtils; public DisplaySettingUtils(). Method Details. displayToSettings; public static ImageDisplaySettings displayToSettings(ImageDisplay display,; String name); Create a new image display settings object from the image display.; This is typically used to save the settings to a file. Parameters:; display - ; name - ; Returns:. settingsCompatibleWithDisplay; public static boolean settingsCompatibleWithDisplay(ImageDisplay display,; ImageDisplaySettings settings); Check if the settings are compatible with the display.; This is true if the number and names of the channels match. Parameters:; display - ; settings - ; Returns:. applySettingsToDisplay; public static boolean applySettingsToDisplay(ImageDisplay display,; ImageDisplaySettings settings); Apply the settings to the display, if they are compatible. Parameters:; display - ; sett",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html:1893,Security,hash,hashCode,1893,"ion; static boolean; applySettingsToDisplay(ImageDisplay display,; ImageDisplaySettings settings). Apply the settings to the display, if they are compatible. static ImageDisplaySettings; displayToSettings(ImageDisplay display,; String name). Create a new image display settings object from the image display. static ResourceManager.Manager<ImageDisplaySettings>; getResourcesForProject(Project<?> project). Get the resource manager for image display settings from a project. static Optional<ImageDisplaySettings>; parseDisplaySettings(JsonElement element). Parse the JSON element into an image display settings object, if possible. static ImageDisplaySettings; parseDisplaySettings(Path path). Parse the JSON element into an image display settings object. static boolean; settingsCompatibleWithDisplay(ImageDisplay display,; ImageDisplaySettings settings). Check if the settings are compatible with the display. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DisplaySettingUtils; public DisplaySettingUtils(). Method Details. displayToSettings; public static ImageDisplaySettings displayToSettings(ImageDisplay display,; String name); Create a new image display settings object from the image display.; This is typically used to save the settings to a file. Parameters:; display - ; name - ; Returns:. settingsCompatibleWithDisplay; public static boolean settingsCompatibleWithDisplay(ImageDisplay display,; ImageDisplaySettings settings); Check if the settings are compatible with the display.; This is true if the number and names of the channels match. Parameters:; display - ; settings - ; Returns:. applySettingsToDisplay; public static boolean applySettingsToDisplay(ImageDisplay display,; ImageDisplaySettings settings); Apply the settings to the display, if they are compatible. Parameters:; display - ; settings - ; Returns:; true if the settings were applied, false otherwise. p",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html:1050,Availability,avail,available,1050,"disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ImageDisplaySettings. java.lang.Object; qupath.lib.display.settings.ImageDisplaySettings. public class ImageDisplaySettings; extends Object; A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. Constructor Summary; Constructors. Constructor; Description; ImageDisplaySettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDisplaySettings; create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels). Create a new image display settings object. List<ChannelSettings>; getChannels(). Get all the available channels. double; getGamma(). Get the requested vamma value for the viewer. String; getName(). Get the name of the settings. boolean; invertBackground(). Get whether the background should be shown 'inverted'. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDisplaySettings; public ImageDisplaySettings(). Method Details. create; public static ImageDisplaySettings create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels); Create a new image display settings object. Parameters:; name - ; gamma - ; invertBackground - ; channels - ; Returns:. getName; public String getName(); Get the name of the settings. Returns:. getGamma; public double getGamma(); Get the requested vamma value for the viewer. Returns:. invertBackground; public boolean invertBackground(); Get whether the background should be shown 'inverted'.; This can make a fluor",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html:2199,Availability,avail,available,2199,"Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ImageDisplaySettings. java.lang.Object; qupath.lib.display.settings.ImageDisplaySettings. public class ImageDisplaySettings; extends Object; A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. Constructor Summary; Constructors. Constructor; Description; ImageDisplaySettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDisplaySettings; create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels). Create a new image display settings object. List<ChannelSettings>; getChannels(). Get all the available channels. double; getGamma(). Get the requested vamma value for the viewer. String; getName(). Get the name of the settings. boolean; invertBackground(). Get whether the background should be shown 'inverted'. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDisplaySettings; public ImageDisplaySettings(). Method Details. create; public static ImageDisplaySettings create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels); Create a new image display settings object. Parameters:; name - ; gamma - ; invertBackground - ; channels - ; Returns:. getName; public String getName(); Get the name of the settings. Returns:. getGamma; public double getGamma(); Get the requested vamma value for the viewer. Returns:. invertBackground; public boolean invertBackground(); Get whether the background should be shown 'inverted'.; This can make a fluorescence image look more like a brightfield image,; and vice versa. Returns:. getChannels; public List<ChannelSettings> getChannels(); Get all the available channels. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html:503,Modifiability,extend,extends,503,". ImageDisplaySettings (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ImageDisplaySettings. java.lang.Object; qupath.lib.display.settings.ImageDisplaySettings. public class ImageDisplaySettings; extends Object; A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. Constructor Summary; Constructors. Constructor; Description; ImageDisplaySettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDisplaySettings; create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels). Create a new image display settings object. List<ChannelSettings>; getChannels(). Get all the available channels. double; getGamma(). Get the requested vamma value for the viewer. String; getName(). Get the name of the settings. boolean; invertBackground(). Get whether the background should be shown 'inverted'. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDisplaySettings; public ImageDisplaySettings(). Method Details. create; public static ImageDisplaySettings create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels); Create a new image display settings object. Parameters:; name - ; gamma - ; invertBackground - ; channels - ; Returns:. getName; public String getName(); Get the name of the settings. Returns:. getGamma; public double getGamma(); Get the requested vamma value for the viewer. Returns:. invertBackground; public boolean invertBackground(); Get whether the backgroun",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html:1277,Modifiability,inherit,inherited,1277,"Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ImageDisplaySettings. java.lang.Object; qupath.lib.display.settings.ImageDisplaySettings. public class ImageDisplaySettings; extends Object; A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. Constructor Summary; Constructors. Constructor; Description; ImageDisplaySettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDisplaySettings; create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels). Create a new image display settings object. List<ChannelSettings>; getChannels(). Get all the available channels. double; getGamma(). Get the requested vamma value for the viewer. String; getName(). Get the name of the settings. boolean; invertBackground(). Get whether the background should be shown 'inverted'. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDisplaySettings; public ImageDisplaySettings(). Method Details. create; public static ImageDisplaySettings create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels); Create a new image display settings object. Parameters:; name - ; gamma - ; invertBackground - ; channels - ; Returns:. getName; public String getName(); Get the name of the settings. Returns:. getGamma; public double getGamma(); Get the requested vamma value for the viewer. Returns:. invertBackground; public boolean invertBackground(); Get whether the background should be shown 'inverted'.; This can make a fluorescence image look more like a brightfield image,; and vice versa. Returns:. getChannels; public List<ChannelSettings> getChannels(); Get all the available channels. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html:1351,Security,hash,hashCode,1351,"Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ImageDisplaySettings. java.lang.Object; qupath.lib.display.settings.ImageDisplaySettings. public class ImageDisplaySettings; extends Object; A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. Constructor Summary; Constructors. Constructor; Description; ImageDisplaySettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDisplaySettings; create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels). Create a new image display settings object. List<ChannelSettings>; getChannels(). Get all the available channels. double; getGamma(). Get the requested vamma value for the viewer. String; getName(). Get the name of the settings. boolean; invertBackground(). Get whether the background should be shown 'inverted'. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDisplaySettings; public ImageDisplaySettings(). Method Details. create; public static ImageDisplaySettings create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels); Create a new image display settings object. Parameters:; name - ; gamma - ; invertBackground - ; channels - ; Returns:. getName; public String getName(); Get the name of the settings. Returns:. getGamma; public double getGamma(); Get the requested vamma value for the viewer. Returns:. invertBackground; public boolean invertBackground(); Get whether the background should be shown 'inverted'.; This can make a fluorescence image look more like a brightfield image,; and vice versa. Returns:. getChannels; public List<ChannelSettings> getChannels(); Get all the available channels. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html:521,Usability,simpl,simple,521,". ImageDisplaySettings (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ImageDisplaySettings. java.lang.Object; qupath.lib.display.settings.ImageDisplaySettings. public class ImageDisplaySettings; extends Object; A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. Constructor Summary; Constructors. Constructor; Description; ImageDisplaySettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDisplaySettings; create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels). Create a new image display settings object. List<ChannelSettings>; getChannels(). Get all the available channels. double; getGamma(). Get the requested vamma value for the viewer. String; getName(). Get the name of the settings. boolean; invertBackground(). Get whether the background should be shown 'inverted'. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDisplaySettings; public ImageDisplaySettings(). Method Details. create; public static ImageDisplaySettings create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels); Create a new image display settings object. Parameters:; name - ; gamma - ; invertBackground - ; channels - ; Returns:. getName; public String getName(); Get the name of the settings. Returns:. getGamma; public double getGamma(); Get the requested vamma value for the viewer. Returns:. invertBackground; public boolean invertBackground(); Get whether the backgroun",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/package-summary.html:484,Usability,simpl,simple,484,". qupath.lib.display.settings (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.display.settings. package qupath.lib.display.settings. Classes to support storing and retrieving image display settings.; ; These are intended to be simple and JSON-friendly. Related Packages. Package; Description; qupath.lib.display. Classes to control the display of images in a QuPathViewer. Classes. Class; Description; ChannelColor. A simple class to store the color of an image channel. ChannelSettings. A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. DisplaySettingUtils. Utility class for working with image display and image display settings objects. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/package-summary.html:675,Usability,simpl,simple,675,". qupath.lib.display.settings (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.display.settings. package qupath.lib.display.settings. Classes to support storing and retrieving image display settings.; ; These are intended to be simple and JSON-friendly. Related Packages. Package; Description; qupath.lib.display. Classes to control the display of images in a QuPathViewer. Classes. Class; Description; ChannelColor. A simple class to store the color of an image channel. ChannelSettings. A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. DisplaySettingUtils. Utility class for working with image display and image display settings objects. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/package-summary.html:747,Usability,simpl,simple,747,". qupath.lib.display.settings (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.display.settings. package qupath.lib.display.settings. Classes to support storing and retrieving image display settings.; ; These are intended to be simple and JSON-friendly. Related Packages. Package; Description; qupath.lib.display. Classes to control the display of images in a QuPathViewer. Classes. Class; Description; ChannelColor. A simple class to store the color of an image channel. ChannelSettings. A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. DisplaySettingUtils. Utility class for working with image display and image display settings objects. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/package-summary.html:1018,Usability,simpl,simple,1018,". qupath.lib.display.settings (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.display.settings. package qupath.lib.display.settings. Classes to support storing and retrieving image display settings.; ; These are intended to be simple and JSON-friendly. Related Packages. Package; Description; qupath.lib.display. Classes to control the display of images in a QuPathViewer. Classes. Class; Description; ChannelColor. A simple class to store the color of an image channel. ChannelSettings. A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. DisplaySettingUtils. Utility class for working with image display and image display settings objects. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/settings/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:5116,Energy Efficiency,reduce,reduces,5116,"ePlus,Object> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createObjectConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects.; ; The behavior depends upon whatever the Processor return.; For example, the converter is able to generate one or more objects from; ; an ImageJ Roi, or list or array of Roi objects; an ImageJ Overlay; a BinaryProcessor (creating a single object); a ByteProcessor or ShortProcessor (treated as a labeled image, to create 0 or more objects); another ImageProcessor with a threshold set (handled similar to a binary image); an ImagePlus, after extracting the ImageProcessor. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <U>; OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U> createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter for one specify type.; See #createObjectConverter(Function) for more details; this method reduces ambiguity by handling only one; possible kind of output. Type Parameters:; U - ; Parameters:; cls - the class to handle; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. builder; public static PixelProcessor.Builder<ImagePlus,ImagePlus,Object> builder(Processor<ImagePlus,ImagePlus,Object> processor); Create a PixelProcessor.Builder for an ImageJ ImagePlus.; By default, this will attempt to convert any output to detection objects - but the builder may be further; customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:4214,Integrability,depend,depends,4214,"dler; public static OutputHandler<ImagePlus,ImagePlus,Object> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. createDetectionConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createObjectConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects.; ; The behavior depends upon whatever the Processor return.; For example, the converter is able to generate one or more objects from; ; an ImageJ Roi, or list or array of Roi objects; an ImageJ Overlay; a BinaryProcessor (creating a single object); a ByteProcessor or ShortProcessor (treated as a labeled image, to create 0 or more objects); another ImageProcessor with a threshold set (handled similar to a binary image); an ImagePlus, after extracting the ImageProcessor. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <U>; OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U> createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter for one specify type.; See #createObjectConverter(Function) for more details; this method reduces ambiguity by handling only one; possible kind of output. Type Parameters:; U - ; Parameters:; cls - the",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:489,Modifiability,extend,extends,489,". ImageJProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class ImageJProcessor. java.lang.Object; qupath.lib.experimental.pixels.ImageJProcessor. public class ImageJProcessor; extends Object; Class to generate a PixelProcessor when using ImageJ for the primary image representation. Constructor Summary; Constructors. Constructor; Description; ImageJProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<ImagePlus,ImagePlus,Object>; builder(Processor<ImagePlus,ImagePlus,Object> processor). Create a PixelProcessor.Builder for an ImageJ ImagePlus. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createAnnotationConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<ImagePlus>; createImagePlusImageSupplier(). Create an ImageSupplier that returns an ImageJ ImagePlus. static MaskSupplier<ImagePlus,ImagePlus>; createImagePlusMaskSupplier(). Create a MaskSupplier that returns an ImageJ ByteProcessor. static <U> OutputHandler.OutputToOb",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:2432,Modifiability,inherit,inherited,2432,"e an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<ImagePlus>; createImagePlusImageSupplier(). Create an ImageSupplier that returns an ImageJ ImagePlus. static MaskSupplier<ImagePlus,ImagePlus>; createImagePlusMaskSupplier(). Create a MaskSupplier that returns an ImageJ ByteProcessor. static <U> OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U>; createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter for one specify type. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJProcessor; public ImageJProcessor(). Method Details. createImagePlusImageSupplier; public static ImageSupplier<ImagePlus> createImagePlusImageSupplier(); Create an ImageSupplier that returns an ImageJ ImagePlus. Returns:. createImagePlusMaskSupplier; public static MaskSupplier<ImagePlus,ImagePlus> createImagePlusMaskSupplier(); Create a MaskSupplier that returns an ImageJ ByteProcessor. Returns:. createDetectionOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createAnnotationOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationConverte",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:1525,Safety,detect,detection,1525,"ct; Class to generate a PixelProcessor when using ImageJ for the primary image representation. Constructor Summary; Constructors. Constructor; Description; ImageJProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<ImagePlus,ImagePlus,Object>; builder(Processor<ImagePlus,ImagePlus,Object> processor). Create a PixelProcessor.Builder for an ImageJ ImagePlus. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createAnnotationConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<ImagePlus>; createImagePlusImageSupplier(). Create an ImageSupplier that returns an ImageJ ImagePlus. static MaskSupplier<ImagePlus,ImagePlus>; createImagePlusMaskSupplier(). Create a MaskSupplier that returns an ImageJ ByteProcessor. static <U> OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U>; createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter for one specify type. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getCl",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:1691,Safety,detect,detection,1691,"essor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<ImagePlus,ImagePlus,Object>; builder(Processor<ImagePlus,ImagePlus,Object> processor). Create a PixelProcessor.Builder for an ImageJ ImagePlus. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createAnnotationConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<ImagePlus>; createImagePlusImageSupplier(). Create an ImageSupplier that returns an ImageJ ImagePlus. static MaskSupplier<ImagePlus,ImagePlus>; createImagePlusMaskSupplier(). Create a MaskSupplier that returns an ImageJ ByteProcessor. static <U> OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U>; createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter for one specify type. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJProcessor; public ImageJProcessor(). Method Details. createImagePlusImageSupp",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:3173,Safety,detect,detection,3173,"athObject> creator). Create an OutputHandler.OutputToObjectConverter for one specify type. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJProcessor; public ImageJProcessor(). Method Details. createImagePlusImageSupplier; public static ImageSupplier<ImagePlus> createImagePlusImageSupplier(); Create an ImageSupplier that returns an ImageJ ImagePlus. Returns:. createImagePlusMaskSupplier; public static MaskSupplier<ImagePlus,ImagePlus> createImagePlusMaskSupplier(); Create a MaskSupplier that returns an ImageJ ByteProcessor. Returns:. createDetectionOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createAnnotationOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. createDetectionConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createObjectConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createObjectConverter(Function<ROI,PathObject> creator); Crea",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:3897,Safety,detect,detection,3897,"Plus,ImagePlus> createImagePlusMaskSupplier(); Create a MaskSupplier that returns an ImageJ ByteProcessor. Returns:. createDetectionOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createAnnotationOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. createDetectionConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createObjectConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects.; ; The behavior depends upon whatever the Processor return.; For example, the converter is able to generate one or more objects from; ; an ImageJ Roi, or list or array of Roi objects; an ImageJ Overlay; a BinaryProcessor (creating a single object); a ByteProcessor or ShortProcessor (treated as a labeled image, to create 0 or more objects); another ImageProcessor with a threshold set (handled similar to a binary image); an ImagePlus, after extracting the ImageProcessor. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <U>; OutputHandler.OutputToObject",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:4754,Safety,detect,detection,4754,"ePlus,Object> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createObjectConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects.; ; The behavior depends upon whatever the Processor return.; For example, the converter is able to generate one or more objects from; ; an ImageJ Roi, or list or array of Roi objects; an ImageJ Overlay; a BinaryProcessor (creating a single object); a ByteProcessor or ShortProcessor (treated as a labeled image, to create 0 or more objects); another ImageProcessor with a threshold set (handled similar to a binary image); an ImagePlus, after extracting the ImageProcessor. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <U>; OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U> createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter for one specify type.; See #createObjectConverter(Function) for more details; this method reduces ambiguity by handling only one; possible kind of output. Type Parameters:; U - ; Parameters:; cls - the class to handle; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. builder; public static PixelProcessor.Builder<ImagePlus,ImagePlus,Object> builder(Processor<ImagePlus,ImagePlus,Object> processor); Create a PixelProcessor.Builder for an ImageJ ImagePlus.; By default, this will attempt to convert any output to detection objects - but the builder may be further; customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:5314,Safety,detect,detection,5314,"ePlus,Object> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createObjectConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects.; ; The behavior depends upon whatever the Processor return.; For example, the converter is able to generate one or more objects from; ; an ImageJ Roi, or list or array of Roi objects; an ImageJ Overlay; a BinaryProcessor (creating a single object); a ByteProcessor or ShortProcessor (treated as a labeled image, to create 0 or more objects); another ImageProcessor with a threshold set (handled similar to a binary image); an ImagePlus, after extracting the ImageProcessor. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <U>; OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U> createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter for one specify type.; See #createObjectConverter(Function) for more details; this method reduces ambiguity by handling only one; possible kind of output. Type Parameters:; U - ; Parameters:; cls - the class to handle; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. builder; public static PixelProcessor.Builder<ImagePlus,ImagePlus,Object> builder(Processor<ImagePlus,ImagePlus,Object> processor); Create a PixelProcessor.Builder for an ImageJ ImagePlus.; By default, this will attempt to convert any output to detection objects - but the builder may be further; customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:5608,Safety,detect,detection,5608,"ePlus,Object> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createObjectConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects.; ; The behavior depends upon whatever the Processor return.; For example, the converter is able to generate one or more objects from; ; an ImageJ Roi, or list or array of Roi objects; an ImageJ Overlay; a BinaryProcessor (creating a single object); a ByteProcessor or ShortProcessor (treated as a labeled image, to create 0 or more objects); another ImageProcessor with a threshold set (handled similar to a binary image); an ImagePlus, after extracting the ImageProcessor. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <U>; OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U> createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter for one specify type.; See #createObjectConverter(Function) for more details; this method reduces ambiguity by handling only one; possible kind of output. Type Parameters:; U - ; Parameters:; cls - the class to handle; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. builder; public static PixelProcessor.Builder<ImagePlus,ImagePlus,Object> builder(Processor<ImagePlus,ImagePlus,Object> processor); Create a PixelProcessor.Builder for an ImageJ ImagePlus.; By default, this will attempt to convert any output to detection objects - but the builder may be further; customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:2506,Security,hash,hashCode,2506,"output; into detection objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<ImagePlus>; createImagePlusImageSupplier(). Create an ImageSupplier that returns an ImageJ ImagePlus. static MaskSupplier<ImagePlus,ImagePlus>; createImagePlusMaskSupplier(). Create a MaskSupplier that returns an ImageJ ByteProcessor. static <U> OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U>; createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter for one specify type. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJProcessor; public ImageJProcessor(). Method Details. createImagePlusImageSupplier; public static ImageSupplier<ImagePlus> createImagePlusImageSupplier(); Create an ImageSupplier that returns an ImageJ ImagePlus. Returns:. createImagePlusMaskSupplier; public static MaskSupplier<ImagePlus,ImagePlus> createImagePlusMaskSupplier(); Create a MaskSupplier that returns an ImageJ ByteProcessor. Returns:. createDetectionOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createAnnotationOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePl",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html:481,Integrability,interface,interface,481,". ImageSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface ImageSupplier<S>. Type Parameters:; S - the type of image. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface ImageSupplier<S>; A functional interface for supplying an image region for processing. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static ImageSupplier<BufferedImage>; createBufferedImageSupplier(). Create a image supplier that returns a buffered image. S; getImage(Parameters<S,?> parameters). Get the image to process. Method Details. getImage; S getImage(Parameters<S,?> parameters); throws IOException; Get the image to process.; This should correspond to the region request and image server stored in the parameters.; ; This has access to the parameters, but must not call parameters.getImage() or; parameters.getMask() to avoid the risk of infinite recursion. Parameters:; parameters - ; Returns:; an image based upon the stored parameters; Throws:; IOException. createBufferedImageSupplier; static ImageSupplier<BufferedImage> createBufferedImageSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html:616,Integrability,interface,interface,616,". ImageSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface ImageSupplier<S>. Type Parameters:; S - the type of image. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface ImageSupplier<S>; A functional interface for supplying an image region for processing. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static ImageSupplier<BufferedImage>; createBufferedImageSupplier(). Create a image supplier that returns a buffered image. S; getImage(Parameters<S,?> parameters). Get the image to process. Method Details. getImage; S getImage(Parameters<S,?> parameters); throws IOException; Get the image to process.; This should correspond to the region request and image server stored in the parameters.; ; This has access to the parameters, but must not call parameters.getImage() or; parameters.getMask() to avoid the risk of infinite recursion. Parameters:; parameters - ; Returns:; an image based upon the stored parameters; Throws:; IOException. createBufferedImageSupplier; static ImageSupplier<BufferedImage> createBufferedImageSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html:657,Integrability,interface,interface,657,". ImageSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface ImageSupplier<S>. Type Parameters:; S - the type of image. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface ImageSupplier<S>; A functional interface for supplying an image region for processing. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static ImageSupplier<BufferedImage>; createBufferedImageSupplier(). Create a image supplier that returns a buffered image. S; getImage(Parameters<S,?> parameters). Get the image to process. Method Details. getImage; S getImage(Parameters<S,?> parameters); throws IOException; Get the image to process.; This should correspond to the region request and image server stored in the parameters.; ; This has access to the parameters, but must not call parameters.getImage() or; parameters.getMask() to avoid the risk of infinite recursion. Parameters:; parameters - ; Returns:; an image based upon the stored parameters; Throws:; IOException. createBufferedImageSupplier; static ImageSupplier<BufferedImage> createBufferedImageSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html:1341,Safety,avoid,avoid,1341,". ImageSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface ImageSupplier<S>. Type Parameters:; S - the type of image. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface ImageSupplier<S>; A functional interface for supplying an image region for processing. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static ImageSupplier<BufferedImage>; createBufferedImageSupplier(). Create a image supplier that returns a buffered image. S; getImage(Parameters<S,?> parameters). Get the image to process. Method Details. getImage; S getImage(Parameters<S,?> parameters); throws IOException; Get the image to process.; This should correspond to the region request and image server stored in the parameters.; ; This has access to the parameters, but must not call parameters.getImage() or; parameters.getMask() to avoid the risk of infinite recursion. Parameters:; parameters - ; Returns:; an image based upon the stored parameters; Throws:; IOException. createBufferedImageSupplier; static ImageSupplier<BufferedImage> createBufferedImageSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html:1351,Safety,risk,risk,1351,". ImageSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface ImageSupplier<S>. Type Parameters:; S - the type of image. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface ImageSupplier<S>; A functional interface for supplying an image region for processing. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static ImageSupplier<BufferedImage>; createBufferedImageSupplier(). Create a image supplier that returns a buffered image. S; getImage(Parameters<S,?> parameters). Get the image to process. Method Details. getImage; S getImage(Parameters<S,?> parameters); throws IOException; Get the image to process.; This should correspond to the region request and image server stored in the parameters.; ; This has access to the parameters, but must not call parameters.getImage() or; parameters.getMask() to avoid the risk of infinite recursion. Parameters:; parameters - ; Returns:; an image based upon the stored parameters; Throws:; IOException. createBufferedImageSupplier; static ImageSupplier<BufferedImage> createBufferedImageSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html:1247,Security,access,access,1247,". ImageSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface ImageSupplier<S>. Type Parameters:; S - the type of image. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface ImageSupplier<S>; A functional interface for supplying an image region for processing. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static ImageSupplier<BufferedImage>; createBufferedImageSupplier(). Create a image supplier that returns a buffered image. S; getImage(Parameters<S,?> parameters). Get the image to process. Method Details. getImage; S getImage(Parameters<S,?> parameters); throws IOException; Get the image to process.; This should correspond to the region request and image server stored in the parameters.; ; This has access to the parameters, but must not call parameters.getImage() or; parameters.getMask() to avoid the risk of infinite recursion. Parameters:; parameters - ; Returns:; an image based upon the stored parameters; Throws:; IOException. createBufferedImageSupplier; static ImageSupplier<BufferedImage> createBufferedImageSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html:453,Availability,mask,mask,453,". MaskSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface MaskSupplier<S,T>. Type Parameters:; S - the type of image; T - the type of mask. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface MaskSupplier<S,T>; A functional interface for supplying a mask corresponding to an image. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static MaskSupplier<BufferedImage,BufferedImage>; createBufferedImageMaskSupplier(). Create a image supplier that returns a buffered image. T; getMask(Parameters<S,T> parameters,; ROI roi). Get a mask corresponding to the image, depicting a specified ROI. Method Details. getMask; T getMask(Parameters<S,T> parameters,; ROI roi); throws IOException; Get a mask corresponding to the image, depicting a specified ROI.; In contrast to an ImageSupplier, this may be given a ROI that differs from the main ROI of the parent; object stored in the Parameters. This is useful for cases where different masks might be required,; e.g. to represent a cell nucleus or cytoplasm.; ; When the mask is an image, it should be the same size as the result of parameters.getImage().; It is valid for this method to call parameters.getImage() to ensure this. Parameters:; parameters - ; roi - ; Returns:; Throws:; IOException; See Also:. ImageSupplier. createBufferedImageMaskSupplier; static MaskSupplier<BufferedImage,BufferedImage> createBufferedImageMaskSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html:706,Availability,mask,mask,706,". MaskSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface MaskSupplier<S,T>. Type Parameters:; S - the type of image; T - the type of mask. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface MaskSupplier<S,T>; A functional interface for supplying a mask corresponding to an image. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static MaskSupplier<BufferedImage,BufferedImage>; createBufferedImageMaskSupplier(). Create a image supplier that returns a buffered image. T; getMask(Parameters<S,T> parameters,; ROI roi). Get a mask corresponding to the image, depicting a specified ROI. Method Details. getMask; T getMask(Parameters<S,T> parameters,; ROI roi); throws IOException; Get a mask corresponding to the image, depicting a specified ROI.; In contrast to an ImageSupplier, this may be given a ROI that differs from the main ROI of the parent; object stored in the Parameters. This is useful for cases where different masks might be required,; e.g. to represent a cell nucleus or cytoplasm.; ; When the mask is an image, it should be the same size as the result of parameters.getImage().; It is valid for this method to call parameters.getImage() to ensure this. Parameters:; parameters - ; roi - ; Returns:; Throws:; IOException; See Also:. ImageSupplier. createBufferedImageMaskSupplier; static MaskSupplier<BufferedImage,BufferedImage> createBufferedImageMaskSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html:1065,Availability,mask,mask,1065,". MaskSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface MaskSupplier<S,T>. Type Parameters:; S - the type of image; T - the type of mask. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface MaskSupplier<S,T>; A functional interface for supplying a mask corresponding to an image. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static MaskSupplier<BufferedImage,BufferedImage>; createBufferedImageMaskSupplier(). Create a image supplier that returns a buffered image. T; getMask(Parameters<S,T> parameters,; ROI roi). Get a mask corresponding to the image, depicting a specified ROI. Method Details. getMask; T getMask(Parameters<S,T> parameters,; ROI roi); throws IOException; Get a mask corresponding to the image, depicting a specified ROI.; In contrast to an ImageSupplier, this may be given a ROI that differs from the main ROI of the parent; object stored in the Parameters. This is useful for cases where different masks might be required,; e.g. to represent a cell nucleus or cytoplasm.; ; When the mask is an image, it should be the same size as the result of parameters.getImage().; It is valid for this method to call parameters.getImage() to ensure this. Parameters:; parameters - ; roi - ; Returns:; Throws:; IOException; See Also:. ImageSupplier. createBufferedImageMaskSupplier; static MaskSupplier<BufferedImage,BufferedImage> createBufferedImageMaskSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html:1225,Availability,mask,mask,1225,". MaskSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface MaskSupplier<S,T>. Type Parameters:; S - the type of image; T - the type of mask. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface MaskSupplier<S,T>; A functional interface for supplying a mask corresponding to an image. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static MaskSupplier<BufferedImage,BufferedImage>; createBufferedImageMaskSupplier(). Create a image supplier that returns a buffered image. T; getMask(Parameters<S,T> parameters,; ROI roi). Get a mask corresponding to the image, depicting a specified ROI. Method Details. getMask; T getMask(Parameters<S,T> parameters,; ROI roi); throws IOException; Get a mask corresponding to the image, depicting a specified ROI.; In contrast to an ImageSupplier, this may be given a ROI that differs from the main ROI of the parent; object stored in the Parameters. This is useful for cases where different masks might be required,; e.g. to represent a cell nucleus or cytoplasm.; ; When the mask is an image, it should be the same size as the result of parameters.getImage().; It is valid for this method to call parameters.getImage() to ensure this. Parameters:; parameters - ; roi - ; Returns:; Throws:; IOException; See Also:. ImageSupplier. createBufferedImageMaskSupplier; static MaskSupplier<BufferedImage,BufferedImage> createBufferedImageMaskSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html:1463,Availability,mask,masks,1463,". MaskSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface MaskSupplier<S,T>. Type Parameters:; S - the type of image; T - the type of mask. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface MaskSupplier<S,T>; A functional interface for supplying a mask corresponding to an image. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static MaskSupplier<BufferedImage,BufferedImage>; createBufferedImageMaskSupplier(). Create a image supplier that returns a buffered image. T; getMask(Parameters<S,T> parameters,; ROI roi). Get a mask corresponding to the image, depicting a specified ROI. Method Details. getMask; T getMask(Parameters<S,T> parameters,; ROI roi); throws IOException; Get a mask corresponding to the image, depicting a specified ROI.; In contrast to an ImageSupplier, this may be given a ROI that differs from the main ROI of the parent; object stored in the Parameters. This is useful for cases where different masks might be required,; e.g. to represent a cell nucleus or cytoplasm.; ; When the mask is an image, it should be the same size as the result of parameters.getImage().; It is valid for this method to call parameters.getImage() to ensure this. Parameters:; parameters - ; roi - ; Returns:; Throws:; IOException; See Also:. ImageSupplier. createBufferedImageMaskSupplier; static MaskSupplier<BufferedImage,BufferedImage> createBufferedImageMaskSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html:1548,Availability,mask,mask,1548,". MaskSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface MaskSupplier<S,T>. Type Parameters:; S - the type of image; T - the type of mask. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface MaskSupplier<S,T>; A functional interface for supplying a mask corresponding to an image. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static MaskSupplier<BufferedImage,BufferedImage>; createBufferedImageMaskSupplier(). Create a image supplier that returns a buffered image. T; getMask(Parameters<S,T> parameters,; ROI roi). Get a mask corresponding to the image, depicting a specified ROI. Method Details. getMask; T getMask(Parameters<S,T> parameters,; ROI roi); throws IOException; Get a mask corresponding to the image, depicting a specified ROI.; In contrast to an ImageSupplier, this may be given a ROI that differs from the main ROI of the parent; object stored in the Parameters. This is useful for cases where different masks might be required,; e.g. to represent a cell nucleus or cytoplasm.; ; When the mask is an image, it should be the same size as the result of parameters.getImage().; It is valid for this method to call parameters.getImage() to ensure this. Parameters:; parameters - ; roi - ; Returns:; Throws:; IOException; See Also:. ImageSupplier. createBufferedImageMaskSupplier; static MaskSupplier<BufferedImage,BufferedImage> createBufferedImageMaskSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html:503,Integrability,interface,interface,503,". MaskSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface MaskSupplier<S,T>. Type Parameters:; S - the type of image; T - the type of mask. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface MaskSupplier<S,T>; A functional interface for supplying a mask corresponding to an image. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static MaskSupplier<BufferedImage,BufferedImage>; createBufferedImageMaskSupplier(). Create a image supplier that returns a buffered image. T; getMask(Parameters<S,T> parameters,; ROI roi). Get a mask corresponding to the image, depicting a specified ROI. Method Details. getMask; T getMask(Parameters<S,T> parameters,; ROI roi); throws IOException; Get a mask corresponding to the image, depicting a specified ROI.; In contrast to an ImageSupplier, this may be given a ROI that differs from the main ROI of the parent; object stored in the Parameters. This is useful for cases where different masks might be required,; e.g. to represent a cell nucleus or cytoplasm.; ; When the mask is an image, it should be the same size as the result of parameters.getImage().; It is valid for this method to call parameters.getImage() to ensure this. Parameters:; parameters - ; roi - ; Returns:; Throws:; IOException; See Also:. ImageSupplier. createBufferedImageMaskSupplier; static MaskSupplier<BufferedImage,BufferedImage> createBufferedImageMaskSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html:638,Integrability,interface,interface,638,". MaskSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface MaskSupplier<S,T>. Type Parameters:; S - the type of image; T - the type of mask. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface MaskSupplier<S,T>; A functional interface for supplying a mask corresponding to an image. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static MaskSupplier<BufferedImage,BufferedImage>; createBufferedImageMaskSupplier(). Create a image supplier that returns a buffered image. T; getMask(Parameters<S,T> parameters,; ROI roi). Get a mask corresponding to the image, depicting a specified ROI. Method Details. getMask; T getMask(Parameters<S,T> parameters,; ROI roi); throws IOException; Get a mask corresponding to the image, depicting a specified ROI.; In contrast to an ImageSupplier, this may be given a ROI that differs from the main ROI of the parent; object stored in the Parameters. This is useful for cases where different masks might be required,; e.g. to represent a cell nucleus or cytoplasm.; ; When the mask is an image, it should be the same size as the result of parameters.getImage().; It is valid for this method to call parameters.getImage() to ensure this. Parameters:; parameters - ; roi - ; Returns:; Throws:; IOException; See Also:. ImageSupplier. createBufferedImageMaskSupplier; static MaskSupplier<BufferedImage,BufferedImage> createBufferedImageMaskSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html:680,Integrability,interface,interface,680,". MaskSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface MaskSupplier<S,T>. Type Parameters:; S - the type of image; T - the type of mask. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface MaskSupplier<S,T>; A functional interface for supplying a mask corresponding to an image. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static MaskSupplier<BufferedImage,BufferedImage>; createBufferedImageMaskSupplier(). Create a image supplier that returns a buffered image. T; getMask(Parameters<S,T> parameters,; ROI roi). Get a mask corresponding to the image, depicting a specified ROI. Method Details. getMask; T getMask(Parameters<S,T> parameters,; ROI roi); throws IOException; Get a mask corresponding to the image, depicting a specified ROI.; In contrast to an ImageSupplier, this may be given a ROI that differs from the main ROI of the parent; object stored in the Parameters. This is useful for cases where different masks might be required,; e.g. to represent a cell nucleus or cytoplasm.; ; When the mask is an image, it should be the same size as the result of parameters.getImage().; It is valid for this method to call parameters.getImage() to ensure this. Parameters:; parameters - ; roi - ; Returns:; Throws:; IOException; See Also:. ImageSupplier. createBufferedImageMaskSupplier; static MaskSupplier<BufferedImage,BufferedImage> createBufferedImageMaskSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.CustomMeasurement.html:532,Integrability,interface,interface,532,". MeasurementProcessor.CustomMeasurement (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface MeasurementProcessor.CustomMeasurement<S,T>. Type Parameters:; S - ; T - . Enclosing class:; MeasurementProcessor. public static interface MeasurementProcessor.CustomMeasurement<S,T>; Interface for calculating one custom measurement from an image, using Parameters. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getName();  ; double; getValue(Parameters<S,T> params);  . Method Details. getName; String getName(). getValue; double getValue(Parameters<S,T> params); throws IOException. Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.CustomMeasurement.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.CustomMeasurement.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html:596,Modifiability,extend,extends,596,". MeasurementProcessor.Functions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class MeasurementProcessor.Functions. java.lang.Object; qupath.lib.experimental.pixels.MeasurementProcessor.Functions. Enclosing class:; MeasurementProcessor. public static class MeasurementProcessor.Functions; extends Object; Functions for calculating measurements from an array of pixels. Constructor Summary; Constructors. Constructor; Description; Functions();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Function<double[],Double>; max(). Create a function to calculate the maximum value of an array. static Function<double[],Double>; mean(). Create a function to calculate the mean (average) value of an array. static Function<double[],Double>; min(). Create a function to calculate the minimum value of an array. static Function<double[][],Double>; pearsonsCorrelation(). Create a function to calculate Pearson's correlation coefficient. static Function<double[],Double>; percentile(double percentile). Create a function to calculate a percentile. static Function<double[][],Double>; spearmansCorrelation(). Create a function to calculate Spearman's correlation coefficient. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Functions; public Functions(). Method Details. percentile; public static Function<double[],Double> percentile(double percentile); Create a function to calculate a percentile. Parameters:; percentile - ; Returns:. min; public static Function<double[],Double> min(); Create a function to calculate the minimum va",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html:1539,Modifiability,inherit,inherited,1539,"lic static class MeasurementProcessor.Functions; extends Object; Functions for calculating measurements from an array of pixels. Constructor Summary; Constructors. Constructor; Description; Functions();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Function<double[],Double>; max(). Create a function to calculate the maximum value of an array. static Function<double[],Double>; mean(). Create a function to calculate the mean (average) value of an array. static Function<double[],Double>; min(). Create a function to calculate the minimum value of an array. static Function<double[][],Double>; pearsonsCorrelation(). Create a function to calculate Pearson's correlation coefficient. static Function<double[],Double>; percentile(double percentile). Create a function to calculate a percentile. static Function<double[][],Double>; spearmansCorrelation(). Create a function to calculate Spearman's correlation coefficient. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Functions; public Functions(). Method Details. percentile; public static Function<double[],Double> percentile(double percentile); Create a function to calculate a percentile. Parameters:; percentile - ; Returns:. min; public static Function<double[],Double> min(); Create a function to calculate the minimum value of an array. Returns:. max; public static Function<double[],Double> max(); Create a function to calculate the maximum value of an array. Returns:. mean; public static Function<double[],Double> mean(); Create a function to calculate the mean (average) value of an array. Returns:. pearsonsCorrelation; public static Function<double[][],Double> pearsonsCorrelation(); Create a function to calculate Pearson's correlation coefficient.; This requires a double[2][n] input array, where n is the number of pixels. Returns:. spearmansCorrelation; pub",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html:1613,Security,hash,hashCode,1613,"ns for calculating measurements from an array of pixels. Constructor Summary; Constructors. Constructor; Description; Functions();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Function<double[],Double>; max(). Create a function to calculate the maximum value of an array. static Function<double[],Double>; mean(). Create a function to calculate the mean (average) value of an array. static Function<double[],Double>; min(). Create a function to calculate the minimum value of an array. static Function<double[][],Double>; pearsonsCorrelation(). Create a function to calculate Pearson's correlation coefficient. static Function<double[],Double>; percentile(double percentile). Create a function to calculate a percentile. static Function<double[][],Double>; spearmansCorrelation(). Create a function to calculate Spearman's correlation coefficient. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Functions; public Functions(). Method Details. percentile; public static Function<double[],Double> percentile(double percentile); Create a function to calculate a percentile. Parameters:; percentile - ; Returns:. min; public static Function<double[],Double> min(); Create a function to calculate the minimum value of an array. Returns:. max; public static Function<double[],Double> max(); Create a function to calculate the maximum value of an array. Returns:. mean; public static Function<double[],Double> mean(); Create a function to calculate the mean (average) value of an array. Returns:. pearsonsCorrelation; public static Function<double[][],Double> pearsonsCorrelation(); Create a function to calculate Pearson's correlation coefficient.; This requires a double[2][n] input array, where n is the number of pixels. Returns:. spearmansCorrelation; public static Function<double[][],Double> spearmansCorrelation(); Create a ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:793,Energy Efficiency,efficient,efficient,793,". MeasurementProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class MeasurementProcessor. java.lang.Object; qupath.lib.experimental.pixels.MeasurementProcessor. public class MeasurementProcessor; extends Object; Create PixelProcessor instances that make measurements from objects.; ; Important! This class is intended to simplify making measurements where all pixel values can fit into a; single double array. It is not suitable for large images or tiling.; ; It is also not very efficient if the same channel is used multiple times, since the channel will be extracted each; time. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. static class ; MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. static class ; MeasurementProcessor.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:979,Integrability,interface,interface,979,". MeasurementProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class MeasurementProcessor. java.lang.Object; qupath.lib.experimental.pixels.MeasurementProcessor. public class MeasurementProcessor; extends Object; Create PixelProcessor instances that make measurements from objects.; ; Important! This class is intended to simplify making measurements where all pixel values can fit into a; single double array. It is not suitable for large images or tiling.; ; It is also not very efficient if the same channel is used multiple times, since the channel will be extracted each; time. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. static class ; MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. static class ; MeasurementProcessor.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:509,Modifiability,extend,extends,509,". MeasurementProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class MeasurementProcessor. java.lang.Object; qupath.lib.experimental.pixels.MeasurementProcessor. public class MeasurementProcessor; extends Object; Create PixelProcessor instances that make measurements from objects.; ; Important! This class is intended to simplify making measurements where all pixel values can fit into a; single double array. It is not suitable for large images or tiling.; ; It is also not very efficient if the same channel is used multiple times, since the channel will be extracted each; time. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. static class ; MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. static class ; MeasurementProcessor.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:1576,Modifiability,extend,extends,1576,"objects.; ; Important! This class is intended to simplify making measurements where all pixel values can fit into a; single double array. It is not suitable for large images or tiling.; ; It is also not very efficient if the same channel is used multiple times, since the channel will be extracted each; time. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. static class ; MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. static class ; MeasurementProcessor.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(Measurement",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:1615,Modifiability,extend,extends,1615,"objects.; ; Important! This class is intended to simplify making measurements where all pixel values can fit into a; single double array. It is not suitable for large images or tiling.; ; It is also not very efficient if the same channel is used multiple times, since the channel will be extracted each; time. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. static class ; MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. static class ; MeasurementProcessor.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(Measurement",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:1846,Modifiability,extend,extends,1846,"el will be extracted each; time. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. static class ; MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. static class ; MeasurementProcessor.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parame",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:1893,Modifiability,extend,extends,1893,"el will be extracted each; time. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. static class ; MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. static class ; MeasurementProcessor.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parame",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:2077,Modifiability,extend,extends,2077,"t from an image, using Parameters. static class ; MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. static class ; MeasurementProcessor.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurement - ; Returns:. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements); Create",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:2254,Modifiability,inherit,inherited,2254,"or.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurement - ; Returns:. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or til",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:2542,Modifiability,extend,extends,2542,"BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurement - ; Returns:. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurements - ; Returns:. builder; public static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>> builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedIma",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:2963,Modifiability,extend,extends,2963,"ect. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurement - ; Returns:. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurements - ; Returns:. builder; public static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>> builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements); Create a new builder for a PixelProcessor that can make custom measurements for an image object.; The builder is ready to use, but can also be further customized if required (e.g. to set the resolution). Parameters:; measurements - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:3009,Modifiability,extend,extends,3009,"ect. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurement - ; Returns:. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurements - ; Returns:. builder; public static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>> builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements); Create a new builder for a PixelProcessor that can make custom measurements for an image object.; The builder is ready to use, but can also be further customized if required (e.g. to set the resolution). Parameters:; measurements - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:3425,Modifiability,extend,extends,3425,"ect. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurement - ; Returns:. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurements - ; Returns:. builder; public static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>> builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements); Create a new builder for a PixelProcessor that can make custom measurements for an image object.; The builder is ready to use, but can also be further customized if required (e.g. to set the resolution). Parameters:; measurements - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:3463,Modifiability,extend,extends,3463,"ect. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurement - ; Returns:. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurements - ; Returns:. builder; public static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>> builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements); Create a new builder for a PixelProcessor that can make custom measurements for an image object.; The builder is ready to use, but can also be further customized if required (e.g. to set the resolution). Parameters:; measurements - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:2328,Security,hash,hashCode,2328,"ary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurement - ; Returns:. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurements - ; Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:634,Usability,simpl,simplify,634,". MeasurementProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class MeasurementProcessor. java.lang.Object; qupath.lib.experimental.pixels.MeasurementProcessor. public class MeasurementProcessor; extends Object; Create PixelProcessor instances that make measurements from objects.; ; Important! This class is intended to simplify making measurements where all pixel values can fit into a; single double array. It is not suitable for large images or tiling.; ; It is also not very efficient if the same channel is used multiple times, since the channel will be extracted each; time. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. static class ; MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. static class ; MeasurementProcessor.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html:1147,Availability,mask,mask,1147,"   ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class MeasurementProcessor.Measurements. java.lang.Object; qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Enclosing class:; MeasurementProcessor. public static class MeasurementProcessor.Measurements; extends Object; Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; Measurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function). Create a new object measurement that requires multiple channels as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires multiple channels as input. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function). Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires one channel as input. Methods inherited from class java.lang.Object; ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html:1749,Availability,mask,mask,1749," Constructor; Description; Measurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function). Create a new object measurement that requires multiple channels as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires multiple channels as input. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function). Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires one channel as input. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Measurements; public Measurements(). Method Details. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction); Create a new object measurement that requires multiple channels as input. Parameters:; name - name of the measurement; transforms - transforms to extract the channels; function - function ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html:3170,Availability,mask,mask,3170,"ng.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Measurements; public Measurements(). Method Details. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction); Create a new object measurement that requires multiple channels as input. Parameters:; name - name of the measurement; transforms - transforms to extract the channels; function - function to calculate the measurement from the pixels; roiFunction - function to select a ROI from an object (generally the main ROI or nucleus); Returns:. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function); Create a new object measurement that requires multiple channels as input, using the main ROI of the object; as a mask. Parameters:; name - name of the measurement; transforms - transforms to extract the channels; function - function to calculate the measurement from the pixels; Returns:. singleChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function,; Function<PathObject,ROI> roiFunction); Create a new object measurement that requires one channel as input. Parameters:; name - name of the measurement; transform - transform to extract the channel; function - function to calculate the measurement from the pixels; roiFunction - function to select a ROI from an object (generally the main ROI or nucleus); Returns:. singleChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> singleChannel(String name,; ColorTransforms.ColorTransform transform,",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html:4228,Availability,mask,mask,4228,"s.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction); Create a new object measurement that requires multiple channels as input. Parameters:; name - name of the measurement; transforms - transforms to extract the channels; function - function to calculate the measurement from the pixels; roiFunction - function to select a ROI from an object (generally the main ROI or nucleus); Returns:. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function); Create a new object measurement that requires multiple channels as input, using the main ROI of the object; as a mask. Parameters:; name - name of the measurement; transforms - transforms to extract the channels; function - function to calculate the measurement from the pixels; Returns:. singleChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function,; Function<PathObject,ROI> roiFunction); Create a new object measurement that requires one channel as input. Parameters:; name - name of the measurement; transform - transform to extract the channel; function - function to calculate the measurement from the pixels; roiFunction - function to select a ROI from an object (generally the main ROI or nucleus); Returns:. singleChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function); Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. Parameters:; name - name of the measurement; transform - transform to extract the channel; function - function to calculate the measurement from the pixels; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html:608,Modifiability,extend,extends,608,". MeasurementProcessor.Measurements (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class MeasurementProcessor.Measurements. java.lang.Object; qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Enclosing class:; MeasurementProcessor. public static class MeasurementProcessor.Measurements; extends Object; Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; Measurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function). Create a new object measurement that requires multiple channels as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires multiple channels as input. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function). Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object mea",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html:2054,Modifiability,inherit,inherited,2054,"ent that requires multiple channels as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires multiple channels as input. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function). Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires one channel as input. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Measurements; public Measurements(). Method Details. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction); Create a new object measurement that requires multiple channels as input. Parameters:; name - name of the measurement; transforms - transforms to extract the channels; function - function to calculate the measurement from the pixels; roiFunction - function to select a ROI from an object (generally the main ROI or nucleus); Returns:. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function); Create",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html:2128,Security,hash,hashCode,2128,"object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires multiple channels as input. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function). Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires one channel as input. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Measurements; public Measurements(). Method Details. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction); Create a new object measurement that requires multiple channels as input. Parameters:; name - name of the measurement; transforms - transforms to extract the channels; function - function to calculate the measurement from the pixels; roiFunction - function to select a ROI from an object (generally the main ROI or nucleus); Returns:. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function); Create a new object measurement that requires multiple channels as input, usin",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:8778,Availability,mask,mask,8778,"sificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); classificationMap - a map used to convert labels intoo; Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(BiFunction<ROI,Number,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation).; The second argument is the label, which can be used e.g. to set a classification.; Returns:; the converter. builder; public static PixelProcessor.Builder<Mat,Mat,Mat> builder(Processor<Mat,Mat,Mat> processor); Create a PixelProcessor.Builder for an OpenCV Mat.; By default, this will attempt to convert any labeled or binary image output to unclassified detection objects -; but the builder may be further customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. createMatImageSupplier; public static ImageSupplier<Mat> createMatImageSupplier(); Create an ImageSupplier that returns an OpenCV Mat. Returns:. createMatMaskSupplier; public static MaskSupplier<Mat,Mat> createMatMaskSupplier(); Create a MaskSupplier that returns an OpenCV Mat. Returns:. wrapInPointerScope; public static <S,; T,; U> Processor<S,T,U> wrapInPointerScope(Processor<S,T,U> processor); Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output).; ; If the input is a processor that is already known to have this behavior, it is returned unchanged. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; processor - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:3715,Deployability,release,released,3715,"). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. static <S,; T,; U> Processor<S,T,U>; wrapInPointerScope(Processor<S,T,U> processor). Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:8595,Deployability,release,released,8595,"sificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); classificationMap - a map used to convert labels intoo; Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(BiFunction<ROI,Number,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation).; The second argument is the label, which can be used e.g. to set a classification.; Returns:; the converter. builder; public static PixelProcessor.Builder<Mat,Mat,Mat> builder(Processor<Mat,Mat,Mat> processor); Create a PixelProcessor.Builder for an OpenCV Mat.; By default, this will attempt to convert any labeled or binary image output to unclassified detection objects -; but the builder may be further customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. createMatImageSupplier; public static ImageSupplier<Mat> createMatImageSupplier(); Create an ImageSupplier that returns an OpenCV Mat. Returns:. createMatMaskSupplier; public static MaskSupplier<Mat,Mat> createMatMaskSupplier(); Create a MaskSupplier that returns an OpenCV Mat. Returns:. wrapInPointerScope; public static <S,; T,; U> Processor<S,T,U> wrapInPointerScope(Processor<S,T,U> processor); Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output).; ; If the input is a processor that is already known to have this behavior, it is returned unchanged. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; processor - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:3575,Integrability,wrap,wrapInPointerScope,3575,". Create an ImageSupplier that returns an OpenCV Mat. static MaskSupplier<Mat,Mat>; createMatMaskSupplier(). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. static <S,; T,; U> Processor<S,T,U>; wrapInPointerScope(Processor<S,T,U> processor). Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> cre",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:8392,Integrability,wrap,wrapInPointerScope,8392,"sificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); classificationMap - a map used to convert labels intoo; Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(BiFunction<ROI,Number,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation).; The second argument is the label, which can be used e.g. to set a classification.; Returns:; the converter. builder; public static PixelProcessor.Builder<Mat,Mat,Mat> builder(Processor<Mat,Mat,Mat> processor); Create a PixelProcessor.Builder for an OpenCV Mat.; By default, this will attempt to convert any labeled or binary image output to unclassified detection objects -; but the builder may be further customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. createMatImageSupplier; public static ImageSupplier<Mat> createMatImageSupplier(); Create an ImageSupplier that returns an OpenCV Mat. Returns:. createMatMaskSupplier; public static MaskSupplier<Mat,Mat> createMatMaskSupplier(); Create a MaskSupplier that returns an OpenCV Mat. Returns:. wrapInPointerScope; public static <S,; T,; U> Processor<S,T,U> wrapInPointerScope(Processor<S,T,U> processor); Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output).; ; If the input is a processor that is already known to have this behavior, it is returned unchanged. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; processor - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:8455,Integrability,wrap,wrapInPointerScope,8455,"sificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); classificationMap - a map used to convert labels intoo; Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(BiFunction<ROI,Number,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation).; The second argument is the label, which can be used e.g. to set a classification.; Returns:; the converter. builder; public static PixelProcessor.Builder<Mat,Mat,Mat> builder(Processor<Mat,Mat,Mat> processor); Create a PixelProcessor.Builder for an OpenCV Mat.; By default, this will attempt to convert any labeled or binary image output to unclassified detection objects -; but the builder may be further customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. createMatImageSupplier; public static ImageSupplier<Mat> createMatImageSupplier(); Create an ImageSupplier that returns an OpenCV Mat. Returns:. createMatMaskSupplier; public static MaskSupplier<Mat,Mat> createMatMaskSupplier(); Create a MaskSupplier that returns an OpenCV Mat. Returns:. wrapInPointerScope; public static <S,; T,; U> Processor<S,T,U> wrapInPointerScope(Processor<S,T,U> processor); Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output).; ; If the input is a processor that is already known to have this behavior, it is returned unchanged. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; processor - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:489,Modifiability,extend,extends,489,". OpenCVProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OpenCVProcessor. java.lang.Object; qupath.lib.experimental.pixels.OpenCVProcessor. public class OpenCVProcessor; extends Object; Class to generate a PixelProcessor when using OpenCV for the primary image representation. Constructor Summary; Constructors. Constructor; Description; OpenCVProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<Mat,Mat,Mat>; builder(Processor<Mat,Mat,Mat> processor). Create a PixelProcessor.Builder for an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetect",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:1213,Modifiability,extend,extends,1213,"etail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OpenCVProcessor. java.lang.Object; qupath.lib.experimental.pixels.OpenCVProcessor. public class OpenCVProcessor; extends Object; Class to generate a PixelProcessor when using OpenCV for the primary image representation. Constructor Summary; Constructors. Constructor; Description; OpenCVProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<Mat,Mat,Mat>; builder(Processor<Mat,Mat,Mat> processor). Create a PixelProcessor.Builder for an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler<",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:1598,Modifiability,extend,extends,1598,"epresentation. Constructor Summary; Constructors. Constructor; Description; OpenCVProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<Mat,Mat,Mat>; builder(Processor<Mat,Mat,Mat> processor). Create a PixelProcessor.Builder for an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<Mat>; createMatImageSupplier(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:2020,Modifiability,extend,extends,2020,"Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<Mat>; createMatImageSupplier(). Create an ImageSupplier that returns an OpenCV Mat. static MaskSupplier<Mat,Mat>; createMatMaskSupplier(). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. s",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:2401,Modifiability,extend,extends,2401,"putHandler<S,T,Mat>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<Mat>; createMatImageSupplier(). Create an ImageSupplier that returns an OpenCV Mat. static MaskSupplier<Mat,Mat>; createMatMaskSupplier(). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> cl",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:3360,Modifiability,extend,extends,3360,"c <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<Mat>; createMatImageSupplier(). Create an ImageSupplier that returns an OpenCV Mat. static MaskSupplier<Mat,Mat>; createMatMaskSupplier(). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. static <S,; T,; U> Processor<S,T,U>; wrapInPointerScope(Processor<S,T,U> processor). Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:3758,Modifiability,inherit,inherited,3758,".OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. static <S,; T,; U> Processor<S,T,U>; wrapInPointerScope(Processor<S,T,U> processor). Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHan",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:4280,Modifiability,extend,extends,4280,"S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. static <S,; T,; U> Processor<S,T,U>; wrapInPointerScope(Processor<S,T,U> processor). Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. cre",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:4817,Modifiability,extend,extends,4817,"tClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(); Create an OutputHandler.OutputToObjectC",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:5414,Modifiability,extend,extends,5414,"rs:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:6031,Modifiability,extend,extends,6031,"urns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:6820,Modifiability,extend,extends,6820,"ler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); classificationMap - a map used to convert labels intoo; Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(BiFunction<ROI,Number,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation).; The second argument is the label, which can be used e.g. to set a classification.; Returns:; the converter. builder; public static PixelProcessor.Builder<Mat,Mat,Mat> builder(Processor<Mat,Mat,Mat> processor); Crea",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:1907,Safety,detect,detection,1907,"essor.Builder for an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<Mat>; createMatImageSupplier(). Create an ImageSupplier that returns an OpenCV Mat. static MaskSupplier<Mat,Mat>; createMatMaskSupplier(). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an Output",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:2153,Safety,detect,detection,2153," T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<Mat>; createMatImageSupplier(). Create an ImageSupplier that returns an OpenCV Mat. static MaskSupplier<Mat,Mat>; createMatMaskSupplier(). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). C",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:2308,Safety,detect,detection,2308,"utToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<Mat>; createMatImageSupplier(). Create an ImageSupplier that returns an OpenCV Mat. static MaskSupplier<Mat,Mat>; createMatMaskSupplier(). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConvert",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:2509,Safety,detect,detection,2509,"t the output into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<Mat>; createMatImageSupplier(). Create an ImageSupplier that returns an OpenCV Mat. static MaskSupplier<Mat,Mat>; createMatMaskSupplier(). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:4141,Safety,detect,detection,4141,"T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. static <S,; T,; U> Processor<S,T,U>; wrapInPointerScope(Processor<S,T,U> processor). Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationConverter",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:4388,Safety,detect,detection,4388,"S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. static <S,; T,; U> Processor<S,T,U>; wrapInPointerScope(Processor<S,T,U> processor). Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. cre",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:5875,Safety,detect,detection,5875,"ionMap); Create an OutputHandler that attempts to convert the output into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classifi",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:6164,Safety,detect,detection,6164,"teAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); classificationMap - a map used to co",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:6615,Safety,detect,detection,6615,"sifications; Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); classificationMap - a map used to convert labels intoo; Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(BiFunction<ROI,Number,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation).; The second argument is the label, which can be ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:7080,Safety,detect,detection,7080,"mpts to convert the output; into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); classificationMap - a map used to convert labels intoo; Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(BiFunction<ROI,Number,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation).; The second argument is the label, which can be used e.g. to set a classification.; Returns:; the converter. builder; public static PixelProcessor.Builder<Mat,Mat,Mat> builder(Processor<Mat,Mat,Mat> processor); Create a PixelProcessor.Builder for an OpenCV Mat.; By default, this will attempt to convert any labeled or binary image output to unclassified detection objects -; but the builder may be further customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. createMatImageSupplier; publi",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:7567,Safety,detect,detection,7567,"o determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); classificationMap - a map used to convert labels intoo; Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(BiFunction<ROI,Number,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation).; The second argument is the label, which can be used e.g. to set a classification.; Returns:; the converter. builder; public static PixelProcessor.Builder<Mat,Mat,Mat> builder(Processor<Mat,Mat,Mat> processor); Create a PixelProcessor.Builder for an OpenCV Mat.; By default, this will attempt to convert any labeled or binary image output to unclassified detection objects -; but the builder may be further customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. createMatImageSupplier; public static ImageSupplier<Mat> createMatImageSupplier(); Create an ImageSupplier that returns an OpenCV Mat. Returns:. createMatMaskSupplier; public static MaskSupplier<Mat,Mat> createMatMaskSupplier(); Create a MaskSupplier that returns an OpenCV Mat. Returns:. wrapInPointerScope; public static <S,; T,; U> Processor<S,T,U> wrapInPointerScope(Processor<S,T,U> processor); Wrap a processor in a second processor that uses a PointerScope to ensure t",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:7946,Safety,detect,detection,7946,"sificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); classificationMap - a map used to convert labels intoo; Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(BiFunction<ROI,Number,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation).; The second argument is the label, which can be used e.g. to set a classification.; Returns:; the converter. builder; public static PixelProcessor.Builder<Mat,Mat,Mat> builder(Processor<Mat,Mat,Mat> processor); Create a PixelProcessor.Builder for an OpenCV Mat.; By default, this will attempt to convert any labeled or binary image output to unclassified detection objects -; but the builder may be further customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. createMatImageSupplier; public static ImageSupplier<Mat> createMatImageSupplier(); Create an ImageSupplier that returns an OpenCV Mat. Returns:. createMatMaskSupplier; public static MaskSupplier<Mat,Mat> createMatMaskSupplier(); Create a MaskSupplier that returns an OpenCV Mat. Returns:. wrapInPointerScope; public static <S,; T,; U> Processor<S,T,U> wrapInPointerScope(Processor<S,T,U> processor); Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output).; ; If the input is a processor that is already known to have this behavior, it is returned unchanged. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; processor - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:3832,Security,hash,hashCode,3832,"Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. static <S,; T,; U> Processor<S,T,U>; wrapInPointerScope(Processor<S,T,U> processor). Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(Map<? extends Number,String>",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:457,Availability,mask,mask,457,". OutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler<S,T,U>. Type Parameters:; S - the type of image; T - the type of mask; U - the type of output. All Known Implementing Classes:; OutputHandler.ObjectOutputHandler. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface OutputHandler<S,T,U>; A functional interface for handling the output of a Processor.; ; This may (for example) add measurements to the parent object, set the classification, or create child objects. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; OutputHandler.ObjectOutputHandler<S,T,U>;  ; static interface ; OutputHandler.OutputToObjectConverter<S,T,U>;  . Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default OutputHandler<S,T,U>; andThen(OutputHandler<S,T,U> after). Append a second output handler to this one. static <S,; T,; U> OutputHandler<S,T,U>; consumeOutput(). Create a basic do-nothing output handler that consumes the output with no changes. static <S,; T,; U> OutputHandler<S,T,U>; createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. static <S,; T,; U> OutputHandler<S,T,U>; createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects t",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:1766,Availability,mask,mask,1766," OutputHandler<S,T,U>; A functional interface for handling the output of a Processor.; ; This may (for example) add measurements to the parent object, set the classification, or create child objects. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; OutputHandler.ObjectOutputHandler<S,T,U>;  ; static interface ; OutputHandler.OutputToObjectConverter<S,T,U>;  . Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default OutputHandler<S,T,U>; andThen(OutputHandler<S,T,U> after). Append a second output handler to this one. static <S,; T,; U> OutputHandler<S,T,U>; consumeOutput(). Create a basic do-nothing output handler that consumes the output with no changes. static <S,; T,; U> OutputHandler<S,T,U>; createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. static <S,; T,; U> OutputHandler<S,T,U>; createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask. static <S,; T,; U> OutputHandler<S,T,U>; createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object. boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. static boolean; handleOutputClassification(Parameters<?,?> params,; String output). Handle the output of a pixel processor by setting a PathClass, given by its name. static boolean; handleOutputClassification(Parameters<?,?> params,; PathClass output). Handle the output of a pixel processor by setting a PathClass. static boolean; handleOutputMeasurements(Parameters<?,?> para",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:2039,Availability,mask,mask,2039," Type; Interface; Description; static class ; OutputHandler.ObjectOutputHandler<S,T,U>;  ; static interface ; OutputHandler.OutputToObjectConverter<S,T,U>;  . Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default OutputHandler<S,T,U>; andThen(OutputHandler<S,T,U> after). Append a second output handler to this one. static <S,; T,; U> OutputHandler<S,T,U>; consumeOutput(). Create a basic do-nothing output handler that consumes the output with no changes. static <S,; T,; U> OutputHandler<S,T,U>; createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. static <S,; T,; U> OutputHandler<S,T,U>; createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask. static <S,; T,; U> OutputHandler<S,T,U>; createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object. boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. static boolean; handleOutputClassification(Parameters<?,?> params,; String output). Handle the output of a pixel processor by setting a PathClass, given by its name. static boolean; handleOutputClassification(Parameters<?,?> params,; PathClass output). Handle the output of a pixel processor by setting a PathClass. static boolean; handleOutputMeasurements(Parameters<?,?> params,; Map<String,? extends Number> output). Handle the output of a pixel processor by adding measurements to the path object. default OutputHandler<S,T,U>; orElse(OutputHandler<S,T,U> after). Append a second output handler to this one, but only call ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:4185,Availability,mask,masking,4185,"ons, add measurements, or add child objects. Parameters:; params - the processing parameters; output - the generated output. andThen; default OutputHandler<S,T,U> andThen(OutputHandler<S,T,U> after); Append a second output handler to this one.; Both are called, and return true if either returns true. Parameters:; after - ; Returns:. orElse; default OutputHandler<S,T,U> orElse(OutputHandler<S,T,U> after); Append a second output handler to this one, but only call it if this one returns false.; The return value of the handler is then true if either returns true. Parameters:; after - ; Returns:. createUnmaskedObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects.; ; This method does not apply any masking to the parent ROI, but assumed this has already been applied; elsewhere. Consequently, it can result in objects being created that extend beyond the ROI.; To avoid this, use createMaskAndSplitObjectOutputHandler(OutputToObjectConverter) or; #createMaskedObjectOutputHandler(OutputToObjectConverter)}. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:. createObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask.; This can result in objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createMaskAndSplitObjectOutputHandler(OutputToObjectConverter). crea",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:4540,Availability,mask,mask,4540,"default OutputHandler<S,T,U> orElse(OutputHandler<S,T,U> after); Append a second output handler to this one, but only call it if this one returns false.; The return value of the handler is then true if either returns true. Parameters:; after - ; Returns:. createUnmaskedObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects.; ; This method does not apply any masking to the parent ROI, but assumed this has already been applied; elsewhere. Consequently, it can result in objects being created that extend beyond the ROI.; To avoid this, use createMaskAndSplitObjectOutputHandler(OutputToObjectConverter) or; #createMaskedObjectOutputHandler(OutputToObjectConverter)}. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:. createObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask.; This can result in objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createMaskAndSplitObjectOutputHandler(OutputToObjectConverter). createMaskAndSplitObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs.; This requires an Output",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:4855,Availability,mask,mask,4855,"ter - ; Returns:. createUnmaskedObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects.; ; This method does not apply any masking to the parent ROI, but assumed this has already been applied; elsewhere. Consequently, it can result in objects being created that extend beyond the ROI.; To avoid this, use createMaskAndSplitObjectOutputHandler(OutputToObjectConverter) or; #createMaskedObjectOutputHandler(OutputToObjectConverter)}. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:. createObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask.; This can result in objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createMaskAndSplitObjectOutputHandler(OutputToObjectConverter). createMaskAndSplitObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createObjectOutputHandler(OutputToO",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:5060,Availability,mask,mask,5060,"andler.OutputToObjectConverter to convert the output to a list of objects.; ; This method does not apply any masking to the parent ROI, but assumed this has already been applied; elsewhere. Consequently, it can result in objects being created that extend beyond the ROI.; To avoid this, use createMaskAndSplitObjectOutputHandler(OutputToObjectConverter) or; #createMaskedObjectOutputHandler(OutputToObjectConverter)}. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:. createObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask.; This can result in objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createMaskAndSplitObjectOutputHandler(OutputToObjectConverter). createMaskAndSplitObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createObjectOutputHandler(OutputToObjectConverter). consumeOutput; static <S,; T,; U> OutputHandler<S,T,U> consumeOutput(); Create a basic do-nothing output handler that consumes the output with no changes.; This returns true regardless of input, without doing anything further. Type Parameters:; S - ; T - ; U - ; Returns:",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:5474,Availability,mask,mask,5474,"or; #createMaskedObjectOutputHandler(OutputToObjectConverter)}. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:. createObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask.; This can result in objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createMaskAndSplitObjectOutputHandler(OutputToObjectConverter). createMaskAndSplitObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createObjectOutputHandler(OutputToObjectConverter). consumeOutput; static <S,; T,; U> OutputHandler<S,T,U> consumeOutput(); Create a basic do-nothing output handler that consumes the output with no changes.; This returns true regardless of input, without doing anything further. Type Parameters:; S - ; T - ; U - ; Returns:. handleOutputMeasurements; static boolean handleOutputMeasurements(Parameters<?,?> params,; Map<String,? extends Number> output); Handle the output of a pixel processor by adding measurements to the path object. Parameters:; params - ; output - . handleOutputClassification; static boolean handleOutputClassification(Parameters<?,?> params,; PathClass ou",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:5673,Availability,mask,mask,5673,"utputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask.; This can result in objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createMaskAndSplitObjectOutputHandler(OutputToObjectConverter). createMaskAndSplitObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createObjectOutputHandler(OutputToObjectConverter). consumeOutput; static <S,; T,; U> OutputHandler<S,T,U> consumeOutput(); Create a basic do-nothing output handler that consumes the output with no changes.; This returns true regardless of input, without doing anything further. Type Parameters:; S - ; T - ; U - ; Returns:. handleOutputMeasurements; static boolean handleOutputMeasurements(Parameters<?,?> params,; Map<String,? extends Number> output); Handle the output of a pixel processor by adding measurements to the path object. Parameters:; params - ; output - . handleOutputClassification; static boolean handleOutputClassification(Parameters<?,?> params,; PathClass output); Handle the output of a pixel processor by setting a PathClass. Parameters:; params - ; output - . handleOutputClassification; static boolean handleOutputClassification(Parameters<?,?> params,; String output); Handle the output of a pixel processor by ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:599,Integrability,interface,interface,599,". OutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler<S,T,U>. Type Parameters:; S - the type of image; T - the type of mask; U - the type of output. All Known Implementing Classes:; OutputHandler.ObjectOutputHandler. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface OutputHandler<S,T,U>; A functional interface for handling the output of a Processor.; ; This may (for example) add measurements to the parent object, set the classification, or create child objects. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; OutputHandler.ObjectOutputHandler<S,T,U>;  ; static interface ; OutputHandler.OutputToObjectConverter<S,T,U>;  . Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default OutputHandler<S,T,U>; andThen(OutputHandler<S,T,U> after). Append a second output handler to this one. static <S,; T,; U> OutputHandler<S,T,U>; consumeOutput(). Create a basic do-nothing output handler that consumes the output with no changes. static <S,; T,; U> OutputHandler<S,T,U>; createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. static <S,; T,; U> OutputHandler<S,T,U>; createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects t",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:734,Integrability,interface,interface,734,". OutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler<S,T,U>. Type Parameters:; S - the type of image; T - the type of mask; U - the type of output. All Known Implementing Classes:; OutputHandler.ObjectOutputHandler. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface OutputHandler<S,T,U>; A functional interface for handling the output of a Processor.; ; This may (for example) add measurements to the parent object, set the classification, or create child objects. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; OutputHandler.ObjectOutputHandler<S,T,U>;  ; static interface ; OutputHandler.OutputToObjectConverter<S,T,U>;  . Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default OutputHandler<S,T,U>; andThen(OutputHandler<S,T,U> after). Append a second output handler to this one. static <S,; T,; U> OutputHandler<S,T,U>; consumeOutput(). Create a basic do-nothing output handler that consumes the output with no changes. static <S,; T,; U> OutputHandler<S,T,U>; createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. static <S,; T,; U> OutputHandler<S,T,U>; createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects t",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:779,Integrability,interface,interface,779,". OutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler<S,T,U>. Type Parameters:; S - the type of image; T - the type of mask; U - the type of output. All Known Implementing Classes:; OutputHandler.ObjectOutputHandler. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface OutputHandler<S,T,U>; A functional interface for handling the output of a Processor.; ; This may (for example) add measurements to the parent object, set the classification, or create child objects. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; OutputHandler.ObjectOutputHandler<S,T,U>;  ; static interface ; OutputHandler.OutputToObjectConverter<S,T,U>;  . Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default OutputHandler<S,T,U>; andThen(OutputHandler<S,T,U> after). Append a second output handler to this one. static <S,; T,; U> OutputHandler<S,T,U>; consumeOutput(). Create a basic do-nothing output handler that consumes the output with no changes. static <S,; T,; U> OutputHandler<S,T,U>; createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. static <S,; T,; U> OutputHandler<S,T,U>; createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects t",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:1091,Integrability,interface,interface,1091,"igation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler<S,T,U>. Type Parameters:; S - the type of image; T - the type of mask; U - the type of output. All Known Implementing Classes:; OutputHandler.ObjectOutputHandler. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface OutputHandler<S,T,U>; A functional interface for handling the output of a Processor.; ; This may (for example) add measurements to the parent object, set the classification, or create child objects. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; OutputHandler.ObjectOutputHandler<S,T,U>;  ; static interface ; OutputHandler.OutputToObjectConverter<S,T,U>;  . Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default OutputHandler<S,T,U>; andThen(OutputHandler<S,T,U> after). Append a second output handler to this one. static <S,; T,; U> OutputHandler<S,T,U>; consumeOutput(). Create a basic do-nothing output handler that consumes the output with no changes. static <S,; T,; U> OutputHandler<S,T,U>; createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. static <S,; T,; U> OutputHandler<S,T,U>; createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask. static <S,; T,; U> OutputHandler<S,T,U>;",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:2762,Modifiability,extend,extends,2762,"parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. static <S,; T,; U> OutputHandler<S,T,U>; createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask. static <S,; T,; U> OutputHandler<S,T,U>; createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object. boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. static boolean; handleOutputClassification(Parameters<?,?> params,; String output). Handle the output of a pixel processor by setting a PathClass, given by its name. static boolean; handleOutputClassification(Parameters<?,?> params,; PathClass output). Handle the output of a pixel processor by setting a PathClass. static boolean; handleOutputMeasurements(Parameters<?,?> params,; Map<String,? extends Number> output). Handle the output of a pixel processor by adding measurements to the path object. default OutputHandler<S,T,U>; orElse(OutputHandler<S,T,U> after). Append a second output handler to this one, but only call it if this one returns false. Method Details. handleOutput; boolean handleOutput(Parameters<S,T> params,; U output); Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Parameters:; params - the processing parameters; output - the generated output. andThen; default OutputHandler<S,T,U> andThen(OutputHandler<S,T,U> after); Append a second output handler to this one.; Both are called, and return true if either returns true. Parameters:; after - ; Returns:. orElse; default OutputHandler<S,T,U> orElse(OutputHandler<S,T,U> after); Append a second output handler to this one, but only call it if this one returns false.; The return value of the handle",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:4324,Modifiability,extend,extend,4324,"ut - the generated output. andThen; default OutputHandler<S,T,U> andThen(OutputHandler<S,T,U> after); Append a second output handler to this one.; Both are called, and return true if either returns true. Parameters:; after - ; Returns:. orElse; default OutputHandler<S,T,U> orElse(OutputHandler<S,T,U> after); Append a second output handler to this one, but only call it if this one returns false.; The return value of the handler is then true if either returns true. Parameters:; after - ; Returns:. createUnmaskedObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects.; ; This method does not apply any masking to the parent ROI, but assumed this has already been applied; elsewhere. Consequently, it can result in objects being created that extend beyond the ROI.; To avoid this, use createMaskAndSplitObjectOutputHandler(OutputToObjectConverter) or; #createMaskedObjectOutputHandler(OutputToObjectConverter)}. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:. createObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask.; This can result in objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createMaskAndSplitObjectOutputHandler(OutputToObjectConverter). createMaskAndSplitObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createMaskAndSplitObjec",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:6182,Modifiability,extend,extends,6182,"e an output handler that can be used to add objects to the parent object, applying the ROI mask.; This can result in objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createMaskAndSplitObjectOutputHandler(OutputToObjectConverter). createMaskAndSplitObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createObjectOutputHandler(OutputToObjectConverter). consumeOutput; static <S,; T,; U> OutputHandler<S,T,U> consumeOutput(); Create a basic do-nothing output handler that consumes the output with no changes.; This returns true regardless of input, without doing anything further. Type Parameters:; S - ; T - ; U - ; Returns:. handleOutputMeasurements; static boolean handleOutputMeasurements(Parameters<?,?> params,; Map<String,? extends Number> output); Handle the output of a pixel processor by adding measurements to the path object. Parameters:; params - ; output - . handleOutputClassification; static boolean handleOutputClassification(Parameters<?,?> params,; PathClass output); Handle the output of a pixel processor by setting a PathClass. Parameters:; params - ; output - . handleOutputClassification; static boolean handleOutputClassification(Parameters<?,?> params,; String output); Handle the output of a pixel processor by setting a PathClass, given by its name. Parameters:; params - ; output - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:4351,Safety,avoid,avoid,4351,"ond output handler to this one.; Both are called, and return true if either returns true. Parameters:; after - ; Returns:. orElse; default OutputHandler<S,T,U> orElse(OutputHandler<S,T,U> after); Append a second output handler to this one, but only call it if this one returns false.; The return value of the handler is then true if either returns true. Parameters:; after - ; Returns:. createUnmaskedObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects.; ; This method does not apply any masking to the parent ROI, but assumed this has already been applied; elsewhere. Consequently, it can result in objects being created that extend beyond the ROI.; To avoid this, use createMaskAndSplitObjectOutputHandler(OutputToObjectConverter) or; #createMaskedObjectOutputHandler(OutputToObjectConverter)}. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:. createObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask.; This can result in objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createMaskAndSplitObjectOutputHandler(OutputToObjectConverter). createMaskAndSplitObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html:588,Integrability,interface,interface,588,". OutputHandler.ObjectOutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OutputHandler.ObjectOutputHandler<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler<S,T,U>. All Implemented Interfaces:; OutputHandler<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. public static class OutputHandler.ObjectOutputHandler<S,T,U>; extends Object; implements OutputHandler<S,T,U>. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.experimental.pixels.OutputHandler; OutputHandler.ObjectOutputHandler<S,T,U>, OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.experimental.pixels.OutputHandler; andThen, orElse. Method Details. handleOutput; public boolean handleOutput(Parameters<S,T> params,; U output); Description copied from interface: OutputHandler; Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Specified by:; handleOutput in interface OutputHandler<S,T,U>; Parameters:; params - the processing parameters; output - the generated output. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html:770,Integrability,interface,interfaces,770,". OutputHandler.ObjectOutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OutputHandler.ObjectOutputHandler<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler<S,T,U>. All Implemented Interfaces:; OutputHandler<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. public static class OutputHandler.ObjectOutputHandler<S,T,U>; extends Object; implements OutputHandler<S,T,U>. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.experimental.pixels.OutputHandler; OutputHandler.ObjectOutputHandler<S,T,U>, OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.experimental.pixels.OutputHandler; andThen, orElse. Method Details. handleOutput; public boolean handleOutput(Parameters<S,T> params,; U output); Description copied from interface: OutputHandler; Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Specified by:; handleOutput in interface OutputHandler<S,T,U>; Parameters:; params - the processing parameters; output - the generated output. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html:796,Integrability,interface,interface,796,". OutputHandler.ObjectOutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OutputHandler.ObjectOutputHandler<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler<S,T,U>. All Implemented Interfaces:; OutputHandler<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. public static class OutputHandler.ObjectOutputHandler<S,T,U>; extends Object; implements OutputHandler<S,T,U>. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.experimental.pixels.OutputHandler; OutputHandler.ObjectOutputHandler<S,T,U>, OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.experimental.pixels.OutputHandler; andThen, orElse. Method Details. handleOutput; public boolean handleOutput(Parameters<S,T> params,; U output); Description copied from interface: OutputHandler; Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Specified by:; handleOutput in interface OutputHandler<S,T,U>; Parameters:; params - the processing parameters; output - the generated output. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html:1314,Integrability,interface,interface,1314,". OutputHandler.ObjectOutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OutputHandler.ObjectOutputHandler<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler<S,T,U>. All Implemented Interfaces:; OutputHandler<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. public static class OutputHandler.ObjectOutputHandler<S,T,U>; extends Object; implements OutputHandler<S,T,U>. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.experimental.pixels.OutputHandler; OutputHandler.ObjectOutputHandler<S,T,U>, OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.experimental.pixels.OutputHandler; andThen, orElse. Method Details. handleOutput; public boolean handleOutput(Parameters<S,T> params,; U output); Description copied from interface: OutputHandler; Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Specified by:; handleOutput in interface OutputHandler<S,T,U>; Parameters:; params - the processing parameters; output - the generated output. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html:1505,Integrability,interface,interface,1505,". OutputHandler.ObjectOutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OutputHandler.ObjectOutputHandler<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler<S,T,U>. All Implemented Interfaces:; OutputHandler<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. public static class OutputHandler.ObjectOutputHandler<S,T,U>; extends Object; implements OutputHandler<S,T,U>. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.experimental.pixels.OutputHandler; OutputHandler.ObjectOutputHandler<S,T,U>, OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.experimental.pixels.OutputHandler; andThen, orElse. Method Details. handleOutput; public boolean handleOutput(Parameters<S,T> params,; U output); Description copied from interface: OutputHandler; Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Specified by:; handleOutput in interface OutputHandler<S,T,U>; Parameters:; params - the processing parameters; output - the generated output. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html:1704,Integrability,interface,interface,1704,". OutputHandler.ObjectOutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OutputHandler.ObjectOutputHandler<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler<S,T,U>. All Implemented Interfaces:; OutputHandler<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. public static class OutputHandler.ObjectOutputHandler<S,T,U>; extends Object; implements OutputHandler<S,T,U>. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.experimental.pixels.OutputHandler; OutputHandler.ObjectOutputHandler<S,T,U>, OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.experimental.pixels.OutputHandler; andThen, orElse. Method Details. handleOutput; public boolean handleOutput(Parameters<S,T> params,; U output); Description copied from interface: OutputHandler; Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Specified by:; handleOutput in interface OutputHandler<S,T,U>; Parameters:; params - the processing parameters; output - the generated output. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html:684,Modifiability,extend,extends,684,". OutputHandler.ObjectOutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OutputHandler.ObjectOutputHandler<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler<S,T,U>. All Implemented Interfaces:; OutputHandler<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. public static class OutputHandler.ObjectOutputHandler<S,T,U>; extends Object; implements OutputHandler<S,T,U>. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.experimental.pixels.OutputHandler; OutputHandler.ObjectOutputHandler<S,T,U>, OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.experimental.pixels.OutputHandler; andThen, orElse. Method Details. handleOutput; public boolean handleOutput(Parameters<S,T> params,; U output); Description copied from interface: OutputHandler; Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Specified by:; handleOutput in interface OutputHandler<S,T,U>; Parameters:; params - the processing parameters; output - the generated output. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html:781,Modifiability,inherit,inherited,781,". OutputHandler.ObjectOutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OutputHandler.ObjectOutputHandler<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler<S,T,U>. All Implemented Interfaces:; OutputHandler<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. public static class OutputHandler.ObjectOutputHandler<S,T,U>; extends Object; implements OutputHandler<S,T,U>. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.experimental.pixels.OutputHandler; OutputHandler.ObjectOutputHandler<S,T,U>, OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.experimental.pixels.OutputHandler; andThen, orElse. Method Details. handleOutput; public boolean handleOutput(Parameters<S,T> params,; U output); Description copied from interface: OutputHandler; Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Specified by:; handleOutput in interface OutputHandler<S,T,U>; Parameters:; params - the processing parameters; output - the generated output. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html:1160,Modifiability,inherit,inherited,1160,". OutputHandler.ObjectOutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OutputHandler.ObjectOutputHandler<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler<S,T,U>. All Implemented Interfaces:; OutputHandler<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. public static class OutputHandler.ObjectOutputHandler<S,T,U>; extends Object; implements OutputHandler<S,T,U>. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.experimental.pixels.OutputHandler; OutputHandler.ObjectOutputHandler<S,T,U>, OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.experimental.pixels.OutputHandler; andThen, orElse. Method Details. handleOutput; public boolean handleOutput(Parameters<S,T> params,; U output); Description copied from interface: OutputHandler; Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Specified by:; handleOutput in interface OutputHandler<S,T,U>; Parameters:; params - the processing parameters; output - the generated output. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html:1299,Modifiability,inherit,inherited,1299,". OutputHandler.ObjectOutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OutputHandler.ObjectOutputHandler<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler<S,T,U>. All Implemented Interfaces:; OutputHandler<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. public static class OutputHandler.ObjectOutputHandler<S,T,U>; extends Object; implements OutputHandler<S,T,U>. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.experimental.pixels.OutputHandler; OutputHandler.ObjectOutputHandler<S,T,U>, OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.experimental.pixels.OutputHandler; andThen, orElse. Method Details. handleOutput; public boolean handleOutput(Parameters<S,T> params,; U output); Description copied from interface: OutputHandler; Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Specified by:; handleOutput in interface OutputHandler<S,T,U>; Parameters:; params - the processing parameters; output - the generated output. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html:1234,Security,hash,hashCode,1234,". OutputHandler.ObjectOutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OutputHandler.ObjectOutputHandler<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler<S,T,U>. All Implemented Interfaces:; OutputHandler<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. public static class OutputHandler.ObjectOutputHandler<S,T,U>; extends Object; implements OutputHandler<S,T,U>. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.experimental.pixels.OutputHandler; OutputHandler.ObjectOutputHandler<S,T,U>, OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.experimental.pixels.OutputHandler; andThen, orElse. Method Details. handleOutput; public boolean handleOutput(Parameters<S,T> params,; U output); Description copied from interface: OutputHandler; Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Specified by:; handleOutput in interface OutputHandler<S,T,U>; Parameters:; params - the processing parameters; output - the generated output. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html:1541,Availability,avail,available,1541,". OutputHandler.OutputToObjectConverter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler.OutputToObjectConverter<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<PathObject>; convertToObjects(Parameters<S,T> params,; U output). Convert the output of a pixel processor to a list of PathObjects. Method Details. convertToObjects; List<PathObject> convertToObjects(Parameters<S,T> params,; U output); Convert the output of a pixel processor to a list of PathObjects. Parameters:; params - the processing parameters; output - the output of the processor; Returns:; a list of objects, or null if the output is incompatible with this conversion.; Note that an empty list is not the same as null; an empty list indicates that; no objects were detected, whereas null indicates that the output is incompatible; and therefore should be passed to another output handler, if available. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html:458,Integrability,interface,interface,458,". OutputHandler.OutputToObjectConverter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler.OutputToObjectConverter<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<PathObject>; convertToObjects(Parameters<S,T> params,; U output). Convert the output of a pixel processor to a list of PathObjects. Method Details. convertToObjects; List<PathObject> convertToObjects(Parameters<S,T> params,; U output); Convert the output of a pixel processor to a list of PathObjects. Parameters:; params - the processing parameters; output - the output of the processor; Returns:; a list of objects, or null if the output is incompatible with this conversion.; Note that an empty list is not the same as null; an empty list indicates that; no objects were detected, whereas null indicates that the output is incompatible; and therefore should be passed to another output handler, if available. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html:536,Integrability,interface,interface,536,". OutputHandler.OutputToObjectConverter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler.OutputToObjectConverter<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<PathObject>; convertToObjects(Parameters<S,T> params,; U output). Convert the output of a pixel processor to a list of PathObjects. Method Details. convertToObjects; List<PathObject> convertToObjects(Parameters<S,T> params,; U output); Convert the output of a pixel processor to a list of PathObjects. Parameters:; params - the processing parameters; output - the output of the processor; Returns:; a list of objects, or null if the output is incompatible with this conversion.; Note that an empty list is not the same as null; an empty list indicates that; no objects were detected, whereas null indicates that the output is incompatible; and therefore should be passed to another output handler, if available. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html:678,Integrability,interface,interface,678,". OutputHandler.OutputToObjectConverter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler.OutputToObjectConverter<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<PathObject>; convertToObjects(Parameters<S,T> params,; U output). Convert the output of a pixel processor to a list of PathObjects. Method Details. convertToObjects; List<PathObject> convertToObjects(Parameters<S,T> params,; U output); Convert the output of a pixel processor to a list of PathObjects. Parameters:; params - the processing parameters; output - the output of the processor; Returns:; a list of objects, or null if the output is incompatible with this conversion.; Note that an empty list is not the same as null; an empty list indicates that; no objects were detected, whereas null indicates that the output is incompatible; and therefore should be passed to another output handler, if available. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html:1414,Safety,detect,detected,1414,". OutputHandler.OutputToObjectConverter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler.OutputToObjectConverter<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<PathObject>; convertToObjects(Parameters<S,T> params,; U output). Convert the output of a pixel processor to a list of PathObjects. Method Details. convertToObjects; List<PathObject> convertToObjects(Parameters<S,T> params,; U output); Convert the output of a pixel processor to a list of PathObjects. Parameters:; params - the processing parameters; output - the output of the processor; Returns:; a list of objects, or null if the output is incompatible with this conversion.; Note that an empty list is not the same as null; an empty list indicates that; no objects were detected, whereas null indicates that the output is incompatible; and therefore should be passed to another output handler, if available. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html:910,Availability,mask,mask,910,". qupath.lib.experimental.pixels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.experimental.pixels. package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images.; ; Warning! This package is experimental and not thoroughly tested.; Use with caution; it is likely to change in the future. All Classes and InterfacesInterfacesClasses. Class; Description; ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageSupplier<S>. A functional interface for supplying an image region for processing. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. Processor<S,T,U>. A generic processor designed to work with Parame",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html:796,Integrability,interface,interface,796,". qupath.lib.experimental.pixels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.experimental.pixels. package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images.; ; Warning! This package is experimental and not thoroughly tested.; Use with caution; it is likely to change in the future. All Classes and InterfacesInterfacesClasses. Class; Description; ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageSupplier<S>. A functional interface for supplying an image region for processing. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. Processor<S,T,U>. A generic processor designed to work with Parame",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html:884,Integrability,interface,interface,884,". qupath.lib.experimental.pixels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.experimental.pixels. package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images.; ; Warning! This package is experimental and not thoroughly tested.; Use with caution; it is likely to change in the future. All Classes and InterfacesInterfacesClasses. Class; Description; ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageSupplier<S>. A functional interface for supplying an image region for processing. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. Processor<S,T,U>. A generic processor designed to work with Parame",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html:1473,Integrability,interface,interface,1473,"els (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.experimental.pixels. package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images.; ; Warning! This package is experimental and not thoroughly tested.; Use with caution; it is likely to change in the future. All Classes and InterfacesInterfacesClasses. Class; Description; ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageSupplier<S>. A functional interface for supplying an image region for processing. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. Processor<S,T,U>. A generic processor designed to work with Parameters and provide an output. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html:527,Testability,test,tested,527,". qupath.lib.experimental.pixels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.experimental.pixels. package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images.; ; Warning! This package is experimental and not thoroughly tested.; Use with caution; it is likely to change in the future. All Classes and InterfacesInterfacesClasses. Class; Description; ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageSupplier<S>. A functional interface for supplying an image region for processing. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. Processor<S,T,U>. A generic processor designed to work with Parame",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html:423,Usability,simpl,simplify,423,". qupath.lib.experimental.pixels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.experimental.pixels. package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images.; ; Warning! This package is experimental and not thoroughly tested.; Use with caution; it is likely to change in the future. All Classes and InterfacesInterfacesClasses. Class; Description; ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageSupplier<S>. A functional interface for supplying an image region for processing. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. Processor<S,T,U>. A generic processor designed to work with Parame",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html:524,Availability,mask,mask,524,". Parameters.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters.Builder<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters.Builder<S,T>. Type Parameters:; S - the image type; T - the mask type. Enclosing class:; Parameters<S,T>. public static class Parameters.Builder<S,T>; extends Object; Builder class for Parameters. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameters<S,T>; build(). Build the parameters. Parameters.Builder<S,T>; imageData(ImageData<BufferedImage> imageData). Set the image data. Parameters.Builder<S,T>; imageFunction(ImageSupplier<S> function). Function used ot lazily read the image. Parameters.Builder<S,T>; maskFunction(MaskSupplier<S,T> function). Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters.Builder<S,T>; parent(PathObject parent). Set the parent object. Parameters.Builder<S,T>; parentProxy(PathObject parentProxy). Optionally set a temporary object to use as a parent. Parameters.Builder<S,T>; region(RegionRequest region). Specify the region to use for processing. Parameters.Builder<S,T>; server(ImageServer<BufferedImage> server). Set the server. Parameters.Builder<S,T>; tile(TileRequest tile). Specify the tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the i",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html:1109,Availability,mask,maskFunction,1109,"; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters.Builder<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters.Builder<S,T>. Type Parameters:; S - the image type; T - the mask type. Enclosing class:; Parameters<S,T>. public static class Parameters.Builder<S,T>; extends Object; Builder class for Parameters. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameters<S,T>; build(). Build the parameters. Parameters.Builder<S,T>; imageData(ImageData<BufferedImage> imageData). Set the image data. Parameters.Builder<S,T>; imageFunction(ImageSupplier<S> function). Function used ot lazily read the image. Parameters.Builder<S,T>; maskFunction(MaskSupplier<S,T> function). Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters.Builder<S,T>; parent(PathObject parent). Set the parent object. Parameters.Builder<S,T>; parentProxy(PathObject parentProxy). Optionally set a temporary object to use as a parent. Parameters.Builder<S,T>; region(RegionRequest region). Specify the region to use for processing. Parameters.Builder<S,T>; server(ImageServer<BufferedImage> server). Set the server. Parameters.Builder<S,T>; tile(TileRequest tile). Specify the tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the image data. Parameters:; imageData - ; Returns:. server; public Parameters.Builder<S,T> server(ImageServer<BufferedImage> s",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html:1184,Availability,mask,mask,1184,"; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters.Builder<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters.Builder<S,T>. Type Parameters:; S - the image type; T - the mask type. Enclosing class:; Parameters<S,T>. public static class Parameters.Builder<S,T>; extends Object; Builder class for Parameters. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameters<S,T>; build(). Build the parameters. Parameters.Builder<S,T>; imageData(ImageData<BufferedImage> imageData). Set the image data. Parameters.Builder<S,T>; imageFunction(ImageSupplier<S> function). Function used ot lazily read the image. Parameters.Builder<S,T>; maskFunction(MaskSupplier<S,T> function). Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters.Builder<S,T>; parent(PathObject parent). Set the parent object. Parameters.Builder<S,T>; parentProxy(PathObject parentProxy). Optionally set a temporary object to use as a parent. Parameters.Builder<S,T>; region(RegionRequest region). Specify the region to use for processing. Parameters.Builder<S,T>; server(ImageServer<BufferedImage> server). Set the server. Parameters.Builder<S,T>; tile(TileRequest tile). Specify the tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the image data. Parameters:; imageData - ; Returns:. server; public Parameters.Builder<S,T> server(ImageServer<BufferedImage> server); Set the server. This is optional, for cases when processing sh",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html:2599,Availability,avail,available,2599,"y the tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the image data. Parameters:; imageData - ; Returns:. server; public Parameters.Builder<S,T> server(ImageServer<BufferedImage> server); Set the server. This is optional, for cases when processing should be applied to a different image; from that stored in the image data. Parameters:; server - ; Returns:. region; public Parameters.Builder<S,T> region(RegionRequest region); Specify the region to use for processing. Parameters:; region - ; Returns:; See Also:. tile(TileRequest). tile; public Parameters.Builder<S,T> tile(TileRequest tile); Specify the tile relevant for processing.; If the regions are available as tile requests, these should be used instead of region requests -; because they enable more accurate contour tracing across tile boundaries. Parameters:; tile - ; Returns:; See Also:. region(RegionRequest). imageFunction; public Parameters.Builder<S,T> imageFunction(ImageSupplier<S> function); Function used ot lazily read the image. Parameters:; function - ; Returns:. maskFunction; public Parameters.Builder<S,T> maskFunction(MaskSupplier<S,T> function); Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters:; function - ; Returns:. parent; public Parameters.Builder<S,T> parent(PathObject parent); Set the parent object. Parameters:; parent - ; Returns:. parentProxy; public Parameters.Builder<S,T> parentProxy(PathObject parentProxy); Optionally set a temporary object to use as a parent.; This is useful for tiled processing, when the parent object may be too large to process in a single region. Parameters:; parentProxy - ; Returns:. build; public Parameters<S,T> build(); Build the parameters. Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html:2982,Availability,mask,maskFunction,2982,"e tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the image data. Parameters:; imageData - ; Returns:. server; public Parameters.Builder<S,T> server(ImageServer<BufferedImage> server); Set the server. This is optional, for cases when processing should be applied to a different image; from that stored in the image data. Parameters:; server - ; Returns:. region; public Parameters.Builder<S,T> region(RegionRequest region); Specify the region to use for processing. Parameters:; region - ; Returns:; See Also:. tile(TileRequest). tile; public Parameters.Builder<S,T> tile(TileRequest tile); Specify the tile relevant for processing.; If the regions are available as tile requests, these should be used instead of region requests -; because they enable more accurate contour tracing across tile boundaries. Parameters:; tile - ; Returns:; See Also:. region(RegionRequest). imageFunction; public Parameters.Builder<S,T> imageFunction(ImageSupplier<S> function); Function used ot lazily read the image. Parameters:; function - ; Returns:. maskFunction; public Parameters.Builder<S,T> maskFunction(MaskSupplier<S,T> function); Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters:; function - ; Returns:. parent; public Parameters.Builder<S,T> parent(PathObject parent); Set the parent object. Parameters:; parent - ; Returns:. parentProxy; public Parameters.Builder<S,T> parentProxy(PathObject parentProxy); Optionally set a temporary object to use as a parent.; This is useful for tiled processing, when the parent object may be too large to process in a single region. Parameters:; parentProxy - ; Returns:. build; public Parameters<S,T> build(); Build the parameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html:3027,Availability,mask,maskFunction,3027,"e tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the image data. Parameters:; imageData - ; Returns:. server; public Parameters.Builder<S,T> server(ImageServer<BufferedImage> server); Set the server. This is optional, for cases when processing should be applied to a different image; from that stored in the image data. Parameters:; server - ; Returns:. region; public Parameters.Builder<S,T> region(RegionRequest region); Specify the region to use for processing. Parameters:; region - ; Returns:; See Also:. tile(TileRequest). tile; public Parameters.Builder<S,T> tile(TileRequest tile); Specify the tile relevant for processing.; If the regions are available as tile requests, these should be used instead of region requests -; because they enable more accurate contour tracing across tile boundaries. Parameters:; tile - ; Returns:; See Also:. region(RegionRequest). imageFunction; public Parameters.Builder<S,T> imageFunction(ImageSupplier<S> function); Function used ot lazily read the image. Parameters:; function - ; Returns:. maskFunction; public Parameters.Builder<S,T> maskFunction(MaskSupplier<S,T> function); Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters:; function - ; Returns:. parent; public Parameters.Builder<S,T> parent(PathObject parent); Set the parent object. Parameters:; parent - ; Returns:. parentProxy; public Parameters.Builder<S,T> parentProxy(PathObject parentProxy); Optionally set a temporary object to use as a parent.; This is useful for tiled processing, when the parent object may be too large to process in a single region. Parameters:; parentProxy - ; Returns:. build; public Parameters<S,T> build(); Build the parameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html:3102,Availability,mask,mask,3102,"e tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the image data. Parameters:; imageData - ; Returns:. server; public Parameters.Builder<S,T> server(ImageServer<BufferedImage> server); Set the server. This is optional, for cases when processing should be applied to a different image; from that stored in the image data. Parameters:; server - ; Returns:. region; public Parameters.Builder<S,T> region(RegionRequest region); Specify the region to use for processing. Parameters:; region - ; Returns:; See Also:. tile(TileRequest). tile; public Parameters.Builder<S,T> tile(TileRequest tile); Specify the tile relevant for processing.; If the regions are available as tile requests, these should be used instead of region requests -; because they enable more accurate contour tracing across tile boundaries. Parameters:; tile - ; Returns:; See Also:. region(RegionRequest). imageFunction; public Parameters.Builder<S,T> imageFunction(ImageSupplier<S> function); Function used ot lazily read the image. Parameters:; function - ; Returns:. maskFunction; public Parameters.Builder<S,T> maskFunction(MaskSupplier<S,T> function); Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters:; function - ; Returns:. parent; public Parameters.Builder<S,T> parent(PathObject parent); Set the parent object. Parameters:; parent - ; Returns:. parentProxy; public Parameters.Builder<S,T> parentProxy(PathObject parentProxy); Optionally set a temporary object to use as a parent.; This is useful for tiled processing, when the parent object may be too large to process in a single region. Parameters:; parentProxy - ; Returns:. build; public Parameters<S,T> build(); Build the parameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html:615,Modifiability,extend,extends,615,". Parameters.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters.Builder<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters.Builder<S,T>. Type Parameters:; S - the image type; T - the mask type. Enclosing class:; Parameters<S,T>. public static class Parameters.Builder<S,T>; extends Object; Builder class for Parameters. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameters<S,T>; build(). Build the parameters. Parameters.Builder<S,T>; imageData(ImageData<BufferedImage> imageData). Set the image data. Parameters.Builder<S,T>; imageFunction(ImageSupplier<S> function). Function used ot lazily read the image. Parameters.Builder<S,T>; maskFunction(MaskSupplier<S,T> function). Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters.Builder<S,T>; parent(PathObject parent). Set the parent object. Parameters.Builder<S,T>; parentProxy(PathObject parentProxy). Optionally set a temporary object to use as a parent. Parameters.Builder<S,T>; region(RegionRequest region). Specify the region to use for processing. Parameters.Builder<S,T>; server(ImageServer<BufferedImage> server). Set the server. Parameters.Builder<S,T>; tile(TileRequest tile). Specify the tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the i",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html:1708,Modifiability,inherit,inherited,1708,"tion; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameters<S,T>; build(). Build the parameters. Parameters.Builder<S,T>; imageData(ImageData<BufferedImage> imageData). Set the image data. Parameters.Builder<S,T>; imageFunction(ImageSupplier<S> function). Function used ot lazily read the image. Parameters.Builder<S,T>; maskFunction(MaskSupplier<S,T> function). Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters.Builder<S,T>; parent(PathObject parent). Set the parent object. Parameters.Builder<S,T>; parentProxy(PathObject parentProxy). Optionally set a temporary object to use as a parent. Parameters.Builder<S,T>; region(RegionRequest region). Specify the region to use for processing. Parameters.Builder<S,T>; server(ImageServer<BufferedImage> server). Set the server. Parameters.Builder<S,T>; tile(TileRequest tile). Specify the tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the image data. Parameters:; imageData - ; Returns:. server; public Parameters.Builder<S,T> server(ImageServer<BufferedImage> server); Set the server. This is optional, for cases when processing should be applied to a different image; from that stored in the image data. Parameters:; server - ; Returns:. region; public Parameters.Builder<S,T> region(RegionRequest region); Specify the region to use for processing. Parameters:; region - ; Returns:; See Also:. tile(TileRequest). tile; public Parameters.Builder<S,T> tile(TileRequest tile); Specify the tile relevant for processing.; If the regions are available as tile requests, these should be used instead of region requests -; because they enable more accurate conto",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html:1782,Security,hash,hashCode,1782,"Methods. Modifier and Type; Method; Description; Parameters<S,T>; build(). Build the parameters. Parameters.Builder<S,T>; imageData(ImageData<BufferedImage> imageData). Set the image data. Parameters.Builder<S,T>; imageFunction(ImageSupplier<S> function). Function used ot lazily read the image. Parameters.Builder<S,T>; maskFunction(MaskSupplier<S,T> function). Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters.Builder<S,T>; parent(PathObject parent). Set the parent object. Parameters.Builder<S,T>; parentProxy(PathObject parentProxy). Optionally set a temporary object to use as a parent. Parameters.Builder<S,T>; region(RegionRequest region). Specify the region to use for processing. Parameters.Builder<S,T>; server(ImageServer<BufferedImage> server). Set the server. Parameters.Builder<S,T>; tile(TileRequest tile). Specify the tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the image data. Parameters:; imageData - ; Returns:. server; public Parameters.Builder<S,T> server(ImageServer<BufferedImage> server); Set the server. This is optional, for cases when processing should be applied to a different image; from that stored in the image data. Parameters:; server - ; Returns:. region; public Parameters.Builder<S,T> region(RegionRequest region); Specify the region to use for processing. Parameters:; region - ; Returns:; See Also:. tile(TileRequest). tile; public Parameters.Builder<S,T> tile(TileRequest tile); Specify the tile relevant for processing.; If the regions are available as tile requests, these should be used instead of region requests -; because they enable more accurate contour tracing across tile boundaries. Parameters:; tile - ; Returns:; See A",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:500,Availability,mask,mask,500,". Parameters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters<S,T>. Type Parameters:; S - the image type; T - the mask type. public class Parameters<S,T>; extends Object; Parameters for use with a PixelProcessor. Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:1090,Availability,mask,mask,1090,"Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters<S,T>. Type Parameters:; S - the image type; T - the mask type. public class Parameters<S,T>; extends Object; Parameters for use with a PixelProcessor. Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRe",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:1160,Availability,mask,mask,1160,"Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters<S,T>. Type Parameters:; S - the image type; T - the mask type. public class Parameters<S,T>; extends Object; Parameters for use with a PixelProcessor. Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRe",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:1168,Availability,avail,available,1168,"Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters<S,T>. Type Parameters:; S - the image type; T - the mask type. public class Parameters<S,T>; extends Object; Parameters for use with a PixelProcessor. Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRe",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:1208,Availability,mask,mask,1208,": ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters<S,T>. Type Parameters:; S - the image type; T - the mask type. public class Parameters<S,T>; extends Object; Parameters for use with a PixelProcessor. Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the t",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:1252,Availability,mask,mask,1252,": ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters<S,T>. Type Parameters:; S - the image type; T - the mask type. public class Parameters<S,T>; extends Object; Parameters for use with a PixelProcessor. Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the t",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:1260,Availability,avail,available,1260,": ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters<S,T>. Type Parameters:; S - the image type; T - the mask type. public class Parameters<S,T>; extends Object; Parameters for use with a PixelProcessor. Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the t",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:1584,Availability,avail,available,1584,"with a PixelProcessor. Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important t",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:2251,Availability,avail,available,2251,"ociated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getMask(ROI roi); throws IOException; Get the mask associated with any ROI, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Parameters:; roi - ; Returns:; Throws",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:2428,Availability,error,errors,2428,"). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getMask(ROI roi); throws IOException; Get the mask associated with any ROI, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Parameters:; roi - ; Returns:; Throws:; IOException. getParent; public PathObject getParent(); Get the parent object. Returns:; See Also:. getParentOrProxy(). getParent",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:2704,Availability,mask,mask,2704,"t, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getMask(ROI roi); throws IOException; Get the mask associated with any ROI, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Parameters:; roi - ; Returns:; Throws:; IOException. getParent; public PathObject getParent(); Get the parent object. Returns:; See Also:. getParentOrProxy(). getParentOrProxy; public PathObject getParentOrProxy(); Get the parent, or a proxy parent if one has been specified.; The proxy parent is used to provide a temporary parent object for tiled processing, when using the parent; directly may be problematic (e.g. because the region is too large). Returns:; See Also:. getParent(). builder; public static <S,; T> Parameters.Builder<S,T",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:2774,Availability,mask,mask,2774,"t, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getMask(ROI roi); throws IOException; Get the mask associated with any ROI, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Parameters:; roi - ; Returns:; Throws:; IOException. getParent; public PathObject getParent(); Get the parent object. Returns:; See Also:. getParentOrProxy(). getParentOrProxy; public PathObject getParentOrProxy(); Get the parent, or a proxy parent if one has been specified.; The proxy parent is used to provide a temporary parent object for tiled processing, when using the parent; directly may be problematic (e.g. because the region is too large). Returns:; See Also:. getParent(). builder; public static <S,; T> Parameters.Builder<S,T",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:2782,Availability,avail,available,2782,"t, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getMask(ROI roi); throws IOException; Get the mask associated with any ROI, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Parameters:; roi - ; Returns:; Throws:; IOException. getParent; public PathObject getParent(); Get the parent object. Returns:; See Also:. getParentOrProxy(). getParentOrProxy; public PathObject getParentOrProxy(); Get the parent, or a proxy parent if one has been specified.; The proxy parent is used to provide a temporary parent object for tiled processing, when using the parent; directly may be problematic (e.g. because the region is too large). Returns:; See Also:. getParent(). builder; public static <S,; T> Parameters.Builder<S,T",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:2808,Availability,mask,mask,2808,"); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getMask(ROI roi); throws IOException; Get the mask associated with any ROI, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Parameters:; roi - ; Returns:; Throws:; IOException. getParent; public PathObject getParent(); Get the parent object. Returns:; See Also:. getParentOrProxy(). getParentOrProxy; public PathObject getParentOrProxy(); Get the parent, or a proxy parent if one has been specified.; The proxy parent is used to provide a temporary parent object for tiled processing, when using the parent; directly may be problematic (e.g. because the region is too large). Returns:; See Also:. getParent(). builder; public static <S,; T> Parameters.Builder<S,T> builder(); Create a new builder for parameters. Type Parameters:; S - ; T - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:3003,Availability,mask,mask,3003,"); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getMask(ROI roi); throws IOException; Get the mask associated with any ROI, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Parameters:; roi - ; Returns:; Throws:; IOException. getParent; public PathObject getParent(); Get the parent object. Returns:; See Also:. getParentOrProxy(). getParentOrProxy; public PathObject getParentOrProxy(); Get the parent, or a proxy parent if one has been specified.; The proxy parent is used to provide a temporary parent object for tiled processing, when using the parent; directly may be problematic (e.g. because the region is too large). Returns:; See Also:. getParent(). builder; public static <S,; T> Parameters.Builder<S,T> builder(); Create a new builder for parameters. Type Parameters:; S - ; T - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:3047,Availability,mask,mask,3047,"); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getMask(ROI roi); throws IOException; Get the mask associated with any ROI, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Parameters:; roi - ; Returns:; Throws:; IOException. getParent; public PathObject getParent(); Get the parent object. Returns:; See Also:. getParentOrProxy(). getParentOrProxy; public PathObject getParentOrProxy(); Get the parent, or a proxy parent if one has been specified.; The proxy parent is used to provide a temporary parent object for tiled processing, when using the parent; directly may be problematic (e.g. because the region is too large). Returns:; See Also:. getParent(). builder; public static <S,; T> Parameters.Builder<S,T> builder(); Create a new builder for parameters. Type Parameters:; S - ; T - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:3055,Availability,avail,available,3055,"); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getMask(ROI roi); throws IOException; Get the mask associated with any ROI, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Parameters:; roi - ; Returns:; Throws:; IOException. getParent; public PathObject getParent(); Get the parent object. Returns:; See Also:. getParentOrProxy(). getParentOrProxy; public PathObject getParentOrProxy(); Get the parent, or a proxy parent if one has been specified.; The proxy parent is used to provide a temporary parent object for tiled processing, when using the parent; directly may be problematic (e.g. because the region is too large). Returns:; See Also:. getParent(). builder; public static <S,; T> Parameters.Builder<S,T> builder(); Create a new builder for parameters. Type Parameters:; S - ; T - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:3081,Availability,mask,mask,3081,"); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getMask(ROI roi); throws IOException; Get the mask associated with any ROI, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Parameters:; roi - ; Returns:; Throws:; IOException. getParent; public PathObject getParent(); Get the parent object. Returns:; See Also:. getParentOrProxy(). getParentOrProxy; public PathObject getParentOrProxy(); Get the parent, or a proxy parent if one has been specified.; The proxy parent is used to provide a temporary parent object for tiled processing, when using the parent; directly may be problematic (e.g. because the region is too large). Returns:; See Also:. getParent(). builder; public static <S,; T> Parameters.Builder<S,T> builder(); Create a new builder for parameters. Type Parameters:; S - ; T - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:541,Modifiability,extend,extends,541,". Parameters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters<S,T>. Type Parameters:; S - the image type; T - the mask type. public class Parameters<S,T>; extends Object; Parameters for use with a PixelProcessor. Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:1603,Modifiability,inherit,inherited,1603,".0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the calle",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:2542,Performance,cache,cached,2542,"ile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getMask(ROI roi); throws IOException; Get the mask associated with any ROI, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Parameters:; roi - ; Returns:; Throws:; IOException. getParent; public PathObject getParent(); Get the parent object. Returns:; See Also:. getParentOrProxy(). getParentOrProxy; public PathObject getParentOrProxy(); Get the parent, or a proxy parent if one has been specified.; The proxy parent is used to provide a temporary parent object for tiled processing, when using the parent; dire",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:1677,Security,hash,hashCode,1677,"ription; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws I",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:1934,Security,access,accessed,1934,"ers. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getM",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:540,Availability,mask,mask,540,". PixelProcessor.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor.Builder<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor.Builder<S,T,U>. Type Parameters:; S - the image type; T - the mask type; U - the output type. Enclosing class:; PixelProcessor<S,T,U>. public static class PixelProcessor.Builder<S,T,U>; extends Object; Builder class for a PixelProcessor. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelProcessor<S,T,U>; build(). Build a PixelProcessor from the current state of the builder. PixelProcessor.Builder<S,T,U>; downsample(double downsample). Set the downsample factor to use with requesting image regions. PixelProcessor.Builder<S,T,U>; imageSupplier(ImageSupplier<S> imageSupplier). Set the image supplier. PixelProcessor.Builder<S,T,U>; maskSupplier(MaskSupplier<S,T> maskSupplier). Set the mask supplier. PixelProcessor.Builder<S,T,U>; merger(ObjectMerger merger). Set a merger to use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:1017,Availability,down,downsample,1017," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor.Builder<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor.Builder<S,T,U>. Type Parameters:; S - the image type; T - the mask type; U - the output type. Enclosing class:; PixelProcessor<S,T,U>. public static class PixelProcessor.Builder<S,T,U>; extends Object; Builder class for a PixelProcessor. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelProcessor<S,T,U>; build(). Build a PixelProcessor from the current state of the builder. PixelProcessor.Builder<S,T,U>; downsample(double downsample). Set the downsample factor to use with requesting image regions. PixelProcessor.Builder<S,T,U>; imageSupplier(ImageSupplier<S> imageSupplier). Set the image supplier. PixelProcessor.Builder<S,T,U>; maskSupplier(MaskSupplier<S,T> maskSupplier). Set the mask supplier. PixelProcessor.Builder<S,T,U>; merger(ObjectMerger merger). Set a merger to use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelPr",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:1035,Availability,down,downsample,1035," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor.Builder<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor.Builder<S,T,U>. Type Parameters:; S - the image type; T - the mask type; U - the output type. Enclosing class:; PixelProcessor<S,T,U>. public static class PixelProcessor.Builder<S,T,U>; extends Object; Builder class for a PixelProcessor. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelProcessor<S,T,U>; build(). Build a PixelProcessor from the current state of the builder. PixelProcessor.Builder<S,T,U>; downsample(double downsample). Set the downsample factor to use with requesting image regions. PixelProcessor.Builder<S,T,U>; imageSupplier(ImageSupplier<S> imageSupplier). Set the image supplier. PixelProcessor.Builder<S,T,U>; maskSupplier(MaskSupplier<S,T> maskSupplier). Set the mask supplier. PixelProcessor.Builder<S,T,U>; merger(ObjectMerger merger). Set a merger to use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelPr",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:1056,Availability,down,downsample,1056,".    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor.Builder<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor.Builder<S,T,U>. Type Parameters:; S - the image type; T - the mask type; U - the output type. Enclosing class:; PixelProcessor<S,T,U>. public static class PixelProcessor.Builder<S,T,U>; extends Object; Builder class for a PixelProcessor. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelProcessor<S,T,U>; build(). Build a PixelProcessor from the current state of the builder. PixelProcessor.Builder<S,T,U>; downsample(double downsample). Set the downsample factor to use with requesting image regions. PixelProcessor.Builder<S,T,U>; imageSupplier(ImageSupplier<S> imageSupplier). Set the image supplier. PixelProcessor.Builder<S,T,U>; maskSupplier(MaskSupplier<S,T> maskSupplier). Set the mask supplier. PixelProcessor.Builder<S,T,U>; merger(ObjectMerger merger). Set a merger to use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> proc",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:1245,Availability,mask,maskSupplier,1245,"; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor.Builder<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor.Builder<S,T,U>. Type Parameters:; S - the image type; T - the mask type; U - the output type. Enclosing class:; PixelProcessor<S,T,U>. public static class PixelProcessor.Builder<S,T,U>; extends Object; Builder class for a PixelProcessor. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelProcessor<S,T,U>; build(). Build a PixelProcessor from the current state of the builder. PixelProcessor.Builder<S,T,U>; downsample(double downsample). Set the downsample factor to use with requesting image regions. PixelProcessor.Builder<S,T,U>; imageSupplier(ImageSupplier<S> imageSupplier). Set the image supplier. PixelProcessor.Builder<S,T,U>; maskSupplier(MaskSupplier<S,T> maskSupplier). Set the mask supplier. PixelProcessor.Builder<S,T,U>; merger(ObjectMerger merger). Set a merger to use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:1276,Availability,mask,maskSupplier,1276,"; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor.Builder<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor.Builder<S,T,U>. Type Parameters:; S - the image type; T - the mask type; U - the output type. Enclosing class:; PixelProcessor<S,T,U>. public static class PixelProcessor.Builder<S,T,U>; extends Object; Builder class for a PixelProcessor. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelProcessor<S,T,U>; build(). Build a PixelProcessor from the current state of the builder. PixelProcessor.Builder<S,T,U>; downsample(double downsample). Set the downsample factor to use with requesting image regions. PixelProcessor.Builder<S,T,U>; imageSupplier(ImageSupplier<S> imageSupplier). Set the image supplier. PixelProcessor.Builder<S,T,U>; maskSupplier(MaskSupplier<S,T> maskSupplier). Set the mask supplier. PixelProcessor.Builder<S,T,U>; merger(ObjectMerger merger). Set a merger to use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:1299,Availability,mask,mask,1299,"ield | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor.Builder<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor.Builder<S,T,U>. Type Parameters:; S - the image type; T - the mask type; U - the output type. Enclosing class:; PixelProcessor<S,T,U>. public static class PixelProcessor.Builder<S,T,U>; extends Object; Builder class for a PixelProcessor. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelProcessor<S,T,U>; build(). Build a PixelProcessor from the current state of the builder. PixelProcessor.Builder<S,T,U>; downsample(double downsample). Set the downsample factor to use with requesting image regions. PixelProcessor.Builder<S,T,U>; imageSupplier(ImageSupplier<S> imageSupplier). Set the image supplier. PixelProcessor.Builder<S,T,U>; maskSupplier(MaskSupplier<S,T> maskSupplier). Set the mask supplier. PixelProcessor.Builder<S,T,U>; merger(ObjectMerger merger). Set a merger to use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:2732,Availability,mask,maskSupplier,2732,"regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when ex",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:2783,Availability,mask,maskSupplier,2783,",T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:2814,Availability,mask,maskSupplier,2814,",T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:2837,Availability,mask,mask,2837,",T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:2885,Availability,mask,masks,2885,"ing regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsamp",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:2918,Availability,mask,maskSupplier,2918,"elSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; size - ; Returns:",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:3596,Availability,down,downsampled,3596,"r(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; size - ; Returns:. downsample; public PixelProcessor.Builder<S,T,U> downsample(double downsample); Set the downsample factor to use with requesting image regions. Parameters:; downsample - ; Returns:. pixelSize; public PixelProcessor.Builder<S,T,U> pixelSize(double pixelSize); Set the requested pixel size to use with requesting image regions.; This will be converted to a downsample factor based on the image calibration. Parameters:; pixelSize - ; Returns:. tiler; public PixelProcessor.Builder<S,T,U> tiler(Tiler tiler); Set a tiler to use. This is required for large regions, so that the image can be processed in tiles. Parameters:; tiler - ; Returns:. tile",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:3870,Availability,down,downsampled,3870,"upplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; size - ; Returns:. downsample; public PixelProcessor.Builder<S,T,U> downsample(double downsample); Set the downsample factor to use with requesting image regions. Parameters:; downsample - ; Returns:. pixelSize; public PixelProcessor.Builder<S,T,U> pixelSize(double pixelSize); Set the requested pixel size to use with requesting image regions.; This will be converted to a downsample factor based on the image calibration. Parameters:; pixelSize - ; Returns:. tiler; public PixelProcessor.Builder<S,T,U> tiler(Tiler tiler); Set a tiler to use. This is required for large regions, so that the image can be processed in tiles. Parameters:; tiler - ; Returns:. tile; public PixelProcessor.Builder<S,T,U> tile(int tileWidth,; int tileHeight); Set a default tiler to use, with a specified tile size. Parameters:; tileWidth - ; tileHeight - ; Returns:. merger; public PixelProcessor.Builder<S,T,U> merger(ObjectMerger merger); Set a merger to",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:3926,Availability,down,downsample,3926,":. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; size - ; Returns:. downsample; public PixelProcessor.Builder<S,T,U> downsample(double downsample); Set the downsample factor to use with requesting image regions. Parameters:; downsample - ; Returns:. pixelSize; public PixelProcessor.Builder<S,T,U> pixelSize(double pixelSize); Set the requested pixel size to use with requesting image regions.; This will be converted to a downsample factor based on the image calibration. Parameters:; pixelSize - ; Returns:. tiler; public PixelProcessor.Builder<S,T,U> tiler(Tiler tiler); Set a tiler to use. This is required for large regions, so that the image can be processed in tiles. Parameters:; tiler - ; Returns:. tile; public PixelProcessor.Builder<S,T,U> tile(int tileWidth,; int tileHeight); Set a default tiler to use, with a specified tile size. Parameters:; tileWidth - ; tileHeight - ; Returns:. merger; public PixelProcessor.Builder<S,T,U> merger(ObjectMerger merger); Set a merger to use. This is currently only relevant when using a tiler. Parameters:; merger - ; Returns:; See Als",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:3975,Availability,down,downsample,3975,"putHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; size - ; Returns:. downsample; public PixelProcessor.Builder<S,T,U> downsample(double downsample); Set the downsample factor to use with requesting image regions. Parameters:; downsample - ; Returns:. pixelSize; public PixelProcessor.Builder<S,T,U> pixelSize(double pixelSize); Set the requested pixel size to use with requesting image regions.; This will be converted to a downsample factor based on the image calibration. Parameters:; pixelSize - ; Returns:. tiler; public PixelProcessor.Builder<S,T,U> tiler(Tiler tiler); Set a tiler to use. This is required for large regions, so that the image can be processed in tiles. Parameters:; tiler - ; Returns:. tile; public PixelProcessor.Builder<S,T,U> tile(int tileWidth,; int tileHeight); Set a default tiler to use, with a specified tile size. Parameters:; tileWidth - ; tileHeight - ; Returns:. merger; public PixelProcessor.Builder<S,T,U> merger(ObjectMerger merger); Set a merger to use. This is currently only relevant when using a tiler. Parameters:; merger - ; Returns:; See Also:. mergeSharedBoundaries(double). mergeSharedBoundaries; public PixelPr",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:3993,Availability,down,downsample,3993,"putHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; size - ; Returns:. downsample; public PixelProcessor.Builder<S,T,U> downsample(double downsample); Set the downsample factor to use with requesting image regions. Parameters:; downsample - ; Returns:. pixelSize; public PixelProcessor.Builder<S,T,U> pixelSize(double pixelSize); Set the requested pixel size to use with requesting image regions.; This will be converted to a downsample factor based on the image calibration. Parameters:; pixelSize - ; Returns:. tiler; public PixelProcessor.Builder<S,T,U> tiler(Tiler tiler); Set a tiler to use. This is required for large regions, so that the image can be processed in tiles. Parameters:; tiler - ; Returns:. tile; public PixelProcessor.Builder<S,T,U> tile(int tileWidth,; int tileHeight); Set a default tiler to use, with a specified tile size. Parameters:; tileWidth - ; tileHeight - ; Returns:. merger; public PixelProcessor.Builder<S,T,U> merger(ObjectMerger merger); Set a merger to use. This is currently only relevant when using a tiler. Parameters:; merger - ; Returns:; See Also:. mergeSharedBoundaries(double). mergeSharedBoundaries; public PixelPr",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:4014,Availability,down,downsample,4014,"putHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; size - ; Returns:. downsample; public PixelProcessor.Builder<S,T,U> downsample(double downsample); Set the downsample factor to use with requesting image regions. Parameters:; downsample - ; Returns:. pixelSize; public PixelProcessor.Builder<S,T,U> pixelSize(double pixelSize); Set the requested pixel size to use with requesting image regions.; This will be converted to a downsample factor based on the image calibration. Parameters:; pixelSize - ; Returns:. tiler; public PixelProcessor.Builder<S,T,U> tiler(Tiler tiler); Set a tiler to use. This is required for large regions, so that the image can be processed in tiles. Parameters:; tiler - ; Returns:. tile; public PixelProcessor.Builder<S,T,U> tile(int tileWidth,; int tileHeight); Set a default tiler to use, with a specified tile size. Parameters:; tileWidth - ; tileHeight - ; Returns:. merger; public PixelProcessor.Builder<S,T,U> merger(ObjectMerger merger); Set a merger to use. This is currently only relevant when using a tiler. Parameters:; merger - ; Returns:; See Also:. mergeSharedBoundaries(double). mergeSharedBoundaries; public PixelPr",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:4083,Availability,down,downsample,4083,", for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; size - ; Returns:. downsample; public PixelProcessor.Builder<S,T,U> downsample(double downsample); Set the downsample factor to use with requesting image regions. Parameters:; downsample - ; Returns:. pixelSize; public PixelProcessor.Builder<S,T,U> pixelSize(double pixelSize); Set the requested pixel size to use with requesting image regions.; This will be converted to a downsample factor based on the image calibration. Parameters:; pixelSize - ; Returns:. tiler; public PixelProcessor.Builder<S,T,U> tiler(Tiler tiler); Set a tiler to use. This is required for large regions, so that the image can be processed in tiles. Parameters:; tiler - ; Returns:. tile; public PixelProcessor.Builder<S,T,U> tile(int tileWidth,; int tileHeight); Set a default tiler to use, with a specified tile size. Parameters:; tileWidth - ; tileHeight - ; Returns:. merger; public PixelProcessor.Builder<S,T,U> merger(ObjectMerger merger); Set a merger to use. This is currently only relevant when using a tiler. Parameters:; merger - ; Returns:; See Also:. mergeSharedBoundaries(double). mergeSharedBoundaries; public PixelProcessor.Builder<S,T,U> mergeSharedBoundaries(double threshold); Convenien",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:4281,Availability,down,downsample,4281,"ocessor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; size - ; Returns:. downsample; public PixelProcessor.Builder<S,T,U> downsample(double downsample); Set the downsample factor to use with requesting image regions. Parameters:; downsample - ; Returns:. pixelSize; public PixelProcessor.Builder<S,T,U> pixelSize(double pixelSize); Set the requested pixel size to use with requesting image regions.; This will be converted to a downsample factor based on the image calibration. Parameters:; pixelSize - ; Returns:. tiler; public PixelProcessor.Builder<S,T,U> tiler(Tiler tiler); Set a tiler to use. This is required for large regions, so that the image can be processed in tiles. Parameters:; tiler - ; Returns:. tile; public PixelProcessor.Builder<S,T,U> tile(int tileWidth,; int tileHeight); Set a default tiler to use, with a specified tile size. Parameters:; tileWidth - ; tileHeight - ; Returns:. merger; public PixelProcessor.Builder<S,T,U> merger(ObjectMerger merger); Set a merger to use. This is currently only relevant when using a tiler. Parameters:; merger - ; Returns:; See Also:. mergeSharedBoundaries(double). mergeSharedBoundaries; public PixelProcessor.Builder<S,T,U> mergeSharedBoundaries(double threshold); Convenience method to set a merger that merges objects based on their shared boundary. Parameters:; threshold - the shared boundary threshold; see ObjectMerger.createSharedTileBoundaryMerger(double); for more inf",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:3134,Deployability,update,updates,3134,"Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; size - ; Returns:. downsample; public PixelProcessor.Builder<S,T,U> downsample(double downsample); Set the downsample factor to use with requesting image regions. Parameters:; downsample - ; Returns:. pixelSize; pu",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:664,Modifiability,extend,extends,664,". PixelProcessor.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor.Builder<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor.Builder<S,T,U>. Type Parameters:; S - the image type; T - the mask type; U - the output type. Enclosing class:; PixelProcessor<S,T,U>. public static class PixelProcessor.Builder<S,T,U>; extends Object; Builder class for a PixelProcessor. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelProcessor<S,T,U>; build(). Build a PixelProcessor from the current state of the builder. PixelProcessor.Builder<S,T,U>; downsample(double downsample). Set the downsample factor to use with requesting image regions. PixelProcessor.Builder<S,T,U>; imageSupplier(ImageSupplier<S> imageSupplier). Set the image supplier. PixelProcessor.Builder<S,T,U>; maskSupplier(MaskSupplier<S,T> maskSupplier). Set the mask supplier. PixelProcessor.Builder<S,T,U>; merger(ObjectMerger merger). Set a merger to use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:2310,Modifiability,inherit,inherited,2310,"lProcessor.Builder<S,T,U>; merger(ObjectMerger merger). Set a merger to use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:2384,Security,hash,hashCode,2384,"use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:2673,Security,access,access,2673,". PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padd",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html:538,Availability,mask,mask,538,". PixelProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor<S,T,U>. Type Parameters:; S - The type of image to process; T - The type of mask to use; often the same as S; U - The type of output to generate. public class PixelProcessor<S,T,U>; extends Object; A class for tiled image processing.; ; The aim of this class is to make it easy to write pixel-based processing algorithms using a variety; of different image representations, and also to run these in parallel.; . There are four main components:; ; An ImageSupplier that provides the image data; A MaskSupplier that can generate binary masks that correspond to the image; A Processor that processes the image data; An OutputHandler that handles the output of the Processor. The idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(Ima",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html:996,Availability,mask,masks,996,"ixelProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor<S,T,U>. Type Parameters:; S - The type of image to process; T - The type of mask to use; often the same as S; U - The type of output to generate. public class PixelProcessor<S,T,U>; extends Object; A class for tiled image processing.; ; The aim of this class is to make it easy to write pixel-based processing algorithms using a variety; of different image representations, and also to run these in parallel.; . There are four main components:; ; An ImageSupplier that provides the image data; A MaskSupplier that can generate binary masks that correspond to the image; A Processor that processes the image data; An OutputHandler that handles the output of the Processor. The idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(Image",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html:3096,Availability,mask,mask,3096,"idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the default TaskRunner. void; processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the specified TaskRunner. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. processObjects; public void processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the default TaskRunner. Parameters:; imageData - ; pathObjects - . processObjects; public void processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the specified TaskRunner. Parameters:; runner - ; imageData - ; pathObjects - . builder; public static <S,; T,; U>; PixelProcessor.Builder<S,T,U> builder(); Create a new builder to construct a PixelProcessor. Type Parameters:; S - the image type; T - the mask type; U - the output type; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html:644,Modifiability,extend,extends,644,". PixelProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor<S,T,U>. Type Parameters:; S - The type of image to process; T - The type of mask to use; often the same as S; U - The type of output to generate. public class PixelProcessor<S,T,U>; extends Object; A class for tiled image processing.; ; The aim of this class is to make it easy to write pixel-based processing algorithms using a variety; of different image representations, and also to run these in parallel.; . There are four main components:; ; An ImageSupplier that provides the image data; A MaskSupplier that can generate binary masks that correspond to the image; A Processor that processes the image data; An OutputHandler that handles the output of the Processor. The idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(Ima",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html:2048,Modifiability,extend,extends,2048,"ge; A Processor that processes the image data; An OutputHandler that handles the output of the Processor. The idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the default TaskRunner. void; processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the specified TaskRunner. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. processObjects; public void processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the default TaskRunner. Parameters:; imageData - ; pathObjects - . processObjects; public void processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the specified TaskRunner. Parameters:; runner - ; imageData - ; pathObjects - . builder; public static <S,; T,; U>; PixelProcessor.Builder<S,T,U> builder(); Create a new builder to constru",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html:2219,Modifiability,extend,extends,2219,"idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the default TaskRunner. void; processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the specified TaskRunner. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. processObjects; public void processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the default TaskRunner. Parameters:; imageData - ; pathObjects - . processObjects; public void processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the specified TaskRunner. Parameters:; runner - ; imageData - ; pathObjects - . builder; public static <S,; T,; U>; PixelProcessor.Builder<S,T,U> builder(); Create a new builder to construct a PixelProcessor. Type Parameters:; S - the image type; T - the mask type; U - the output type; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html:2309,Modifiability,inherit,inherited,2309,"idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the default TaskRunner. void; processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the specified TaskRunner. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. processObjects; public void processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the default TaskRunner. Parameters:; imageData - ; pathObjects - . processObjects; public void processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the specified TaskRunner. Parameters:; runner - ; imageData - ; pathObjects - . builder; public static <S,; T,; U>; PixelProcessor.Builder<S,T,U> builder(); Create a new builder to construct a PixelProcessor. Type Parameters:; S - the image type; T - the mask type; U - the output type; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html:2549,Modifiability,extend,extends,2549,"idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the default TaskRunner. void; processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the specified TaskRunner. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. processObjects; public void processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the default TaskRunner. Parameters:; imageData - ; pathObjects - . processObjects; public void processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the specified TaskRunner. Parameters:; runner - ; imageData - ; pathObjects - . builder; public static <S,; T,; U>; PixelProcessor.Builder<S,T,U> builder(); Create a new builder to construct a PixelProcessor. Type Parameters:; S - the image type; T - the mask type; U - the output type; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html:2785,Modifiability,extend,extends,2785,"idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the default TaskRunner. void; processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the specified TaskRunner. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. processObjects; public void processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the default TaskRunner. Parameters:; imageData - ; pathObjects - . processObjects; public void processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the specified TaskRunner. Parameters:; runner - ; imageData - ; pathObjects - . builder; public static <S,; T,; U>; PixelProcessor.Builder<S,T,U> builder(); Create a new builder to construct a PixelProcessor. Type Parameters:; S - the image type; T - the mask type; U - the output type; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html:2383,Security,hash,hashCode,2383,"idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the default TaskRunner. void; processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the specified TaskRunner. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. processObjects; public void processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the default TaskRunner. Parameters:; imageData - ; pathObjects - . processObjects; public void processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the specified TaskRunner. Parameters:; runner - ; imageData - ; pathObjects - . builder; public static <S,; T,; U>; PixelProcessor.Builder<S,T,U> builder(); Create a new builder to construct a PixelProcessor. Type Parameters:; S - the image type; T - the mask type; U - the output type; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:1148,Availability,mask,mask,1148,"inks. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessorUtils. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessorUtils. public class PixelProcessorUtils; extends Object; Utility functions to help with the PixelProcessor class. Since:; v0.5.0. Constructor Summary; Constructors. Constructor; Description; PixelProcessorUtils();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; containsCentroid(ROI roi,; PathObject child). Check whether a child object's centroid is contained within a ROI. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains di",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:1400,Availability,mask,mask,1400,".experimental.pixels; Class PixelProcessorUtils. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessorUtils. public class PixelProcessorUtils; extends Object; Utility functions to help with the PixelProcessor class. Since:; v0.5.0. Constructor Summary; Constructors. Constructor; Description; PixelProcessorUtils();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; containsCentroid(ROI roi,; PathObject child). Check whether a child object's centroid is contained within a ROI. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMa",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:1660,Availability,mask,mask,1660,"tructors. Constructor; Description; PixelProcessorUtils();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; containsCentroid(ROI roi,; PathObject child). Check whether a child object's centroid is contained within a ROI. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applyin",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:1691,Availability,mask,maskObject,1691," MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; containsCentroid(ROI roi,; PathObject child). Check whether a child object's centroid is contained within a ROI. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of th",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:1749,Availability,mask,mask,1749," boolean; containsCentroid(ROI roi,; PathObject child). Check whether a child object's centroid is contained within a ROI. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:1832,Availability,mask,mask,1832," boolean; containsCentroid(ROI roi,; PathObject child). Check whether a child object's centroid is contained within a ROI. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:1863,Availability,mask,maskObjectAndSplit,1863,"troid is contained within a ROI. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:1929,Availability,mask,mask,1929,"on<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; S",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:2012,Availability,mask,mask,2012,"on<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; S",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:2629,Availability,mask,mask,2629,"s,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:3195,Availability,mask,mask,3195,"s ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from the image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; transform - transform to extract single-channel pixels; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. maskObject; public static L",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:3755,Availability,mask,mask,3755,"meters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from the image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; transform - transform to extract single-channel pixels; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. maskObject; public static List<PathObject> maskObject(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. Parameters:; parentROI - ; child - ; Returns:; either an empty or singleton list, depending upon whether the child object has a non-empty; ROI after the masking is applied. maskObjectAndSplit; public static List<PathObject> maskObjectAndSplit(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:4024,Availability,mask,maskObject,4024,"Image> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from the image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; transform - transform to extract single-channel pixels; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. maskObject; public static List<PathObject> maskObject(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. Parameters:; parentROI - ; child - ; Returns:; either an empty or singleton list, depending upon whether the child object has a non-empty; ROI after the masking is applied. maskObjectAndSplit; public static List<PathObject> maskObjectAndSplit(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Parameters:; parentROI - ; child - ; Returns:; a list of objects, either empty or containing one or more objects. containsCentroid; public static boolean containsCentroid(ROI roi,; PathObject child); Check whether a child object's centroid is contained within a ROI. Parameters:; roi - ; child - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:4067,Availability,mask,maskObject,4067,"Image> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from the image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; transform - transform to extract single-channel pixels; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. maskObject; public static List<PathObject> maskObject(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. Parameters:; parentROI - ; child - ; Returns:; either an empty or singleton list, depending upon whether the child object has a non-empty; ROI after the masking is applied. maskObjectAndSplit; public static List<PathObject> maskObjectAndSplit(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Parameters:; parentROI - ; child - ; Returns:; a list of objects, either empty or containing one or more objects. containsCentroid; public static boolean containsCentroid(ROI roi,; PathObject child); Check whether a child object's centroid is contained within a ROI. Parameters:; roi - ; child - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:4125,Availability,mask,mask,4125,"Image> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from the image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; transform - transform to extract single-channel pixels; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. maskObject; public static List<PathObject> maskObject(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. Parameters:; parentROI - ; child - ; Returns:; either an empty or singleton list, depending upon whether the child object has a non-empty; ROI after the masking is applied. maskObjectAndSplit; public static List<PathObject> maskObjectAndSplit(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Parameters:; parentROI - ; child - ; Returns:; a list of objects, either empty or containing one or more objects. containsCentroid; public static boolean containsCentroid(ROI roi,; PathObject child); Check whether a child object's centroid is contained within a ROI. Parameters:; roi - ; child - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:4208,Availability,mask,mask,4208,"Image> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from the image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; transform - transform to extract single-channel pixels; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. maskObject; public static List<PathObject> maskObject(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. Parameters:; parentROI - ; child - ; Returns:; either an empty or singleton list, depending upon whether the child object has a non-empty; ROI after the masking is applied. maskObjectAndSplit; public static List<PathObject> maskObjectAndSplit(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Parameters:; parentROI - ; child - ; Returns:; a list of objects, either empty or containing one or more objects. containsCentroid; public static boolean containsCentroid(ROI roi,; PathObject child); Check whether a child object's centroid is contained within a ROI. Parameters:; roi - ; child - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:4367,Availability,mask,masking,4367,"Image> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from the image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; transform - transform to extract single-channel pixels; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. maskObject; public static List<PathObject> maskObject(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. Parameters:; parentROI - ; child - ; Returns:; either an empty or singleton list, depending upon whether the child object has a non-empty; ROI after the masking is applied. maskObjectAndSplit; public static List<PathObject> maskObjectAndSplit(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Parameters:; parentROI - ; child - ; Returns:; a list of objects, either empty or containing one or more objects. containsCentroid; public static boolean containsCentroid(ROI roi,; PathObject child); Check whether a child object's centroid is contained within a ROI. Parameters:; roi - ; child - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:4387,Availability,mask,maskObjectAndSplit,4387,"Image> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from the image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; transform - transform to extract single-channel pixels; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. maskObject; public static List<PathObject> maskObject(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. Parameters:; parentROI - ; child - ; Returns:; either an empty or singleton list, depending upon whether the child object has a non-empty; ROI after the masking is applied. maskObjectAndSplit; public static List<PathObject> maskObjectAndSplit(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Parameters:; parentROI - ; child - ; Returns:; a list of objects, either empty or containing one or more objects. containsCentroid; public static boolean containsCentroid(ROI roi,; PathObject child); Check whether a child object's centroid is contained within a ROI. Parameters:; roi - ; child - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:4438,Availability,mask,maskObjectAndSplit,4438,"Image> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from the image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; transform - transform to extract single-channel pixels; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. maskObject; public static List<PathObject> maskObject(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. Parameters:; parentROI - ; child - ; Returns:; either an empty or singleton list, depending upon whether the child object has a non-empty; ROI after the masking is applied. maskObjectAndSplit; public static List<PathObject> maskObjectAndSplit(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Parameters:; parentROI - ; child - ; Returns:; a list of objects, either empty or containing one or more objects. containsCentroid; public static boolean containsCentroid(ROI roi,; PathObject child); Check whether a child object's centroid is contained within a ROI. Parameters:; roi - ; child - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:4504,Availability,mask,mask,4504,"Image> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from the image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; transform - transform to extract single-channel pixels; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. maskObject; public static List<PathObject> maskObject(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. Parameters:; parentROI - ; child - ; Returns:; either an empty or singleton list, depending upon whether the child object has a non-empty; ROI after the masking is applied. maskObjectAndSplit; public static List<PathObject> maskObjectAndSplit(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Parameters:; parentROI - ; child - ; Returns:; a list of objects, either empty or containing one or more objects. containsCentroid; public static boolean containsCentroid(ROI roi,; PathObject child); Check whether a child object's centroid is contained within a ROI. Parameters:; roi - ; child - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:4587,Availability,mask,mask,4587,"Image> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from the image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; transform - transform to extract single-channel pixels; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. maskObject; public static List<PathObject> maskObject(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. Parameters:; parentROI - ; child - ; Returns:; either an empty or singleton list, depending upon whether the child object has a non-empty; ROI after the masking is applied. maskObjectAndSplit; public static List<PathObject> maskObjectAndSplit(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Parameters:; parentROI - ; child - ; Returns:; a list of objects, either empty or containing one or more objects. containsCentroid; public static boolean containsCentroid(ROI roi,; PathObject child); Check whether a child object's centroid is contained within a ROI. Parameters:; roi - ; child - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:4296,Integrability,depend,depending,4296,"Image> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from the image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; transform - transform to extract single-channel pixels; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. maskObject; public static List<PathObject> maskObject(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. Parameters:; parentROI - ; child - ; Returns:; either an empty or singleton list, depending upon whether the child object has a non-empty; ROI after the masking is applied. maskObjectAndSplit; public static List<PathObject> maskObjectAndSplit(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Parameters:; parentROI - ; child - ; Returns:; a list of objects, either empty or containing one or more objects. containsCentroid; public static boolean containsCentroid(ROI roi,; PathObject child); Check whether a child object's centroid is contained within a ROI. Parameters:; roi - ; child - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:505,Modifiability,extend,extends,505,". PixelProcessorUtils (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessorUtils. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessorUtils. public class PixelProcessorUtils; extends Object; Utility functions to help with the PixelProcessor class. Since:; v0.5.0. Constructor Summary; Constructors. Constructor; Description; PixelProcessorUtils();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; containsCentroid(ROI roi,; PathObject child). Check whether a child object's centroid is contained within a ROI. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:1814,Modifiability,extend,extend,1814," boolean; containsCentroid(ROI roi,; PathObject child). Check whether a child object's centroid is contained within a ROI. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:1994,Modifiability,extend,extend,1994,"on<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; S",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:2124,Modifiability,inherit,inherited,2124,"pplying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:4190,Modifiability,extend,extend,4190,"Image> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from the image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; transform - transform to extract single-channel pixels; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. maskObject; public static List<PathObject> maskObject(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. Parameters:; parentROI - ; child - ; Returns:; either an empty or singleton list, depending upon whether the child object has a non-empty; ROI after the masking is applied. maskObjectAndSplit; public static List<PathObject> maskObjectAndSplit(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Parameters:; parentROI - ; child - ; Returns:; a list of objects, either empty or containing one or more objects. containsCentroid; public static boolean containsCentroid(ROI roi,; PathObject child); Check whether a child object's centroid is contained within a ROI. Parameters:; roi - ; child - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:4569,Modifiability,extend,extend,4569,"Image> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from the image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; transform - transform to extract single-channel pixels; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. maskObject; public static List<PathObject> maskObject(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. Parameters:; parentROI - ; child - ; Returns:; either an empty or singleton list, depending upon whether the child object has a non-empty; ROI after the masking is applied. maskObjectAndSplit; public static List<PathObject> maskObjectAndSplit(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Parameters:; parentROI - ; child - ; Returns:; a list of objects, either empty or containing one or more objects. containsCentroid; public static boolean containsCentroid(ROI roi,; PathObject child); Check whether a child object's centroid is contained within a ROI. Parameters:; roi - ; child - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:2198,Security,hash,hashCode,2198,"fferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Para",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Processor.html:1220,Availability,mask,masks,1220,". Processor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface Processor<S,T,U>. Type Parameters:; S - ; T - ; U - . Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface Processor<S,T,U>; A generic processor designed to work with Parameters and provide an output.; ; The intended use is to apply a local image processing task, such as thresholding, to a region of an image; corresponding to an object. Since:; v0.5.0. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; U; process(Parameters<S,T> params). Processing method. Method Details. process; U process(Parameters<S,T> params); throws IOException; Processing method. Parameters:; params - the parameters; these can be queried to access the parent object, image data, masks etc.; Returns:; the output; Throws:; IOException - if there is a problem reading the image; See Also:. OutputHandler; ImageSupplier; MaskSupplier. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Processor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Processor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Processor.html:472,Integrability,interface,interface,472,". Processor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface Processor<S,T,U>. Type Parameters:; S - ; T - ; U - . Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface Processor<S,T,U>; A generic processor designed to work with Parameters and provide an output.; ; The intended use is to apply a local image processing task, such as thresholding, to a region of an image; corresponding to an object. Since:; v0.5.0. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; U; process(Parameters<S,T> params). Processing method. Method Details. process; U process(Parameters<S,T> params); throws IOException; Processing method. Parameters:; params - the parameters; these can be queried to access the parent object, image data, masks etc.; Returns:; the output; Throws:; IOException - if there is a problem reading the image; See Also:. OutputHandler; ImageSupplier; MaskSupplier. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Processor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Processor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Processor.html:607,Integrability,interface,interface,607,". Processor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface Processor<S,T,U>. Type Parameters:; S - ; T - ; U - . Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface Processor<S,T,U>; A generic processor designed to work with Parameters and provide an output.; ; The intended use is to apply a local image processing task, such as thresholding, to a region of an image; corresponding to an object. Since:; v0.5.0. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; U; process(Parameters<S,T> params). Processing method. Method Details. process; U process(Parameters<S,T> params); throws IOException; Processing method. Parameters:; params - the parameters; these can be queried to access the parent object, image data, masks etc.; Returns:; the output; Throws:; IOException - if there is a problem reading the image; See Also:. OutputHandler; ImageSupplier; MaskSupplier. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Processor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Processor.html
https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Processor.html:1182,Security,access,access,1182,". Processor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface Processor<S,T,U>. Type Parameters:; S - ; T - ; U - . Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface Processor<S,T,U>; A generic processor designed to work with Parameters and provide an output.; ; The intended use is to apply a local image processing task, such as thresholding, to a region of an image; corresponding to an object. Since:; v0.5.0. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; U; process(Parameters<S,T> params). Processing method. Method Details. process; U process(Parameters<S,T> params); throws IOException; Processing method. Parameters:; params - the parameters; these can be queried to access the parent object, image data, masks etc.; Returns:; the output; Throws:; IOException - if there is a problem reading the image; See Also:. OutputHandler; ImageSupplier; MaskSupplier. ",MatchSource.WIKI,javadoc/docs/qupath/lib/experimental/pixels/Processor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Processor.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1154,Deployability,install,installExtension,1154,"sted; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgExtension. java.lang.Object; qupath.lib.extension.svg.SvgExtension. All Implemented Interfaces:; QuPathExtension. public class SvgExtension; extends Object; implements QuPathExtension; Extension for SVG image export. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; SvgExtension.SvgActions;  . Constructor Summary; Constructors. Constructor; Description; SvgExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtensio",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1539,Deployability,install,installExtension,1539,"es. Modifier and Type; Class; Description; class ; SvgExtension.SvgActions;  . Constructor Summary; Constructors. Constructor; Description; SvgExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns th",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1569,Deployability,install,installExtension,1569,"es. Modifier and Type; Class; Description; class ; SvgExtension.SvgActions;  . Constructor Summary; Constructors. Constructor; Description; SvgExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns th",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1979,Deployability,install,installExtension,1979,"ethod; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1400,Integrability,interface,interface,1400,"t; qupath.lib.extension.svg.SvgExtension. All Implemented Interfaces:; QuPathExtension. public class SvgExtension; extends Object; implements QuPathExtension; Extension for SVG image export. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; SvgExtension.SvgActions;  . Constructor Summary; Constructors. Constructor; Description; SvgExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the e",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1629,Integrability,interface,interface,1629,"es. Modifier and Type; Class; Description; class ; SvgExtension.SvgActions;  . Constructor Summary; Constructors. Constructor; Description; SvgExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns th",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1999,Integrability,interface,interface,1999,"ethod; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:2143,Integrability,interface,interface,2143,"ethod; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:2232,Integrability,interface,interface,2232,"ethod; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:2341,Integrability,interface,interface,2341,"ethod; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:2521,Integrability,interface,interface,2521,"ethod; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:2735,Integrability,interface,interface,2735,"ethod; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:511,Modifiability,extend,extends,511,". SvgExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgExtension. java.lang.Object; qupath.lib.extension.svg.SvgExtension. All Implemented Interfaces:; QuPathExtension. public class SvgExtension; extends Object; implements QuPathExtension; Extension for SVG image export. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; SvgExtension.SvgActions;  . Constructor Summary; Constructors. Constructor; Description; SvgExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in in",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1246,Modifiability,inherit,inherited,1246,"ld | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgExtension. java.lang.Object; qupath.lib.extension.svg.SvgExtension. All Implemented Interfaces:; QuPathExtension. public class SvgExtension; extends Object; implements QuPathExtension; Extension for SVG image export. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; SvgExtension.SvgActions;  . Constructor Summary; Constructors. Constructor; Description; SvgExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtensi",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1385,Modifiability,inherit,inherited,1385,"t; qupath.lib.extension.svg.SvgExtension. All Implemented Interfaces:; QuPathExtension. public class SvgExtension; extends Object; implements QuPathExtension; Extension for SVG image export. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; SvgExtension.SvgActions;  . Constructor Summary; Constructors. Constructor; Description; SvgExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the e",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1320,Security,hash,hashCode,1320," Package qupath.lib.extension.svg; Class SvgExtension. java.lang.Object; qupath.lib.extension.svg.SvgExtension. All Implemented Interfaces:; QuPathExtension. public class SvgExtension; extends Object; implements QuPathExtension; Extension for SVG image export. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; SvgExtension.SvgActions;  . Constructor Summary; Constructors. Constructor; Description; SvgExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Descriptio",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1910,Testability,test,test,1910,"ethod; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.SvgActions.html:541,Modifiability,extend,extends,541,". SvgExtension.SvgActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgExtension.SvgActions. java.lang.Object; qupath.lib.extension.svg.SvgExtension.SvgActions. Enclosing class:; SvgExtension. public class SvgExtension.SvgActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionExport;  ; final org.controlsfx.control.action.Action; actionSnapshot;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionExport; @ActionMenu({""Menu.File"",""Menu.File.ExportImage""}); @ActionConfig(""Action.SVG.exportImage""); public final org.controlsfx.control.action.Action actionExport. actionSnapshot; @ActionMenu({""Menu.File"",""Menu.File.ExportSnapshot""}); @ActionConfig(""Action.SVG.exportSnapshot""); public final org.controlsfx.control.action.Action actionSnapshot. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.SvgActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.SvgActions.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.SvgActions.html:767,Modifiability,inherit,inherited,767,". SvgExtension.SvgActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgExtension.SvgActions. java.lang.Object; qupath.lib.extension.svg.SvgExtension.SvgActions. Enclosing class:; SvgExtension. public class SvgExtension.SvgActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionExport;  ; final org.controlsfx.control.action.Action; actionSnapshot;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionExport; @ActionMenu({""Menu.File"",""Menu.File.ExportImage""}); @ActionConfig(""Action.SVG.exportImage""); public final org.controlsfx.control.action.Action actionExport. actionSnapshot; @ActionMenu({""Menu.File"",""Menu.File.ExportSnapshot""}); @ActionConfig(""Action.SVG.exportSnapshot""); public final org.controlsfx.control.action.Action actionSnapshot. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.SvgActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.SvgActions.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.SvgActions.html:841,Security,hash,hashCode,841,". SvgExtension.SvgActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgExtension.SvgActions. java.lang.Object; qupath.lib.extension.svg.SvgExtension.SvgActions. Enclosing class:; SvgExtension. public class SvgExtension.SvgActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionExport;  ; final org.controlsfx.control.action.Action; actionSnapshot;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionExport; @ActionMenu({""Menu.File"",""Menu.File.ExportImage""}); @ActionConfig(""Action.SVG.exportImage""); public final org.controlsfx.control.action.Action actionExport. actionSnapshot; @ActionMenu({""Menu.File"",""Menu.File.ExportSnapshot""}); @ActionConfig(""Action.SVG.exportSnapshot""); public final org.controlsfx.control.action.Action actionSnapshot. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgExtension.SvgActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.SvgActions.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.html:449,Modifiability,extend,extends,449,". SvgTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgTools. java.lang.Object; qupath.lib.extension.svg.SvgTools. public class SvgTools; extends Object; Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. Constructor Summary; Constructors. Constructor; Description; SvgTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; writeViewerSnapshot(QuPathViewer viewer,; File fileSVG). Write an SVG image representing the contents of the specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SvgTools; public SvgTools(). Method Details. writeViewerSnapshot; public static void writeViewerSnapshot(QuPathViewer viewer,; File fileSVG); throws IOException; Write an SVG image representing the contents of the specified viewer. Parameters:; viewer - the viewer to render; fileSVG - SVG file for the export; should have the extension "".svg""; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.html:1106,Modifiability,inherit,inherited,1106,". SvgTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgTools. java.lang.Object; qupath.lib.extension.svg.SvgTools. public class SvgTools; extends Object; Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. Constructor Summary; Constructors. Constructor; Description; SvgTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; writeViewerSnapshot(QuPathViewer viewer,; File fileSVG). Write an SVG image representing the contents of the specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SvgTools; public SvgTools(). Method Details. writeViewerSnapshot; public static void writeViewerSnapshot(QuPathViewer viewer,; File fileSVG); throws IOException; Write an SVG image representing the contents of the specified viewer. Parameters:; viewer - the viewer to render; fileSVG - SVG file for the export; should have the extension "".svg""; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.html:1180,Security,hash,hashCode,1180,". SvgTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgTools. java.lang.Object; qupath.lib.extension.svg.SvgTools. public class SvgTools; extends Object; Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. Constructor Summary; Constructors. Constructor; Description; SvgTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; writeViewerSnapshot(QuPathViewer viewer,; File fileSVG). Write an SVG image representing the contents of the specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SvgTools; public SvgTools(). Method Details. writeViewerSnapshot; public static void writeViewerSnapshot(QuPathViewer viewer,; File fileSVG); throws IOException; Write an SVG image representing the contents of the specified viewer. Parameters:; viewer - the viewer to render; fileSVG - SVG file for the export; should have the extension "".svg""; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:1440,Availability,down,downsample,1440,"gBuilder. Enclosing class:; SvgTools. public static class SvgTools.SvgBuilder; extends Object; Builder class to enable the export of rendered QuPath objects as SVG images.; This can be useful to generate high-quality figures using a vector representation of objects, ; which may be further customized in other applications (e.g. to change line thickness, color). Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. Constructor Summary; Constructors. Constructor; Description; SvgBuilder(). Create a new builder, which will later be customized. SvgBuilder(QuPathViewer viewer). Create a builder initialized according to the current viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; createDocument(). Create a String representation of the SVG document. SvgTools.SvgBuilder; downsample(double downsample). Specify downsample factor (defined in terms of the full resolution image space). SvgTools.SvgBuilder; embedImages(). Specify whether the underlying (raster) image should be embedded in any export. SvgTools.SvgBuilder; fillAnnotations(boolean doFill). Request whether annotations are drawn as 'filled' shapes. SvgTools.SvgBuilder; fillDetections(boolean doFill). Request whether detections are drawn as 'filled' shapes. SvgTools.SvgBuilder; height(int height). Export image height. SvgTools.SvgBuilder; hierarchy(PathObjectHierarchy hierarchy). Specify the PathObjectHierarchy. SvgTools.SvgBuilder; imageData(ImageData<BufferedImage> imageData). Specify the ImageData. SvgTools.SvgBuilder; images(SvgTools.SvgBuilder.ImageIncludeType include). Specify if/how raster images should be included in the SVG. SvgTools.SvgBuilder; includeOverlays(boolean doInclude). Specify whether overlays should be included. SvgTools.SvgBuilder; linkImages(). Specify whether the underlying (raster",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:1458,Availability,down,downsample,1458,"gBuilder. Enclosing class:; SvgTools. public static class SvgTools.SvgBuilder; extends Object; Builder class to enable the export of rendered QuPath objects as SVG images.; This can be useful to generate high-quality figures using a vector representation of objects, ; which may be further customized in other applications (e.g. to change line thickness, color). Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. Constructor Summary; Constructors. Constructor; Description; SvgBuilder(). Create a new builder, which will later be customized. SvgBuilder(QuPathViewer viewer). Create a builder initialized according to the current viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; createDocument(). Create a String representation of the SVG document. SvgTools.SvgBuilder; downsample(double downsample). Specify downsample factor (defined in terms of the full resolution image space). SvgTools.SvgBuilder; embedImages(). Specify whether the underlying (raster) image should be embedded in any export. SvgTools.SvgBuilder; fillAnnotations(boolean doFill). Request whether annotations are drawn as 'filled' shapes. SvgTools.SvgBuilder; fillDetections(boolean doFill). Request whether detections are drawn as 'filled' shapes. SvgTools.SvgBuilder; height(int height). Export image height. SvgTools.SvgBuilder; hierarchy(PathObjectHierarchy hierarchy). Specify the PathObjectHierarchy. SvgTools.SvgBuilder; imageData(ImageData<BufferedImage> imageData). Specify the ImageData. SvgTools.SvgBuilder; images(SvgTools.SvgBuilder.ImageIncludeType include). Specify if/how raster images should be included in the SVG. SvgTools.SvgBuilder; includeOverlays(boolean doInclude). Specify whether overlays should be included. SvgTools.SvgBuilder; linkImages(). Specify whether the underlying (raster",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:1479,Availability,down,downsample,1479,"Tools.SvgBuilder; extends Object; Builder class to enable the export of rendered QuPath objects as SVG images.; This can be useful to generate high-quality figures using a vector representation of objects, ; which may be further customized in other applications (e.g. to change line thickness, color). Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. Constructor Summary; Constructors. Constructor; Description; SvgBuilder(). Create a new builder, which will later be customized. SvgBuilder(QuPathViewer viewer). Create a builder initialized according to the current viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; createDocument(). Create a String representation of the SVG document. SvgTools.SvgBuilder; downsample(double downsample). Specify downsample factor (defined in terms of the full resolution image space). SvgTools.SvgBuilder; embedImages(). Specify whether the underlying (raster) image should be embedded in any export. SvgTools.SvgBuilder; fillAnnotations(boolean doFill). Request whether annotations are drawn as 'filled' shapes. SvgTools.SvgBuilder; fillDetections(boolean doFill). Request whether detections are drawn as 'filled' shapes. SvgTools.SvgBuilder; height(int height). Export image height. SvgTools.SvgBuilder; hierarchy(PathObjectHierarchy hierarchy). Specify the PathObjectHierarchy. SvgTools.SvgBuilder; imageData(ImageData<BufferedImage> imageData). Specify the ImageData. SvgTools.SvgBuilder; images(SvgTools.SvgBuilder.ImageIncludeType include). Specify if/how raster images should be included in the SVG. SvgTools.SvgBuilder; includeOverlays(boolean doInclude). Specify whether overlays should be included. SvgTools.SvgBuilder; linkImages(). Specify whether the underlying (raster) image should be included in any export. SvgTools.SvgBuilder;",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:5906,Availability,down,downsample,5906,"rs:; doInclude - ; Returns:; this builder. options; public SvgTools.SvgBuilder options(OverlayOptions options); Specify the overlay options to control display.; This will override any previous customizations added to the builder. Parameters:; options - ; Returns:; this builder. fillAnnotations; public SvgTools.SvgBuilder fillAnnotations(boolean doFill); Request whether annotations are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. fillDetections; public SvgTools.SvgBuilder fillDetections(boolean doFill); Request whether detections are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. showSelection; public SvgTools.SvgBuilder showSelection(boolean doShow); Request whether selected objects are displayed. Parameters:; doShow - ; Returns:; this builder. region; public SvgTools.SvgBuilder region(ImageRegion region); Specify the region (in terms of the full resolution image space) for export.; If a RegionRequest is supplied, the downsample factor will be used if none has otherwise been set. Parameters:; region - ; Returns:; this builder. downsample; public SvgTools.SvgBuilder downsample(double downsample); Specify downsample factor (defined in terms of the full resolution image space). Parameters:; downsample - ; Returns:; this builder. width; public SvgTools.SvgBuilder width(int width); Export image width. Parameters:; width - width (in pixels) of the SVG image.; Returns:; this builder. height; public SvgTools.SvgBuilder height(int height); Export image height. Parameters:; height - height (in pixels) of the SVG image.; Returns:; this builder. size; public SvgTools.SvgBuilder size(int width,; int height); Export image size. Parameters:; width - width (in pixels) of the SVG image.; height - height (in pixels) of the SVG image.; Returns:; this builder. embedImages; public SvgTools.SvgBuilder embedImages(); Specify whether the underlying (raster) image should be embedded in any export.; This requires that the constructor wi",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:6017,Availability,down,downsample,6017,"Specify the overlay options to control display.; This will override any previous customizations added to the builder. Parameters:; options - ; Returns:; this builder. fillAnnotations; public SvgTools.SvgBuilder fillAnnotations(boolean doFill); Request whether annotations are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. fillDetections; public SvgTools.SvgBuilder fillDetections(boolean doFill); Request whether detections are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. showSelection; public SvgTools.SvgBuilder showSelection(boolean doShow); Request whether selected objects are displayed. Parameters:; doShow - ; Returns:; this builder. region; public SvgTools.SvgBuilder region(ImageRegion region); Specify the region (in terms of the full resolution image space) for export.; If a RegionRequest is supplied, the downsample factor will be used if none has otherwise been set. Parameters:; region - ; Returns:; this builder. downsample; public SvgTools.SvgBuilder downsample(double downsample); Specify downsample factor (defined in terms of the full resolution image space). Parameters:; downsample - ; Returns:; this builder. width; public SvgTools.SvgBuilder width(int width); Export image width. Parameters:; width - width (in pixels) of the SVG image.; Returns:; this builder. height; public SvgTools.SvgBuilder height(int height); Export image height. Parameters:; height - height (in pixels) of the SVG image.; Returns:; this builder. size; public SvgTools.SvgBuilder size(int width,; int height); Export image size. Parameters:; width - width (in pixels) of the SVG image.; height - height (in pixels) of the SVG image.; Returns:; this builder. embedImages; public SvgTools.SvgBuilder embedImages(); Specify whether the underlying (raster) image should be embedded in any export.; This requires that the constructor with a QuPathViewer is called to supply the ; necessary rendering settings. Returns:; this builder; See Also:. link",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:6056,Availability,down,downsample,6056,"ious customizations added to the builder. Parameters:; options - ; Returns:; this builder. fillAnnotations; public SvgTools.SvgBuilder fillAnnotations(boolean doFill); Request whether annotations are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. fillDetections; public SvgTools.SvgBuilder fillDetections(boolean doFill); Request whether detections are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. showSelection; public SvgTools.SvgBuilder showSelection(boolean doShow); Request whether selected objects are displayed. Parameters:; doShow - ; Returns:; this builder. region; public SvgTools.SvgBuilder region(ImageRegion region); Specify the region (in terms of the full resolution image space) for export.; If a RegionRequest is supplied, the downsample factor will be used if none has otherwise been set. Parameters:; region - ; Returns:; this builder. downsample; public SvgTools.SvgBuilder downsample(double downsample); Specify downsample factor (defined in terms of the full resolution image space). Parameters:; downsample - ; Returns:; this builder. width; public SvgTools.SvgBuilder width(int width); Export image width. Parameters:; width - width (in pixels) of the SVG image.; Returns:; this builder. height; public SvgTools.SvgBuilder height(int height); Export image height. Parameters:; height - height (in pixels) of the SVG image.; Returns:; this builder. size; public SvgTools.SvgBuilder size(int width,; int height); Export image size. Parameters:; width - width (in pixels) of the SVG image.; height - height (in pixels) of the SVG image.; Returns:; this builder. embedImages; public SvgTools.SvgBuilder embedImages(); Specify whether the underlying (raster) image should be embedded in any export.; This requires that the constructor with a QuPathViewer is called to supply the ; necessary rendering settings. Returns:; this builder; See Also:. linkImages(). linkImages; public SvgTools.SvgBuilder linkImages(); Specify whet",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:6074,Availability,down,downsample,6074,"ious customizations added to the builder. Parameters:; options - ; Returns:; this builder. fillAnnotations; public SvgTools.SvgBuilder fillAnnotations(boolean doFill); Request whether annotations are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. fillDetections; public SvgTools.SvgBuilder fillDetections(boolean doFill); Request whether detections are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. showSelection; public SvgTools.SvgBuilder showSelection(boolean doShow); Request whether selected objects are displayed. Parameters:; doShow - ; Returns:; this builder. region; public SvgTools.SvgBuilder region(ImageRegion region); Specify the region (in terms of the full resolution image space) for export.; If a RegionRequest is supplied, the downsample factor will be used if none has otherwise been set. Parameters:; region - ; Returns:; this builder. downsample; public SvgTools.SvgBuilder downsample(double downsample); Specify downsample factor (defined in terms of the full resolution image space). Parameters:; downsample - ; Returns:; this builder. width; public SvgTools.SvgBuilder width(int width); Export image width. Parameters:; width - width (in pixels) of the SVG image.; Returns:; this builder. height; public SvgTools.SvgBuilder height(int height); Export image height. Parameters:; height - height (in pixels) of the SVG image.; Returns:; this builder. size; public SvgTools.SvgBuilder size(int width,; int height); Export image size. Parameters:; width - width (in pixels) of the SVG image.; height - height (in pixels) of the SVG image.; Returns:; this builder. embedImages; public SvgTools.SvgBuilder embedImages(); Specify whether the underlying (raster) image should be embedded in any export.; This requires that the constructor with a QuPathViewer is called to supply the ; necessary rendering settings. Returns:; this builder; See Also:. linkImages(). linkImages; public SvgTools.SvgBuilder linkImages(); Specify whet",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:6095,Availability,down,downsample,6095,"ious customizations added to the builder. Parameters:; options - ; Returns:; this builder. fillAnnotations; public SvgTools.SvgBuilder fillAnnotations(boolean doFill); Request whether annotations are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. fillDetections; public SvgTools.SvgBuilder fillDetections(boolean doFill); Request whether detections are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. showSelection; public SvgTools.SvgBuilder showSelection(boolean doShow); Request whether selected objects are displayed. Parameters:; doShow - ; Returns:; this builder. region; public SvgTools.SvgBuilder region(ImageRegion region); Specify the region (in terms of the full resolution image space) for export.; If a RegionRequest is supplied, the downsample factor will be used if none has otherwise been set. Parameters:; region - ; Returns:; this builder. downsample; public SvgTools.SvgBuilder downsample(double downsample); Specify downsample factor (defined in terms of the full resolution image space). Parameters:; downsample - ; Returns:; this builder. width; public SvgTools.SvgBuilder width(int width); Export image width. Parameters:; width - width (in pixels) of the SVG image.; Returns:; this builder. height; public SvgTools.SvgBuilder height(int height); Export image height. Parameters:; height - height (in pixels) of the SVG image.; Returns:; this builder. size; public SvgTools.SvgBuilder size(int width,; int height); Export image size. Parameters:; width - width (in pixels) of the SVG image.; height - height (in pixels) of the SVG image.; Returns:; this builder. embedImages; public SvgTools.SvgBuilder embedImages(); Specify whether the underlying (raster) image should be embedded in any export.; This requires that the constructor with a QuPathViewer is called to supply the ; necessary rendering settings. Returns:; this builder; See Also:. linkImages(). linkImages; public SvgTools.SvgBuilder linkImages(); Specify whet",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:6181,Availability,down,downsample,6181,"er. fillAnnotations; public SvgTools.SvgBuilder fillAnnotations(boolean doFill); Request whether annotations are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. fillDetections; public SvgTools.SvgBuilder fillDetections(boolean doFill); Request whether detections are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. showSelection; public SvgTools.SvgBuilder showSelection(boolean doShow); Request whether selected objects are displayed. Parameters:; doShow - ; Returns:; this builder. region; public SvgTools.SvgBuilder region(ImageRegion region); Specify the region (in terms of the full resolution image space) for export.; If a RegionRequest is supplied, the downsample factor will be used if none has otherwise been set. Parameters:; region - ; Returns:; this builder. downsample; public SvgTools.SvgBuilder downsample(double downsample); Specify downsample factor (defined in terms of the full resolution image space). Parameters:; downsample - ; Returns:; this builder. width; public SvgTools.SvgBuilder width(int width); Export image width. Parameters:; width - width (in pixels) of the SVG image.; Returns:; this builder. height; public SvgTools.SvgBuilder height(int height); Export image height. Parameters:; height - height (in pixels) of the SVG image.; Returns:; this builder. size; public SvgTools.SvgBuilder size(int width,; int height); Export image size. Parameters:; width - width (in pixels) of the SVG image.; height - height (in pixels) of the SVG image.; Returns:; this builder. embedImages; public SvgTools.SvgBuilder embedImages(); Specify whether the underlying (raster) image should be embedded in any export.; This requires that the constructor with a QuPathViewer is called to supply the ; necessary rendering settings. Returns:; this builder; See Also:. linkImages(). linkImages; public SvgTools.SvgBuilder linkImages(); Specify whether the underlying (raster) image should be included in any export.; This requires that",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:528,Modifiability,extend,extends,528,". SvgTools.SvgBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgTools.SvgBuilder. java.lang.Object; qupath.lib.extension.svg.SvgTools.SvgBuilder. Enclosing class:; SvgTools. public static class SvgTools.SvgBuilder; extends Object; Builder class to enable the export of rendered QuPath objects as SVG images.; This can be useful to generate high-quality figures using a vector representation of objects, ; which may be further customized in other applications (e.g. to change line thickness, color). Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. Constructor Summary; Constructors. Constructor; Description; SvgBuilder(). Create a new builder, which will later be customized. SvgBuilder(QuPathViewer viewer). Create a builder initialized according to the current viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; createDocument(). Create a String representation of the SVG document. SvgTools.SvgBuilder; downsample(double downsample). Specify downsample factor (defined in terms of the full resolution image space). SvgTools.SvgBuilder; embedImages(). Specify whether the underlying (raster) image should be embedded in any export. SvgTools.SvgBuilder; fillAnnotations(boolean doFill). Request whether annotations are drawn as 'filled' shapes. SvgTools.SvgBuilder; fillDetections(boolean doFill). Request whether detections are drawn as 'filled' shapes. SvgTools.SvgBuilder; height(int height). Export image height. SvgTools.SvgBuilder; hierarchy(PathObjectHierarch",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:2639,Modifiability,extend,extends,2639,"uld be embedded in any export. SvgTools.SvgBuilder; fillAnnotations(boolean doFill). Request whether annotations are drawn as 'filled' shapes. SvgTools.SvgBuilder; fillDetections(boolean doFill). Request whether detections are drawn as 'filled' shapes. SvgTools.SvgBuilder; height(int height). Export image height. SvgTools.SvgBuilder; hierarchy(PathObjectHierarchy hierarchy). Specify the PathObjectHierarchy. SvgTools.SvgBuilder; imageData(ImageData<BufferedImage> imageData). Specify the ImageData. SvgTools.SvgBuilder; images(SvgTools.SvgBuilder.ImageIncludeType include). Specify if/how raster images should be included in the SVG. SvgTools.SvgBuilder; includeOverlays(boolean doInclude). Specify whether overlays should be included. SvgTools.SvgBuilder; linkImages(). Specify whether the underlying (raster) image should be included in any export. SvgTools.SvgBuilder; options(OverlayOptions options). Specify the overlay options to control display. SvgTools.SvgBuilder; pathObjects(Collection<? extends PathObject> pathObjects). Specify a collection of objects to export. SvgTools.SvgBuilder; pathObjects(PathObject... pathObjects). Specify an array of objects to export. SvgTools.SvgBuilder; region(ImageRegion region). Specify the region (in terms of the full resolution image space) for export. SvgTools.SvgBuilder; showSelection(boolean doShow). Request whether selected objects are displayed. SvgTools.SvgBuilder; size(int width,; int height). Export image size. SvgTools.SvgBuilder; width(int width). Export image width. void; writeSVG(File file). Write the SVG image to a file, including any references images if required. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SvgBuilder; public SvgBuilder(QuPathViewer viewer); Create a builder initialized according to the current viewer. Parameters:; viewer - . SvgBuilder; public SvgBuilder(); Create a new builder, which will",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:3282,Modifiability,inherit,inherited,3282,"der; includeOverlays(boolean doInclude). Specify whether overlays should be included. SvgTools.SvgBuilder; linkImages(). Specify whether the underlying (raster) image should be included in any export. SvgTools.SvgBuilder; options(OverlayOptions options). Specify the overlay options to control display. SvgTools.SvgBuilder; pathObjects(Collection<? extends PathObject> pathObjects). Specify a collection of objects to export. SvgTools.SvgBuilder; pathObjects(PathObject... pathObjects). Specify an array of objects to export. SvgTools.SvgBuilder; region(ImageRegion region). Specify the region (in terms of the full resolution image space) for export. SvgTools.SvgBuilder; showSelection(boolean doShow). Request whether selected objects are displayed. SvgTools.SvgBuilder; size(int width,; int height). Export image size. SvgTools.SvgBuilder; width(int width). Export image width. void; writeSVG(File file). Write the SVG image to a file, including any references images if required. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SvgBuilder; public SvgBuilder(QuPathViewer viewer); Create a builder initialized according to the current viewer. Parameters:; viewer - . SvgBuilder; public SvgBuilder(); Create a new builder, which will later be customized. Method Details. imageData; public SvgTools.SvgBuilder imageData(ImageData<BufferedImage> imageData); Specify the ImageData. This is required if the underlying raster image will be included in any export. Parameters:; imageData - ; Returns:; this builder. hierarchy; public SvgTools.SvgBuilder hierarchy(PathObjectHierarchy hierarchy); Specify the PathObjectHierarchy. This may be used instead of imageData(ImageData) if the raster image is not required. Parameters:; hierarchy - ; Returns:; this builder. pathObjects; public SvgTools.SvgBuilder pathObjects(Collection<? extends PathObject> pathObjects); Specify a collection of obje",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:4229,Modifiability,extend,extends,4229,"nces images if required. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SvgBuilder; public SvgBuilder(QuPathViewer viewer); Create a builder initialized according to the current viewer. Parameters:; viewer - . SvgBuilder; public SvgBuilder(); Create a new builder, which will later be customized. Method Details. imageData; public SvgTools.SvgBuilder imageData(ImageData<BufferedImage> imageData); Specify the ImageData. This is required if the underlying raster image will be included in any export. Parameters:; imageData - ; Returns:; this builder. hierarchy; public SvgTools.SvgBuilder hierarchy(PathObjectHierarchy hierarchy); Specify the PathObjectHierarchy. This may be used instead of imageData(ImageData) if the raster image is not required. Parameters:; hierarchy - ; Returns:; this builder. pathObjects; public SvgTools.SvgBuilder pathObjects(Collection<? extends PathObject> pathObjects); Specify a collection of objects to export.; This may be used instead of imageData(ImageData) if the raster image is not required. Parameters:; pathObjects - ; Returns:; this builder. pathObjects; public SvgTools.SvgBuilder pathObjects(PathObject... pathObjects); Specify an array of objects to export.; This may be used instead of imageData(ImageData) if the raster image is not required. Parameters:; pathObjects - ; Returns:; this builder. includeOverlays; public SvgTools.SvgBuilder includeOverlays(boolean doInclude); Specify whether overlays should be included.; This only has an effect if images are also included, and a viewer is provided. Parameters:; doInclude - ; Returns:; this builder. options; public SvgTools.SvgBuilder options(OverlayOptions options); Specify the overlay options to control display.; This will override any previous customizations added to the builder. Parameters:; options - ; Returns:; this builder. fillAnnotations; public SvgTools.SvgBuilder fillAnno",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:1849,Safety,detect,detections,1849,"nd Type; Class; Description; static enum ; SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. Constructor Summary; Constructors. Constructor; Description; SvgBuilder(). Create a new builder, which will later be customized. SvgBuilder(QuPathViewer viewer). Create a builder initialized according to the current viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; createDocument(). Create a String representation of the SVG document. SvgTools.SvgBuilder; downsample(double downsample). Specify downsample factor (defined in terms of the full resolution image space). SvgTools.SvgBuilder; embedImages(). Specify whether the underlying (raster) image should be embedded in any export. SvgTools.SvgBuilder; fillAnnotations(boolean doFill). Request whether annotations are drawn as 'filled' shapes. SvgTools.SvgBuilder; fillDetections(boolean doFill). Request whether detections are drawn as 'filled' shapes. SvgTools.SvgBuilder; height(int height). Export image height. SvgTools.SvgBuilder; hierarchy(PathObjectHierarchy hierarchy). Specify the PathObjectHierarchy. SvgTools.SvgBuilder; imageData(ImageData<BufferedImage> imageData). Specify the ImageData. SvgTools.SvgBuilder; images(SvgTools.SvgBuilder.ImageIncludeType include). Specify if/how raster images should be included in the SVG. SvgTools.SvgBuilder; includeOverlays(boolean doInclude). Specify whether overlays should be included. SvgTools.SvgBuilder; linkImages(). Specify whether the underlying (raster) image should be included in any export. SvgTools.SvgBuilder; options(OverlayOptions options). Specify the overlay options to control display. SvgTools.SvgBuilder; pathObjects(Collection<? extends PathObject> pathObjects). Specify a collection of objects to export. SvgTools.SvgBuilder; pathObjects(PathObject... pathObjects). Specify an array of objects to export. SvgTools.SvgBuilder; region(ImageRegion regio",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:5471,Safety,detect,detections,5471,"blic SvgTools.SvgBuilder pathObjects(PathObject... pathObjects); Specify an array of objects to export.; This may be used instead of imageData(ImageData) if the raster image is not required. Parameters:; pathObjects - ; Returns:; this builder. includeOverlays; public SvgTools.SvgBuilder includeOverlays(boolean doInclude); Specify whether overlays should be included.; This only has an effect if images are also included, and a viewer is provided. Parameters:; doInclude - ; Returns:; this builder. options; public SvgTools.SvgBuilder options(OverlayOptions options); Specify the overlay options to control display.; This will override any previous customizations added to the builder. Parameters:; options - ; Returns:; this builder. fillAnnotations; public SvgTools.SvgBuilder fillAnnotations(boolean doFill); Request whether annotations are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. fillDetections; public SvgTools.SvgBuilder fillDetections(boolean doFill); Request whether detections are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. showSelection; public SvgTools.SvgBuilder showSelection(boolean doShow); Request whether selected objects are displayed. Parameters:; doShow - ; Returns:; this builder. region; public SvgTools.SvgBuilder region(ImageRegion region); Specify the region (in terms of the full resolution image space) for export.; If a RegionRequest is supplied, the downsample factor will be used if none has otherwise been set. Parameters:; region - ; Returns:; this builder. downsample; public SvgTools.SvgBuilder downsample(double downsample); Specify downsample factor (defined in terms of the full resolution image space). Parameters:; downsample - ; Returns:; this builder. width; public SvgTools.SvgBuilder width(int width); Export image width. Parameters:; width - width (in pixels) of the SVG image.; Returns:; this builder. height; public SvgTools.SvgBuilder height(int height); Export image height. Parameters:;",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:3356,Security,hash,hashCode,3356," be included. SvgTools.SvgBuilder; linkImages(). Specify whether the underlying (raster) image should be included in any export. SvgTools.SvgBuilder; options(OverlayOptions options). Specify the overlay options to control display. SvgTools.SvgBuilder; pathObjects(Collection<? extends PathObject> pathObjects). Specify a collection of objects to export. SvgTools.SvgBuilder; pathObjects(PathObject... pathObjects). Specify an array of objects to export. SvgTools.SvgBuilder; region(ImageRegion region). Specify the region (in terms of the full resolution image space) for export. SvgTools.SvgBuilder; showSelection(boolean doShow). Request whether selected objects are displayed. SvgTools.SvgBuilder; size(int width,; int height). Export image size. SvgTools.SvgBuilder; width(int width). Export image width. void; writeSVG(File file). Write the SVG image to a file, including any references images if required. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SvgBuilder; public SvgBuilder(QuPathViewer viewer); Create a builder initialized according to the current viewer. Parameters:; viewer - . SvgBuilder; public SvgBuilder(); Create a new builder, which will later be customized. Method Details. imageData; public SvgTools.SvgBuilder imageData(ImageData<BufferedImage> imageData); Specify the ImageData. This is required if the underlying raster image will be included in any export. Parameters:; imageData - ; Returns:; this builder. hierarchy; public SvgTools.SvgBuilder hierarchy(PathObjectHierarchy hierarchy); Specify the PathObjectHierarchy. This may be used instead of imageData(ImageData) if the raster image is not required. Parameters:; hierarchy - ; Returns:; this builder. pathObjects; public SvgTools.SvgBuilder pathObjects(Collection<? extends PathObject> pathObjects); Specify a collection of objects to export.; This may be used instead of imageData(ImageData) if the ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html:965,Integrability,interface,interfaces,965,". SvgTools.SvgBuilder.ImageIncludeType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.extension.svg; Enum Class SvgTools.SvgBuilder.ImageIncludeType. java.lang.Object; java.lang.Enum<SvgTools.SvgBuilder.ImageIncludeType>; qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. All Implemented Interfaces:; Serializable, Comparable<SvgTools.SvgBuilder.ImageIncludeType>, Constable. Enclosing class:; SvgTools.SvgBuilder. public static enum SvgTools.SvgBuilder.ImageIncludeType; extends Enum<SvgTools.SvgBuilder.ImageIncludeType>; Enum defining ways in which raster images may be included in the SVG file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EMBED. Embed the image (as Base64-encoded PNG). LINK. Link the image (to a separate PNG). NONE. Do not include images. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static SvgTools.SvgBuilder.ImageIncludeType; valueOf(String name). Returns the enum constant of this class with the specified name. static SvgTools.SvgBuilder.ImageIncludeType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final SvgTools.SvgBuilder.ImageIncludeType NONE; Do not ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html:801,Modifiability,extend,extends,801,". SvgTools.SvgBuilder.ImageIncludeType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.extension.svg; Enum Class SvgTools.SvgBuilder.ImageIncludeType. java.lang.Object; java.lang.Enum<SvgTools.SvgBuilder.ImageIncludeType>; qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. All Implemented Interfaces:; Serializable, Comparable<SvgTools.SvgBuilder.ImageIncludeType>, Constable. Enclosing class:; SvgTools.SvgBuilder. public static enum SvgTools.SvgBuilder.ImageIncludeType; extends Enum<SvgTools.SvgBuilder.ImageIncludeType>; Enum defining ways in which raster images may be included in the SVG file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EMBED. Embed the image (as Base64-encoded PNG). LINK. Link the image (to a separate PNG). NONE. Do not include images. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static SvgTools.SvgBuilder.ImageIncludeType; valueOf(String name). Returns the enum constant of this class with the specified name. static SvgTools.SvgBuilder.ImageIncludeType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final SvgTools.SvgBuilder.ImageIncludeType NONE; Do not ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html:976,Modifiability,inherit,inherited,976,". SvgTools.SvgBuilder.ImageIncludeType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.extension.svg; Enum Class SvgTools.SvgBuilder.ImageIncludeType. java.lang.Object; java.lang.Enum<SvgTools.SvgBuilder.ImageIncludeType>; qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. All Implemented Interfaces:; Serializable, Comparable<SvgTools.SvgBuilder.ImageIncludeType>, Constable. Enclosing class:; SvgTools.SvgBuilder. public static enum SvgTools.SvgBuilder.ImageIncludeType; extends Enum<SvgTools.SvgBuilder.ImageIncludeType>; Enum defining ways in which raster images may be included in the SVG file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EMBED. Embed the image (as Base64-encoded PNG). LINK. Link the image (to a separate PNG). NONE. Do not include images. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static SvgTools.SvgBuilder.ImageIncludeType; valueOf(String name). Returns the enum constant of this class with the specified name. static SvgTools.SvgBuilder.ImageIncludeType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final SvgTools.SvgBuilder.ImageIncludeType NONE; Do not ",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html:1029,Modifiability,extend,extends,1029,"deType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.extension.svg; Enum Class SvgTools.SvgBuilder.ImageIncludeType. java.lang.Object; java.lang.Enum<SvgTools.SvgBuilder.ImageIncludeType>; qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. All Implemented Interfaces:; Serializable, Comparable<SvgTools.SvgBuilder.ImageIncludeType>, Constable. Enclosing class:; SvgTools.SvgBuilder. public static enum SvgTools.SvgBuilder.ImageIncludeType; extends Enum<SvgTools.SvgBuilder.ImageIncludeType>; Enum defining ways in which raster images may be included in the SVG file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EMBED. Embed the image (as Base64-encoded PNG). LINK. Link the image (to a separate PNG). NONE. Do not include images. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static SvgTools.SvgBuilder.ImageIncludeType; valueOf(String name). Returns the enum constant of this class with the specified name. static SvgTools.SvgBuilder.ImageIncludeType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final SvgTools.SvgBuilder.ImageIncludeType NONE; Do not include images. EMBED; public s",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html:1663,Modifiability,inherit,inherited,1663,"der.ImageIncludeType>, Constable. Enclosing class:; SvgTools.SvgBuilder. public static enum SvgTools.SvgBuilder.ImageIncludeType; extends Enum<SvgTools.SvgBuilder.ImageIncludeType>; Enum defining ways in which raster images may be included in the SVG file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EMBED. Embed the image (as Base64-encoded PNG). LINK. Link the image (to a separate PNG). NONE. Do not include images. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static SvgTools.SvgBuilder.ImageIncludeType; valueOf(String name). Returns the enum constant of this class with the specified name. static SvgTools.SvgBuilder.ImageIncludeType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final SvgTools.SvgBuilder.ImageIncludeType NONE; Do not include images. EMBED; public static final SvgTools.SvgBuilder.ImageIncludeType EMBED; Embed the image (as Base64-encoded PNG). LINK; public static final SvgTools.SvgBuilder.ImageIncludeType LINK; Link the image (to a separate PNG). Method Details. values; public static SvgTools.SvgBuilder.ImageIncludeType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static SvgTools.SvgBuilder.ImageIncludeType valueOf(String name); Returns the enum constant of this class with the specified name.; The string m",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html:1816,Modifiability,inherit,inherited,1816,"vgBuilder.ImageIncludeType>; Enum defining ways in which raster images may be included in the SVG file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EMBED. Embed the image (as Base64-encoded PNG). LINK. Link the image (to a separate PNG). NONE. Do not include images. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static SvgTools.SvgBuilder.ImageIncludeType; valueOf(String name). Returns the enum constant of this class with the specified name. static SvgTools.SvgBuilder.ImageIncludeType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final SvgTools.SvgBuilder.ImageIncludeType NONE; Do not include images. EMBED; public static final SvgTools.SvgBuilder.ImageIncludeType EMBED; Embed the image (as Base64-encoded PNG). LINK; public static final SvgTools.SvgBuilder.ImageIncludeType LINK; Link the image (to a separate PNG). Method Details. values; public static SvgTools.SvgBuilder.ImageIncludeType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static SvgTools.SvgBuilder.ImageIncludeType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; na",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html
https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html:1774,Security,hash,hashCode,1774," static enum SvgTools.SvgBuilder.ImageIncludeType; extends Enum<SvgTools.SvgBuilder.ImageIncludeType>; Enum defining ways in which raster images may be included in the SVG file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EMBED. Embed the image (as Base64-encoded PNG). LINK. Link the image (to a separate PNG). NONE. Do not include images. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static SvgTools.SvgBuilder.ImageIncludeType; valueOf(String name). Returns the enum constant of this class with the specified name. static SvgTools.SvgBuilder.ImageIncludeType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final SvgTools.SvgBuilder.ImageIncludeType NONE; Do not include images. EMBED; public static final SvgTools.SvgBuilder.ImageIncludeType EMBED; Embed the image (as Base64-encoded PNG). LINK; public static final SvgTools.SvgBuilder.ImageIncludeType LINK; Link the image (to a separate PNG). Method Details. values; public static SvgTools.SvgBuilder.ImageIncludeType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static SvgTools.SvgBuilder.ImageIncludeType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class",MatchSource.WIKI,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html:551,Modifiability,extend,extends,551,". ActionTools.ActionBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class ActionTools.ActionBuilder. java.lang.Object; qupath.lib.gui.actions.ActionTools.ActionBuilder. Enclosing class:; ActionTools. public static class ActionTools.ActionBuilder; extends Object; Builder class for custom Action objects.; These can be used to create GUI components (e.g. buttons, menu items). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ActionTools.ActionBuilder; accelerator(ObservableValue<KeyCombination> value). Bind the accelerator property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; accelerator(KeyCombination value). Set the accelerator property of the action. org.controlsfx.control.action.Action; build(). Create an Action with this builder. ActionTools.ActionBuilder; disabled(boolean value). Set the disabled property of the action. ActionTools.ActionBuilder; disabled(ObservableValue<Boolean> value). Bind the disabled property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; graphic(ObservableValue<Node> value). Bind the graphic property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; graphic(Node value). Set the graphic property of the action. ActionTools.ActionBuilder; longText(String value). Set the long text property of the action. ActionTools.ActionBuilder; longText(ObservableValue<String> value). Bind the long text property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; selectable(boolean isSelectable). Sets the selectable property of the acti",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html:2505,Modifiability,inherit,inherited,2505,"servableValue, bidirectionally if possible. ActionTools.ActionBuilder; graphic(Node value). Set the graphic property of the action. ActionTools.ActionBuilder; longText(String value). Set the long text property of the action. ActionTools.ActionBuilder; longText(ObservableValue<String> value). Bind the long text property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; selectable(boolean isSelectable). Sets the selectable property of the action. ActionTools.ActionBuilder; selected(boolean value). Set the selected property of the action. ActionTools.ActionBuilder; selected(ObservableValue<Boolean> value). Bind the selected property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; text(String value). Set the text property of the action. ActionTools.ActionBuilder; text(ObservableValue<String> value). Bind the text property of the action to an ObservableValue, bidirectionally if possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. text; public ActionTools.ActionBuilder text(String value); Set the text property of the action. Parameters:; value - ; Returns:; this builder. selectable; public ActionTools.ActionBuilder selectable(boolean isSelectable); Sets the selectable property of the action. Parameters:; isSelectable - ; Returns:; this builder. longText; public ActionTools.ActionBuilder longText(String value); Set the long text property of the action. Parameters:; value - ; Returns:; this builder. graphic; public ActionTools.ActionBuilder graphic(Node value); Set the graphic property of the action. Parameters:; value - ; Returns:; this builder. accelerator; public ActionTools.ActionBuilder accelerator(KeyCombination value); Set the accelerator property of the action. Parameters:; value - ; Returns:; this builder. selected; public ActionTools.ActionBuilder selected(boolean valu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html:2579,Security,hash,hashCode,2579,"raphic(Node value). Set the graphic property of the action. ActionTools.ActionBuilder; longText(String value). Set the long text property of the action. ActionTools.ActionBuilder; longText(ObservableValue<String> value). Bind the long text property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; selectable(boolean isSelectable). Sets the selectable property of the action. ActionTools.ActionBuilder; selected(boolean value). Set the selected property of the action. ActionTools.ActionBuilder; selected(ObservableValue<Boolean> value). Bind the selected property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; text(String value). Set the text property of the action. ActionTools.ActionBuilder; text(ObservableValue<String> value). Bind the text property of the action to an ObservableValue, bidirectionally if possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. text; public ActionTools.ActionBuilder text(String value); Set the text property of the action. Parameters:; value - ; Returns:; this builder. selectable; public ActionTools.ActionBuilder selectable(boolean isSelectable); Sets the selectable property of the action. Parameters:; isSelectable - ; Returns:; this builder. longText; public ActionTools.ActionBuilder longText(String value); Set the long text property of the action. Parameters:; value - ; Returns:; this builder. graphic; public ActionTools.ActionBuilder graphic(Node value); Set the graphic property of the action. Parameters:; value - ; Returns:; this builder. accelerator; public ActionTools.ActionBuilder accelerator(KeyCombination value); Set the accelerator property of the action. Parameters:; value - ; Returns:; this builder. selected; public ActionTools.ActionBuilder selected(boolean value); Set the selected property of the action. Parameters:; value - ; Retu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:1948,Availability,avail,available,1948,"ructors. Constructor; Description; ActionTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ActionTools.ActionBuilder; actionBuilder(). Create an ActionTools.ActionBuilder with no properties set. static ActionTools.ActionBuilder; actionBuilder(String text,; Consumer<ActionEvent> handler). Create an ActionTools.ActionBuilder with the specified text and event handler. static ActionTools.ActionBuilder; actionBuilder(Consumer<ActionEvent> handler). Create an ActionTools.ActionBuilder with the specified event handler. static org.controlsfx.control.action.Action; createAction(Runnable command). Create an action whose event handler calls a runnable. static org.controlsfx.control.action.Action; createAction(Runnable command,; String name). Create an action whose event handler calls a runnable, with a specified name. static Button; createButton(org.controlsfx.control.action.Action action). Create a button from an action, showing both the text and graphic if available. static Button; createButtonWithGraphicOnly(org.controlsfx.control.action.Action action). Create a button from an action, showing only the graphic and not any text. static CheckBox; createCheckBox(org.controlsfx.control.action.Action action). Create a checkbox from an action. static MenuItem; createCheckMenuItem(org.controlsfx.control.action.Action action). Create a menu item from an action that makes use of a selected property. static MenuItem; createCheckMenuItem(org.controlsfx.control.action.Action action,; ToggleGroup group). Create a menu item from an action that makes use of a selected property. static MenuItem; createMenuItem(org.controlsfx.control.action.Action action). Create a menu item from an action. static org.controlsfx.control.action.Action; createSelectableAction(ObservableValue<Boolean> property). Create an unnamed action with its Action.selectedProperty() bound to a specified property. static org.controlsfx.control.action.Action",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:4395,Availability,avail,available,4395,"ic org.controlsfx.control.action.Action; createSelectableCommandAction(ObservableBooleanValue value);  ; static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command);  ; static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command,; String name). Create an action from a selectable icon. static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command,; String name,; Node icon,; KeyCombination accelerator);  ; static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command,; ObservableValue<String> name,; ObservableValue<Node> icon,; KeyCombination accelerator);  ; static org.controlsfx.control.action.Action; createSeparator(). Create an action indicating that a separator should be added (e.g. static ToggleButton; createToggleButton(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing both the text and graphic if available. static ToggleButton; createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing only the graphic and not any text. static org.controlsfx.control.action.Action; getActionProperty(MenuItem item). Retrieve an Action stored within the properties of a menu item, or null if no action is found. static org.controlsfx.control.action.Action; getActionProperty(Node node). Retrieve an Action stored within the properties of a node, or null if no action is found. static List<org.controlsfx.control.action.Action>; getAnnotatedActions(Object obj). Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. static void; installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message). Install an optional info message to the action. static boolean; isSelectable(org.controlsfx.control.act",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:12331,Availability,avail,available,12331,"ence to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckBox; public static CheckBox createCheckBox(org.controlsfx.control.action.Action action); Create a checkbox from an action.; This stores a reference to the action as a property of the checkbox. Parameters:; action - the action from which to construct the checkbox; Returns:; a new CheckBox configured according to the action. createToggleButtonWithGraphicOnly; public static ToggleButton createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createToggleButton; public static ToggleButton createToggleButton(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createButton; public static Button createButton(org.controlsfx.control.action.Action action); Create a button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createButtonWithGraphicOnly; public static Button createButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createSelectableAction; public static org.controlsfx.control.action.Action",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:12614,Availability,avail,available,12614,"eate a checkbox from an action.; This stores a reference to the action as a property of the checkbox. Parameters:; action - the action from which to construct the checkbox; Returns:; a new CheckBox configured according to the action. createToggleButtonWithGraphicOnly; public static ToggleButton createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createToggleButton; public static ToggleButton createToggleButton(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createButton; public static Button createButton(org.controlsfx.control.action.Action action); Create a button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createButtonWithGraphicOnly; public static Button createButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createSelectableAction; public static org.controlsfx.control.action.Action createSelectableAction(ObservableValue<Boolean> property,; String name,; Node icon,; KeyCombination accelerator); Create an action with its Action.selectedProperty() bound to a specified property, with optional graphic and accelerator. Parameters:; property - the property to which the ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:4328,Deployability,toggle,toggle,4328,"ic org.controlsfx.control.action.Action; createSelectableCommandAction(ObservableBooleanValue value);  ; static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command);  ; static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command,; String name). Create an action from a selectable icon. static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command,; String name,; Node icon,; KeyCombination accelerator);  ; static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command,; ObservableValue<String> name,; ObservableValue<Node> icon,; KeyCombination accelerator);  ; static org.controlsfx.control.action.Action; createSeparator(). Create an action indicating that a separator should be added (e.g. static ToggleButton; createToggleButton(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing both the text and graphic if available. static ToggleButton; createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing only the graphic and not any text. static org.controlsfx.control.action.Action; getActionProperty(MenuItem item). Retrieve an Action stored within the properties of a menu item, or null if no action is found. static org.controlsfx.control.action.Action; getActionProperty(Node node). Retrieve an Action stored within the properties of a node, or null if no action is found. static List<org.controlsfx.control.action.Action>; getAnnotatedActions(Object obj). Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. static void; installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message). Install an optional info message to the action. static boolean; isSelectable(org.controlsfx.control.act",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:4516,Deployability,toggle,toggle,4516,"lectableItem<T> command);  ; static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command,; String name). Create an action from a selectable icon. static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command,; String name,; Node icon,; KeyCombination accelerator);  ; static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command,; ObservableValue<String> name,; ObservableValue<Node> icon,; KeyCombination accelerator);  ; static org.controlsfx.control.action.Action; createSeparator(). Create an action indicating that a separator should be added (e.g. static ToggleButton; createToggleButton(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing both the text and graphic if available. static ToggleButton; createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing only the graphic and not any text. static org.controlsfx.control.action.Action; getActionProperty(MenuItem item). Retrieve an Action stored within the properties of a menu item, or null if no action is found. static org.controlsfx.control.action.Action; getActionProperty(Node node). Retrieve an Action stored within the properties of a node, or null if no action is found. static List<org.controlsfx.control.action.Action>; getAnnotatedActions(Object obj). Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. static void; installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message). Install an optional info message to the action. static boolean; isSelectable(org.controlsfx.control.action.Action action). Specify that an Action has a meaningful 'selected' status. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element). Par",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:5154,Deployability,install,installInfoMessage,5154,"ator(). Create an action indicating that a separator should be added (e.g. static ToggleButton; createToggleButton(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing both the text and graphic if available. static ToggleButton; createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing only the graphic and not any text. static org.controlsfx.control.action.Action; getActionProperty(MenuItem item). Retrieve an Action stored within the properties of a menu item, or null if no action is found. static org.controlsfx.control.action.Action; getActionProperty(Node node). Retrieve an Action stored within the properties of a node, or null if no action is found. static List<org.controlsfx.control.action.Action>; getAnnotatedActions(Object obj). Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. static void; installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message). Install an optional info message to the action. static boolean; isSelectable(org.controlsfx.control.action.Action action). Specify that an Action has a meaningful 'selected' status. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element). Parse annotations relating to an action, updating the properties of the action. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu). Parse annotations relating to an action, updating the properties of the action with an optional base menu. static void; putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a Node, ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:7496,Deployability,update,update,7496,"ublic ActionTools(). Method Details. getAnnotatedActions; public static List<org.controlsfx.control.action.Action> getAnnotatedActions(Object obj); Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod.; Any annotations associated with the actions will be parsed. Parameters:; obj - the object containing the action fields or methods; Returns:; a list of parsed and configured actions. parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element); Parse annotations relating to an action, updating the properties of the action. Parameters:; action - ; element - . parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu); Parse annotations relating to an action, updating the properties of the action with an optional base menu. Parameters:; action - the action to update; element - the annotated element (often a Field).; baseMenu - prepended to any ActionMenu actions. This makes it easier to insert items in sub-menus ; without needing to specify the full menu path every time. putActionProperty; public static void putActionProperty(Node node,; org.controlsfx.control.action.Action action); Add an Action to the properties of a Node, so that it may be retrieved later. Parameters:; node - the node for which the action should be added; action - an action to store as the properties of the node. putActionProperty; public static void putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action); Add an Action to the properties of a MenuItem, so that it may be retrieved later. Parameters:; node - the node for which the action should be added; action - an action to store as the properties of the node. getActionProperty; public static org.controlsfx.control.action.Action getActionProperty(Node node); Retrieve an Action stored within the properties of",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:10935,Deployability,toggle,toggle,10935," new ActionTools.ActionBuilder. actionBuilder; public static ActionTools.ActionBuilder actionBuilder(Consumer<ActionEvent> handler); Create an ActionTools.ActionBuilder with the specified event handler. Parameters:; handler - ; Returns:; a new ActionTools.ActionBuilder. createMenuItem; public static MenuItem createMenuItem(org.controlsfx.control.action.Action action); Create a menu item from an action.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckMenuItem; public static MenuItem createCheckMenuItem(org.controlsfx.control.action.Action action,; ToggleGroup group); Create a menu item from an action that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; group - a toggle group to associate with the action; if present, a radio menu item will be returned; Returns:; a new MenuItem configured according to the action. createCheckMenuItem; public static MenuItem createCheckMenuItem(org.controlsfx.control.action.Action action); Create a menu item from an action that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckBox; public static CheckBox createCheckBox(org.controlsfx.control.action.Action action); Create a checkbox from an action.; This stores a reference to the action as a property of the checkbox. Parameters:; action - the action from which to construct the checkbox; Returns:; a new CheckBox configured according to the action. createToggleButtonWithGraphicOnly; public static ToggleButton createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a toggle b",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:11961,Deployability,toggle,toggle,11961,"sent, a radio menu item will be returned; Returns:; a new MenuItem configured according to the action. createCheckMenuItem; public static MenuItem createCheckMenuItem(org.controlsfx.control.action.Action action); Create a menu item from an action that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckBox; public static CheckBox createCheckBox(org.controlsfx.control.action.Action action); Create a checkbox from an action.; This stores a reference to the action as a property of the checkbox. Parameters:; action - the action from which to construct the checkbox; Returns:; a new CheckBox configured according to the action. createToggleButtonWithGraphicOnly; public static ToggleButton createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createToggleButton; public static ToggleButton createToggleButton(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createButton; public static Button createButton(org.controlsfx.control.action.Action action); Create a button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createButtonWithGraphicOnly; public static Button createButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a button from an action, showing ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:12094,Deployability,toggle,toggle,12094,"g to the action. createCheckMenuItem; public static MenuItem createCheckMenuItem(org.controlsfx.control.action.Action action); Create a menu item from an action that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckBox; public static CheckBox createCheckBox(org.controlsfx.control.action.Action action); Create a checkbox from an action.; This stores a reference to the action as a property of the checkbox. Parameters:; action - the action from which to construct the checkbox; Returns:; a new CheckBox configured according to the action. createToggleButtonWithGraphicOnly; public static ToggleButton createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createToggleButton; public static ToggleButton createToggleButton(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createButton; public static Button createButton(org.controlsfx.control.action.Action action); Create a button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createButtonWithGraphicOnly; public static Button createButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a button from an action, showing only the graphic and not any text.; This stores a reference to the action as a propert",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:12264,Deployability,toggle,toggle,12264,"ence to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckBox; public static CheckBox createCheckBox(org.controlsfx.control.action.Action action); Create a checkbox from an action.; This stores a reference to the action as a property of the checkbox. Parameters:; action - the action from which to construct the checkbox; Returns:; a new CheckBox configured according to the action. createToggleButtonWithGraphicOnly; public static ToggleButton createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createToggleButton; public static ToggleButton createToggleButton(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createButton; public static Button createButton(org.controlsfx.control.action.Action action); Create a button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createButtonWithGraphicOnly; public static Button createButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createSelectableAction; public static org.controlsfx.control.action.Action",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:12402,Deployability,toggle,toggle,12402," which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckBox; public static CheckBox createCheckBox(org.controlsfx.control.action.Action action); Create a checkbox from an action.; This stores a reference to the action as a property of the checkbox. Parameters:; action - the action from which to construct the checkbox; Returns:; a new CheckBox configured according to the action. createToggleButtonWithGraphicOnly; public static ToggleButton createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createToggleButton; public static ToggleButton createToggleButton(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createButton; public static Button createButton(org.controlsfx.control.action.Action action); Create a button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createButtonWithGraphicOnly; public static Button createButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createSelectableAction; public static org.controlsfx.control.action.Action createSelectableAction(ObservableValue<Boolean> property,; String name,; Node icon,; Key",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:16478,Deployability,install,installInfoMessage,16478,"er calls a runnable, with a specified name. Parameters:; command - the runnable to call; name - the name of the action, set as the text property; Returns:; a new Action. createAction; public static org.controlsfx.control.action.Action createAction(Runnable command); Create an action whose event handler calls a runnable. Parameters:; command - the runnable to call; Returns:; a new Action. createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; String name,; Node icon,; KeyCombination accelerator). createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; ObservableValue<String> name,; ObservableValue<Node> icon,; KeyCombination accelerator). createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; String name); Create an action from a selectable icon. Type Parameters:; T - ; Parameters:; command - item to which the action's selected property should be bound; name - text to include in the action; Returns:. createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command). createSelectableCommandAction; public static org.controlsfx.control.action.Action createSelectableCommandAction(ObservableBooleanValue value). installInfoMessage; public static void installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message); Install an optional info message to the action.; If the provided object expression is not empty, a badge will be added to nodes created from the action; and display the tooltip provided by the expression. Parameters:; action - the action to which the message should be added; message - an expression that can return a message; the expression should not be null, but the message can be. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:16517,Deployability,install,installInfoMessage,16517,"er calls a runnable, with a specified name. Parameters:; command - the runnable to call; name - the name of the action, set as the text property; Returns:; a new Action. createAction; public static org.controlsfx.control.action.Action createAction(Runnable command); Create an action whose event handler calls a runnable. Parameters:; command - the runnable to call; Returns:; a new Action. createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; String name,; Node icon,; KeyCombination accelerator). createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; ObservableValue<String> name,; ObservableValue<Node> icon,; KeyCombination accelerator). createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; String name); Create an action from a selectable icon. Type Parameters:; T - ; Parameters:; command - item to which the action's selected property should be bound; name - text to include in the action; Returns:. createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command). createSelectableCommandAction; public static org.controlsfx.control.action.Action createSelectableCommandAction(ObservableBooleanValue value). installInfoMessage; public static void installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message); Install an optional info message to the action.; If the provided object expression is not empty, a badge will be added to nodes created from the action; and display the tooltip provided by the expression. Parameters:; action - the action to which the message should be added; message - an expression that can return a message; the expression should not be null, but the message can be. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:5249,Integrability,message,message,5249,"g. static ToggleButton; createToggleButton(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing both the text and graphic if available. static ToggleButton; createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing only the graphic and not any text. static org.controlsfx.control.action.Action; getActionProperty(MenuItem item). Retrieve an Action stored within the properties of a menu item, or null if no action is found. static org.controlsfx.control.action.Action; getActionProperty(Node node). Retrieve an Action stored within the properties of a node, or null if no action is found. static List<org.controlsfx.control.action.Action>; getAnnotatedActions(Object obj). Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. static void; installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message). Install an optional info message to the action. static boolean; isSelectable(org.controlsfx.control.action.Action action). Specify that an Action has a meaningful 'selected' status. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element). Parse annotations relating to an action, updating the properties of the action. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu). Parse annotations relating to an action, updating the properties of the action with an optional base menu. static void; putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a Node, so that it may be retrieved later. static void; setSelectable(org.contro",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:5284,Integrability,message,message,5284,"olsfx.control.action.Action action). Create a toggle button from an action, showing both the text and graphic if available. static ToggleButton; createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing only the graphic and not any text. static org.controlsfx.control.action.Action; getActionProperty(MenuItem item). Retrieve an Action stored within the properties of a menu item, or null if no action is found. static org.controlsfx.control.action.Action; getActionProperty(Node node). Retrieve an Action stored within the properties of a node, or null if no action is found. static List<org.controlsfx.control.action.Action>; getAnnotatedActions(Object obj). Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. static void; installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message). Install an optional info message to the action. static boolean; isSelectable(org.controlsfx.control.action.Action action). Specify that an Action has a meaningful 'selected' status. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element). Parse annotations relating to an action, updating the properties of the action. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu). Parse annotations relating to an action, updating the properties of the action with an optional base menu. static void; putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a Node, so that it may be retrieved later. static void; setSelectable(org.controlsfx.control.action.Action action,; boolean selecta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:16612,Integrability,message,message,16612,"er calls a runnable, with a specified name. Parameters:; command - the runnable to call; name - the name of the action, set as the text property; Returns:; a new Action. createAction; public static org.controlsfx.control.action.Action createAction(Runnable command); Create an action whose event handler calls a runnable. Parameters:; command - the runnable to call; Returns:; a new Action. createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; String name,; Node icon,; KeyCombination accelerator). createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; ObservableValue<String> name,; ObservableValue<Node> icon,; KeyCombination accelerator). createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; String name); Create an action from a selectable icon. Type Parameters:; T - ; Parameters:; command - item to which the action's selected property should be bound; name - text to include in the action; Returns:. createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command). createSelectableCommandAction; public static org.controlsfx.control.action.Action createSelectableCommandAction(ObservableBooleanValue value). installInfoMessage; public static void installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message); Install an optional info message to the action.; If the provided object expression is not empty, a badge will be added to nodes created from the action; and display the tooltip provided by the expression. Parameters:; action - the action to which the message should be added; message - an expression that can return a message; the expression should not be null, but the message can be. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:16647,Integrability,message,message,16647,"er calls a runnable, with a specified name. Parameters:; command - the runnable to call; name - the name of the action, set as the text property; Returns:; a new Action. createAction; public static org.controlsfx.control.action.Action createAction(Runnable command); Create an action whose event handler calls a runnable. Parameters:; command - the runnable to call; Returns:; a new Action. createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; String name,; Node icon,; KeyCombination accelerator). createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; ObservableValue<String> name,; ObservableValue<Node> icon,; KeyCombination accelerator). createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; String name); Create an action from a selectable icon. Type Parameters:; T - ; Parameters:; command - item to which the action's selected property should be bound; name - text to include in the action; Returns:. createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command). createSelectableCommandAction; public static org.controlsfx.control.action.Action createSelectableCommandAction(ObservableBooleanValue value). installInfoMessage; public static void installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message); Install an optional info message to the action.; If the provided object expression is not empty, a badge will be added to nodes created from the action; and display the tooltip provided by the expression. Parameters:; action - the action to which the message should be added; message - an expression that can return a message; the expression should not be null, but the message can be. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:16873,Integrability,message,message,16873,"er calls a runnable, with a specified name. Parameters:; command - the runnable to call; name - the name of the action, set as the text property; Returns:; a new Action. createAction; public static org.controlsfx.control.action.Action createAction(Runnable command); Create an action whose event handler calls a runnable. Parameters:; command - the runnable to call; Returns:; a new Action. createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; String name,; Node icon,; KeyCombination accelerator). createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; ObservableValue<String> name,; ObservableValue<Node> icon,; KeyCombination accelerator). createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; String name); Create an action from a selectable icon. Type Parameters:; T - ; Parameters:; command - item to which the action's selected property should be bound; name - text to include in the action; Returns:. createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command). createSelectableCommandAction; public static org.controlsfx.control.action.Action createSelectableCommandAction(ObservableBooleanValue value). installInfoMessage; public static void installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message); Install an optional info message to the action.; If the provided object expression is not empty, a badge will be added to nodes created from the action; and display the tooltip provided by the expression. Parameters:; action - the action to which the message should be added; message - an expression that can return a message; the expression should not be null, but the message can be. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:16898,Integrability,message,message,16898,"er calls a runnable, with a specified name. Parameters:; command - the runnable to call; name - the name of the action, set as the text property; Returns:; a new Action. createAction; public static org.controlsfx.control.action.Action createAction(Runnable command); Create an action whose event handler calls a runnable. Parameters:; command - the runnable to call; Returns:; a new Action. createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; String name,; Node icon,; KeyCombination accelerator). createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; ObservableValue<String> name,; ObservableValue<Node> icon,; KeyCombination accelerator). createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; String name); Create an action from a selectable icon. Type Parameters:; T - ; Parameters:; command - item to which the action's selected property should be bound; name - text to include in the action; Returns:. createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command). createSelectableCommandAction; public static org.controlsfx.control.action.Action createSelectableCommandAction(ObservableBooleanValue value). installInfoMessage; public static void installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message); Install an optional info message to the action.; If the provided object expression is not empty, a badge will be added to nodes created from the action; and display the tooltip provided by the expression. Parameters:; action - the action to which the message should be added; message - an expression that can return a message; the expression should not be null, but the message can be. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:16940,Integrability,message,message,16940,"er calls a runnable, with a specified name. Parameters:; command - the runnable to call; name - the name of the action, set as the text property; Returns:; a new Action. createAction; public static org.controlsfx.control.action.Action createAction(Runnable command); Create an action whose event handler calls a runnable. Parameters:; command - the runnable to call; Returns:; a new Action. createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; String name,; Node icon,; KeyCombination accelerator). createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; ObservableValue<String> name,; ObservableValue<Node> icon,; KeyCombination accelerator). createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; String name); Create an action from a selectable icon. Type Parameters:; T - ; Parameters:; command - item to which the action's selected property should be bound; name - text to include in the action; Returns:. createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command). createSelectableCommandAction; public static org.controlsfx.control.action.Action createSelectableCommandAction(ObservableBooleanValue value). installInfoMessage; public static void installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message); Install an optional info message to the action.; If the provided object expression is not empty, a badge will be added to nodes created from the action; and display the tooltip provided by the expression. Parameters:; action - the action to which the message should be added; message - an expression that can return a message; the expression should not be null, but the message can be. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:16992,Integrability,message,message,16992,"er calls a runnable, with a specified name. Parameters:; command - the runnable to call; name - the name of the action, set as the text property; Returns:; a new Action. createAction; public static org.controlsfx.control.action.Action createAction(Runnable command); Create an action whose event handler calls a runnable. Parameters:; command - the runnable to call; Returns:; a new Action. createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; String name,; Node icon,; KeyCombination accelerator). createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; ObservableValue<String> name,; ObservableValue<Node> icon,; KeyCombination accelerator). createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; String name); Create an action from a selectable icon. Type Parameters:; T - ; Parameters:; command - item to which the action's selected property should be bound; name - text to include in the action; Returns:. createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command). createSelectableCommandAction; public static org.controlsfx.control.action.Action createSelectableCommandAction(ObservableBooleanValue value). installInfoMessage; public static void installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message); Install an optional info message to the action.; If the provided object expression is not empty, a badge will be added to nodes created from the action; and display the tooltip provided by the expression. Parameters:; action - the action to which the message should be added; message - an expression that can return a message; the expression should not be null, but the message can be. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:457,Modifiability,extend,extends,457,". ActionTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class ActionTools. java.lang.Object; qupath.lib.gui.actions.ActionTools. public class ActionTools; extends Object; Helper methods for generating and configuring Actions and UI elements.; ; This has some similarities with ActionUtils, however has QuPath-specific behavior that make it ; a better choice when working with actions related to QuPathGUI. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ActionTools.ActionBuilder. Builder class for custom Action objects. Constructor Summary; Constructors. Constructor; Description; ActionTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ActionTools.ActionBuilder; actionBuilder(). Create an ActionTools.ActionBuilder with no properties set. static ActionTools.ActionBuilder; actionBuilder(String text,; Consumer<ActionEvent> handler). Create an ActionTools.ActionBuilder with the specified text and event handler. static ActionTools.ActionBuilder; actionBuilder(Consumer<ActionEvent> handler). Create an ActionTools.ActionBuilder with the specified event handler. static org.controlsfx.control.action.Action; createAction(Runnable command). Create an action whose event handler calls a runnable. static org.controlsfx.control.action.Action; createAction(Runnable command,; String name). Create an action whose event handler calls a runnable, with a specified name. static Button; createButton(org.controlsfx.control.action.Action action). Create a button from an action, showing both the text and graphic if available. static Button; createButtonWithGraphicOnly",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:507,Modifiability,config,configuring,507,". ActionTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class ActionTools. java.lang.Object; qupath.lib.gui.actions.ActionTools. public class ActionTools; extends Object; Helper methods for generating and configuring Actions and UI elements.; ; This has some similarities with ActionUtils, however has QuPath-specific behavior that make it ; a better choice when working with actions related to QuPathGUI. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ActionTools.ActionBuilder. Builder class for custom Action objects. Constructor Summary; Constructors. Constructor; Description; ActionTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ActionTools.ActionBuilder; actionBuilder(). Create an ActionTools.ActionBuilder with no properties set. static ActionTools.ActionBuilder; actionBuilder(String text,; Consumer<ActionEvent> handler). Create an ActionTools.ActionBuilder with the specified text and event handler. static ActionTools.ActionBuilder; actionBuilder(Consumer<ActionEvent> handler). Create an ActionTools.ActionBuilder with the specified event handler. static org.controlsfx.control.action.Action; createAction(Runnable command). Create an action whose event handler calls a runnable. static org.controlsfx.control.action.Action; createAction(Runnable command,; String name). Create an action whose event handler calls a runnable, with a specified name. static Button; createButton(org.controlsfx.control.action.Action action). Create a button from an action, showing both the text and graphic if available. static Button; createButtonWithGraphicOnly",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:6339,Modifiability,inherit,inherited,6339,"sfx.control.action.Action action). Specify that an Action has a meaningful 'selected' status. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element). Parse annotations relating to an action, updating the properties of the action. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu). Parse annotations relating to an action, updating the properties of the action with an optional base menu. static void; putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a Node, so that it may be retrieved later. static void; setSelectable(org.controlsfx.control.action.Action action,; boolean selectable). Set the selectable property for an action. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ActionTools; public ActionTools(). Method Details. getAnnotatedActions; public static List<org.controlsfx.control.action.Action> getAnnotatedActions(Object obj); Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod.; Any annotations associated with the actions will be parsed. Parameters:; obj - the object containing the action fields or methods; Returns:; a list of parsed and configured actions. parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element); Parse annotations relating to an action, updating the properties of the action. Parameters:; action - ; element - . parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:6945,Modifiability,config,configured,6945,"controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a Node, so that it may be retrieved later. static void; setSelectable(org.controlsfx.control.action.Action action,; boolean selectable). Set the selectable property for an action. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ActionTools; public ActionTools(). Method Details. getAnnotatedActions; public static List<org.controlsfx.control.action.Action> getAnnotatedActions(Object obj); Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod.; Any annotations associated with the actions will be parsed. Parameters:; obj - the object containing the action fields or methods; Returns:; a list of parsed and configured actions. parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element); Parse annotations relating to an action, updating the properties of the action. Parameters:; action - ; element - . parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu); Parse annotations relating to an action, updating the properties of the action with an optional base menu. Parameters:; action - the action to update; element - the annotated element (often a Field).; baseMenu - prepended to any ActionMenu actions. This makes it easier to insert items in sub-menus ; without needing to specify the full menu path every time. putActionProperty; public static void putActionProperty(Node node,; org.controlsfx.control.action.Action action); Add an Action to the properties of a Node, so that it may be retrieved later.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:10543,Modifiability,config,configured,10543,"dded (e.g. to a menu or toolbar). Returns:. actionBuilder; public static ActionTools.ActionBuilder actionBuilder(String text,; Consumer<ActionEvent> handler); Create an ActionTools.ActionBuilder with the specified text and event handler. Parameters:; text - ; handler - ; Returns:; a new ActionTools.ActionBuilder. actionBuilder; public static ActionTools.ActionBuilder actionBuilder(); Create an ActionTools.ActionBuilder with no properties set. Returns:; a new ActionTools.ActionBuilder. actionBuilder; public static ActionTools.ActionBuilder actionBuilder(Consumer<ActionEvent> handler); Create an ActionTools.ActionBuilder with the specified event handler. Parameters:; handler - ; Returns:; a new ActionTools.ActionBuilder. createMenuItem; public static MenuItem createMenuItem(org.controlsfx.control.action.Action action); Create a menu item from an action.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckMenuItem; public static MenuItem createCheckMenuItem(org.controlsfx.control.action.Action action,; ToggleGroup group); Create a menu item from an action that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; group - a toggle group to associate with the action; if present, a radio menu item will be returned; Returns:; a new MenuItem configured according to the action. createCheckMenuItem; public static MenuItem createCheckMenuItem(org.controlsfx.control.action.Action action); Create a menu item from an action that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckBox; public static CheckBox",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:11051,Modifiability,config,configured,11051," new ActionTools.ActionBuilder. actionBuilder; public static ActionTools.ActionBuilder actionBuilder(Consumer<ActionEvent> handler); Create an ActionTools.ActionBuilder with the specified event handler. Parameters:; handler - ; Returns:; a new ActionTools.ActionBuilder. createMenuItem; public static MenuItem createMenuItem(org.controlsfx.control.action.Action action); Create a menu item from an action.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckMenuItem; public static MenuItem createCheckMenuItem(org.controlsfx.control.action.Action action,; ToggleGroup group); Create a menu item from an action that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; group - a toggle group to associate with the action; if present, a radio menu item will be returned; Returns:; a new MenuItem configured according to the action. createCheckMenuItem; public static MenuItem createCheckMenuItem(org.controlsfx.control.action.Action action); Create a menu item from an action that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckBox; public static CheckBox createCheckBox(org.controlsfx.control.action.Action action); Create a checkbox from an action.; This stores a reference to the action as a property of the checkbox. Parameters:; action - the action from which to construct the checkbox; Returns:; a new CheckBox configured according to the action. createToggleButtonWithGraphicOnly; public static ToggleButton createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a toggle b",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:11438,Modifiability,config,configured,11438," action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckMenuItem; public static MenuItem createCheckMenuItem(org.controlsfx.control.action.Action action,; ToggleGroup group); Create a menu item from an action that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; group - a toggle group to associate with the action; if present, a radio menu item will be returned; Returns:; a new MenuItem configured according to the action. createCheckMenuItem; public static MenuItem createCheckMenuItem(org.controlsfx.control.action.Action action); Create a menu item from an action that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckBox; public static CheckBox createCheckBox(org.controlsfx.control.action.Action action); Create a checkbox from an action.; This stores a reference to the action as a property of the checkbox. Parameters:; action - the action from which to construct the checkbox; Returns:; a new CheckBox configured according to the action. createToggleButtonWithGraphicOnly; public static ToggleButton createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createToggleButton; public static ToggleButton createToggleButton(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the toggl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:11774,Modifiability,config,configured,11774,"that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; group - a toggle group to associate with the action; if present, a radio menu item will be returned; Returns:; a new MenuItem configured according to the action. createCheckMenuItem; public static MenuItem createCheckMenuItem(org.controlsfx.control.action.Action action); Create a menu item from an action that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckBox; public static CheckBox createCheckBox(org.controlsfx.control.action.Action action); Create a checkbox from an action.; This stores a reference to the action as a property of the checkbox. Parameters:; action - the action from which to construct the checkbox; Returns:; a new CheckBox configured according to the action. createToggleButtonWithGraphicOnly; public static ToggleButton createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createToggleButton; public static ToggleButton createToggleButton(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createButton; public static Button createButton(org.controlsfx.control.action.Action action); Create a button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to con",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:12785,Modifiability,config,configured,12785,":; a new CheckBox configured according to the action. createToggleButtonWithGraphicOnly; public static ToggleButton createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createToggleButton; public static ToggleButton createToggleButton(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createButton; public static Button createButton(org.controlsfx.control.action.Action action); Create a button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createButtonWithGraphicOnly; public static Button createButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createSelectableAction; public static org.controlsfx.control.action.Action createSelectableAction(ObservableValue<Boolean> property,; String name,; Node icon,; KeyCombination accelerator); Create an action with its Action.selectedProperty() bound to a specified property, with optional graphic and accelerator. Parameters:; property - the property to which the selected property of the action should be bound. The binding will be bidirectional if possible.; name - the name of the action (set as the text property); icon - an icon for the i",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:13180,Modifiability,config,configured,13180,"ggleButton; public static ToggleButton createToggleButton(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createButton; public static Button createButton(org.controlsfx.control.action.Action action); Create a button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createButtonWithGraphicOnly; public static Button createButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createSelectableAction; public static org.controlsfx.control.action.Action createSelectableAction(ObservableValue<Boolean> property,; String name,; Node icon,; KeyCombination accelerator); Create an action with its Action.selectedProperty() bound to a specified property, with optional graphic and accelerator. Parameters:; property - the property to which the selected property of the action should be bound. The binding will be bidirectional if possible.; name - the name of the action (set as the text property); icon - an icon for the icon (set as the graphic property); accelerator - an accelerator for the action; Returns:; a new Action initialized according to the provided parameters. createSelectableAction; public static org.controlsfx.control.action.Action createSelectableAction(ObservableValue<Boolean> property); Create an unnamed action with its Action.selectedProperty() bound to a specified property. Parameters:; prop",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:5043,Security,access,accessible,5043,"mbination accelerator);  ; static org.controlsfx.control.action.Action; createSeparator(). Create an action indicating that a separator should be added (e.g. static ToggleButton; createToggleButton(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing both the text and graphic if available. static ToggleButton; createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing only the graphic and not any text. static org.controlsfx.control.action.Action; getActionProperty(MenuItem item). Retrieve an Action stored within the properties of a menu item, or null if no action is found. static org.controlsfx.control.action.Action; getActionProperty(Node node). Retrieve an Action stored within the properties of a node, or null if no action is found. static List<org.controlsfx.control.action.Action>; getAnnotatedActions(Object obj). Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. static void; installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message). Install an optional info message to the action. static boolean; isSelectable(org.controlsfx.control.action.Action action). Specify that an Action has a meaningful 'selected' status. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element). Parse annotations relating to an action, updating the properties of the action. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu). Parse annotations relating to an action, updating the properties of the action with an optional base menu. static void; putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:6413,Security,hash,hashCode,6413,"ul 'selected' status. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element). Parse annotations relating to an action, updating the properties of the action. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu). Parse annotations relating to an action, updating the properties of the action with an optional base menu. static void; putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a Node, so that it may be retrieved later. static void; setSelectable(org.controlsfx.control.action.Action action,; boolean selectable). Set the selectable property for an action. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ActionTools; public ActionTools(). Method Details. getAnnotatedActions; public static List<org.controlsfx.control.action.Action> getAnnotatedActions(Object obj); Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod.; Any annotations associated with the actions will be parsed. Parameters:; obj - the object containing the action fields or methods; Returns:; a list of parsed and configured actions. parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element); Parse annotations relating to an action, updating the properties of the action. Parameters:; action - ; element - . parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu); Parse annotations relating to an action, updating the properties of",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:6684,Security,access,accessible,6684,"n,; AnnotatedElement element,; String baseMenu). Parse annotations relating to an action, updating the properties of the action with an optional base menu. static void; putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a Node, so that it may be retrieved later. static void; setSelectable(org.controlsfx.control.action.Action action,; boolean selectable). Set the selectable property for an action. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ActionTools; public ActionTools(). Method Details. getAnnotatedActions; public static List<org.controlsfx.control.action.Action> getAnnotatedActions(Object obj); Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod.; Any annotations associated with the actions will be parsed. Parameters:; obj - the object containing the action fields or methods; Returns:; a list of parsed and configured actions. parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element); Parse annotations relating to an action, updating the properties of the action. Parameters:; action - ; element - . parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu); Parse annotations relating to an action, updating the properties of the action with an optional base menu. Parameters:; action - the action to update; element - the annotated element (often a Field).; baseMenu - prepended to any ActionMenu actions. This makes it easier to insert items in sub-menus ; without needing to specify the full menu pa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/AutomateActions.html:473,Modifiability,extend,extends,473,". AutomateActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class AutomateActions. java.lang.Object; qupath.lib.gui.actions.AutomateActions. public class AutomateActions; extends Object; Default actions associated with QuPath's 'Automate' (scripting) menu. Since:; v0.5.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; HISTORY_SCRIPT;  ; final org.controlsfx.control.action.Action; HISTORY_SHOW;  ; final org.controlsfx.control.action.Action; SCRIPT_EDITOR;  ; final org.controlsfx.control.action.Action; SCRIPT_INTERPRETER;  . Constructor Summary; Constructors. Constructor; Description; AutomateActions(QuPathGUI qupath);  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SCRIPT_EDITOR; @ActionAccelerator(""shortcut+[""); @ActionConfig(""Action.Automate.scriptEditor""); @ActionIcon(SCRIPT_EDITOR); public final org.controlsfx.control.action.Action SCRIPT_EDITOR. SCRIPT_INTERPRETER; @ActionConfig(""Action.Automate.scriptInterpreter""); public final org.controlsfx.control.action.Action SCRIPT_INTERPRETER. HISTORY_SHOW; @ActionAccelerator(""shortcut+shift+w""); @ActionConfig(""Action.Automate.commandWorkflow""); public final org.controlsfx.control.action.Action HISTORY_SHOW. HISTORY_SCRIPT; @ActionConfig(""Action.Automate.commandScript""); public final org.controlsfx.control.action.Action HISTORY_SCRIPT. Constructor Details. AutomateActions; public AutomateActions(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/AutomateActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/AutomateActions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/AutomateActions.html:1037,Modifiability,inherit,inherited,1037,". AutomateActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class AutomateActions. java.lang.Object; qupath.lib.gui.actions.AutomateActions. public class AutomateActions; extends Object; Default actions associated with QuPath's 'Automate' (scripting) menu. Since:; v0.5.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; HISTORY_SCRIPT;  ; final org.controlsfx.control.action.Action; HISTORY_SHOW;  ; final org.controlsfx.control.action.Action; SCRIPT_EDITOR;  ; final org.controlsfx.control.action.Action; SCRIPT_INTERPRETER;  . Constructor Summary; Constructors. Constructor; Description; AutomateActions(QuPathGUI qupath);  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SCRIPT_EDITOR; @ActionAccelerator(""shortcut+[""); @ActionConfig(""Action.Automate.scriptEditor""); @ActionIcon(SCRIPT_EDITOR); public final org.controlsfx.control.action.Action SCRIPT_EDITOR. SCRIPT_INTERPRETER; @ActionConfig(""Action.Automate.scriptInterpreter""); public final org.controlsfx.control.action.Action SCRIPT_INTERPRETER. HISTORY_SHOW; @ActionAccelerator(""shortcut+shift+w""); @ActionConfig(""Action.Automate.commandWorkflow""); public final org.controlsfx.control.action.Action HISTORY_SHOW. HISTORY_SCRIPT; @ActionConfig(""Action.Automate.commandScript""); public final org.controlsfx.control.action.Action HISTORY_SCRIPT. Constructor Details. AutomateActions; public AutomateActions(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/AutomateActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/AutomateActions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/AutomateActions.html:1111,Security,hash,hashCode,1111,". AutomateActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class AutomateActions. java.lang.Object; qupath.lib.gui.actions.AutomateActions. public class AutomateActions; extends Object; Default actions associated with QuPath's 'Automate' (scripting) menu. Since:; v0.5.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; HISTORY_SCRIPT;  ; final org.controlsfx.control.action.Action; HISTORY_SHOW;  ; final org.controlsfx.control.action.Action; SCRIPT_EDITOR;  ; final org.controlsfx.control.action.Action; SCRIPT_INTERPRETER;  . Constructor Summary; Constructors. Constructor; Description; AutomateActions(QuPathGUI qupath);  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SCRIPT_EDITOR; @ActionAccelerator(""shortcut+[""); @ActionConfig(""Action.Automate.scriptEditor""); @ActionIcon(SCRIPT_EDITOR); public final org.controlsfx.control.action.Action SCRIPT_EDITOR. SCRIPT_INTERPRETER; @ActionConfig(""Action.Automate.scriptInterpreter""); public final org.controlsfx.control.action.Action SCRIPT_INTERPRETER. HISTORY_SHOW; @ActionAccelerator(""shortcut+shift+w""); @ActionConfig(""Action.Automate.commandWorkflow""); public final org.controlsfx.control.action.Action HISTORY_SHOW. HISTORY_SCRIPT; @ActionConfig(""Action.Automate.commandScript""); public final org.controlsfx.control.action.Action HISTORY_SCRIPT. Constructor Details. AutomateActions; public AutomateActions(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/AutomateActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/AutomateActions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/CommonActions.html:465,Modifiability,extend,extends,465,". CommonActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class CommonActions. java.lang.Object; qupath.lib.gui.actions.CommonActions. public class CommonActions; extends Object; Default actions associated with a specific QuPath instance.; These are useful for generating toolbars and context menus, ensuring that the same actions are used consistently. Since:; v0.5.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; BRIGHTNESS_CONTRAST;  ; final org.controlsfx.control.action.Action; CONVEX_POINTS;  ; final org.controlsfx.control.action.Action; HELP_VIEWER;  ; final org.controlsfx.control.action.Action; MEASURE_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; MEASURE_DETECTIONS;  ; final org.controlsfx.control.action.Action; MEASURE_GRID_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; MEASURE_GRID_TMA_CORES;  ; final org.controlsfx.control.action.Action; MEASURE_TMA;  ; final org.controlsfx.control.action.Action; PREFERENCES;  ; final org.controlsfx.control.action.Action; PROJECT_ADD_IMAGES;  ; final org.controlsfx.control.action.Action; PROJECT_NEW;  ; final org.controlsfx.control.action.Action; PROJECT_OPEN;  ; final org.controlsfx.control.action.Action; SHOW_ANALYSIS_PANE;  ; final org.controlsfx.control.action.Action; SHOW_LOG;  ; final org.controlsfx.control.action.Action; SHOW_OBJECT_DESCRIPTIONS;  ; final org.controlsfx.control.action.Action; SHOW_POINTS_DIALOG;  ; final org.controlsfx.control.action.Action; TMA_ADD_NOTE;  . Constructor Summary; Constructors. Constructor; Description; CommonActions(QuPathGUI qupath);  . Method Summary. All MethodsInstance MethodsC",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/CommonActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/CommonActions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/CommonActions.html:2145,Modifiability,inherit,inherited,2145," ; final org.controlsfx.control.action.Action; MEASURE_GRID_TMA_CORES;  ; final org.controlsfx.control.action.Action; MEASURE_TMA;  ; final org.controlsfx.control.action.Action; PREFERENCES;  ; final org.controlsfx.control.action.Action; PROJECT_ADD_IMAGES;  ; final org.controlsfx.control.action.Action; PROJECT_NEW;  ; final org.controlsfx.control.action.Action; PROJECT_OPEN;  ; final org.controlsfx.control.action.Action; SHOW_ANALYSIS_PANE;  ; final org.controlsfx.control.action.Action; SHOW_LOG;  ; final org.controlsfx.control.action.Action; SHOW_OBJECT_DESCRIPTIONS;  ; final org.controlsfx.control.action.Action; SHOW_POINTS_DIALOG;  ; final org.controlsfx.control.action.Action; TMA_ADD_NOTE;  . Constructor Summary; Constructors. Constructor; Description; CommonActions(QuPathGUI qupath);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; QuPathGUI; getQuPath(). Get the QuPath instance associated with these actions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROJECT_NEW; @ActionConfig(""Action.File.Project.createProject""); public final org.controlsfx.control.action.Action PROJECT_NEW. PROJECT_OPEN; @ActionConfig(""Action.File.Project.openProject""); public final org.controlsfx.control.action.Action PROJECT_OPEN. PROJECT_ADD_IMAGES; @ActionConfig(""Action.File.Project.openProject""); public final org.controlsfx.control.action.Action PROJECT_ADD_IMAGES. BRIGHTNESS_CONTRAST; @ActionIcon(CONTRAST); @ActionAccelerator(""shift+c""); @ActionConfig(""CommonActions.showBrightnessContrast""); public final org.controlsfx.control.action.Action BRIGHTNESS_CONTRAST. SHOW_POINTS_DIALOG; @ActionIcon(POINTS_TOOL); @ActionConfig(""CommonActions.showCountingTool""); public final org.controlsfx.control.action.Action SHOW_POINTS_DIALOG. TMA_ADD_NOTE; @ActionConfig(""CommonActions.addTMANote""); public final org.controlsfx.control.action.A",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/CommonActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/CommonActions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/CommonActions.html:2219,Security,hash,hashCode,2219,"; final org.controlsfx.control.action.Action; MEASURE_TMA;  ; final org.controlsfx.control.action.Action; PREFERENCES;  ; final org.controlsfx.control.action.Action; PROJECT_ADD_IMAGES;  ; final org.controlsfx.control.action.Action; PROJECT_NEW;  ; final org.controlsfx.control.action.Action; PROJECT_OPEN;  ; final org.controlsfx.control.action.Action; SHOW_ANALYSIS_PANE;  ; final org.controlsfx.control.action.Action; SHOW_LOG;  ; final org.controlsfx.control.action.Action; SHOW_OBJECT_DESCRIPTIONS;  ; final org.controlsfx.control.action.Action; SHOW_POINTS_DIALOG;  ; final org.controlsfx.control.action.Action; TMA_ADD_NOTE;  . Constructor Summary; Constructors. Constructor; Description; CommonActions(QuPathGUI qupath);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; QuPathGUI; getQuPath(). Get the QuPath instance associated with these actions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROJECT_NEW; @ActionConfig(""Action.File.Project.createProject""); public final org.controlsfx.control.action.Action PROJECT_NEW. PROJECT_OPEN; @ActionConfig(""Action.File.Project.openProject""); public final org.controlsfx.control.action.Action PROJECT_OPEN. PROJECT_ADD_IMAGES; @ActionConfig(""Action.File.Project.openProject""); public final org.controlsfx.control.action.Action PROJECT_ADD_IMAGES. BRIGHTNESS_CONTRAST; @ActionIcon(CONTRAST); @ActionAccelerator(""shift+c""); @ActionConfig(""CommonActions.showBrightnessContrast""); public final org.controlsfx.control.action.Action BRIGHTNESS_CONTRAST. SHOW_POINTS_DIALOG; @ActionIcon(POINTS_TOOL); @ActionConfig(""CommonActions.showCountingTool""); public final org.controlsfx.control.action.Action SHOW_POINTS_DIALOG. TMA_ADD_NOTE; @ActionConfig(""CommonActions.addTMANote""); public final org.controlsfx.control.action.Action TMA_ADD_NOTE. CONVEX_POINTS; @ActionConfig(""CommonActions.showPoin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/CommonActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/CommonActions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1218,Availability,error,error,1218,"r; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; in",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1248,Availability,error,error,1248,"; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1300,Availability,error,error,1300," | ; Method. SEARCH. Package qupath.lib.gui.actions; Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; inf",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1342,Availability,error,error,1342,"Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1406,Availability,error,error,1406,"ions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. R",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1451,Availability,error,error,1451,"bject; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only prop",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1484,Availability,error,errors,1484,"bject; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only prop",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1512,Availability,error,error,1512," the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1559,Availability,error,error,1559,"Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning me",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1594,Availability,error,error,1594,"er>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(Stri",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1671,Availability,error,error,1671,"with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static tex",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5052,Availability,error,error,5052," count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property contai",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5085,Availability,error,error,5085," count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property contai",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5132,Availability,error,error,5132," count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property contai",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5179,Availability,error,error,5179,"count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5212,Availability,error,error,5212,"count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5242,Availability,error,error,5242,"count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5306,Availability,error,error,5306,"e. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the mes",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5339,Availability,error,error,5339,"e. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the mes",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5416,Availability,error,error,5416,"e. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the mes",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5486,Availability,error,error,5486,"text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the message. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5519,Availability,error,error,5519,"text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the message. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5561,Availability,error,error,5561,"text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the message. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5647,Availability,error,error,5647,"text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the message. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5680,Availability,error,error,5680,"text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the message. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5725,Availability,error,error,5725,"text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the message. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5758,Availability,error,errors,5758,"text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the message. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:488,Integrability,message,message,488,". InfoMessage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(Strin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:772,Integrability,message,message,772,". InfoMessage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(Strin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:914,Integrability,message,message,914,". InfoMessage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(Strin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1254,Integrability,message,message,1254,"; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1348,Integrability,message,message,1348,"Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1457,Integrability,message,message,1457,"bject; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only prop",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1565,Integrability,message,message,1565,"Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning me",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1677,Integrability,message,message,1677,"with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static tex",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1743,Integrability,message,message,1743," property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue cou",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1835,Integrability,message,message,1835," and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1875,Integrability,message,message,1875,"um ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1945,Integrability,message,message,1945,"tyling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> tex",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2044,Integrability,message,message,2044,"hod; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class jav",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2158,Integrability,message,message,2158,"ted with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Propert",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2185,Integrability,message,messages,2185,"ted with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Propert",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2273,Integrability,message,message,2273,"h static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the messag",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2390,Integrability,message,message,2390,"tic InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only propert",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2486,Integrability,message,message,2486,"count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2559,Integrability,message,message,2559,"or message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<St",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2656,Integrability,message,message,2656,"te an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMes",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2769,Integrability,message,message,2769,". InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; pu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2882,Integrability,message,message,2882,"ssage. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2997,Integrability,message,message,2997,"ring text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String t",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:3260,Integrability,message,message,3260,"rvableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:3598,Integrability,message,message,3598,"ng message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:3712,Integrability,message,message,3712,"count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Para",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:3890,Integrability,message,message,3890,"ableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:4039,Integrability,message,message,4039,"unt. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Param",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:4207,Integrability,message,message,4207,"; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. er",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:4234,Integrability,message,messages,4234,"; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. er",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:4368,Integrability,message,message,4368,"ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:4483,Integrability,message,message,4483,"so:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; t",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:4662,Integrability,message,message,4662,"meters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Paramet",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:4816,Integrability,message,message,4816,"c InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:4972,Integrability,message,message,4972,"urns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5138,Integrability,message,message,5138," count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property contai",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5248,Integrability,message,message,5248,"count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5422,Integrability,message,message,5422,"e. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the mes",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5567,Integrability,message,message,5567,"text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the message. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5731,Integrability,message,message,5731,"text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the message. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5893,Integrability,message,message,5893,"text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the message. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5985,Integrability,message,message,5985,"text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the message. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:6247,Integrability,message,message,6247,"text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the message. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:6371,Integrability,message,message,6371,"text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the message. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:457,Modifiability,extend,extends,457,". InfoMessage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(Strin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:3027,Modifiability,inherit,inherited,3027,"ormation message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an informati",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:3101,Security,hash,hashCode,3101,"ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html:762,Integrability,message,message,762,". InfoMessage.MessageType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.actions; Enum Class InfoMessage.MessageType. java.lang.Object; java.lang.Enum<InfoMessage.MessageType>; qupath.lib.gui.actions.InfoMessage.MessageType. All Implemented Interfaces:; Serializable, Comparable<InfoMessage.MessageType>, Constable. Enclosing class:; InfoMessage. public static enum InfoMessage.MessageType; extends Enum<InfoMessage.MessageType>; The type of message, which can be used for styling. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ERROR. Error or exception. INFO. Information only. WARN. Warning. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static InfoMessage.MessageType; valueOf(String name). Returns the enum constant of this class with the specified name. static InfoMessage.MessageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. INFO; public static final InfoMessage.MessageType INFO; Information only. WARN; public static final InfoMessage.MessageType WARN; Warning. ERROR; public static final InfoMessage.MessageType ERROR; Error or exception. Method Details. values; public static InfoMessage.MessageType[] values(); Returns an array co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html:839,Integrability,interface,interfaces,839,". InfoMessage.MessageType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.actions; Enum Class InfoMessage.MessageType. java.lang.Object; java.lang.Enum<InfoMessage.MessageType>; qupath.lib.gui.actions.InfoMessage.MessageType. All Implemented Interfaces:; Serializable, Comparable<InfoMessage.MessageType>, Constable. Enclosing class:; InfoMessage. public static enum InfoMessage.MessageType; extends Enum<InfoMessage.MessageType>; The type of message, which can be used for styling. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ERROR. Error or exception. INFO. Information only. WARN. Warning. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static InfoMessage.MessageType; valueOf(String name). Returns the enum constant of this class with the specified name. static InfoMessage.MessageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. INFO; public static final InfoMessage.MessageType INFO; Information only. WARN; public static final InfoMessage.MessageType WARN; Warning. ERROR; public static final InfoMessage.MessageType ERROR; Error or exception. Method Details. values; public static InfoMessage.MessageType[] values(); Returns an array co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html:711,Modifiability,extend,extends,711,". InfoMessage.MessageType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.actions; Enum Class InfoMessage.MessageType. java.lang.Object; java.lang.Enum<InfoMessage.MessageType>; qupath.lib.gui.actions.InfoMessage.MessageType. All Implemented Interfaces:; Serializable, Comparable<InfoMessage.MessageType>, Constable. Enclosing class:; InfoMessage. public static enum InfoMessage.MessageType; extends Enum<InfoMessage.MessageType>; The type of message, which can be used for styling. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ERROR. Error or exception. INFO. Information only. WARN. Warning. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static InfoMessage.MessageType; valueOf(String name). Returns the enum constant of this class with the specified name. static InfoMessage.MessageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. INFO; public static final InfoMessage.MessageType INFO; Information only. WARN; public static final InfoMessage.MessageType WARN; Warning. ERROR; public static final InfoMessage.MessageType ERROR; Error or exception. Method Details. values; public static InfoMessage.MessageType[] values(); Returns an array co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html:850,Modifiability,inherit,inherited,850,". InfoMessage.MessageType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.actions; Enum Class InfoMessage.MessageType. java.lang.Object; java.lang.Enum<InfoMessage.MessageType>; qupath.lib.gui.actions.InfoMessage.MessageType. All Implemented Interfaces:; Serializable, Comparable<InfoMessage.MessageType>, Constable. Enclosing class:; InfoMessage. public static enum InfoMessage.MessageType; extends Enum<InfoMessage.MessageType>; The type of message, which can be used for styling. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ERROR. Error or exception. INFO. Information only. WARN. Warning. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static InfoMessage.MessageType; valueOf(String name). Returns the enum constant of this class with the specified name. static InfoMessage.MessageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. INFO; public static final InfoMessage.MessageType INFO; Information only. WARN; public static final InfoMessage.MessageType WARN; Warning. ERROR; public static final InfoMessage.MessageType ERROR; Error or exception. Method Details. values; public static InfoMessage.MessageType[] values(); Returns an array co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html:903,Modifiability,extend,extends,903,". InfoMessage.MessageType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.actions; Enum Class InfoMessage.MessageType. java.lang.Object; java.lang.Enum<InfoMessage.MessageType>; qupath.lib.gui.actions.InfoMessage.MessageType. All Implemented Interfaces:; Serializable, Comparable<InfoMessage.MessageType>, Constable. Enclosing class:; InfoMessage. public static enum InfoMessage.MessageType; extends Enum<InfoMessage.MessageType>; The type of message, which can be used for styling. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ERROR. Error or exception. INFO. Information only. WARN. Warning. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static InfoMessage.MessageType; valueOf(String name). Returns the enum constant of this class with the specified name. static InfoMessage.MessageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. INFO; public static final InfoMessage.MessageType INFO; Information only. WARN; public static final InfoMessage.MessageType WARN; Warning. ERROR; public static final InfoMessage.MessageType ERROR; Error or exception. Method Details. values; public static InfoMessage.MessageType[] values(); Returns an array co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html:1419,Modifiability,inherit,inherited,1419,"ssageType. java.lang.Object; java.lang.Enum<InfoMessage.MessageType>; qupath.lib.gui.actions.InfoMessage.MessageType. All Implemented Interfaces:; Serializable, Comparable<InfoMessage.MessageType>, Constable. Enclosing class:; InfoMessage. public static enum InfoMessage.MessageType; extends Enum<InfoMessage.MessageType>; The type of message, which can be used for styling. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ERROR. Error or exception. INFO. Information only. WARN. Warning. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static InfoMessage.MessageType; valueOf(String name). Returns the enum constant of this class with the specified name. static InfoMessage.MessageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. INFO; public static final InfoMessage.MessageType INFO; Information only. WARN; public static final InfoMessage.MessageType WARN; Warning. ERROR; public static final InfoMessage.MessageType ERROR; Error or exception. Method Details. values; public static InfoMessage.MessageType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static InfoMessage.MessageType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace char",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html:1582,Modifiability,inherit,inherited,1582,"mparable<InfoMessage.MessageType>, Constable. Enclosing class:; InfoMessage. public static enum InfoMessage.MessageType; extends Enum<InfoMessage.MessageType>; The type of message, which can be used for styling. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ERROR. Error or exception. INFO. Information only. WARN. Warning. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static InfoMessage.MessageType; valueOf(String name). Returns the enum constant of this class with the specified name. static InfoMessage.MessageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. INFO; public static final InfoMessage.MessageType INFO; Information only. WARN; public static final InfoMessage.MessageType WARN; Warning. ERROR; public static final InfoMessage.MessageType ERROR; Error or exception. Method Details. values; public static InfoMessage.MessageType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static InfoMessage.MessageType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; Ille",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html:1530,Security,hash,hashCode,1530,".actions.InfoMessage.MessageType. All Implemented Interfaces:; Serializable, Comparable<InfoMessage.MessageType>, Constable. Enclosing class:; InfoMessage. public static enum InfoMessage.MessageType; extends Enum<InfoMessage.MessageType>; The type of message, which can be used for styling. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ERROR. Error or exception. INFO. Information only. WARN. Warning. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static InfoMessage.MessageType; valueOf(String name). Returns the enum constant of this class with the specified name. static InfoMessage.MessageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. INFO; public static final InfoMessage.MessageType INFO; Information only. WARN; public static final InfoMessage.MessageType WARN; Warning. ERROR; public static final InfoMessage.MessageType ERROR; Error or exception. Method Details. values; public static InfoMessage.MessageType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static InfoMessage.MessageType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to b",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/OverlayActions.html:469,Modifiability,extend,extends,469,. OverlayActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class OverlayActions. java.lang.Object; qupath.lib.gui.actions.OverlayActions. public class OverlayActions; extends Object; Actions that interact with OverlayOptions.; These can be used as a basis for creating UI controls that operate on the same options. Since:; v0.5.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; FILL_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; FILL_DETECTIONS;  ; final org.controlsfx.control.action.Action; GRID_SPACING;  ; final org.controlsfx.control.action.Action; SHOW_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; SHOW_CELL_BOUNDARIES;  ; final org.controlsfx.control.action.Action; SHOW_CELL_BOUNDARIES_AND_NUCLEI;  ; final org.controlsfx.control.action.Action; SHOW_CELL_CENTROIDS;  ; final org.controlsfx.control.action.Action; SHOW_CELL_NUCLEI;  ; final org.controlsfx.control.action.Action; SHOW_CONNECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_DETECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_GRID;  ; final org.controlsfx.control.action.Action; SHOW_NAMES;  ; final org.controlsfx.control.action.Action; SHOW_PIXEL_CLASSIFICATION;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID_LABELS;  . Constructor Summary; Constructors. Constructor; Description; OverlayActions(OverlayOptions overlayOptions);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OverlayOptions; getOverlayOptions(). Get the overlay options controlled by these a,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/OverlayActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/OverlayActions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/OverlayActions.html:2017,Modifiability,inherit,inherited,2017,"LL_BOUNDARIES;  ; final org.controlsfx.control.action.Action; SHOW_CELL_BOUNDARIES_AND_NUCLEI;  ; final org.controlsfx.control.action.Action; SHOW_CELL_CENTROIDS;  ; final org.controlsfx.control.action.Action; SHOW_CELL_NUCLEI;  ; final org.controlsfx.control.action.Action; SHOW_CONNECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_DETECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_GRID;  ; final org.controlsfx.control.action.Action; SHOW_NAMES;  ; final org.controlsfx.control.action.Action; SHOW_PIXEL_CLASSIFICATION;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID_LABELS;  . Constructor Summary; Constructors. Constructor; Description; OverlayActions(OverlayOptions overlayOptions);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OverlayOptions; getOverlayOptions(). Get the overlay options controlled by these actions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SHOW_GRID; @ActionIcon(GRID); @ActionAccelerator(""shift+g""); @ActionConfig(""OverlayActions.showCountingGrid""); public final org.controlsfx.control.action.Action SHOW_GRID. GRID_SPACING; @ActionConfig(""OverlayActions.setCountingGridSpacing""); public final org.controlsfx.control.action.Action GRID_SPACING. SHOW_PIXEL_CLASSIFICATION; @ActionIcon(PIXEL_CLASSIFICATION); @ActionAccelerator(""c""); @ActionConfig(""OverlayActions.showPixelOverlay""); public final org.controlsfx.control.action.Action SHOW_PIXEL_CLASSIFICATION. SHOW_CELL_BOUNDARIES; @ActionIcon(CELL_ONLY); @ActionConfig(""OverlayActions.showCellBoundaries""); public final org.controlsfx.control.action.Action SHOW_CELL_BOUNDARIES. SHOW_CELL_NUCLEI; @ActionIcon(NUCLEI_ONLY); @ActionConfig(""OverlayActions.showCellNuclei""); public final org.controlsfx.control.action.Action SHOW_CELL_NUCLEI. SHOW_CELL_BOU",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/OverlayActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/OverlayActions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/OverlayActions.html:2091,Security,hash,hashCode,2091,"BOUNDARIES_AND_NUCLEI;  ; final org.controlsfx.control.action.Action; SHOW_CELL_CENTROIDS;  ; final org.controlsfx.control.action.Action; SHOW_CELL_NUCLEI;  ; final org.controlsfx.control.action.Action; SHOW_CONNECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_DETECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_GRID;  ; final org.controlsfx.control.action.Action; SHOW_NAMES;  ; final org.controlsfx.control.action.Action; SHOW_PIXEL_CLASSIFICATION;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID_LABELS;  . Constructor Summary; Constructors. Constructor; Description; OverlayActions(OverlayOptions overlayOptions);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OverlayOptions; getOverlayOptions(). Get the overlay options controlled by these actions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SHOW_GRID; @ActionIcon(GRID); @ActionAccelerator(""shift+g""); @ActionConfig(""OverlayActions.showCountingGrid""); public final org.controlsfx.control.action.Action SHOW_GRID. GRID_SPACING; @ActionConfig(""OverlayActions.setCountingGridSpacing""); public final org.controlsfx.control.action.Action GRID_SPACING. SHOW_PIXEL_CLASSIFICATION; @ActionIcon(PIXEL_CLASSIFICATION); @ActionAccelerator(""c""); @ActionConfig(""OverlayActions.showPixelOverlay""); public final org.controlsfx.control.action.Action SHOW_PIXEL_CLASSIFICATION. SHOW_CELL_BOUNDARIES; @ActionIcon(CELL_ONLY); @ActionConfig(""OverlayActions.showCellBoundaries""); public final org.controlsfx.control.action.Action SHOW_CELL_BOUNDARIES. SHOW_CELL_NUCLEI; @ActionIcon(NUCLEI_ONLY); @ActionConfig(""OverlayActions.showCellNuclei""); public final org.controlsfx.control.action.Action SHOW_CELL_NUCLEI. SHOW_CELL_BOUNDARIES_AND_NUCLEI; @ActionIcon(CELL_NUCLEI_BOTH); @ActionConfig(""Overla",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/OverlayActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/OverlayActions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/package-summary.html:753,Integrability,interface,interface,753,". qupath.lib.gui.actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.actions. package qupath.lib.gui.actions. Classes to manage Actions.; ; This encapsulate QuPath's functionality in a way that is separate from specific UI elements.; It's possible to then generate (for example) one or more menu items and buttons for each action, ; while binding the text, graphic and tooltip to the data stored in the action. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. All Classes and InterfacesClassesEnum Classes. Class; Description; ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu. CommonActions. Default actions associated with a specific QuPath instance. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. OverlayActions. Actions that interact with OverlayOptions. ViewerActions. Actions that interact with one or more viewers. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/package-summary.html:1355,Integrability,message,message,1355,". qupath.lib.gui.actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.actions. package qupath.lib.gui.actions. Classes to manage Actions.; ; This encapsulate QuPath's functionality in a way that is separate from specific UI elements.; It's possible to then generate (for example) one or more menu items and buttons for each action, ; while binding the text, graphic and tooltip to the data stored in the action. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. All Classes and InterfacesClassesEnum Classes. Class; Description; ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu. CommonActions. Default actions associated with a specific QuPath instance. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. OverlayActions. Actions that interact with OverlayOptions. ViewerActions. Actions that interact with one or more viewers. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/package-summary.html:1434,Integrability,message,message,1434,". qupath.lib.gui.actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.actions. package qupath.lib.gui.actions. Classes to manage Actions.; ; This encapsulate QuPath's functionality in a way that is separate from specific UI elements.; It's possible to then generate (for example) one or more menu items and buttons for each action, ; while binding the text, graphic and tooltip to the data stored in the action. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. All Classes and InterfacesClassesEnum Classes. Class; Description; ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu. CommonActions. Default actions associated with a specific QuPath instance. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. OverlayActions. Actions that interact with OverlayOptions. ViewerActions. Actions that interact with one or more viewers. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/package-summary.html:832,Modifiability,config,configure,832,". qupath.lib.gui.actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.actions. package qupath.lib.gui.actions. Classes to manage Actions.; ; This encapsulate QuPath's functionality in a way that is separate from specific UI elements.; It's possible to then generate (for example) one or more menu items and buttons for each action, ; while binding the text, graphic and tooltip to the data stored in the action. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. All Classes and InterfacesClassesEnum Classes. Class; Description; ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu. CommonActions. Default actions associated with a specific QuPath instance. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. OverlayActions. Actions that interact with OverlayOptions. ViewerActions. Actions that interact with one or more viewers. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/package-summary.html:1060,Modifiability,config,configuring,1060,". qupath.lib.gui.actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.actions. package qupath.lib.gui.actions. Classes to manage Actions.; ; This encapsulate QuPath's functionality in a way that is separate from specific UI elements.; It's possible to then generate (for example) one or more menu items and buttons for each action, ; while binding the text, graphic and tooltip to the data stored in the action. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. All Classes and InterfacesClassesEnum Classes. Class; Description; ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu. CommonActions. Default actions associated with a specific QuPath instance. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. OverlayActions. Actions that interact with OverlayOptions. ViewerActions. Actions that interact with one or more viewers. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html:2635,Integrability,synchroniz,synchronize,2635,"erManager);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ViewerManager; getViewerManager();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ZOOM_TO_FIT; @ActionIcon(ZOOM_TO_FIT); @ActionConfig(""ViewerActions.zoomToFit""); public final org.controlsfx.control.action.Action ZOOM_TO_FIT. SHOW_OVERVIEW; @ActionIcon(OVERVIEW); @ActionConfig(""ViewerActions.overview""); public final org.controlsfx.control.action.Action SHOW_OVERVIEW. SHOW_LOCATION; @ActionIcon(LOCATION); @ActionConfig(""ViewerActions.location""); public final org.controlsfx.control.action.Action SHOW_LOCATION. SHOW_SCALEBAR; @ActionIcon(SHOW_SCALEBAR); @ActionConfig(""ViewerActions.scalebar""); public final org.controlsfx.control.action.Action SHOW_SCALEBAR. TOGGLE_SYNCHRONIZE_VIEWERS; @ActionAccelerator(""shortcut+alt+s""); @ActionConfig(""ViewerActions.synchronize""); public final org.controlsfx.control.action.Action TOGGLE_SYNCHRONIZE_VIEWERS. VIEWER_GRID_1x1; @ActionConfig(""ViewerActions.grid1x1""); @ActionIcon(VIEWER_GRID_1x1); public final org.controlsfx.control.action.Action VIEWER_GRID_1x1. VIEWER_GRID_1x2; @ActionConfig(""ViewerActions.grid1x2""); @ActionIcon(VIEWER_GRID_1x2); public final org.controlsfx.control.action.Action VIEWER_GRID_1x2. VIEWER_GRID_2x1; @ActionConfig(""ViewerActions.grid2x1""); @ActionIcon(VIEWER_GRID_2x1); public final org.controlsfx.control.action.Action VIEWER_GRID_2x1. VIEWER_GRID_2x2; @ActionConfig(""ViewerActions.grid2x2""); @ActionIcon(VIEWER_GRID_2x2); public final org.controlsfx.control.action.Action VIEWER_GRID_2x2. VIEWER_GRID_3x3; @ActionConfig(""ViewerActions.grid3x3""); @ActionIcon(VIEWER_GRID_3x3); public final org.controlsfx.control.action.Action VIEWER_GRID_3x3. MATCH_VIEWER_RESOLUTIONS; @ActionConfig(""ViewerActions.matchResolutions""); public final org.controlsfx.control.action.Action MATCH_VIEWER_RESOLUTIONS. DE",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ViewerActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html:465,Modifiability,extend,extends,465,". ViewerActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class ViewerActions. java.lang.Object; qupath.lib.gui.actions.ViewerActions. public class ViewerActions; extends Object; Actions that interact with one or more viewers.; These can be used as a basis for creating UI controls that operate on the same options. Since:; v0.5.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; ATTACH_VIEWER;  ; final org.controlsfx.control.action.Action; DETACH_VIEWER;  ; final org.controlsfx.control.action.Action; MATCH_VIEWER_RESOLUTIONS;  ; final org.controlsfx.control.action.Action; SHOW_LOCATION;  ; final org.controlsfx.control.action.Action; SHOW_OVERVIEW;  ; final org.controlsfx.control.action.Action; SHOW_SCALEBAR;  ; final org.controlsfx.control.action.Action; TOGGLE_SYNCHRONIZE_VIEWERS;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_1x1;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_1x2;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_2x1;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_2x2;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_3x3;  ; final org.controlsfx.control.action.Action; ZOOM_TO_FIT;  . Constructor Summary; Constructors. Constructor; Description; ViewerActions(ViewerManager viewerManager);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ViewerManager; getViewerManager();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ZOOM_TO_FIT; @ActionIcon(ZOOM_TO_FIT); @Ac",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ViewerActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html:1813,Modifiability,inherit,inherited,1813,"ion; DETACH_VIEWER;  ; final org.controlsfx.control.action.Action; MATCH_VIEWER_RESOLUTIONS;  ; final org.controlsfx.control.action.Action; SHOW_LOCATION;  ; final org.controlsfx.control.action.Action; SHOW_OVERVIEW;  ; final org.controlsfx.control.action.Action; SHOW_SCALEBAR;  ; final org.controlsfx.control.action.Action; TOGGLE_SYNCHRONIZE_VIEWERS;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_1x1;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_1x2;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_2x1;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_2x2;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_3x3;  ; final org.controlsfx.control.action.Action; ZOOM_TO_FIT;  . Constructor Summary; Constructors. Constructor; Description; ViewerActions(ViewerManager viewerManager);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ViewerManager; getViewerManager();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ZOOM_TO_FIT; @ActionIcon(ZOOM_TO_FIT); @ActionConfig(""ViewerActions.zoomToFit""); public final org.controlsfx.control.action.Action ZOOM_TO_FIT. SHOW_OVERVIEW; @ActionIcon(OVERVIEW); @ActionConfig(""ViewerActions.overview""); public final org.controlsfx.control.action.Action SHOW_OVERVIEW. SHOW_LOCATION; @ActionIcon(LOCATION); @ActionConfig(""ViewerActions.location""); public final org.controlsfx.control.action.Action SHOW_LOCATION. SHOW_SCALEBAR; @ActionIcon(SHOW_SCALEBAR); @ActionConfig(""ViewerActions.scalebar""); public final org.controlsfx.control.action.Action SHOW_SCALEBAR. TOGGLE_SYNCHRONIZE_VIEWERS; @ActionAccelerator(""shortcut+alt+s""); @ActionConfig(""ViewerActions.synchronize""); public final org.controlsfx.control.action.Action TOGGLE_SYNCHRONIZE_VIEWERS. VIEWER_GRID_1x1; @ActionConfig(""ViewerActions.grid1x1""); @ActionIcon(VIEWER_GRID_1x1); public ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ViewerActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html:1887,Security,hash,hashCode,1887,"_VIEWER_RESOLUTIONS;  ; final org.controlsfx.control.action.Action; SHOW_LOCATION;  ; final org.controlsfx.control.action.Action; SHOW_OVERVIEW;  ; final org.controlsfx.control.action.Action; SHOW_SCALEBAR;  ; final org.controlsfx.control.action.Action; TOGGLE_SYNCHRONIZE_VIEWERS;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_1x1;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_1x2;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_2x1;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_2x2;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_3x3;  ; final org.controlsfx.control.action.Action; ZOOM_TO_FIT;  . Constructor Summary; Constructors. Constructor; Description; ViewerActions(ViewerManager viewerManager);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ViewerManager; getViewerManager();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ZOOM_TO_FIT; @ActionIcon(ZOOM_TO_FIT); @ActionConfig(""ViewerActions.zoomToFit""); public final org.controlsfx.control.action.Action ZOOM_TO_FIT. SHOW_OVERVIEW; @ActionIcon(OVERVIEW); @ActionConfig(""ViewerActions.overview""); public final org.controlsfx.control.action.Action SHOW_OVERVIEW. SHOW_LOCATION; @ActionIcon(LOCATION); @ActionConfig(""ViewerActions.location""); public final org.controlsfx.control.action.Action SHOW_LOCATION. SHOW_SCALEBAR; @ActionIcon(SHOW_SCALEBAR); @ActionConfig(""ViewerActions.scalebar""); public final org.controlsfx.control.action.Action SHOW_SCALEBAR. TOGGLE_SYNCHRONIZE_VIEWERS; @ActionAccelerator(""shortcut+alt+s""); @ActionConfig(""ViewerActions.synchronize""); public final org.controlsfx.control.action.Action TOGGLE_SYNCHRONIZE_VIEWERS. VIEWER_GRID_1x1; @ActionConfig(""ViewerActions.grid1x1""); @ActionIcon(VIEWER_GRID_1x1); public final org.controlsfx.control.action.Action VIEWER_GRID_1x1. VIEWER_GRID_",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/actions/ViewerActions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:3829,Deployability,update,updateChart,3829," object. <T extends Number>Charts.BarChartBuilder; series(String name,; Collection<? extends String> x,; Collection<T> y). Create a bar chart using collections of numeric values. <T> Charts.BarChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun). Plot values extracted from objects within a specified collection. Charts.BarChartBuilder; series(String name,; Collection<XYChart.Data<String,Number>> data). Create a bar chart from existing data plots. <T extends Number>Charts.BarChartBuilder; series(String name,; Map<String,T> data). Create a bar chart using a map of String values and associated numeric values. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.BarChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.BarChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(BarChart<String,Number> chart). Method that applies properties of this builder to the chart. Charts.BarChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.BarChartBuilder; width(double width). Set the preferred width of the chart. Charts.BarChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.BarChartBuilder; xLabel(String label). Specify the x-axis label. Charts.BarChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis. Charts.BarChartBuilder; yAxisMin(double lowerBound). Set the lower bound for the y-axis. Charts.BarChartBuilder; yAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the y-axis. Charts.BarChartBuilder; yLabel(String label). Specify the y-axis label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. xLabel; protected String xLabel. yLabel; protected St",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:7611,Deployability,update,updateChart,7611,"g collections String values and associated numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - x-values; y - y-values; extra - array of values to associate with each data point; should be the same length as x and y; Returns:; this builder. series; public <T> Charts.BarChartBuilder series(String name,; String[] x,; double[] y,; List<T> extra); Create a bar chart using collections of String values and associated numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - x-values; y - y-values; extra - list of values to associate with each data point; should be the same length as x and y; Returns:; this builder. series; public Charts.BarChartBuilder series(String name,; Collection<XYChart.Data<String,Number>> data); Create a bar chart from existing data plots. Parameters:; name - ; data - the data points to plot; Returns:; this builder. updateChart; protected void updateChart(BarChart<String,Number> chart); Method that applies properties of this builder to the chart.; Each subclass should call the method in the parent class to ensure its properties ; have been applied. Parameters:; chart - . classifications; public Charts.BarChartBuilder classifications(Collection<? extends PathObject> pathObjects); Plot two measurements against one another for the specified objects. Parameters:; pathObjects - the objects to plot; Returns:; this builder. createNewChart; protected BarChart<String,Number> createNewChart(Axis<String> xAxis,; Axis<Number> yAxis). getThis; protected Charts.BarChartBuilder getThis(). yAxisMin; public Charts.BarChartBuilder yAxisMin(double lowerBound); Set the lower bound for the y-axis. Parameters:; lowerBound - ; Returns:; this builder. yAxisMax; public Charts.BarChartBuilder yAxisMax(double upperBound); Set the upper bound for the y-axis. Parameters:; upperBound - ; Returns:; this builder. yAxisRange; public Charts.BarChartBuilder yAxisRange(double lowerBound,; double u",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:7639,Deployability,update,updateChart,7639,"g collections String values and associated numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - x-values; y - y-values; extra - array of values to associate with each data point; should be the same length as x and y; Returns:; this builder. series; public <T> Charts.BarChartBuilder series(String name,; String[] x,; double[] y,; List<T> extra); Create a bar chart using collections of String values and associated numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - x-values; y - y-values; extra - list of values to associate with each data point; should be the same length as x and y; Returns:; this builder. series; public Charts.BarChartBuilder series(String name,; Collection<XYChart.Data<String,Number>> data); Create a bar chart from existing data plots. Parameters:; name - ; data - the data points to plot; Returns:; this builder. updateChart; protected void updateChart(BarChart<String,Number> chart); Method that applies properties of this builder to the chart.; Each subclass should call the method in the parent class to ensure its properties ; have been applied. Parameters:; chart - . classifications; public Charts.BarChartBuilder classifications(Collection<? extends PathObject> pathObjects); Plot two measurements against one another for the specified objects. Parameters:; pathObjects - the objects to plot; Returns:; this builder. createNewChart; protected BarChart<String,Number> createNewChart(Axis<String> xAxis,; Axis<Number> yAxis). getThis; protected Charts.BarChartBuilder getThis(). yAxisMin; public Charts.BarChartBuilder yAxisMin(double lowerBound); Set the lower bound for the y-axis. Parameters:; lowerBound - ; Returns:; this builder. yAxisMax; public Charts.BarChartBuilder yAxisMax(double upperBound); Set the upper bound for the y-axis. Parameters:; upperBound - ; Returns:; this builder. yAxisRange; public Charts.BarChartBuilder yAxisRange(double lowerBound,; double u",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:532,Modifiability,extend,extends,532,". Charts.BarChartBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class Charts.BarChartBuilder. java.lang.Object; qupath.lib.gui.charts.Charts.BarChartBuilder. Enclosing class:; Charts. public static class Charts.BarChartBuilder; extends Object; Builder for creating scatter charts. Field Summary; Fields. Modifier and Type; Field; Description; protected double; height;  ; protected ImageData<?>; imageData;  ; protected Side; legendSide;  ; protected boolean; legendVisible;  ; protected double; markerOpacity;  ; protected String; title;  ; protected QuPathViewer; viewer;  ; protected double; width;  ; protected String; xLabel;  ; protected String; yLabel;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BarChart<String,Number>; build(). Build a chart according to the specified parameters. Charts.BarChartBuilder; classifications(Collection<? extends PathObject> pathObjects). Plot two measurements against one another for the specified objects. protected BarChart<String,Number>; createNewChart();  ; protected BarChart<String,Number>; createNewChart(Axis<String> xAxis,; Axis<Number> yAxis);  ; protected String; getDefaultWindowTitle(). Get a window title to use for charts of this kind, assuming the user has not ; specified one. protected Charts.BarChartBuilder; getThis();  ; Charts.BarChartBuilder; height(double height). Set the preferred height of the chart. Charts.BarChartBuilder; imageData(ImageData<?> imageData). Specify an ImageData object. Charts.BarChartBuilder; legend(boolean show). Specify whether the legend should be shown or not. Charts.BarChartBuilder; legend(String side). Specify the side of the chart where th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:1208,Modifiability,extend,extends,1208,"thod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class Charts.BarChartBuilder. java.lang.Object; qupath.lib.gui.charts.Charts.BarChartBuilder. Enclosing class:; Charts. public static class Charts.BarChartBuilder; extends Object; Builder for creating scatter charts. Field Summary; Fields. Modifier and Type; Field; Description; protected double; height;  ; protected ImageData<?>; imageData;  ; protected Side; legendSide;  ; protected boolean; legendVisible;  ; protected double; markerOpacity;  ; protected String; title;  ; protected QuPathViewer; viewer;  ; protected double; width;  ; protected String; xLabel;  ; protected String; yLabel;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BarChart<String,Number>; build(). Build a chart according to the specified parameters. Charts.BarChartBuilder; classifications(Collection<? extends PathObject> pathObjects). Plot two measurements against one another for the specified objects. protected BarChart<String,Number>; createNewChart();  ; protected BarChart<String,Number>; createNewChart(Axis<String> xAxis,; Axis<Number> yAxis);  ; protected String; getDefaultWindowTitle(). Get a window title to use for charts of this kind, assuming the user has not ; specified one. protected Charts.BarChartBuilder; getThis();  ; Charts.BarChartBuilder; height(double height). Set the preferred height of the chart. Charts.BarChartBuilder; imageData(ImageData<?> imageData). Specify an ImageData object. Charts.BarChartBuilder; legend(boolean show). Specify whether the legend should be shown or not. Charts.BarChartBuilder; legend(String side). Specify the side of the chart where the legend should be shown. Charts.BarChartBuilder; legend(Side side). Specify the side of the chart where the legend should be shown. Charts.BarChartBuilder; markerOpacity(double opacity). Specify the m",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:2854,Modifiability,extend,extends,2854,"w). Specify whether the legend should be shown or not. Charts.BarChartBuilder; legend(String side). Specify the side of the chart where the legend should be shown. Charts.BarChartBuilder; legend(Side side). Specify the side of the chart where the legend should be shown. Charts.BarChartBuilder; markerOpacity(double opacity). Specify the marker opacity. Charts.BarChartBuilder; parent(Window parent). Set the parent window. Charts.BarChartBuilder; series(String name,; String[] x,; double[] y). Create a bar chart using arrays of String values and associated numeric values. <T> Charts.BarChartBuilder; series(String name,; String[] x,; double[] y,; List<T> extra). Create a bar chart using collections of String values and associated numeric values, with an associated custom object. <T> Charts.BarChartBuilder; series(String name,; String[] x,; double[] y,; T[] extra). Create a bar chart using collections String values and associated numeric values, with an associated custom object. <T extends Number>Charts.BarChartBuilder; series(String name,; Collection<? extends String> x,; Collection<T> y). Create a bar chart using collections of numeric values. <T> Charts.BarChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun). Plot values extracted from objects within a specified collection. Charts.BarChartBuilder; series(String name,; Collection<XYChart.Data<String,Number>> data). Create a bar chart from existing data plots. <T extends Number>Charts.BarChartBuilder; series(String name,; Map<String,T> data). Create a bar chart using a map of String values and associated numeric values. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.BarChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.BarChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(BarChart<String,Number",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:2927,Modifiability,extend,extends,2927,"arts.BarChartBuilder; legend(String side). Specify the side of the chart where the legend should be shown. Charts.BarChartBuilder; legend(Side side). Specify the side of the chart where the legend should be shown. Charts.BarChartBuilder; markerOpacity(double opacity). Specify the marker opacity. Charts.BarChartBuilder; parent(Window parent). Set the parent window. Charts.BarChartBuilder; series(String name,; String[] x,; double[] y). Create a bar chart using arrays of String values and associated numeric values. <T> Charts.BarChartBuilder; series(String name,; String[] x,; double[] y,; List<T> extra). Create a bar chart using collections of String values and associated numeric values, with an associated custom object. <T> Charts.BarChartBuilder; series(String name,; String[] x,; double[] y,; T[] extra). Create a bar chart using collections String values and associated numeric values, with an associated custom object. <T extends Number>Charts.BarChartBuilder; series(String name,; Collection<? extends String> x,; Collection<T> y). Create a bar chart using collections of numeric values. <T> Charts.BarChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun). Plot values extracted from objects within a specified collection. Charts.BarChartBuilder; series(String name,; Collection<XYChart.Data<String,Number>> data). Create a bar chart from existing data plots. <T extends Number>Charts.BarChartBuilder; series(String name,; Map<String,T> data). Create a bar chart using a map of String values and associated numeric values. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.BarChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.BarChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(BarChart<String,Number> chart). Method that applies properties of this builder ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:3083,Modifiability,extend,extends,3083,"ide of the chart where the legend should be shown. Charts.BarChartBuilder; markerOpacity(double opacity). Specify the marker opacity. Charts.BarChartBuilder; parent(Window parent). Set the parent window. Charts.BarChartBuilder; series(String name,; String[] x,; double[] y). Create a bar chart using arrays of String values and associated numeric values. <T> Charts.BarChartBuilder; series(String name,; String[] x,; double[] y,; List<T> extra). Create a bar chart using collections of String values and associated numeric values, with an associated custom object. <T> Charts.BarChartBuilder; series(String name,; String[] x,; double[] y,; T[] extra). Create a bar chart using collections String values and associated numeric values, with an associated custom object. <T extends Number>Charts.BarChartBuilder; series(String name,; Collection<? extends String> x,; Collection<T> y). Create a bar chart using collections of numeric values. <T> Charts.BarChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun). Plot values extracted from objects within a specified collection. Charts.BarChartBuilder; series(String name,; Collection<XYChart.Data<String,Number>> data). Create a bar chart from existing data plots. <T extends Number>Charts.BarChartBuilder; series(String name,; Map<String,T> data). Create a bar chart using a map of String values and associated numeric values. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.BarChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.BarChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(BarChart<String,Number> chart). Method that applies properties of this builder to the chart. Charts.BarChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.BarChartBuilder; width(double width). Set the preferred width of the cha",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:3342,Modifiability,extend,extends,3342,"[] y). Create a bar chart using arrays of String values and associated numeric values. <T> Charts.BarChartBuilder; series(String name,; String[] x,; double[] y,; List<T> extra). Create a bar chart using collections of String values and associated numeric values, with an associated custom object. <T> Charts.BarChartBuilder; series(String name,; String[] x,; double[] y,; T[] extra). Create a bar chart using collections String values and associated numeric values, with an associated custom object. <T extends Number>Charts.BarChartBuilder; series(String name,; Collection<? extends String> x,; Collection<T> y). Create a bar chart using collections of numeric values. <T> Charts.BarChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun). Plot values extracted from objects within a specified collection. Charts.BarChartBuilder; series(String name,; Collection<XYChart.Data<String,Number>> data). Create a bar chart from existing data plots. <T extends Number>Charts.BarChartBuilder; series(String name,; Map<String,T> data). Create a bar chart using a map of String values and associated numeric values. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.BarChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.BarChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(BarChart<String,Number> chart). Method that applies properties of this builder to the chart. Charts.BarChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.BarChartBuilder; width(double width). Set the preferred width of the chart. Charts.BarChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.BarChartBuilder; xLabel(String label). Specify the x-axis label. Charts.BarChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:4643,Modifiability,inherit,inherited,4643,"referred size of the chart. Charts.BarChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(BarChart<String,Number> chart). Method that applies properties of this builder to the chart. Charts.BarChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.BarChartBuilder; width(double width). Set the preferred width of the chart. Charts.BarChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.BarChartBuilder; xLabel(String label). Specify the x-axis label. Charts.BarChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis. Charts.BarChartBuilder; yAxisMin(double lowerBound). Set the lower bound for the y-axis. Charts.BarChartBuilder; yAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the y-axis. Charts.BarChartBuilder; yLabel(String label). Specify the y-axis label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. xLabel; protected String xLabel. yLabel; protected String yLabel. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. series; public <T> Charts.BarChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:5454,Modifiability,extend,extends,5454,"Bound,; double upperBound). Set the lower and upper bounds for the y-axis. Charts.BarChartBuilder; yLabel(String label). Specify the y-axis label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. xLabel; protected String xLabel. yLabel; protected String yLabel. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. series; public <T> Charts.BarChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x location from each object in the collection; Returns:; this builder. series; public <T extends Number> Charts.BarChartBuilder series(String name,; Collection<? extends String> x,; Collection<T> y); Create a bar chart using collections of numeric values. Parameters:; name - ; x - ; y - ; Returns:; this builder. series; public <T extends Number> Charts.BarChartBuilder series(String name,; Map<String,T> data); Create a bar chart using a map of String values and associated numeric values. Parameters:; name - ; data - a map of String values to associated numeric values; Returns:; this builder. series; public Charts.BarChartBuilder series(String name,; String[] x,; double[] y); Create a bar chart using arrays of String values and associated numeric values. Parameters",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:5804,Modifiability,extend,extends,5804," String xLabel. yLabel; protected String yLabel. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. series; public <T> Charts.BarChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x location from each object in the collection; Returns:; this builder. series; public <T extends Number> Charts.BarChartBuilder series(String name,; Collection<? extends String> x,; Collection<T> y); Create a bar chart using collections of numeric values. Parameters:; name - ; x - ; y - ; Returns:; this builder. series; public <T extends Number> Charts.BarChartBuilder series(String name,; Map<String,T> data); Create a bar chart using a map of String values and associated numeric values. Parameters:; name - ; data - a map of String values to associated numeric values; Returns:; this builder. series; public Charts.BarChartBuilder series(String name,; String[] x,; double[] y); Create a bar chart using arrays of String values and associated numeric values. Parameters:; name - ; x - x-values; y - y-values; Returns:; this builder. series; public <T> Charts.BarChartBuilder series(String name,; String[] x,; double[] y,; T[] extra); Create a bar chart using collections String values and associated numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:5877,Modifiability,extend,extends,5877,"eData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. series; public <T> Charts.BarChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x location from each object in the collection; Returns:; this builder. series; public <T extends Number> Charts.BarChartBuilder series(String name,; Collection<? extends String> x,; Collection<T> y); Create a bar chart using collections of numeric values. Parameters:; name - ; x - ; y - ; Returns:; this builder. series; public <T extends Number> Charts.BarChartBuilder series(String name,; Map<String,T> data); Create a bar chart using a map of String values and associated numeric values. Parameters:; name - ; data - a map of String values to associated numeric values; Returns:; this builder. series; public Charts.BarChartBuilder series(String name,; String[] x,; double[] y); Create a bar chart using arrays of String values and associated numeric values. Parameters:; name - ; x - x-values; y - y-values; Returns:; this builder. series; public <T> Charts.BarChartBuilder series(String name,; String[] x,; double[] y,; T[] extra); Create a bar chart using collections String values and associated numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - x-values; y - y-values; extra - array of values to associate with each data poin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:6047,Modifiability,extend,extends,6047,"ndSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. series; public <T> Charts.BarChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x location from each object in the collection; Returns:; this builder. series; public <T extends Number> Charts.BarChartBuilder series(String name,; Collection<? extends String> x,; Collection<T> y); Create a bar chart using collections of numeric values. Parameters:; name - ; x - ; y - ; Returns:; this builder. series; public <T extends Number> Charts.BarChartBuilder series(String name,; Map<String,T> data); Create a bar chart using a map of String values and associated numeric values. Parameters:; name - ; data - a map of String values to associated numeric values; Returns:; this builder. series; public Charts.BarChartBuilder series(String name,; String[] x,; double[] y); Create a bar chart using arrays of String values and associated numeric values. Parameters:; name - ; x - x-values; y - y-values; Returns:; this builder. series; public <T> Charts.BarChartBuilder series(String name,; String[] x,; double[] y,; T[] extra); Create a bar chart using collections String values and associated numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - x-values; y - y-values; extra - array of values to associate with each data point; should be the same length as x and y; Returns:; this builder. series; public <T> Charts.BarChartBuilder series(String name,; String[] x,; double[] ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:7947,Modifiability,extend,extends,7947,"lic <T> Charts.BarChartBuilder series(String name,; String[] x,; double[] y,; List<T> extra); Create a bar chart using collections of String values and associated numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - x-values; y - y-values; extra - list of values to associate with each data point; should be the same length as x and y; Returns:; this builder. series; public Charts.BarChartBuilder series(String name,; Collection<XYChart.Data<String,Number>> data); Create a bar chart from existing data plots. Parameters:; name - ; data - the data points to plot; Returns:; this builder. updateChart; protected void updateChart(BarChart<String,Number> chart); Method that applies properties of this builder to the chart.; Each subclass should call the method in the parent class to ensure its properties ; have been applied. Parameters:; chart - . classifications; public Charts.BarChartBuilder classifications(Collection<? extends PathObject> pathObjects); Plot two measurements against one another for the specified objects. Parameters:; pathObjects - the objects to plot; Returns:; this builder. createNewChart; protected BarChart<String,Number> createNewChart(Axis<String> xAxis,; Axis<Number> yAxis). getThis; protected Charts.BarChartBuilder getThis(). yAxisMin; public Charts.BarChartBuilder yAxisMin(double lowerBound); Set the lower bound for the y-axis. Parameters:; lowerBound - ; Returns:; this builder. yAxisMax; public Charts.BarChartBuilder yAxisMax(double upperBound); Set the upper bound for the y-axis. Parameters:; upperBound - ; Returns:; this builder. yAxisRange; public Charts.BarChartBuilder yAxisRange(double lowerBound,; double upperBound); Set the lower and upper bounds for the y-axis. Parameters:; lowerBound - ; upperBound - ; Returns:; this builder. createNewChart; protected BarChart<String,Number> createNewChart(). xLabel; public Charts.BarChartBuilder xLabel(String label); Specify the x-axis label. Parameters:; label ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:11580,Safety,avoid,avoid,11580," charts 'live', e.g. if they ; relate to objects within the hierarchy of this data. Parameters:; imageData - the imageData to associated with this chart; Returns:; this builder. viewer; public Charts.BarChartBuilder viewer(QuPathViewer viewer); Specify a viewer. This can be used to make some charts 'live', e.g. if they ; relate to objects within the viewer. Parameters:; viewer - the viewer to associated with this chart; Returns:; this builder. width; public Charts.BarChartBuilder width(double width); Set the preferred width of the chart. Parameters:; width - preferred width; Returns:; this builder. height; public Charts.BarChartBuilder height(double height); Set the preferred height of the chart. Parameters:; height - preferred height; Returns:; this builder. size; public Charts.BarChartBuilder size(double width,; double height); Set the preferred size of the chart. Parameters:; width - preferred width; height - preferred height; Returns:; this builder. parent; public Charts.BarChartBuilder parent(Window parent); Set the parent window. If not set, QuPath will try to choose a sensible default.; This is useful to avoid the chart falling 'behind' other windows when not in focus.; ; This is relevant only if show() or toStage() will be called. Parameters:; parent - the requested parent window; Returns:; this builder. windowTitle; public Charts.BarChartBuilder windowTitle(String title); Title to use for the window, if the chart is shown.; ; This is relevant only if show() or toStage() will be called. Parameters:; title - window title; Returns:; this builder. build; public BarChart<String,Number> build(); Build a chart according to the specified parameters. Returns:; the chart. toStage; public Stage toStage(); Add the chart to a stage, but do not show it. Returns:; the stage containing this Chart.; See Also:. show(). show; public Stage show(); Add the chart to a stage, and show it in the Application thread. Returns:; the stage containing this Chart.; See Also:. toStage(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:4717,Security,hash,hashCode,4717," Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(BarChart<String,Number> chart). Method that applies properties of this builder to the chart. Charts.BarChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.BarChartBuilder; width(double width). Set the preferred width of the chart. Charts.BarChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.BarChartBuilder; xLabel(String label). Specify the x-axis label. Charts.BarChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis. Charts.BarChartBuilder; yAxisMin(double lowerBound). Set the lower bound for the y-axis. Charts.BarChartBuilder; yAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the y-axis. Charts.BarChartBuilder; yLabel(String label). Specify the y-axis label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. xLabel; protected String xLabel. yLabel; protected String yLabel. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. series; public <T> Charts.BarChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x locatio",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.html:435,Modifiability,extend,extends,435,". Charts (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class Charts. java.lang.Object; qupath.lib.gui.charts.Charts. public class Charts; extends Object; Helper class for generating interactive charts. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Charts.BarChartBuilder. Builder for creating scatter charts. static class ; Charts.PieChartBuilder. Builder for creating pie charts. static class ; Charts.ScatterChartBuilder. Builder for creating scatter charts. Constructor Summary; Constructors. Constructor; Description; Charts();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Charts.BarChartBuilder; barChart(). Create a Charts.ScatterChartBuilder for generating a custom scatter plot. static Charts.PieChartBuilder; pieChart(). Create a Charts.PieChartBuilder for generating a custom pie chart. static Charts.ScatterChartBuilder; scatterChart(). Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Charts; public Charts(). Method Details. scatterChart; public static Charts.ScatterChartBuilder scatterChart(); Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Returns:; the builder. pieChart; public static Charts.PieChartBuilder pieChart(); Create a Charts.PieChartBuilder for generating a custom pie chart. Returns:; the builder. barChart; public static Charts.BarChartBuilder barChart(); Create a Charts.ScatterChartBuilder for generating a custom scatter plo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.html:1361,Modifiability,inherit,inherited,1361,"vaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class Charts. java.lang.Object; qupath.lib.gui.charts.Charts. public class Charts; extends Object; Helper class for generating interactive charts. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Charts.BarChartBuilder. Builder for creating scatter charts. static class ; Charts.PieChartBuilder. Builder for creating pie charts. static class ; Charts.ScatterChartBuilder. Builder for creating scatter charts. Constructor Summary; Constructors. Constructor; Description; Charts();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Charts.BarChartBuilder; barChart(). Create a Charts.ScatterChartBuilder for generating a custom scatter plot. static Charts.PieChartBuilder; pieChart(). Create a Charts.PieChartBuilder for generating a custom pie chart. static Charts.ScatterChartBuilder; scatterChart(). Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Charts; public Charts(). Method Details. scatterChart; public static Charts.ScatterChartBuilder scatterChart(); Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Returns:; the builder. pieChart; public static Charts.PieChartBuilder pieChart(); Create a Charts.PieChartBuilder for generating a custom pie chart. Returns:; the builder. barChart; public static Charts.BarChartBuilder barChart(); Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Returns:; the builder. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.html:1435,Security,hash,hashCode,1435,"vaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class Charts. java.lang.Object; qupath.lib.gui.charts.Charts. public class Charts; extends Object; Helper class for generating interactive charts. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Charts.BarChartBuilder. Builder for creating scatter charts. static class ; Charts.PieChartBuilder. Builder for creating pie charts. static class ; Charts.ScatterChartBuilder. Builder for creating scatter charts. Constructor Summary; Constructors. Constructor; Description; Charts();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Charts.BarChartBuilder; barChart(). Create a Charts.ScatterChartBuilder for generating a custom scatter plot. static Charts.PieChartBuilder; pieChart(). Create a Charts.PieChartBuilder for generating a custom pie chart. static Charts.ScatterChartBuilder; scatterChart(). Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Charts; public Charts(). Method Details. scatterChart; public static Charts.ScatterChartBuilder scatterChart(); Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Returns:; the builder. pieChart; public static Charts.PieChartBuilder pieChart(); Create a Charts.PieChartBuilder for generating a custom pie chart. Returns:; the builder. barChart; public static Charts.BarChartBuilder barChart(); Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Returns:; the builder. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html:2724,Deployability,update,updateChart,2724,"tBuilder; imageData(ImageData<?> imageData). Specify an ImageData object. Charts.PieChartBuilder; legend(boolean show). Specify whether the legend should be shown or not. Charts.PieChartBuilder; legend(String side). Specify the side of the chart where the legend should be shown. Charts.PieChartBuilder; legend(Side side). Specify the side of the chart where the legend should be shown. Charts.PieChartBuilder; markerOpacity(double opacity). Specify the marker opacity. Charts.PieChartBuilder; parent(Window parent). Set the parent window. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.PieChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.PieChartBuilder; title(String title). Specify the chart title. Charts.PieChartBuilder; tooltips(boolean showTooltips). Request tooltips to be shown when the cursor hovers over the pie chart. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(PieChart chart). Method that applies properties of this builder to the chart. Charts.PieChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.PieChartBuilder; width(double width). Set the preferred width of the chart. Charts.PieChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getThis; protected Charts.PieChartBuilder getThis(). createNewChart; protected PieChart createNewChart(). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html:4772,Deployability,update,updateChart,4772," suitable title to use. data; public Charts.PieChartBuilder data(Map<?,? extends Number> data); Specify data for the pie chart as a map.; Keys refer to categories, and values are numeric determining the size of the corresponding slice. Parameters:; data - the data map to show; Returns:; this builder. convertToPercentages; public Charts.PieChartBuilder convertToPercentages(boolean doConvert); Request that pie chart values are converted to percentages for tooltips. Parameters:; doConvert - ; Returns:. tooltips; public Charts.PieChartBuilder tooltips(boolean showTooltips); Request tooltips to be shown when the cursor hovers over the pie chart. Parameters:; showTooltips - ; Returns:. addSlice; public Charts.PieChartBuilder addSlice(Object name,; Number value); Add a slice to the pie. Parameters:; name - object the slice represents; value - number that determines the proportion of the pie for the given slice; Returns:; this builder. updateChart; protected void updateChart(PieChart chart); Method that applies properties of this builder to the chart.; Each subclass should call the method in the parent class to ensure its properties ; have been applied. Parameters:; chart - . title; public Charts.PieChartBuilder title(String title); Specify the chart title. Parameters:; title - the title to display; Returns:; this builder. legend; public Charts.PieChartBuilder legend(boolean show); Specify whether the legend should be shown or not. Parameters:; show - if true, show the legend; otherwise hide the legend; Returns:; this builder. legend; public Charts.PieChartBuilder legend(String side); Specify the side of the chart where the legend should be shown.; Valid values are ""top"", ""bottom"", ""left"", ""right"". ; ; Any other value (including null) will result in the legend being hidden. Parameters:; side - the side where the legend should be shown; Returns:; this builder. legend; public Charts.PieChartBuilder legend(Side side); Specify the side of the chart where the legend should be sh",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html:4800,Deployability,update,updateChart,4800," suitable title to use. data; public Charts.PieChartBuilder data(Map<?,? extends Number> data); Specify data for the pie chart as a map.; Keys refer to categories, and values are numeric determining the size of the corresponding slice. Parameters:; data - the data map to show; Returns:; this builder. convertToPercentages; public Charts.PieChartBuilder convertToPercentages(boolean doConvert); Request that pie chart values are converted to percentages for tooltips. Parameters:; doConvert - ; Returns:. tooltips; public Charts.PieChartBuilder tooltips(boolean showTooltips); Request tooltips to be shown when the cursor hovers over the pie chart. Parameters:; showTooltips - ; Returns:. addSlice; public Charts.PieChartBuilder addSlice(Object name,; Number value); Add a slice to the pie. Parameters:; name - object the slice represents; value - number that determines the proportion of the pie for the given slice; Returns:; this builder. updateChart; protected void updateChart(PieChart chart); Method that applies properties of this builder to the chart.; Each subclass should call the method in the parent class to ensure its properties ; have been applied. Parameters:; chart - . title; public Charts.PieChartBuilder title(String title); Specify the chart title. Parameters:; title - the title to display; Returns:; this builder. legend; public Charts.PieChartBuilder legend(boolean show); Specify whether the legend should be shown or not. Parameters:; show - if true, show the legend; otherwise hide the legend; Returns:; this builder. legend; public Charts.PieChartBuilder legend(String side); Specify the side of the chart where the legend should be shown.; Valid values are ""top"", ""bottom"", ""left"", ""right"". ; ; Any other value (including null) will result in the legend being hidden. Parameters:; side - the side where the legend should be shown; Returns:; this builder. legend; public Charts.PieChartBuilder legend(Side side); Specify the side of the chart where the legend should be sh",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html:532,Modifiability,extend,extends,532,". Charts.PieChartBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class Charts.PieChartBuilder. java.lang.Object; qupath.lib.gui.charts.Charts.PieChartBuilder. Enclosing class:; Charts. public static class Charts.PieChartBuilder; extends Object; Builder for creating pie charts. Field Summary; Fields. Modifier and Type; Field; Description; protected double; height;  ; protected ImageData<?>; imageData;  ; protected Side; legendSide;  ; protected boolean; legendVisible;  ; protected double; markerOpacity;  ; protected String; title;  ; protected QuPathViewer; viewer;  ; protected double; width;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Charts.PieChartBuilder; addSlice(Object name,; Number value). Add a slice to the pie. PieChart; build(). Build a chart according to the specified parameters. Charts.PieChartBuilder; convertToPercentages(boolean doConvert). Request that pie chart values are converted to percentages for tooltips. protected PieChart; createNewChart();  ; Charts.PieChartBuilder; data(Map<?,? extends Number> data). Specify data for the pie chart as a map. protected String; getDefaultWindowTitle(). Get a window title to use for charts of this kind, assuming the user has not ; specified one. protected Charts.PieChartBuilder; getThis();  ; Charts.PieChartBuilder; height(double height). Set the preferred height of the chart. Charts.PieChartBuilder; imageData(ImageData<?> imageData). Specify an ImageData object. Charts.PieChartBuilder; legend(boolean show). Specify whether the legend should be shown or not. Charts.PieChartBuilder; legend(String side). Specify the side of the chart where the legend should be",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html:1380,Modifiability,extend,extends,1380,"arts.PieChartBuilder. java.lang.Object; qupath.lib.gui.charts.Charts.PieChartBuilder. Enclosing class:; Charts. public static class Charts.PieChartBuilder; extends Object; Builder for creating pie charts. Field Summary; Fields. Modifier and Type; Field; Description; protected double; height;  ; protected ImageData<?>; imageData;  ; protected Side; legendSide;  ; protected boolean; legendVisible;  ; protected double; markerOpacity;  ; protected String; title;  ; protected QuPathViewer; viewer;  ; protected double; width;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Charts.PieChartBuilder; addSlice(Object name,; Number value). Add a slice to the pie. PieChart; build(). Build a chart according to the specified parameters. Charts.PieChartBuilder; convertToPercentages(boolean doConvert). Request that pie chart values are converted to percentages for tooltips. protected PieChart; createNewChart();  ; Charts.PieChartBuilder; data(Map<?,? extends Number> data). Specify data for the pie chart as a map. protected String; getDefaultWindowTitle(). Get a window title to use for charts of this kind, assuming the user has not ; specified one. protected Charts.PieChartBuilder; getThis();  ; Charts.PieChartBuilder; height(double height). Set the preferred height of the chart. Charts.PieChartBuilder; imageData(ImageData<?> imageData). Specify an ImageData object. Charts.PieChartBuilder; legend(boolean show). Specify whether the legend should be shown or not. Charts.PieChartBuilder; legend(String side). Specify the side of the chart where the legend should be shown. Charts.PieChartBuilder; legend(Side side). Specify the side of the chart where the legend should be shown. Charts.PieChartBuilder; markerOpacity(double opacity). Specify the marker opacity. Charts.PieChartBuilder; parent(Window parent). Set the parent window. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.PieChartBuilder; siz",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html:3079,Modifiability,inherit,inherited,3079," the legend should be shown. Charts.PieChartBuilder; markerOpacity(double opacity). Specify the marker opacity. Charts.PieChartBuilder; parent(Window parent). Set the parent window. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.PieChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.PieChartBuilder; title(String title). Specify the chart title. Charts.PieChartBuilder; tooltips(boolean showTooltips). Request tooltips to be shown when the cursor hovers over the pie chart. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(PieChart chart). Method that applies properties of this builder to the chart. Charts.PieChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.PieChartBuilder; width(double width). Set the preferred width of the chart. Charts.PieChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getThis; protected Charts.PieChartBuilder getThis(). createNewChart; protected PieChart createNewChart(). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. data; public Charts.PieChartBuilder data(Map<?,? extends Number> data); Specify data for the pie chart as a map.; Keys refer to categories, and values are numeric determining the size of the corresponding slice. Parameters:; data - th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html:3903,Modifiability,extend,extends,3903,"e width). Set the preferred width of the chart. Charts.PieChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getThis; protected Charts.PieChartBuilder getThis(). createNewChart; protected PieChart createNewChart(). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. data; public Charts.PieChartBuilder data(Map<?,? extends Number> data); Specify data for the pie chart as a map.; Keys refer to categories, and values are numeric determining the size of the corresponding slice. Parameters:; data - the data map to show; Returns:; this builder. convertToPercentages; public Charts.PieChartBuilder convertToPercentages(boolean doConvert); Request that pie chart values are converted to percentages for tooltips. Parameters:; doConvert - ; Returns:. tooltips; public Charts.PieChartBuilder tooltips(boolean showTooltips); Request tooltips to be shown when the cursor hovers over the pie chart. Parameters:; showTooltips - ; Returns:. addSlice; public Charts.PieChartBuilder addSlice(Object name,; Number value); Add a slice to the pie. Parameters:; name - object the slice represents; value - number that determines the proportion of the pie for the given slice; Returns:; this builder. updateChart; protected void updateChart(PieChart chart); Method that applies properties of this builder to the chart.; Each subclass should call the",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html:7420,Safety,avoid,avoid,7420,"ed to make some charts 'live', e.g. if they ; relate to objects within the hierarchy of this data. Parameters:; imageData - the imageData to associated with this chart; Returns:; this builder. viewer; public Charts.PieChartBuilder viewer(QuPathViewer viewer); Specify a viewer. This can be used to make some charts 'live', e.g. if they ; relate to objects within the viewer. Parameters:; viewer - the viewer to associated with this chart; Returns:; this builder. width; public Charts.PieChartBuilder width(double width); Set the preferred width of the chart. Parameters:; width - preferred width; Returns:; this builder. height; public Charts.PieChartBuilder height(double height); Set the preferred height of the chart. Parameters:; height - preferred height; Returns:; this builder. size; public Charts.PieChartBuilder size(double width,; double height); Set the preferred size of the chart. Parameters:; width - preferred width; height - preferred height; Returns:; this builder. parent; public Charts.PieChartBuilder parent(Window parent); Set the parent window. If not set, QuPath will try to choose a sensible default.; This is useful to avoid the chart falling 'behind' other windows when not in focus.; ; This is relevant only if show() or toStage() will be called. Parameters:; parent - the requested parent window; Returns:; this builder. windowTitle; public Charts.PieChartBuilder windowTitle(String title); Title to use for the window, if the chart is shown.; ; This is relevant only if show() or toStage() will be called. Parameters:; title - window title; Returns:; this builder. build; public PieChart build(); Build a chart according to the specified parameters. Returns:; the chart. toStage; public Stage toStage(); Add the chart to a stage, but do not show it. Returns:; the stage containing this Chart.; See Also:. show(). show; public Stage show(); Add the chart to a stage, and show it in the Application thread. Returns:; the stage containing this Chart.; See Also:. toStage(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html:3153,Security,hash,hashCode,3153,"e opacity). Specify the marker opacity. Charts.PieChartBuilder; parent(Window parent). Set the parent window. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.PieChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.PieChartBuilder; title(String title). Specify the chart title. Charts.PieChartBuilder; tooltips(boolean showTooltips). Request tooltips to be shown when the cursor hovers over the pie chart. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(PieChart chart). Method that applies properties of this builder to the chart. Charts.PieChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.PieChartBuilder; width(double width). Set the preferred width of the chart. Charts.PieChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getThis; protected Charts.PieChartBuilder getThis(). createNewChart; protected PieChart createNewChart(). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. data; public Charts.PieChartBuilder data(Map<?,? extends Number> data); Specify data for the pie chart as a map.; Keys refer to categories, and values are numeric determining the size of the corresponding slice. Parameters:; data - the data map to show; Returns:; this builder. convertToPercentages; public",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:4320,Deployability,update,updateChart,4320,"erChartBuilder; series(String name,; Collection<? extends Number> x,; Collection<? extends Number> y). Create a scatterplot using collections of numeric values. <T> Charts.ScatterChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun). Plot values extracted from objects within a specified collection. Charts.ScatterChartBuilder; series(String name,; Collection<XYChart.Data<Number,Number>> data). Create a scatterplot from existing data plots. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.ScatterChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.ScatterChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. Charts.ScatterChartBuilder; unlimitedDatapoints(). Show all datapoints, without subsampling, even when this may cause performance issues. protected void; updateChart(ScatterChart<Number,Number> chart). Method that applies properties of this builder to the chart. Charts.ScatterChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.ScatterChartBuilder; width(double width). Set the preferred width of the chart. Charts.ScatterChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.ScatterChartBuilder; xAxisMax(double upperBound). Set the upper bound for the x-axis. Charts.ScatterChartBuilder; xAxisMin(double lowerBound). Set the lower bound for the x-axis. Charts.ScatterChartBuilder; xAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the x-axis. Charts.ScatterChartBuilder; xLabel(String label). Specify the x-axis label. Charts.ScatterChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis. Charts.ScatterChartBuilder; yAxisMin(double lowerBound). Set the lower bound for the y-axis. Charts.ScatterChartBuilder; yAxisRange(double lowerBound,; doub",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:10116,Deployability,update,updateChart,10116,"y,; T[] extra); Create a scatterplot using collections of numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - x-values; y - y-values; extra - array of values to associate with each data point; should be the same length as x and y; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; double[] x,; double[] y,; List<T> extra); Create a scatterplot using collections of numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - x-values; y - y-values; extra - list of values to associate with each data point; should be the same length as x and y; Returns:; this builder. series; public Charts.ScatterChartBuilder series(String name,; Collection<XYChart.Data<Number,Number>> data); Create a scatterplot from existing data plots. Parameters:; name - ; data - the data points to plot; Returns:; this builder. updateChart; protected void updateChart(ScatterChart<Number,Number> chart); Method that applies properties of this builder to the chart.; Each subclass should call the method in the parent class to ensure its properties ; have been applied. Parameters:; chart - . createNewChart; protected ScatterChart<Number,Number> createNewChart(Axis<Number> xAxis,; Axis<Number> yAxis). getThis; protected Charts.ScatterChartBuilder getThis(). xAxisMin; public Charts.ScatterChartBuilder xAxisMin(double lowerBound); Set the lower bound for the x-axis. Parameters:; lowerBound - ; Returns:; this builder. yAxisMin; public Charts.ScatterChartBuilder yAxisMin(double lowerBound); Set the lower bound for the y-axis. Parameters:; lowerBound - ; Returns:; this builder. xAxisMax; public Charts.ScatterChartBuilder xAxisMax(double upperBound); Set the upper bound for the x-axis. Parameters:; upperBound - ; Returns:; this builder. yAxisMax; public Charts.ScatterChartBuilder yAxisMax(double upperBound); Set the upper bound for the y-axis. Parameters:; upperBound - ; Returns:; this b",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:10144,Deployability,update,updateChart,10144,"y,; T[] extra); Create a scatterplot using collections of numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - x-values; y - y-values; extra - array of values to associate with each data point; should be the same length as x and y; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; double[] x,; double[] y,; List<T> extra); Create a scatterplot using collections of numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - x-values; y - y-values; extra - list of values to associate with each data point; should be the same length as x and y; Returns:; this builder. series; public Charts.ScatterChartBuilder series(String name,; Collection<XYChart.Data<Number,Number>> data); Create a scatterplot from existing data plots. Parameters:; name - ; data - the data points to plot; Returns:; this builder. updateChart; protected void updateChart(ScatterChart<Number,Number> chart); Method that applies properties of this builder to the chart.; Each subclass should call the method in the parent class to ensure its properties ; have been applied. Parameters:; chart - . createNewChart; protected ScatterChart<Number,Number> createNewChart(Axis<Number> xAxis,; Axis<Number> yAxis). getThis; protected Charts.ScatterChartBuilder getThis(). xAxisMin; public Charts.ScatterChartBuilder xAxisMin(double lowerBound); Set the lower bound for the x-axis. Parameters:; lowerBound - ; Returns:; this builder. yAxisMin; public Charts.ScatterChartBuilder yAxisMin(double lowerBound); Set the lower bound for the y-axis. Parameters:; lowerBound - ; Returns:; this builder. xAxisMax; public Charts.ScatterChartBuilder xAxisMax(double upperBound); Set the upper bound for the x-axis. Parameters:; upperBound - ; Returns:; this builder. yAxisMax; public Charts.ScatterChartBuilder yAxisMax(double upperBound); Set the upper bound for the y-axis. Parameters:; upperBound - ; Returns:; this b",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:548,Modifiability,extend,extends,548,". Charts.ScatterChartBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class Charts.ScatterChartBuilder. java.lang.Object; qupath.lib.gui.charts.Charts.ScatterChartBuilder. Enclosing class:; Charts. public static class Charts.ScatterChartBuilder; extends Object; Builder for creating scatter charts. Field Summary; Fields. Modifier and Type; Field; Description; protected double; height;  ; protected ImageData<?>; imageData;  ; protected Side; legendSide;  ; protected boolean; legendVisible;  ; protected double; markerOpacity;  ; protected String; title;  ; protected QuPathViewer; viewer;  ; protected double; width;  ; protected String; xLabel;  ; protected String; yLabel;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScatterChart<Number,Number>; build(). Build a chart according to the specified parameters. Charts.ScatterChartBuilder; centroids(Collection<? extends PathObject> pathObjects). Plot centroids for the specified objects in pixel units. <T> Charts.ScatterChartBuilder; centroids(Collection<? extends PathObject> pathObjects,; PixelCalibration cal). Plot centroids for the specified objects using a fixed pixel calibration. protected ScatterChart<Number,Number>; createNewChart();  ; protected ScatterChart<Number,Number>; createNewChart(Axis<Number> xAxis,; Axis<Number> yAxis);  ; protected String; getDefaultWindowTitle(). Get a window title to use for charts of this kind, assuming the user has not ; specified one. protected Charts.ScatterChartBuilder; getThis();  ; Charts.ScatterChartBuilder; height(double height). Set the preferred height of the chart. Charts.ScatterChartBuilder; imageData(ImageData<?> imageData",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:1226,Modifiability,extend,extends,1226,"Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class Charts.ScatterChartBuilder. java.lang.Object; qupath.lib.gui.charts.Charts.ScatterChartBuilder. Enclosing class:; Charts. public static class Charts.ScatterChartBuilder; extends Object; Builder for creating scatter charts. Field Summary; Fields. Modifier and Type; Field; Description; protected double; height;  ; protected ImageData<?>; imageData;  ; protected Side; legendSide;  ; protected boolean; legendVisible;  ; protected double; markerOpacity;  ; protected String; title;  ; protected QuPathViewer; viewer;  ; protected double; width;  ; protected String; xLabel;  ; protected String; yLabel;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScatterChart<Number,Number>; build(). Build a chart according to the specified parameters. Charts.ScatterChartBuilder; centroids(Collection<? extends PathObject> pathObjects). Plot centroids for the specified objects in pixel units. <T> Charts.ScatterChartBuilder; centroids(Collection<? extends PathObject> pathObjects,; PixelCalibration cal). Plot centroids for the specified objects using a fixed pixel calibration. protected ScatterChart<Number,Number>; createNewChart();  ; protected ScatterChart<Number,Number>; createNewChart(Axis<Number> xAxis,; Axis<Number> yAxis);  ; protected String; getDefaultWindowTitle(). Get a window title to use for charts of this kind, assuming the user has not ; specified one. protected Charts.ScatterChartBuilder; getThis();  ; Charts.ScatterChartBuilder; height(double height). Set the preferred height of the chart. Charts.ScatterChartBuilder; imageData(ImageData<?> imageData). Specify an ImageData object. Charts.ScatterChartBuilder; legend(boolean show). Specify whether the legend should be shown or not. Charts.ScatterChartBuilder; legend(String side). Specify the side of the chart where th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:1372,Modifiability,extend,extends,1372,"Charts.ScatterChartBuilder. java.lang.Object; qupath.lib.gui.charts.Charts.ScatterChartBuilder. Enclosing class:; Charts. public static class Charts.ScatterChartBuilder; extends Object; Builder for creating scatter charts. Field Summary; Fields. Modifier and Type; Field; Description; protected double; height;  ; protected ImageData<?>; imageData;  ; protected Side; legendSide;  ; protected boolean; legendVisible;  ; protected double; markerOpacity;  ; protected String; title;  ; protected QuPathViewer; viewer;  ; protected double; width;  ; protected String; xLabel;  ; protected String; yLabel;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScatterChart<Number,Number>; build(). Build a chart according to the specified parameters. Charts.ScatterChartBuilder; centroids(Collection<? extends PathObject> pathObjects). Plot centroids for the specified objects in pixel units. <T> Charts.ScatterChartBuilder; centroids(Collection<? extends PathObject> pathObjects,; PixelCalibration cal). Plot centroids for the specified objects using a fixed pixel calibration. protected ScatterChart<Number,Number>; createNewChart();  ; protected ScatterChart<Number,Number>; createNewChart(Axis<Number> xAxis,; Axis<Number> yAxis);  ; protected String; getDefaultWindowTitle(). Get a window title to use for charts of this kind, assuming the user has not ; specified one. protected Charts.ScatterChartBuilder; getThis();  ; Charts.ScatterChartBuilder; height(double height). Set the preferred height of the chart. Charts.ScatterChartBuilder; imageData(ImageData<?> imageData). Specify an ImageData object. Charts.ScatterChartBuilder; legend(boolean show). Specify whether the legend should be shown or not. Charts.ScatterChartBuilder; legend(String side). Specify the side of the chart where the legend should be shown. Charts.ScatterChartBuilder; legend(Side side). Specify the side of the chart where the legend should be shown. Charts.ScatterChartB",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:2604,Modifiability,extend,extends,2604,"is<Number> xAxis,; Axis<Number> yAxis);  ; protected String; getDefaultWindowTitle(). Get a window title to use for charts of this kind, assuming the user has not ; specified one. protected Charts.ScatterChartBuilder; getThis();  ; Charts.ScatterChartBuilder; height(double height). Set the preferred height of the chart. Charts.ScatterChartBuilder; imageData(ImageData<?> imageData). Specify an ImageData object. Charts.ScatterChartBuilder; legend(boolean show). Specify whether the legend should be shown or not. Charts.ScatterChartBuilder; legend(String side). Specify the side of the chart where the legend should be shown. Charts.ScatterChartBuilder; legend(Side side). Specify the side of the chart where the legend should be shown. Charts.ScatterChartBuilder; limitDatapoints(int max). Choose the maximum number of supported datapoints. Charts.ScatterChartBuilder; markerOpacity(double opacity). Specify the marker opacity. Charts.ScatterChartBuilder; measurements(Collection<? extends PathObject> pathObjects,; String xMeasurement,; String yMeasurement). Plot two measurements against one another for the specified objects. Charts.ScatterChartBuilder; parent(Window parent). Set the parent window. Charts.ScatterChartBuilder; series(String name,; double[] x,; double[] y). Create a scatterplot using arrays of numeric values. <T> Charts.ScatterChartBuilder; series(String name,; double[] x,; double[] y,; List<T> extra). Create a scatterplot using collections of numeric values, with an associated custom object. <T> Charts.ScatterChartBuilder; series(String name,; double[] x,; double[] y,; T[] extra). Create a scatterplot using collections of numeric values, with an associated custom object. Charts.ScatterChartBuilder; series(String name,; Collection<? extends Number> x,; Collection<? extends Number> y). Create a scatterplot using collections of numeric values. <T> Charts.ScatterChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Functio",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:3385,Modifiability,extend,extends,3385,"r; limitDatapoints(int max). Choose the maximum number of supported datapoints. Charts.ScatterChartBuilder; markerOpacity(double opacity). Specify the marker opacity. Charts.ScatterChartBuilder; measurements(Collection<? extends PathObject> pathObjects,; String xMeasurement,; String yMeasurement). Plot two measurements against one another for the specified objects. Charts.ScatterChartBuilder; parent(Window parent). Set the parent window. Charts.ScatterChartBuilder; series(String name,; double[] x,; double[] y). Create a scatterplot using arrays of numeric values. <T> Charts.ScatterChartBuilder; series(String name,; double[] x,; double[] y,; List<T> extra). Create a scatterplot using collections of numeric values, with an associated custom object. <T> Charts.ScatterChartBuilder; series(String name,; double[] x,; double[] y,; T[] extra). Create a scatterplot using collections of numeric values, with an associated custom object. Charts.ScatterChartBuilder; series(String name,; Collection<? extends Number> x,; Collection<? extends Number> y). Create a scatterplot using collections of numeric values. <T> Charts.ScatterChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun). Plot values extracted from objects within a specified collection. Charts.ScatterChartBuilder; series(String name,; Collection<XYChart.Data<Number,Number>> data). Create a scatterplot from existing data plots. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.ScatterChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.ScatterChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. Charts.ScatterChartBuilder; unlimitedDatapoints(). Show all datapoints, without subsampling, even when this may cause performance issues. protected void; updateChart(ScatterChart<Number,Number> chart). Method that appl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:3418,Modifiability,extend,extends,3418,"r; limitDatapoints(int max). Choose the maximum number of supported datapoints. Charts.ScatterChartBuilder; markerOpacity(double opacity). Specify the marker opacity. Charts.ScatterChartBuilder; measurements(Collection<? extends PathObject> pathObjects,; String xMeasurement,; String yMeasurement). Plot two measurements against one another for the specified objects. Charts.ScatterChartBuilder; parent(Window parent). Set the parent window. Charts.ScatterChartBuilder; series(String name,; double[] x,; double[] y). Create a scatterplot using arrays of numeric values. <T> Charts.ScatterChartBuilder; series(String name,; double[] x,; double[] y,; List<T> extra). Create a scatterplot using collections of numeric values, with an associated custom object. <T> Charts.ScatterChartBuilder; series(String name,; double[] x,; double[] y,; T[] extra). Create a scatterplot using collections of numeric values, with an associated custom object. Charts.ScatterChartBuilder; series(String name,; Collection<? extends Number> x,; Collection<? extends Number> y). Create a scatterplot using collections of numeric values. <T> Charts.ScatterChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun). Plot values extracted from objects within a specified collection. Charts.ScatterChartBuilder; series(String name,; Collection<XYChart.Data<Number,Number>> data). Create a scatterplot from existing data plots. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.ScatterChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.ScatterChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. Charts.ScatterChartBuilder; unlimitedDatapoints(). Show all datapoints, without subsampling, even when this may cause performance issues. protected void; updateChart(ScatterChart<Number,Number> chart). Method that appl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:3562,Modifiability,extend,extends,3562,"lder; measurements(Collection<? extends PathObject> pathObjects,; String xMeasurement,; String yMeasurement). Plot two measurements against one another for the specified objects. Charts.ScatterChartBuilder; parent(Window parent). Set the parent window. Charts.ScatterChartBuilder; series(String name,; double[] x,; double[] y). Create a scatterplot using arrays of numeric values. <T> Charts.ScatterChartBuilder; series(String name,; double[] x,; double[] y,; List<T> extra). Create a scatterplot using collections of numeric values, with an associated custom object. <T> Charts.ScatterChartBuilder; series(String name,; double[] x,; double[] y,; T[] extra). Create a scatterplot using collections of numeric values, with an associated custom object. Charts.ScatterChartBuilder; series(String name,; Collection<? extends Number> x,; Collection<? extends Number> y). Create a scatterplot using collections of numeric values. <T> Charts.ScatterChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun). Plot values extracted from objects within a specified collection. Charts.ScatterChartBuilder; series(String name,; Collection<XYChart.Data<Number,Number>> data). Create a scatterplot from existing data plots. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.ScatterChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.ScatterChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. Charts.ScatterChartBuilder; unlimitedDatapoints(). Show all datapoints, without subsampling, even when this may cause performance issues. protected void; updateChart(ScatterChart<Number,Number> chart). Method that applies properties of this builder to the chart. Charts.ScatterChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.ScatterChartBuilder; width(double width). Set the preferred w",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:5482,Modifiability,inherit,inherited,5482,"ify a viewer. Charts.ScatterChartBuilder; width(double width). Set the preferred width of the chart. Charts.ScatterChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.ScatterChartBuilder; xAxisMax(double upperBound). Set the upper bound for the x-axis. Charts.ScatterChartBuilder; xAxisMin(double lowerBound). Set the lower bound for the x-axis. Charts.ScatterChartBuilder; xAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the x-axis. Charts.ScatterChartBuilder; xLabel(String label). Specify the x-axis label. Charts.ScatterChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis. Charts.ScatterChartBuilder; yAxisMin(double lowerBound). Set the lower bound for the y-axis. Charts.ScatterChartBuilder; yAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the y-axis. Charts.ScatterChartBuilder; yLabel(String label). Specify the y-axis label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. xLabel; protected String xLabel. yLabel; protected String yLabel. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. limitDatapoints; public Charts.ScatterChartBuilder limitDatapoints(int max); Choose the maximum number of supported datapoints.; Scattercharts are rather 'heavyweight', and including many thousands of datapoints can cause ; severe performance issues due to high processing and memory requirements.; ; By default, datapoints will be randomly subsampled to a 'manageable number' where necessary, ; which can be customized with this setting. Parameters:; max - the maximu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:7089,Modifiability,extend,extends,7089,"ported datapoints.; Scattercharts are rather 'heavyweight', and including many thousands of datapoints can cause ; severe performance issues due to high processing and memory requirements.; ; By default, datapoints will be randomly subsampled to a 'manageable number' where necessary, ; which can be customized with this setting. Parameters:; max - the maximum number of data points to show; Returns:; this builder; See Also:. unlimitedDatapoints(). unlimitedDatapoints; public Charts.ScatterChartBuilder unlimitedDatapoints(); Show all datapoints, without subsampling, even when this may cause performance issues.; Use with caution. Returns:; this builder; See Also:. limitDatapoints(int). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. centroids; public <T> Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects,; PixelCalibration cal); Plot centroids for the specified objects using a fixed pixel calibration. Parameters:; pathObjects - the objects to plot; cal - the pixel calibration used to convert the centroids into other units; Returns:; this builder. centroids; public Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects); Plot centroids for the specified objects in pixel units. Parameters:; pathObjects - the objects to plot.; Returns:; this builder. measurements; public Charts.ScatterChartBuilder measurements(Collection<? extends PathObject> pathObjects,; String xMeasurement,; String yMeasurement); Plot two measurements against one another for the specified objects. Parameters:; pathObjects - the objects to plot; xMeasurement - the measurement to extract from each object's measurement list for the x location; yMeasurement - the measurement to extract from each object's measurement list for the y location; Returns:; this builder. series; public <T> Charts.ScatterChartBuilde",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:7436,Modifiability,extend,extends,7436,"g. Parameters:; max - the maximum number of data points to show; Returns:; this builder; See Also:. unlimitedDatapoints(). unlimitedDatapoints; public Charts.ScatterChartBuilder unlimitedDatapoints(); Show all datapoints, without subsampling, even when this may cause performance issues.; Use with caution. Returns:; this builder; See Also:. limitDatapoints(int). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. centroids; public <T> Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects,; PixelCalibration cal); Plot centroids for the specified objects using a fixed pixel calibration. Parameters:; pathObjects - the objects to plot; cal - the pixel calibration used to convert the centroids into other units; Returns:; this builder. centroids; public Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects); Plot centroids for the specified objects in pixel units. Parameters:; pathObjects - the objects to plot.; Returns:; this builder. measurements; public Charts.ScatterChartBuilder measurements(Collection<? extends PathObject> pathObjects,; String xMeasurement,; String yMeasurement); Plot two measurements against one another for the specified objects. Parameters:; pathObjects - the objects to plot; xMeasurement - the measurement to extract from each object's measurement list for the x location; yMeasurement - the measurement to extract from each object's measurement list for the y location; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x locat",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:7674,Modifiability,extend,extends,7674,"se performance issues.; Use with caution. Returns:; this builder; See Also:. limitDatapoints(int). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. centroids; public <T> Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects,; PixelCalibration cal); Plot centroids for the specified objects using a fixed pixel calibration. Parameters:; pathObjects - the objects to plot; cal - the pixel calibration used to convert the centroids into other units; Returns:; this builder. centroids; public Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects); Plot centroids for the specified objects in pixel units. Parameters:; pathObjects - the objects to plot.; Returns:; this builder. measurements; public Charts.ScatterChartBuilder measurements(Collection<? extends PathObject> pathObjects,; String xMeasurement,; String yMeasurement); Plot two measurements against one another for the specified objects. Parameters:; pathObjects - the objects to plot; xMeasurement - the measurement to extract from each object's measurement list for the x location; yMeasurement - the measurement to extract from each object's measurement list for the y location; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x location from each object in the collection; yFun - function capable of extracting a numeric value for the y location from each object in the collection; Returns:; this builder. series; public Charts.ScatterChartBuilder series(String name,; Collection<? extends Number>",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:8169,Modifiability,extend,extends,8169,"ration. Parameters:; pathObjects - the objects to plot; cal - the pixel calibration used to convert the centroids into other units; Returns:; this builder. centroids; public Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects); Plot centroids for the specified objects in pixel units. Parameters:; pathObjects - the objects to plot.; Returns:; this builder. measurements; public Charts.ScatterChartBuilder measurements(Collection<? extends PathObject> pathObjects,; String xMeasurement,; String yMeasurement); Plot two measurements against one another for the specified objects. Parameters:; pathObjects - the objects to plot; xMeasurement - the measurement to extract from each object's measurement list for the x location; yMeasurement - the measurement to extract from each object's measurement list for the y location; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x location from each object in the collection; yFun - function capable of extracting a numeric value for the y location from each object in the collection; Returns:; this builder. series; public Charts.ScatterChartBuilder series(String name,; Collection<? extends Number> x,; Collection<? extends Number> y); Create a scatterplot using collections of numeric values. Parameters:; name - ; x - ; y - ; Returns:; this builder. series; public Charts.ScatterChartBuilder series(String name,; double[] x,; double[] y); Create a scatterplot using arrays of numeric values. Parameters:; name - ; x - x-values; y - y-values; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; double[] x,; double[] y,; T[] extra); Create a scatt",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:8709,Modifiability,extend,extends,8709,"yMeasurement); Plot two measurements against one another for the specified objects. Parameters:; pathObjects - the objects to plot; xMeasurement - the measurement to extract from each object's measurement list for the x location; yMeasurement - the measurement to extract from each object's measurement list for the y location; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x location from each object in the collection; yFun - function capable of extracting a numeric value for the y location from each object in the collection; Returns:; this builder. series; public Charts.ScatterChartBuilder series(String name,; Collection<? extends Number> x,; Collection<? extends Number> y); Create a scatterplot using collections of numeric values. Parameters:; name - ; x - ; y - ; Returns:; this builder. series; public Charts.ScatterChartBuilder series(String name,; double[] x,; double[] y); Create a scatterplot using arrays of numeric values. Parameters:; name - ; x - x-values; y - y-values; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; double[] x,; double[] y,; T[] extra); Create a scatterplot using collections of numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - x-values; y - y-values; extra - array of values to associate with each data point; should be the same length as x and y; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; double[] x,; double[] y,; List<T> extra); Create a scatterplot using collections of numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:8742,Modifiability,extend,extends,8742,"yMeasurement); Plot two measurements against one another for the specified objects. Parameters:; pathObjects - the objects to plot; xMeasurement - the measurement to extract from each object's measurement list for the x location; yMeasurement - the measurement to extract from each object's measurement list for the y location; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x location from each object in the collection; yFun - function capable of extracting a numeric value for the y location from each object in the collection; Returns:; this builder. series; public Charts.ScatterChartBuilder series(String name,; Collection<? extends Number> x,; Collection<? extends Number> y); Create a scatterplot using collections of numeric values. Parameters:; name - ; x - ; y - ; Returns:; this builder. series; public Charts.ScatterChartBuilder series(String name,; double[] x,; double[] y); Create a scatterplot using arrays of numeric values. Parameters:; name - ; x - x-values; y - y-values; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; double[] x,; double[] y,; T[] extra); Create a scatterplot using collections of numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - x-values; y - y-values; extra - array of values to associate with each data point; should be the same length as x and y; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; double[] x,; double[] y,; List<T> extra); Create a scatterplot using collections of numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:4284,Performance,perform,performance,4284,"ollections of numeric values, with an associated custom object. Charts.ScatterChartBuilder; series(String name,; Collection<? extends Number> x,; Collection<? extends Number> y). Create a scatterplot using collections of numeric values. <T> Charts.ScatterChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun). Plot values extracted from objects within a specified collection. Charts.ScatterChartBuilder; series(String name,; Collection<XYChart.Data<Number,Number>> data). Create a scatterplot from existing data plots. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.ScatterChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.ScatterChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. Charts.ScatterChartBuilder; unlimitedDatapoints(). Show all datapoints, without subsampling, even when this may cause performance issues. protected void; updateChart(ScatterChart<Number,Number> chart). Method that applies properties of this builder to the chart. Charts.ScatterChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.ScatterChartBuilder; width(double width). Set the preferred width of the chart. Charts.ScatterChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.ScatterChartBuilder; xAxisMax(double upperBound). Set the upper bound for the x-axis. Charts.ScatterChartBuilder; xAxisMin(double lowerBound). Set the lower bound for the x-axis. Charts.ScatterChartBuilder; xAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the x-axis. Charts.ScatterChartBuilder; xLabel(String label). Specify the x-axis label. Charts.ScatterChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis. Charts.ScatterChartBuilder; yAxisMin(double lowerBound). Set the lower bound for ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:6254,Performance,perform,performance,6254," Set the lower bound for the y-axis. Charts.ScatterChartBuilder; yAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the y-axis. Charts.ScatterChartBuilder; yLabel(String label). Specify the y-axis label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. xLabel; protected String xLabel. yLabel; protected String yLabel. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. limitDatapoints; public Charts.ScatterChartBuilder limitDatapoints(int max); Choose the maximum number of supported datapoints.; Scattercharts are rather 'heavyweight', and including many thousands of datapoints can cause ; severe performance issues due to high processing and memory requirements.; ; By default, datapoints will be randomly subsampled to a 'manageable number' where necessary, ; which can be customized with this setting. Parameters:; max - the maximum number of data points to show; Returns:; this builder; See Also:. unlimitedDatapoints(). unlimitedDatapoints; public Charts.ScatterChartBuilder unlimitedDatapoints(); Show all datapoints, without subsampling, even when this may cause performance issues.; Use with caution. Returns:; this builder; See Also:. limitDatapoints(int). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. centroids; public <T> Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects,; PixelCalibration cal); Plot centroids for the specified objects using a fixed pixel calibration. Parameters:; pa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:6727,Performance,perform,performance,6727,"ring yLabel. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. limitDatapoints; public Charts.ScatterChartBuilder limitDatapoints(int max); Choose the maximum number of supported datapoints.; Scattercharts are rather 'heavyweight', and including many thousands of datapoints can cause ; severe performance issues due to high processing and memory requirements.; ; By default, datapoints will be randomly subsampled to a 'manageable number' where necessary, ; which can be customized with this setting. Parameters:; max - the maximum number of data points to show; Returns:; this builder; See Also:. unlimitedDatapoints(). unlimitedDatapoints; public Charts.ScatterChartBuilder unlimitedDatapoints(); Show all datapoints, without subsampling, even when this may cause performance issues.; Use with caution. Returns:; this builder; See Also:. limitDatapoints(int). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. centroids; public <T> Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects,; PixelCalibration cal); Plot centroids for the specified objects using a fixed pixel calibration. Parameters:; pathObjects - the objects to plot; cal - the pixel calibration used to convert the centroids into other units; Returns:; this builder. centroids; public Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects); Plot centroids for the specified objects in pixel units. Parameters:; pathObjects - the objects to plot.; Returns:; this builder. measurements; public Charts.ScatterChartBuilder measurements(Collection<? extends ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:14447,Safety,avoid,avoid,14447," ; relate to objects within the hierarchy of this data. Parameters:; imageData - the imageData to associated with this chart; Returns:; this builder. viewer; public Charts.ScatterChartBuilder viewer(QuPathViewer viewer); Specify a viewer. This can be used to make some charts 'live', e.g. if they ; relate to objects within the viewer. Parameters:; viewer - the viewer to associated with this chart; Returns:; this builder. width; public Charts.ScatterChartBuilder width(double width); Set the preferred width of the chart. Parameters:; width - preferred width; Returns:; this builder. height; public Charts.ScatterChartBuilder height(double height); Set the preferred height of the chart. Parameters:; height - preferred height; Returns:; this builder. size; public Charts.ScatterChartBuilder size(double width,; double height); Set the preferred size of the chart. Parameters:; width - preferred width; height - preferred height; Returns:; this builder. parent; public Charts.ScatterChartBuilder parent(Window parent); Set the parent window. If not set, QuPath will try to choose a sensible default.; This is useful to avoid the chart falling 'behind' other windows when not in focus.; ; This is relevant only if show() or toStage() will be called. Parameters:; parent - the requested parent window; Returns:; this builder. windowTitle; public Charts.ScatterChartBuilder windowTitle(String title); Title to use for the window, if the chart is shown.; ; This is relevant only if show() or toStage() will be called. Parameters:; title - window title; Returns:; this builder. build; public ScatterChart<Number,Number> build(); Build a chart according to the specified parameters. Returns:; the chart. toStage; public Stage toStage(); Add the chart to a stage, but do not show it. Returns:; the stage containing this Chart.; See Also:. show(). show; public Stage show(); Add the chart to a stage, and show it in the Application thread. Returns:; the stage containing this Chart.; See Also:. toStage(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:5556,Security,hash,hashCode,5556,"referred width of the chart. Charts.ScatterChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.ScatterChartBuilder; xAxisMax(double upperBound). Set the upper bound for the x-axis. Charts.ScatterChartBuilder; xAxisMin(double lowerBound). Set the lower bound for the x-axis. Charts.ScatterChartBuilder; xAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the x-axis. Charts.ScatterChartBuilder; xLabel(String label). Specify the x-axis label. Charts.ScatterChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis. Charts.ScatterChartBuilder; yAxisMin(double lowerBound). Set the lower bound for the y-axis. Charts.ScatterChartBuilder; yAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the y-axis. Charts.ScatterChartBuilder; yLabel(String label). Specify the y-axis label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. xLabel; protected String xLabel. yLabel; protected String yLabel. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. limitDatapoints; public Charts.ScatterChartBuilder limitDatapoints(int max); Choose the maximum number of supported datapoints.; Scattercharts are rather 'heavyweight', and including many thousands of datapoints can cause ; severe performance issues due to high processing and memory requirements.; ; By default, datapoints will be randomly subsampled to a 'manageable number' where necessary, ; which can be customized with this setting. Parameters:; max - the maximum number of data points to show; Returns:; this builder; See Also:. unli",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:6225,Deployability,update,updateBounds,6225,"ixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestLayout, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, getBlendMode, getBoundsInLocal, getBoundsInParent, getCacheHint, getClip, getCursor, getDepthTest, getEffect, getEffectiveNodeOrientation, get",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:12228,Integrability,interface,interface,12228,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. lineWidth; public DoubleProperty lineWidthProperty; Line width property used for displaying threshold lines. See Also:. getLineWidth(); setLineWidth(double); lineWidthProperty(). Constructor Details. ChartThresholdPane; public ChartThresholdPane(XYChart<Number,Number> chart); Note: xAxis and yAxis must be instances of NumberAxis. Parameters:; chart - . Method Details. setThresholds; public void setThresholds(Color color,; double... thresholds); Set thresholds, which are visualized as vertical lines. Parameters:; color - ; thresholds - . getThresholds; public ObservableList<ObservableNumberValue> getThresholds(); Get a list of all thresholds. Returns:. clearThresholds; public void clearThresholds(); Clear all thresholds. setThresholdColor; public void setThresholdColor(ObservableNumberValue val,; Color color); Set the color of a specified threshold line. Parameters:; val - ; color - . addThreshold; public ObservableN",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:662,Modifiability,extend,extends,662,". ChartThresholdPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class ChartThresholdPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.charts.ChartThresholdPane. All Implemented Interfaces:; Styleable, EventTarget. public class ChartThresholdPane; extends BorderPane; Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. Property Summary; Properties. Type; Property; Description; DoubleProperty; lineWidth. Line width property used for displaying threshold lines. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseC",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:927,Modifiability,inherit,inherited,927,". ChartThresholdPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class ChartThresholdPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.charts.ChartThresholdPane. All Implemented Interfaces:; Styleable, EventTarget. public class ChartThresholdPane; extends BorderPane; Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. Property Summary; Properties. Type; Property; Description; DoubleProperty; lineWidth. Line width property used for displaying threshold lines. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseC",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:1025,Modifiability,inherit,inherited,1025,"0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class ChartThresholdPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.charts.ChartThresholdPane. All Implemented Interfaces:; Styleable, EventTarget. public class ChartThresholdPane; extends BorderPane; Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. Property Summary; Properties. Type; Property; Description; DoubleProperty; lineWidth. Line width property used for displaying threshold lines. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:1273,Modifiability,inherit,inherited,1273,"hod. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class ChartThresholdPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.charts.ChartThresholdPane. All Implemented Interfaces:; Styleable, EventTarget. public class ChartThresholdPane; extends BorderPane; Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. Property Summary; Properties. Type; Property; Description; DoubleProperty; lineWidth. Line width property used for displaying threshold lines. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:1339,Modifiability,inherit,inherited,1339,".lib.gui.charts; Class ChartThresholdPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.charts.ChartThresholdPane. All Implemented Interfaces:; Styleable, EventTarget. public class ChartThresholdPane; extends BorderPane; Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. Property Summary; Properties. Type; Property; Description; DoubleProperty; lineWidth. Line width property used for displaying threshold lines. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:2608,Modifiability,inherit,inherited,2608,"focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ChartThresholdPane(XYChart<Number,Number> chart). Note: xAxis and yAxis must be instances of NumberAxis. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableNumberValue; addThreshold(double x). Add a threshold value. ObservableNumberValue; addThreshold(double x,; Color color). Add a threshold value with its display color. ObservableNumberValue; addThreshold(ObservableNumberValue d). Add a threshold value. void; clearThresholds(). Clear all thresholds. double; getLineWidth(). Get the threshold line width. ObservableList<ObservableNumberValue>; getThresholds(). Get a list of all thresholds. boolean; isInteractive(). Returns the value of isInteractiveProperty(). BooleanProperty; isInteractiveProperty(). Property indicatin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:2698,Modifiability,inherit,inherited,2698," layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ChartThresholdPane(XYChart<Number,Number> chart). Note: xAxis and yAxis must be instances of NumberAxis. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableNumberValue; addThreshold(double x). Add a threshold value. ObservableNumberValue; addThreshold(double x,; Color color). Add a threshold value with its display color. ObservableNumberValue; addThreshold(ObservableNumberValue d). Add a threshold value. void; clearThresholds(). Clear all thresholds. double; getLineWidth(). Get the threshold line width. ObservableList<ObservableNumberValue>; getThresholds(). Get a list of all thresholds. boolean; isInteractive(). Returns the value of isInteractiveProperty(). BooleanProperty; isInteractiveProperty(). Property indicating whether thresholds can be adjusted interactively. DoubleProperty; lineWidthProperty(). L",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:4150,Modifiability,inherit,inherited,4150," color). Add a threshold value with its display color. ObservableNumberValue; addThreshold(ObservableNumberValue d). Add a threshold value. void; clearThresholds(). Clear all thresholds. double; getLineWidth(). Get the threshold line width. ObservableList<ObservableNumberValue>; getThresholds(). Get a list of all thresholds. boolean; isInteractive(). Returns the value of isInteractiveProperty(). BooleanProperty; isInteractiveProperty(). Property indicating whether thresholds can be adjusted interactively. DoubleProperty; lineWidthProperty(). Line width property used for displaying threshold lines. void; setIsInteractive(boolean isInteractive). Sets the value of isInteractiveProperty(). void; setLineWidth(double width). Set the threshold line width. void; setThresholdColor(ObservableNumberValue val,; Color color). Set the color of a specified threshold line. void; setThresholds(Color color,; double... thresholds). Set thresholds, which are visualized as vertical lines. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:4555,Modifiability,inherit,inherited,4555,"nProperty; isInteractiveProperty(). Property indicating whether thresholds can be adjusted interactively. DoubleProperty; lineWidthProperty(). Line width property used for displaying threshold lines. void; setIsInteractive(boolean isInteractive). Sets the value of isInteractiveProperty(). void; setLineWidth(double width). Set the threshold line width. void; setThresholdColor(ObservableNumberValue val,; Color color). Set the color of a specified threshold line. void; setThresholds(Color color,; double... thresholds). Set thresholds, which are visualized as vertical lines. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidt",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:4623,Modifiability,inherit,inherited,4623,"sholds can be adjusted interactively. DoubleProperty; lineWidthProperty(). Line width property used for displaying threshold lines. void; setIsInteractive(boolean isInteractive). Sets the value of isInteractiveProperty(). void; setLineWidth(double width). Set the threshold line width. void; setThresholdColor(ObservableNumberValue val,; Color color). Set the color of a specified threshold line. void; setThresholds(Color color,; double... thresholds). Set thresholds, which are visualized as vertical lines. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPaddin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:5973,Modifiability,inherit,inherited,5973,"etShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestLayout, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:6247,Modifiability,inherit,inherited,6247,"HeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestLayout, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, getBlendMode, getBoundsInLocal, getBoundsInParent, getCacheHint, getClip, getCursor, getDepthTest, getEffect, getEffectiveNodeOrientation, getEventDispatcher, getId, getInitialCursor, getInitialFocusTraversable, getInputMethodRequests, getLayoutBounds, getLayoutX, getLayoutY,",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:12084,Modifiability,inherit,inherited,12084,"xtChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. lineWidth; public DoubleProperty lineWidthProperty; Line width property used for displaying threshold lines. See Also:. getLineWidth(); setLineWidth(double); lineWidthProperty(). Constructor Details. ChartThresholdPane; public ChartThresholdPane(XYChart<Number,Number> chart); Note: xAxis and yAxis must be instances of NumberAxis. Parameters:; chart - . Method Details. setThresholds; public void setThresholds(Color color,; double... thresholds); Set thresholds, which are visualized as vertical lines. Parameters:; color - ; thresholds - . getThresholds; public ObservableList<ObservableNumberValue> getThresholds(); Get a list of all thresholds. Returns:. clearThresholds; public void clearThresholds(); Clear all thresholds. setThresholdColor; public void setThresholdColor(ObservableNumberVa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:12213,Modifiability,inherit,inherited,12213,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. lineWidth; public DoubleProperty lineWidthProperty; Line width property used for displaying threshold lines. See Also:. getLineWidth(); setLineWidth(double); lineWidthProperty(). Constructor Details. ChartThresholdPane; public ChartThresholdPane(XYChart<Number,Number> chart); Note: xAxis and yAxis must be instances of NumberAxis. Parameters:; chart - . Method Details. setThresholds; public void setThresholds(Color color,; double... thresholds); Set thresholds, which are visualized as vertical lines. Parameters:; color - ; thresholds - . getThresholds; public ObservableList<ObservableNumberValue> getThresholds(); Get a list of all thresholds. Returns:. clearThresholds; public void clearThresholds(); Clear all thresholds. setThresholdColor; public void setThresholdColor(ObservableNumberValue val,; Color color); Set the color of a specified threshold line. Parameters:; val - ; color - . addThreshold; public ObservableN",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:1094,Performance,cache,cacheShape,1094,"ummary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class ChartThresholdPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.charts.ChartThresholdPane. All Implemented Interfaces:; Styleable, EventTarget. public class ChartThresholdPane; extends BorderPane; Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. Property Summary; Properties. Type; Property; Description; DoubleProperty; lineWidth. Line width property used for displaying threshold lines. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:1496,Performance,cache,cacheHint,1496," bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ChartThresholdPane(XYChart<Number,Number> chart). Note: xAxis and yAxis must be instances of NumberAxis. Method Summary. All MethodsInstance Methods",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:1507,Performance,cache,cache,1507," bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ChartThresholdPane(XYChart<Number,Number> chart). Note: xAxis and yAxis must be instances of NumberAxis. Method Summary. All MethodsInstance Methods",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:4708,Performance,cache,cacheShapeProperty,4708,"PrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestLayout, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, acc",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:6538,Performance,cache,cacheHintProperty,6538,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:6557,Performance,cache,cacheProperty,6557,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:1379,Security,access,accessibleHelp,1379," bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ChartThresholdPane(XYChart<Number,Number> chart). Note: xAxis and yAxis must be instances of NumberAxis. Method Summary. All MethodsInstance Methods",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:1395,Security,access,accessibleRoleDescription,1395," bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ChartThresholdPane(XYChart<Number,Number> chart). Note: xAxis and yAxis must be instances of NumberAxis. Method Summary. All MethodsInstance Methods",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:1422,Security,access,accessibleRole,1422," bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ChartThresholdPane(XYChart<Number,Number> chart). Note: xAxis and yAxis must be instances of NumberAxis. Method Summary. All MethodsInstance Methods",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:1438,Security,access,accessibleText,1438," bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ChartThresholdPane(XYChart<Number,Number> chart). Note: xAxis and yAxis must be instances of NumberAxis. Method Summary. All MethodsInstance Methods",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:6287,Security,access,accessibleHelpProperty,6287,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:6311,Security,access,accessibleRoleDescriptionProperty,6311,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:6346,Security,access,accessibleRoleProperty,6346,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:6370,Security,access,accessibleTextProperty,6370,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:12158,Security,hash,hashCode,12158,"ouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. lineWidth; public DoubleProperty lineWidthProperty; Line width property used for displaying threshold lines. See Also:. getLineWidth(); setLineWidth(double); lineWidthProperty(). Constructor Details. ChartThresholdPane; public ChartThresholdPane(XYChart<Number,Number> chart); Note: xAxis and yAxis must be instances of NumberAxis. Parameters:; chart - . Method Details. setThresholds; public void setThresholds(Color color,; double... thresholds); Set thresholds, which are visualized as vertical lines. Parameters:; color - ; thresholds - . getThresholds; public ObservableList<ObservableNumberValue> getThresholds(); Get a list of all thresholds. Returns:. clearThresholds; public void clearThresholds(); Clear all thresholds. setThresholdColor; public void setThresholdColor(ObservableNumberValue val,; Color color); Set the color of a specified threshold line",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:3305,Usability,clear,clearThresholds,3305,"ht, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ChartThresholdPane(XYChart<Number,Number> chart). Note: xAxis and yAxis must be instances of NumberAxis. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableNumberValue; addThreshold(double x). Add a threshold value. ObservableNumberValue; addThreshold(double x,; Color color). Add a threshold value with its display color. ObservableNumberValue; addThreshold(ObservableNumberValue d). Add a threshold value. void; clearThresholds(). Clear all thresholds. double; getLineWidth(). Get the threshold line width. ObservableList<ObservableNumberValue>; getThresholds(). Get a list of all thresholds. boolean; isInteractive(). Returns the value of isInteractiveProperty(). BooleanProperty; isInteractiveProperty(). Property indicating whether thresholds can be adjusted interactively. DoubleProperty; lineWidthProperty(). Line width property used for displaying threshold lines. void; setIsInteractive(boolean isInteractive). Sets the value of isInteractiveProperty(). void; setLineWidth(double width). Set the threshold line width. void; setThresholdColor(ObservableNumberValue val,; Color color). Set the color of a specified threshold line. void; setThresholds(Color color,; double... thresholds). Set thresholds, which are visualized as vertical lines. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, comp",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:4235,Usability,clear,clearConstraints,4235,". Get the threshold line width. ObservableList<ObservableNumberValue>; getThresholds(). Get a list of all thresholds. boolean; isInteractive(). Returns the value of isInteractiveProperty(). BooleanProperty; isInteractiveProperty(). Property indicating whether thresholds can be adjusted interactively. DoubleProperty; lineWidthProperty(). Line width property used for displaying threshold lines. void; setIsInteractive(boolean isInteractive). Sets the value of isInteractiveProperty(). void; setLineWidth(double width). Set the threshold line width. void; setThresholdColor(ObservableNumberValue val,; Color color). Set the color of a specified threshold line. void; setThresholds(Color color,; double... thresholds). Set thresholds, which are visualized as vertical lines. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:12956,Usability,clear,clearThresholds,12956,"lateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. lineWidth; public DoubleProperty lineWidthProperty; Line width property used for displaying threshold lines. See Also:. getLineWidth(); setLineWidth(double); lineWidthProperty(). Constructor Details. ChartThresholdPane; public ChartThresholdPane(XYChart<Number,Number> chart); Note: xAxis and yAxis must be instances of NumberAxis. Parameters:; chart - . Method Details. setThresholds; public void setThresholds(Color color,; double... thresholds); Set thresholds, which are visualized as vertical lines. Parameters:; color - ; thresholds - . getThresholds; public ObservableList<ObservableNumberValue> getThresholds(); Get a list of all thresholds. Returns:. clearThresholds; public void clearThresholds(); Clear all thresholds. setThresholdColor; public void setThresholdColor(ObservableNumberValue val,; Color color); Set the color of a specified threshold line. Parameters:; val - ; color - . addThreshold; public ObservableNumberValue addThreshold(double x); Add a threshold value. Parameters:; x - ; Returns:. addThreshold; public ObservableNumberValue addThreshold(double x,; Color color); Add a threshold value with its display color. Parameters:; x - ; color - ; Returns:. addThreshold; public ObservableNumberValue addThreshold(ObservableNumberValue d); Add a threshold value. Parameters:; d - ; Returns:. lineWidthProperty; public DoubleProperty lineWidthProperty(); Line width property used for displaying threshold lines. Returns:; See Also:. getLineWidth(); setLineWidth(double). getLineWidth; public double getLineWidth(); Get the threshold line width. Returns:. setLineWidth; public void setLineWidth(double width); Set the threshold line width. Parameters:; width - . isInterac",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:12985,Usability,clear,clearThresholds,12985,"lateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. lineWidth; public DoubleProperty lineWidthProperty; Line width property used for displaying threshold lines. See Also:. getLineWidth(); setLineWidth(double); lineWidthProperty(). Constructor Details. ChartThresholdPane; public ChartThresholdPane(XYChart<Number,Number> chart); Note: xAxis and yAxis must be instances of NumberAxis. Parameters:; chart - . Method Details. setThresholds; public void setThresholds(Color color,; double... thresholds); Set thresholds, which are visualized as vertical lines. Parameters:; color - ; thresholds - . getThresholds; public ObservableList<ObservableNumberValue> getThresholds(); Get a list of all thresholds. Returns:. clearThresholds; public void clearThresholds(); Clear all thresholds. setThresholdColor; public void setThresholdColor(ObservableNumberValue val,; Color color); Set the color of a specified threshold line. Parameters:; val - ; color - . addThreshold; public ObservableNumberValue addThreshold(double x); Add a threshold value. Parameters:; x - ; Returns:. addThreshold; public ObservableNumberValue addThreshold(double x,; Color color); Add a threshold value with its display color. Parameters:; x - ; color - ; Returns:. addThreshold; public ObservableNumberValue addThreshold(ObservableNumberValue d); Add a threshold value. Parameters:; d - ; Returns:. lineWidthProperty; public DoubleProperty lineWidthProperty(); Line width property used for displaying threshold lines. Returns:; See Also:. getLineWidth(); setLineWidth(double). getLineWidth; public double getLineWidth(); Get the threshold line width. Returns:. setLineWidth; public void setLineWidth(double width); Set the threshold line width. Parameters:; width - . isInterac",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html:3738,Deployability,update,update,3738,"rtInteractive; public static void makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis); Make it possible to select chart regions to zoom in, and scroll to navigate around it.; ; Also double-click to stop zooming. Parameters:; chart - ; xAxis - ; yAxis - . addChartExportMenu; public static void addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu); Add a menu item to a context menu for displaying a chart for export. Parameters:; chart - ; menu - . setLineChartLegendLines; public static void setLineChartLegendLines(Chart chart,; double length); Charts tend to show their legends with circular/square markers... which isn't much use ; when line strokes distinguish between different Series.; ; This method addresses this by setting the graphics for legend labels to be lines with the appropriate strokes. Parameters:; chart - ; length - . expandChartClip; public static void expandChartClip(Chart chart,; double pad); Expand the clip region for a chart.; ; This helps to avoid clipping off markers at the chart boundaries. Parameters:; chart - ; pad - The amount by which to expand the clip rectangle in each direction; if < 0, the clip will be completely removed. setPieChartData; public static <T> void setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips); Set pie chart data from a count map. Type Parameters:; T - the type of the data being counted; Parameters:; chart - the pie chart to update; counts - mapping between items and their counts; stringFun - function to extract a string from each item (may be null to use default toString() method); colorFun - function to extract a color from each item (may be null to use default colors); convertToPercentages - if true, convert counts to percentages; if false, use original values; includeTooltips - if true, install tooltips for each 'slice' to display the numeric information. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html:4111,Deployability,install,install,4111,"rtInteractive; public static void makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis); Make it possible to select chart regions to zoom in, and scroll to navigate around it.; ; Also double-click to stop zooming. Parameters:; chart - ; xAxis - ; yAxis - . addChartExportMenu; public static void addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu); Add a menu item to a context menu for displaying a chart for export. Parameters:; chart - ; menu - . setLineChartLegendLines; public static void setLineChartLegendLines(Chart chart,; double length); Charts tend to show their legends with circular/square markers... which isn't much use ; when line strokes distinguish between different Series.; ; This method addresses this by setting the graphics for legend labels to be lines with the appropriate strokes. Parameters:; chart - ; length - . expandChartClip; public static void expandChartClip(Chart chart,; double pad); Expand the clip region for a chart.; ; This helps to avoid clipping off markers at the chart boundaries. Parameters:; chart - ; pad - The amount by which to expand the clip rectangle in each direction; if < 0, the clip will be completely removed. setPieChartData; public static <T> void setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips); Set pie chart data from a count map. Type Parameters:; T - the type of the data being counted; Parameters:; chart - the pie chart to update; counts - mapping between items and their counts; stringFun - function to extract a string from each item (may be null to use default toString() method); colorFun - function to extract a color from each item (may be null to use default colors); convertToPercentages - if true, convert counts to percentages; if false, use original values; includeTooltips - if true, install tooltips for each 'slice' to display the numeric information. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html:543,Energy Efficiency,adapt,adapting,543,". ChartTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class ChartTools. java.lang.Object; qupath.lib.gui.charts.ChartTools. public class ChartTools; extends Object; Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ChartTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu). Add a menu item to a context menu for displaying a chart for export. static void; expandChartClip(Chart chart,; double pad). Expand the clip region for a chart. static String; getChartDataAsString(XYChart<Number,Number> chart). Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. static void; makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis). Make it possible to select chart regions to zoom in, and scroll to navigate around it. static void; setLineChartLegendLines(Chart chart,; double length). Charts tend to show their legends with circular/square markers... static <T> void; setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips). Set pie chart data from a count map. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChartTools; public ChartTools(). Method Details. getChartDataAsString; public static String getChartDataA",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html:451,Modifiability,extend,extends,451,". ChartTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class ChartTools. java.lang.Object; qupath.lib.gui.charts.ChartTools. public class ChartTools; extends Object; Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ChartTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu). Add a menu item to a context menu for displaying a chart for export. static void; expandChartClip(Chart chart,; double pad). Expand the clip region for a chart. static String; getChartDataAsString(XYChart<Number,Number> chart). Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. static void; makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis). Make it possible to select chart regions to zoom in, and scroll to navigate around it. static void; setLineChartLegendLines(Chart chart,; double length). Charts tend to show their legends with circular/square markers... static <T> void; setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips). Set pie chart data from a count map. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChartTools; public ChartTools(). Method Details. getChartDataAsString; public static String getChartDataA",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html:543,Modifiability,adapt,adapting,543,". ChartTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class ChartTools. java.lang.Object; qupath.lib.gui.charts.ChartTools. public class ChartTools; extends Object; Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ChartTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu). Add a menu item to a context menu for displaying a chart for export. static void; expandChartClip(Chart chart,; double pad). Expand the clip region for a chart. static String; getChartDataAsString(XYChart<Number,Number> chart). Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. static void; makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis). Make it possible to select chart regions to zoom in, and scroll to navigate around it. static void; setLineChartLegendLines(Chart chart,; double length). Charts tend to show their legends with circular/square markers... static <T> void; setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips). Set pie chart data from a count map. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChartTools; public ChartTools(). Method Details. getChartDataAsString; public static String getChartDataA",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html:1557,Modifiability,extend,extends,1557,"khead. Constructor Summary; Constructors. Constructor; Description; ChartTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu). Add a menu item to a context menu for displaying a chart for export. static void; expandChartClip(Chart chart,; double pad). Expand the clip region for a chart. static String; getChartDataAsString(XYChart<Number,Number> chart). Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. static void; makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis). Make it possible to select chart regions to zoom in, and scroll to navigate around it. static void; setLineChartLegendLines(Chart chart,; double length). Charts tend to show their legends with circular/square markers... static <T> void; setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips). Set pie chart data from a count map. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChartTools; public ChartTools(). Method Details. getChartDataAsString; public static String getChartDataAsString(XYChart<Number,Number> chart); Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. Parameters:; chart - ; Returns:. makeChartInteractive; public static void makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis); Make it possible to select chart regions to zoom in, and scroll to navigate around it.; ; Also double-click to stop zooming. Parameters:; chart - ; xAxis - ; yAxis - . addChartExportMenu; public static void addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu); Add a menu item to a context menu ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html:1744,Modifiability,inherit,inherited,1744,"nd Type; Method; Description; static void; addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu). Add a menu item to a context menu for displaying a chart for export. static void; expandChartClip(Chart chart,; double pad). Expand the clip region for a chart. static String; getChartDataAsString(XYChart<Number,Number> chart). Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. static void; makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis). Make it possible to select chart regions to zoom in, and scroll to navigate around it. static void; setLineChartLegendLines(Chart chart,; double length). Charts tend to show their legends with circular/square markers... static <T> void; setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips). Set pie chart data from a count map. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChartTools; public ChartTools(). Method Details. getChartDataAsString; public static String getChartDataAsString(XYChart<Number,Number> chart); Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. Parameters:; chart - ; Returns:. makeChartInteractive; public static void makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis); Make it possible to select chart regions to zoom in, and scroll to navigate around it.; ; Also double-click to stop zooming. Parameters:; chart - ; xAxis - ; yAxis - . addChartExportMenu; public static void addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu); Add a menu item to a context menu for displaying a chart for export. Parameters:; chart - ; menu - . setLineChartLegendLines; public static void setLineChartLegendLines(Chart chart,; double",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html:3463,Modifiability,extend,extends,3463,"rtInteractive; public static void makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis); Make it possible to select chart regions to zoom in, and scroll to navigate around it.; ; Also double-click to stop zooming. Parameters:; chart - ; xAxis - ; yAxis - . addChartExportMenu; public static void addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu); Add a menu item to a context menu for displaying a chart for export. Parameters:; chart - ; menu - . setLineChartLegendLines; public static void setLineChartLegendLines(Chart chart,; double length); Charts tend to show their legends with circular/square markers... which isn't much use ; when line strokes distinguish between different Series.; ; This method addresses this by setting the graphics for legend labels to be lines with the appropriate strokes. Parameters:; chart - ; length - . expandChartClip; public static void expandChartClip(Chart chart,; double pad); Expand the clip region for a chart.; ; This helps to avoid clipping off markers at the chart boundaries. Parameters:; chart - ; pad - The amount by which to expand the clip rectangle in each direction; if < 0, the clip will be completely removed. setPieChartData; public static <T> void setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips); Set pie chart data from a count map. Type Parameters:; T - the type of the data being counted; Parameters:; chart - the pie chart to update; counts - mapping between items and their counts; stringFun - function to extract a string from each item (may be null to use default toString() method); colorFun - function to extract a color from each item (may be null to use default colors); convertToPercentages - if true, convert counts to percentages; if false, use original values; includeTooltips - if true, install tooltips for each 'slice' to display the numeric information. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html:3188,Safety,avoid,avoid,3188,"rtInteractive; public static void makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis); Make it possible to select chart regions to zoom in, and scroll to navigate around it.; ; Also double-click to stop zooming. Parameters:; chart - ; xAxis - ; yAxis - . addChartExportMenu; public static void addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu); Add a menu item to a context menu for displaying a chart for export. Parameters:; chart - ; menu - . setLineChartLegendLines; public static void setLineChartLegendLines(Chart chart,; double length); Charts tend to show their legends with circular/square markers... which isn't much use ; when line strokes distinguish between different Series.; ; This method addresses this by setting the graphics for legend labels to be lines with the appropriate strokes. Parameters:; chart - ; length - . expandChartClip; public static void expandChartClip(Chart chart,; double pad); Expand the clip region for a chart.; ; This helps to avoid clipping off markers at the chart boundaries. Parameters:; chart - ; pad - The amount by which to expand the clip rectangle in each direction; if < 0, the clip will be completely removed. setPieChartData; public static <T> void setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips); Set pie chart data from a count map. Type Parameters:; T - the type of the data being counted; Parameters:; chart - the pie chart to update; counts - mapping between items and their counts; stringFun - function to extract a string from each item (may be null to use default toString() method); colorFun - function to extract a color from each item (may be null to use default colors); convertToPercentages - if true, convert counts to percentages; if false, use original values; includeTooltips - if true, install tooltips for each 'slice' to display the numeric information. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html:1818,Security,hash,hashCode,1818,"mber,Number> chart,; ContextMenu menu). Add a menu item to a context menu for displaying a chart for export. static void; expandChartClip(Chart chart,; double pad). Expand the clip region for a chart. static String; getChartDataAsString(XYChart<Number,Number> chart). Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. static void; makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis). Make it possible to select chart regions to zoom in, and scroll to navigate around it. static void; setLineChartLegendLines(Chart chart,; double length). Charts tend to show their legends with circular/square markers... static <T> void; setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips). Set pie chart data from a count map. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChartTools; public ChartTools(). Method Details. getChartDataAsString; public static String getChartDataAsString(XYChart<Number,Number> chart); Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. Parameters:; chart - ; Returns:. makeChartInteractive; public static void makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis); Make it possible to select chart regions to zoom in, and scroll to navigate around it.; ; Also double-click to stop zooming. Parameters:; chart - ; xAxis - ; yAxis - . addChartExportMenu; public static void addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu); Add a menu item to a context menu for displaying a chart for export. Parameters:; chart - ; menu - . setLineChartLegendLines; public static void setLineChartLegendLines(Chart chart,; double length); Charts tend to show their legends with circular/square markers",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:911,Integrability,interface,interfaces,911,". HistogramChart.CountsTransformMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.charts; Enum Class HistogramChart.CountsTransformMode. java.lang.Object; java.lang.Enum<HistogramChart.CountsTransformMode>; qupath.lib.gui.charts.HistogramChart.CountsTransformMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.CountsTransformMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.CountsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransf",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:778,Modifiability,extend,extends,778,". HistogramChart.CountsTransformMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.charts; Enum Class HistogramChart.CountsTransformMode. java.lang.Object; java.lang.Enum<HistogramChart.CountsTransformMode>; qupath.lib.gui.charts.HistogramChart.CountsTransformMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.CountsTransformMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.CountsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransf",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:922,Modifiability,inherit,inherited,922,". HistogramChart.CountsTransformMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.charts; Enum Class HistogramChart.CountsTransformMode. java.lang.Object; java.lang.Enum<HistogramChart.CountsTransformMode>; qupath.lib.gui.charts.HistogramChart.CountsTransformMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.CountsTransformMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.CountsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransf",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:975,Modifiability,extend,extends,975,". HistogramChart.CountsTransformMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.charts; Enum Class HistogramChart.CountsTransformMode. java.lang.Object; java.lang.Enum<HistogramChart.CountsTransformMode>; qupath.lib.gui.charts.HistogramChart.CountsTransformMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.CountsTransformMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.CountsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransf",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:1589,Modifiability,inherit,inherited,1589,"ented Interfaces:; Serializable, Comparable<HistogramChart.CountsTransformMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.CountsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransformMode NORMALIZED; Normalized bin counts, so that the sum of all counts is 1.0. LOGARITHM; public static final HistogramChart.CountsTransformMode LOGARITHM; Natural logarithm of raw bin counts.; This is useful for displaying histograms with a wide range of counts.; Bins with zero counts are displayed as zero.; ; Important: HistogramChart cannot currently adjust the tick display to indicate a log scale. Method Details. values; public static HistogramChart.CountsTransformMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:1752,Modifiability,inherit,inherited,1752,"ntsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransformMode NORMALIZED; Normalized bin counts, so that the sum of all counts is 1.0. LOGARITHM; public static final HistogramChart.CountsTransformMode LOGARITHM; Natural logarithm of raw bin counts.; This is useful for displaying histograms with a wide range of counts.; Bins with zero counts are displayed as zero.; ; Important: HistogramChart cannot currently adjust the tick display to indicate a log scale. Method Details. values; public static HistogramChart.CountsTransformMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static HistogramChart.CountsTransformMode valueOf(String name",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:1700,Security,hash,hashCode,1700,"stable. Enclosing class:; HistogramChart. public static enum HistogramChart.CountsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransformMode NORMALIZED; Normalized bin counts, so that the sum of all counts is 1.0. LOGARITHM; public static final HistogramChart.CountsTransformMode LOGARITHM; Natural logarithm of raw bin counts.; This is useful for displaying histograms with a wide range of counts.; Bins with zero counts are displayed as zero.; ; Important: HistogramChart cannot currently adjust the tick display to indicate a log scale. Method Details. values; public static HistogramChart.CountsTransformMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:1079,Testability,log,logarithm,1079,"ser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.charts; Enum Class HistogramChart.CountsTransformMode. java.lang.Object; java.lang.Enum<HistogramChart.CountsTransformMode>; qupath.lib.gui.charts.HistogramChart.CountsTransformMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.CountsTransformMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.CountsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransformMode NORMALIZED; Normalized bin counts, so that the sum of all counts is 1.0. LOGARIT",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:2167,Testability,log,logarithm,2167," all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransformMode NORMALIZED; Normalized bin counts, so that the sum of all counts is 1.0. LOGARITHM; public static final HistogramChart.CountsTransformMode LOGARITHM; Natural logarithm of raw bin counts.; This is useful for displaying histograms with a wide range of counts.; Bins with zero counts are displayed as zero.; ; Important: HistogramChart cannot currently adjust the tick display to indicate a log scale. Method Details. values; public static HistogramChart.CountsTransformMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static HistogramChart.CountsTransformMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:2397,Testability,log,log,2397,"oncrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransformMode NORMALIZED; Normalized bin counts, so that the sum of all counts is 1.0. LOGARITHM; public static final HistogramChart.CountsTransformMode LOGARITHM; Natural logarithm of raw bin counts.; This is useful for displaying histograms with a wide range of counts.; Bins with zero counts are displayed as zero.; ; Important: HistogramChart cannot currently adjust the tick display to indicate a log scale. Method Details. values; public static HistogramChart.CountsTransformMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static HistogramChart.CountsTransformMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html:841,Integrability,interface,interfaces,841,". HistogramChart.DisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.charts; Enum Class HistogramChart.DisplayMode. java.lang.Object; java.lang.Enum<HistogramChart.DisplayMode>; qupath.lib.gui.charts.HistogramChart.DisplayMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.DisplayMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.DisplayMode; extends Enum<HistogramChart.DisplayMode>; Display mode for the histogram. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Show as areas. BAR. Show as bars. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.DisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.DisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BAR; public static final HistogramChart.DisplayMode BAR; Show as bars.; This is the default, and is preferable for histograms with few bins. AREA; public static final HistogramChart.DisplayMode AREA; Show as areas.; This can be preferable for histograms with many bins, where only the overall shape is imporant. Method Details. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html:730,Modifiability,extend,extends,730,". HistogramChart.DisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.charts; Enum Class HistogramChart.DisplayMode. java.lang.Object; java.lang.Enum<HistogramChart.DisplayMode>; qupath.lib.gui.charts.HistogramChart.DisplayMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.DisplayMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.DisplayMode; extends Enum<HistogramChart.DisplayMode>; Display mode for the histogram. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Show as areas. BAR. Show as bars. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.DisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.DisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BAR; public static final HistogramChart.DisplayMode BAR; Show as bars.; This is the default, and is preferable for histograms with few bins. AREA; public static final HistogramChart.DisplayMode AREA; Show as areas.; This can be preferable for histograms with many bins, where only the overall shape is imporant. Method Details. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html:852,Modifiability,inherit,inherited,852,". HistogramChart.DisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.charts; Enum Class HistogramChart.DisplayMode. java.lang.Object; java.lang.Enum<HistogramChart.DisplayMode>; qupath.lib.gui.charts.HistogramChart.DisplayMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.DisplayMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.DisplayMode; extends Enum<HistogramChart.DisplayMode>; Display mode for the histogram. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Show as areas. BAR. Show as bars. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.DisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.DisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BAR; public static final HistogramChart.DisplayMode BAR; Show as bars.; This is the default, and is preferable for histograms with few bins. AREA; public static final HistogramChart.DisplayMode AREA; Show as areas.; This can be preferable for histograms with many bins, where only the overall shape is imporant. Method Details. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html:905,Modifiability,extend,extends,905,". HistogramChart.DisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.charts; Enum Class HistogramChart.DisplayMode. java.lang.Object; java.lang.Enum<HistogramChart.DisplayMode>; qupath.lib.gui.charts.HistogramChart.DisplayMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.DisplayMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.DisplayMode; extends Enum<HistogramChart.DisplayMode>; Display mode for the histogram. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Show as areas. BAR. Show as bars. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.DisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.DisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BAR; public static final HistogramChart.DisplayMode BAR; Show as bars.; This is the default, and is preferable for histograms with few bins. AREA; public static final HistogramChart.DisplayMode AREA; Show as areas.; This can be preferable for histograms with many bins, where only the overall shape is imporant. Method Details. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html:1401,Modifiability,inherit,inherited,1401,"Class HistogramChart.DisplayMode. java.lang.Object; java.lang.Enum<HistogramChart.DisplayMode>; qupath.lib.gui.charts.HistogramChart.DisplayMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.DisplayMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.DisplayMode; extends Enum<HistogramChart.DisplayMode>; Display mode for the histogram. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Show as areas. BAR. Show as bars. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.DisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.DisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BAR; public static final HistogramChart.DisplayMode BAR; Show as bars.; This is the default, and is preferable for histograms with few bins. AREA; public static final HistogramChart.DisplayMode AREA; Show as areas.; This can be preferable for histograms with many bins, where only the overall shape is imporant. Method Details. values; public static HistogramChart.DisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static HistogramChart.DisplayMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must mat",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html:1564,Modifiability,inherit,inherited,1564,"nterfaces:; Serializable, Comparable<HistogramChart.DisplayMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.DisplayMode; extends Enum<HistogramChart.DisplayMode>; Display mode for the histogram. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Show as areas. BAR. Show as bars. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.DisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.DisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BAR; public static final HistogramChart.DisplayMode BAR; Show as bars.; This is the default, and is preferable for histograms with few bins. AREA; public static final HistogramChart.DisplayMode AREA; Show as areas.; This can be preferable for histograms with many bins, where only the overall shape is imporant. Method Details. values; public static HistogramChart.DisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static HistogramChart.DisplayMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html:1512,Security,hash,hashCode,1512,"splayMode>; qupath.lib.gui.charts.HistogramChart.DisplayMode. All Implemented Interfaces:; Serializable, Comparable<HistogramChart.DisplayMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.DisplayMode; extends Enum<HistogramChart.DisplayMode>; Display mode for the histogram. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Show as areas. BAR. Show as bars. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.DisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.DisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BAR; public static final HistogramChart.DisplayMode BAR; Show as bars.; This is the default, and is preferable for histograms with few bins. AREA; public static final HistogramChart.DisplayMode AREA; Show as areas.; This can be preferable for histograms with many bins, where only the overall shape is imporant. Method Details. values; public static HistogramChart.DisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static HistogramChart.DisplayMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneou",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.HistogramData.html:564,Modifiability,extend,extends,564,". HistogramChart.HistogramData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class HistogramChart.HistogramData. java.lang.Object; qupath.lib.gui.charts.HistogramChart.HistogramData. Enclosing class:; HistogramChart. public static class HistogramChart.HistogramData; extends Object; Helper class for representing data that may be visualized with a HistogramChart. Constructor Summary; Constructors. Constructor; Description; HistogramData(Histogram histogram,; Color color). Wrapper for histogram & data relevant to its display. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Color; getFill(). Get the histogram fill color. Histogram; getHistogram(). Get the histogram. Color; getStroke(). Get the histogram stroke color. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramData; public HistogramData(Histogram histogram,; Color color); Wrapper for histogram & data relevant to its display. Parameters:; histogram - ; color - . Method Details. getStroke; public Color getStroke(); Get the histogram stroke color. Returns:. getFill; public Color getFill(); Get the histogram fill color. Returns:. getHistogram; public Histogram getHistogram(); Get the histogram. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.HistogramData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.HistogramData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.HistogramData.html:1081,Modifiability,inherit,inherited,1081,". HistogramChart.HistogramData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class HistogramChart.HistogramData. java.lang.Object; qupath.lib.gui.charts.HistogramChart.HistogramData. Enclosing class:; HistogramChart. public static class HistogramChart.HistogramData; extends Object; Helper class for representing data that may be visualized with a HistogramChart. Constructor Summary; Constructors. Constructor; Description; HistogramData(Histogram histogram,; Color color). Wrapper for histogram & data relevant to its display. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Color; getFill(). Get the histogram fill color. Histogram; getHistogram(). Get the histogram. Color; getStroke(). Get the histogram stroke color. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramData; public HistogramData(Histogram histogram,; Color color); Wrapper for histogram & data relevant to its display. Parameters:; histogram - ; color - . Method Details. getStroke; public Color getStroke(); Get the histogram stroke color. Returns:. getFill; public Color getFill(); Get the histogram fill color. Returns:. getHistogram; public Histogram getHistogram(); Get the histogram. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.HistogramData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.HistogramData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.HistogramData.html:1155,Security,hash,hashCode,1155,". HistogramChart.HistogramData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class HistogramChart.HistogramData. java.lang.Object; qupath.lib.gui.charts.HistogramChart.HistogramData. Enclosing class:; HistogramChart. public static class HistogramChart.HistogramData; extends Object; Helper class for representing data that may be visualized with a HistogramChart. Constructor Summary; Constructors. Constructor; Description; HistogramData(Histogram histogram,; Color color). Wrapper for histogram & data relevant to its display. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Color; getFill(). Get the histogram fill color. Histogram; getHistogram(). Get the histogram. Color; getStroke(). Get the histogram stroke color. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramData; public HistogramData(Histogram histogram,; Color color); Wrapper for histogram & data relevant to its display. Parameters:; histogram - ; color - . Method Details. getStroke; public Color getStroke(); Get the histogram stroke color. Returns:. getFill; public Color getFill(); Get the histogram fill color. Returns:. getHistogram; public Histogram getHistogram(); Get the histogram. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.HistogramData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.HistogramData.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:6623,Deployability,update,updateAxisRange,6623,"ayMode; getDisplayMode(). Get the histogram display mode. boolean; getHideIfEmpty(). Query whether the chart is automatically hidden (visibility set to false) when there is no data. ObservableList<HistogramChart.HistogramData>; getHistogramData(). Get all histogram data objects. BooleanProperty; hideIfEmptyProperty(). Property controlling whether the chart should be hidden if there is no data. void; setCountsTransform(HistogramChart.CountsTransformMode mode). Set the current counts transform. void; setDisplayMode(HistogramChart.DisplayMode mode). Set the histogram display mode. void; setHideIfEmpty(boolean doHide). Request that the chart is automatically hidden (visibility set to false) when there is no data. void; setShowTickLabels(boolean showTickLabels). Request that tick labels are visible or not for both x and y axis. Methods inherited from class javafx.scene.chart.AreaChart; createSymbolsProperty, dataItemAdded, dataItemChanged, dataItemRemoved, getClassCssMetaData, getCreateSymbols, getCssMetaData, layoutPlotChildren, seriesAdded, seriesChanged, seriesRemoved, setCreateSymbols, updateAxisRange. Methods inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisibleProperty, alternativeRowFillVisibleProperty, currentDisplayedExtraValueProperty, currentDisplayedXValueProperty, currentDisplayedYValueProperty, dataProperty, getCurrentDisplayedExtraValue, getCurrentDisplayedXValue, getCurrentDisplayedYValue, getData, getDisplayedDataIterator, getDisplayedSeriesIterator, getPlotChildren, getVerticalGridLinesVisible, getXAxis, getYAxis, horizontalGridLinesVisibleProperty, horizontalZeroLineVisibleProperty, isAlternativeColumnFillVisible, isAlternativeRowFillVisible, isHorizontalGridLinesVisible, isHorizontalZeroLineVisible, isVerticalZeroLineVisible, layoutChartChildren, removeDataItemFromDisplay, removeSeriesFromDisplay, setAlternativeColumnFillVisible, setAlternativeRowFillVisible, setCurrentDisplayedExtraValue, setCurrentDisplayedXValue, setCurrentDi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:7664,Deployability,update,updateLegend,7664," when there is no data. void; setShowTickLabels(boolean showTickLabels). Request that tick labels are visible or not for both x and y axis. Methods inherited from class javafx.scene.chart.AreaChart; createSymbolsProperty, dataItemAdded, dataItemChanged, dataItemRemoved, getClassCssMetaData, getCreateSymbols, getCssMetaData, layoutPlotChildren, seriesAdded, seriesChanged, seriesRemoved, setCreateSymbols, updateAxisRange. Methods inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisibleProperty, alternativeRowFillVisibleProperty, currentDisplayedExtraValueProperty, currentDisplayedXValueProperty, currentDisplayedYValueProperty, dataProperty, getCurrentDisplayedExtraValue, getCurrentDisplayedXValue, getCurrentDisplayedYValue, getData, getDisplayedDataIterator, getDisplayedSeriesIterator, getPlotChildren, getVerticalGridLinesVisible, getXAxis, getYAxis, horizontalGridLinesVisibleProperty, horizontalZeroLineVisibleProperty, isAlternativeColumnFillVisible, isAlternativeRowFillVisible, isHorizontalGridLinesVisible, isHorizontalZeroLineVisible, isVerticalZeroLineVisible, layoutChartChildren, removeDataItemFromDisplay, removeSeriesFromDisplay, setAlternativeColumnFillVisible, setAlternativeRowFillVisible, setCurrentDisplayedExtraValue, setCurrentDisplayedXValue, setCurrentDisplayedYValue, setData, setHorizontalGridLinesVisible, setHorizontalZeroLineVisible, setVerticalGridLinesVisible, setVerticalZeroLineVisible, updateLegend, verticalGridLinesVisibleProperty, verticalZeroLineVisibleProperty. Methods inherited from class javafx.scene.chart.Chart; animate, animatedProperty, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAnimated, getChartChildren, getLegend, getLegendSide, getTitle, getTitleSide, isLegendVisible, layoutChildren, legendProperty, legendSideProperty, legendVisibleProperty, requestChartLayout, setAnimated, setLegend, setLegendSide, setLegendVisible, setTitle, setTitleSide, shouldAnimate, titleProperty, titleSideProp",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:9808,Deployability,update,updateBounds,9808,"ayoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildren, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestLayout, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, getBlendMode, getBoundsInLocal, getBoundsInParent, getCacheHint, getClip, getContentBias, getCursor, getDepthTest, getEffect, getEffect",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:4261,Integrability,interface,interfaces,4261,"yTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/interfaces inherited from class javafx.scene.chart.XYChart; XYChart.Data<X,Y>, XYChart.Series<X,Y>. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; HistogramChart();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransformProperty(). Property to control how counts should be transformed before being; shown in the histogram. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Integer color). Create a HistogramData object to wrap a histogram & some info about its display. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Color color). Create a HistogramData object to wrap a histogram & some info about its display. ObjectPrope",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:5040,Integrability,wrap,wrap,5040,"static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/interfaces inherited from class javafx.scene.chart.XYChart; XYChart.Data<X,Y>, XYChart.Series<X,Y>. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; HistogramChart();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransformProperty(). Property to control how counts should be transformed before being; shown in the histogram. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Integer color). Create a HistogramData object to wrap a histogram & some info about its display. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Color color). Create a HistogramData object to wrap a histogram & some info about its display. ObjectProperty<HistogramChart.DisplayMode>; displayModeProperty(). Property to control how the histogram is displayed, either using areas or bars. HistogramChart.CountsTransformMode; getCountsTransform(). Get the current counts transform. HistogramChart.DisplayMode; getDisplayMode(). Get the histogram display mode. boolean; getHideIfEmpty(). Query whether the chart is automatically hidden (visibility set to false) when there is no data. ObservableList<HistogramChart.HistogramData>; getHistogramData(). Get all histogram data objects. BooleanProperty; hideIfEmptyProperty(). Property controlling whether the chart should be hidden if there is no data. void; setCountsTransform(HistogramChart.CountsTransformMode mode). Set the current counts transform. void; setDisplayMode(Histogr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:5214,Integrability,wrap,wrap,5214,"ed with a HistogramChart. Nested classes/interfaces inherited from class javafx.scene.chart.XYChart; XYChart.Data<X,Y>, XYChart.Series<X,Y>. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; HistogramChart();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransformProperty(). Property to control how counts should be transformed before being; shown in the histogram. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Integer color). Create a HistogramData object to wrap a histogram & some info about its display. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Color color). Create a HistogramData object to wrap a histogram & some info about its display. ObjectProperty<HistogramChart.DisplayMode>; displayModeProperty(). Property to control how the histogram is displayed, either using areas or bars. HistogramChart.CountsTransformMode; getCountsTransform(). Get the current counts transform. HistogramChart.DisplayMode; getDisplayMode(). Get the histogram display mode. boolean; getHideIfEmpty(). Query whether the chart is automatically hidden (visibility set to false) when there is no data. ObservableList<HistogramChart.HistogramData>; getHistogramData(). Get all histogram data objects. BooleanProperty; hideIfEmptyProperty(). Property controlling whether the chart should be hidden if there is no data. void; setCountsTransform(HistogramChart.CountsTransformMode mode). Set the current counts transform. void; setDisplayMode(HistogramChart.DisplayMode mode). Set the histogram display mode. void; setHideIfEmpty(boolean doHide). Request that the chart is automatically hidden (visibility set to false) when",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:15827,Integrability,interface,interface,15827,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. hideIfEmpty; public BooleanProperty hideIfEmptyProperty; Property controlling whether the chart should be hidden if there is no data. See Also:. getHideIfEmpty(); setHideIfEmpty(boolean); hideIfEmptyProperty(). countsTransform; public ObjectProperty<HistogramChart.CountsTransformMode> countsTransformProperty; Property to control how counts should be transformed before being; shown in the histogram. See Also:. getCountsTransform(); setCountsTransform(HistogramChart.CountsTransformMode); countsTransformProperty(). displayMode; public ObjectProperty<HistogramChart.DisplayMode> displayModeProperty; Property to control how the histogram is displayed, either using areas or bars. See Also:. getDisplayMode(); setDisplayMode(HistogramChart.DisplayMode); displayModeProperty(). Constructor Details. HistogramChart; public HistogramChart(). Method Details. hideIfEmptyProperty; public BooleanProperty hideIfEmptyProperty(); Proper",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:18799,Integrability,wrap,wrap,18799,".CountsTransformMode> countsTransformProperty(); Property to control how counts should be transformed before being; shown in the histogram. Returns:; See Also:. getCountsTransform(); setCountsTransform(HistogramChart.CountsTransformMode). getCountsTransform; public HistogramChart.CountsTransformMode getCountsTransform(); Get the current counts transform. Returns:; See Also:. countsTransformProperty(). setCountsTransform; public void setCountsTransform(HistogramChart.CountsTransformMode mode); Set the current counts transform. Parameters:; mode - ; See Also:. countsTransformProperty(). displayModeProperty; public ObjectProperty<HistogramChart.DisplayMode> displayModeProperty(); Property to control how the histogram is displayed, either using areas or bars. Returns:; See Also:. getDisplayMode(); setDisplayMode(HistogramChart.DisplayMode). getDisplayMode; public HistogramChart.DisplayMode getDisplayMode(); Get the histogram display mode. Returns:; See Also:. displayModeProperty(). setDisplayMode; public void setDisplayMode(HistogramChart.DisplayMode mode); Set the histogram display mode. Parameters:; mode - ; See Also:. displayModeProperty(). getHistogramData; public ObservableList<HistogramChart.HistogramData> getHistogramData(); Get all histogram data objects. Returns:. createHistogramData; public static HistogramChart.HistogramData createHistogramData(Histogram histogram,; Color color); Create a HistogramData object to wrap a histogram & some info about its display. Parameters:; histogram - ; color - ; Returns:. createHistogramData; public static HistogramChart.HistogramData createHistogramData(Histogram histogram,; Integer color); Create a HistogramData object to wrap a histogram & some info about its display. Parameters:; histogram - ; color - Packed RGB representation of the color.; Returns:. setShowTickLabels; public void setShowTickLabels(boolean showTickLabels); Request that tick labels are visible or not for both x and y axis. Parameters:; showTickLabels - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:19049,Integrability,wrap,wrap,19049,".CountsTransformMode> countsTransformProperty(); Property to control how counts should be transformed before being; shown in the histogram. Returns:; See Also:. getCountsTransform(); setCountsTransform(HistogramChart.CountsTransformMode). getCountsTransform; public HistogramChart.CountsTransformMode getCountsTransform(); Get the current counts transform. Returns:; See Also:. countsTransformProperty(). setCountsTransform; public void setCountsTransform(HistogramChart.CountsTransformMode mode); Set the current counts transform. Parameters:; mode - ; See Also:. countsTransformProperty(). displayModeProperty; public ObjectProperty<HistogramChart.DisplayMode> displayModeProperty(); Property to control how the histogram is displayed, either using areas or bars. Returns:; See Also:. getDisplayMode(); setDisplayMode(HistogramChart.DisplayMode). getDisplayMode; public HistogramChart.DisplayMode getDisplayMode(); Get the histogram display mode. Returns:; See Also:. displayModeProperty(). setDisplayMode; public void setDisplayMode(HistogramChart.DisplayMode mode); Set the histogram display mode. Parameters:; mode - ; See Also:. displayModeProperty(). getHistogramData; public ObservableList<HistogramChart.HistogramData> getHistogramData(); Get all histogram data objects. Returns:. createHistogramData; public static HistogramChart.HistogramData createHistogramData(Histogram histogram,; Color color); Create a HistogramData object to wrap a histogram & some info about its display. Parameters:; histogram - ; color - ; Returns:. createHistogramData; public static HistogramChart.HistogramData createHistogramData(Histogram histogram,; Integer color); Create a HistogramData object to wrap a histogram & some info about its display. Parameters:; histogram - ; color - Packed RGB representation of the color.; Returns:. setShowTickLabels; public void setShowTickLabels(boolean showTickLabels); Request that tick labels are visible or not for both x and y axis. Parameters:; showTickLabels - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:702,Modifiability,extend,extends,702,". HistogramChart (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class HistogramChart. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.chart.Chart; javafx.scene.chart.XYChart<Number,Number>; javafx.scene.chart.AreaChart<Number,Number>; qupath.lib.gui.charts.HistogramChart. All Implemented Interfaces:; Styleable, EventTarget. public class HistogramChart; extends AreaChart<Number,Number>; JavaFX chart for displaying histograms.; If multiple histograms are shown, these will overlap with one another.; ; Important!> This implementation does not behave quite like the built-in JavaFX charts, by presenting the core; data within XYChart.Series objects.; Instead, the data is stored in HistogramChart.HistogramData objects, which are then used to populate the chart.; ; One advantage of this is that it is easier to control the color of each histogram being displayed.; ; This behavior may change in the future, but for now the user must be careful to only interact with the data through; the list returned by getHistogramData() (and not XYChart.getData() directly). Property Summary; Properties. Type; Property; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransform. Property to control how counts should be transformed before being; shown in the histogram. ObjectProperty<HistogramChart.DisplayMode>; displayMode. Property to control how the histogram is displayed, either using areas or bars. BooleanProperty; hideIfEmpty. Property controlling whether the chart should be hidden if there is no data. Properties inherited from class javafx.scene.chart.AreaChart; createSymbols. Properties inherited from class javafx.scene.chart",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:1885,Modifiability,inherit,inherited,1885,"ehave quite like the built-in JavaFX charts, by presenting the core; data within XYChart.Series objects.; Instead, the data is stored in HistogramChart.HistogramData objects, which are then used to populate the chart.; ; One advantage of this is that it is easier to control the color of each histogram being displayed.; ; This behavior may change in the future, but for now the user must be careful to only interact with the data through; the list returned by getHistogramData() (and not XYChart.getData() directly). Property Summary; Properties. Type; Property; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransform. Property to control how counts should be transformed before being; shown in the histogram. ObjectProperty<HistogramChart.DisplayMode>; displayMode. Property to control how the histogram is displayed, either using areas or bars. BooleanProperty; hideIfEmpty. Property controlling whether the chart should be hidden if there is no data. Properties inherited from class javafx.scene.chart.AreaChart; createSymbols. Properties inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisible, alternativeRowFillVisible, data, horizontalGridLinesVisible, horizontalZeroLineVisible, verticalGridLinesVisible, verticalZeroLineVisible. Properties inherited from class javafx.scene.chart.Chart; animated, legend, legendSide, legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatche",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:1962,Modifiability,inherit,inherited,1962,"hin XYChart.Series objects.; Instead, the data is stored in HistogramChart.HistogramData objects, which are then used to populate the chart.; ; One advantage of this is that it is easier to control the color of each histogram being displayed.; ; This behavior may change in the future, but for now the user must be careful to only interact with the data through; the list returned by getHistogramData() (and not XYChart.getData() directly). Property Summary; Properties. Type; Property; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransform. Property to control how counts should be transformed before being; shown in the histogram. ObjectProperty<HistogramChart.DisplayMode>; displayMode. Property to control how the histogram is displayed, either using areas or bars. BooleanProperty; hideIfEmpty. Property controlling whether the chart should be hidden if there is no data. Properties inherited from class javafx.scene.chart.AreaChart; createSymbols. Properties inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisible, alternativeRowFillVisible, data, horizontalGridLinesVisible, horizontalZeroLineVisible, verticalGridLinesVisible, verticalZeroLineVisible. Properties inherited from class javafx.scene.chart.Chart; animated, legend, legendSide, legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMeth",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:2191,Modifiability,inherit,inherited,2191,"ng displayed.; ; This behavior may change in the future, but for now the user must be careful to only interact with the data through; the list returned by getHistogramData() (and not XYChart.getData() directly). Property Summary; Properties. Type; Property; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransform. Property to control how counts should be transformed before being; shown in the histogram. ObjectProperty<HistogramChart.DisplayMode>; displayMode. Property to control how the histogram is displayed, either using areas or bars. BooleanProperty; hideIfEmpty. Property controlling whether the chart should be hidden if there is no data. Properties inherited from class javafx.scene.chart.AreaChart; createSymbols. Properties inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisible, alternativeRowFillVisible, data, horizontalGridLinesVisible, horizontalZeroLineVisible, verticalGridLinesVisible, verticalZeroLineVisible. Properties inherited from class javafx.scene.chart.Chart; animated, legend, legendSide, legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:2312,Modifiability,inherit,inherited,2312,"ata through; the list returned by getHistogramData() (and not XYChart.getData() directly). Property Summary; Properties. Type; Property; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransform. Property to control how counts should be transformed before being; shown in the histogram. ObjectProperty<HistogramChart.DisplayMode>; displayMode. Property to control how the histogram is displayed, either using areas or bars. BooleanProperty; hideIfEmpty. Property controlling whether the chart should be hidden if there is no data. Properties inherited from class javafx.scene.chart.AreaChart; createSymbols. Properties inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisible, alternativeRowFillVisible, data, horizontalGridLinesVisible, horizontalZeroLineVisible, verticalGridLinesVisible, verticalZeroLineVisible. Properties inherited from class javafx.scene.chart.Chart; animated, legend, legendSide, legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:2560,Modifiability,inherit,inherited,2560,"s should be transformed before being; shown in the histogram. ObjectProperty<HistogramChart.DisplayMode>; displayMode. Property to control how the histogram is displayed, either using areas or bars. BooleanProperty; hideIfEmpty. Property controlling whether the chart should be hidden if there is no data. Properties inherited from class javafx.scene.chart.AreaChart; createSymbols. Properties inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisible, alternativeRowFillVisible, data, horizontalGridLinesVisible, horizontalZeroLineVisible, verticalGridLinesVisible, verticalZeroLineVisible. Properties inherited from class javafx.scene.chart.Chart; animated, legend, legendSide, legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:2626,Modifiability,inherit,inherited,2626,"ctProperty<HistogramChart.DisplayMode>; displayMode. Property to control how the histogram is displayed, either using areas or bars. BooleanProperty; hideIfEmpty. Property controlling whether the chart should be hidden if there is no data. Properties inherited from class javafx.scene.chart.AreaChart; createSymbols. Properties inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisible, alternativeRowFillVisible, data, horizontalGridLinesVisible, horizontalZeroLineVisible, verticalGridLinesVisible, verticalZeroLineVisible. Properties inherited from class javafx.scene.chart.Chart; animated, legend, legendSide, legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:4272,Modifiability,inherit,inherited,4272,"yTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/interfaces inherited from class javafx.scene.chart.XYChart; XYChart.Data<X,Y>, XYChart.Series<X,Y>. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; HistogramChart();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransformProperty(). Property to control how counts should be transformed before being; shown in the histogram. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Integer color). Create a HistogramData object to wrap a histogram & some info about its display. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Color color). Create a HistogramData object to wrap a histogram & some info about its display. ObjectPrope",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:4383,Modifiability,inherit,inherited,4383,"useEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/interfaces inherited from class javafx.scene.chart.XYChart; XYChart.Data<X,Y>, XYChart.Series<X,Y>. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; HistogramChart();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransformProperty(). Property to control how counts should be transformed before being; shown in the histogram. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Integer color). Create a HistogramData object to wrap a histogram & some info about its display. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Color color). Create a HistogramData object to wrap a histogram & some info about its display. ObjectProperty<HistogramChart.DisplayMode>; displayModeProperty(). Property to control how the histogram is displayed, either using",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:4473,Modifiability,inherit,inherited,4473,"tionFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/interfaces inherited from class javafx.scene.chart.XYChart; XYChart.Data<X,Y>, XYChart.Series<X,Y>. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; HistogramChart();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransformProperty(). Property to control how counts should be transformed before being; shown in the histogram. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Integer color). Create a HistogramData object to wrap a histogram & some info about its display. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Color color). Create a HistogramData object to wrap a histogram & some info about its display. ObjectProperty<HistogramChart.DisplayMode>; displayModeProperty(). Property to control how the histogram is displayed, either using areas or bars. HistogramChart.CountsTransformMode; getCountsTransform(). Get the current ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:6364,Modifiability,inherit,inherited,6364,"played, either using areas or bars. HistogramChart.CountsTransformMode; getCountsTransform(). Get the current counts transform. HistogramChart.DisplayMode; getDisplayMode(). Get the histogram display mode. boolean; getHideIfEmpty(). Query whether the chart is automatically hidden (visibility set to false) when there is no data. ObservableList<HistogramChart.HistogramData>; getHistogramData(). Get all histogram data objects. BooleanProperty; hideIfEmptyProperty(). Property controlling whether the chart should be hidden if there is no data. void; setCountsTransform(HistogramChart.CountsTransformMode mode). Set the current counts transform. void; setDisplayMode(HistogramChart.DisplayMode mode). Set the histogram display mode. void; setHideIfEmpty(boolean doHide). Request that the chart is automatically hidden (visibility set to false) when there is no data. void; setShowTickLabels(boolean showTickLabels). Request that tick labels are visible or not for both x and y axis. Methods inherited from class javafx.scene.chart.AreaChart; createSymbolsProperty, dataItemAdded, dataItemChanged, dataItemRemoved, getClassCssMetaData, getCreateSymbols, getCssMetaData, layoutPlotChildren, seriesAdded, seriesChanged, seriesRemoved, setCreateSymbols, updateAxisRange. Methods inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisibleProperty, alternativeRowFillVisibleProperty, currentDisplayedExtraValueProperty, currentDisplayedXValueProperty, currentDisplayedYValueProperty, dataProperty, getCurrentDisplayedExtraValue, getCurrentDisplayedXValue, getCurrentDisplayedYValue, getData, getDisplayedDataIterator, getDisplayedSeriesIterator, getPlotChildren, getVerticalGridLinesVisible, getXAxis, getYAxis, horizontalGridLinesVisibleProperty, horizontalZeroLineVisibleProperty, isAlternativeColumnFillVisible, isAlternativeRowFillVisible, isHorizontalGridLinesVisible, isHorizontalZeroLineVisible, isVerticalZeroLineVisible, layoutChartChildren, removeDataItemFromDisplay, removeSeri",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:6648,Modifiability,inherit,inherited,6648,"sibility set to false) when there is no data. ObservableList<HistogramChart.HistogramData>; getHistogramData(). Get all histogram data objects. BooleanProperty; hideIfEmptyProperty(). Property controlling whether the chart should be hidden if there is no data. void; setCountsTransform(HistogramChart.CountsTransformMode mode). Set the current counts transform. void; setDisplayMode(HistogramChart.DisplayMode mode). Set the histogram display mode. void; setHideIfEmpty(boolean doHide). Request that the chart is automatically hidden (visibility set to false) when there is no data. void; setShowTickLabels(boolean showTickLabels). Request that tick labels are visible or not for both x and y axis. Methods inherited from class javafx.scene.chart.AreaChart; createSymbolsProperty, dataItemAdded, dataItemChanged, dataItemRemoved, getClassCssMetaData, getCreateSymbols, getCssMetaData, layoutPlotChildren, seriesAdded, seriesChanged, seriesRemoved, setCreateSymbols, updateAxisRange. Methods inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisibleProperty, alternativeRowFillVisibleProperty, currentDisplayedExtraValueProperty, currentDisplayedXValueProperty, currentDisplayedYValueProperty, dataProperty, getCurrentDisplayedExtraValue, getCurrentDisplayedXValue, getCurrentDisplayedYValue, getData, getDisplayedDataIterator, getDisplayedSeriesIterator, getPlotChildren, getVerticalGridLinesVisible, getXAxis, getYAxis, horizontalGridLinesVisibleProperty, horizontalZeroLineVisibleProperty, isAlternativeColumnFillVisible, isAlternativeRowFillVisible, isHorizontalGridLinesVisible, isHorizontalZeroLineVisible, isVerticalZeroLineVisible, layoutChartChildren, removeDataItemFromDisplay, removeSeriesFromDisplay, setAlternativeColumnFillVisible, setAlternativeRowFillVisible, setCurrentDisplayedExtraValue, setCurrentDisplayedXValue, setCurrentDisplayedYValue, setData, setHorizontalGridLinesVisible, setHorizontalZeroLineVisible, setVerticalGridLinesVisible, setVerticalZeroLineVis",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:7753,Modifiability,inherit,inherited,7753,"operty, currentDisplayedExtraValueProperty, currentDisplayedXValueProperty, currentDisplayedYValueProperty, dataProperty, getCurrentDisplayedExtraValue, getCurrentDisplayedXValue, getCurrentDisplayedYValue, getData, getDisplayedDataIterator, getDisplayedSeriesIterator, getPlotChildren, getVerticalGridLinesVisible, getXAxis, getYAxis, horizontalGridLinesVisibleProperty, horizontalZeroLineVisibleProperty, isAlternativeColumnFillVisible, isAlternativeRowFillVisible, isHorizontalGridLinesVisible, isHorizontalZeroLineVisible, isVerticalZeroLineVisible, layoutChartChildren, removeDataItemFromDisplay, removeSeriesFromDisplay, setAlternativeColumnFillVisible, setAlternativeRowFillVisible, setCurrentDisplayedExtraValue, setCurrentDisplayedXValue, setCurrentDisplayedYValue, setData, setHorizontalGridLinesVisible, setHorizontalZeroLineVisible, setVerticalGridLinesVisible, setVerticalZeroLineVisible, updateLegend, verticalGridLinesVisibleProperty, verticalZeroLineVisibleProperty. Methods inherited from class javafx.scene.chart.Chart; animate, animatedProperty, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAnimated, getChartChildren, getLegend, getLegendSide, getTitle, getTitleSide, isLegendVisible, layoutChildren, legendProperty, legendSideProperty, legendVisibleProperty, requestChartLayout, setAnimated, setLegend, setLegendSide, setLegendVisible, setTitle, setTitleSide, shouldAnimate, titleProperty, titleSideProperty. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:8230,Modifiability,inherit,inherited,8230,"talGridLinesVisible, isHorizontalZeroLineVisible, isVerticalZeroLineVisible, layoutChartChildren, removeDataItemFromDisplay, removeSeriesFromDisplay, setAlternativeColumnFillVisible, setAlternativeRowFillVisible, setCurrentDisplayedExtraValue, setCurrentDisplayedXValue, setCurrentDisplayedYValue, setData, setHorizontalGridLinesVisible, setHorizontalZeroLineVisible, setVerticalGridLinesVisible, setVerticalZeroLineVisible, updateLegend, verticalGridLinesVisibleProperty, verticalZeroLineVisibleProperty. Methods inherited from class javafx.scene.chart.Chart; animate, animatedProperty, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAnimated, getChartChildren, getLegend, getLegendSide, getTitle, getTitleSide, isLegendVisible, layoutChildren, legendProperty, legendSideProperty, legendVisibleProperty, requestChartLayout, setAnimated, setLegend, setLegendSide, setLegendVisible, setTitle, setTitleSide, shouldAnimate, titleProperty, titleSideProperty. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPre",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:9543,Modifiability,inherit,inherited,9543,"etShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildren, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestLayout, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAcces",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:9830,Modifiability,inherit,inherited,9830,"y, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildren, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestLayout, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, getBlendMode, getBoundsInLocal, getBoundsInParent, getCacheHint, getClip, getContentBias, getCursor, getDepthTest, getEffect, getEffectiveNodeOrientation, getEventDispatcher, getId, getInitialCursor, getInitialFocusTraversable, getInputMethodRequests, getLayoutBounds, getLayo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:15683,Modifiability,inherit,inherited,15683,"xtChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. hideIfEmpty; public BooleanProperty hideIfEmptyProperty; Property controlling whether the chart should be hidden if there is no data. See Also:. getHideIfEmpty(); setHideIfEmpty(boolean); hideIfEmptyProperty(). countsTransform; public ObjectProperty<HistogramChart.CountsTransformMode> countsTransformProperty; Property to control how counts should be transformed before being; shown in the histogram. See Also:. getCountsTransform(); setCountsTransform(HistogramChart.CountsTransformMode); countsTransformProperty(). displayMode; public ObjectProperty<HistogramChart.DisplayMode> displayModeProperty; Property to control how the histogram is displayed, either using areas or bars. See Also:. getDisplayMode(); setDisplayMode(HistogramChart.DisplayMode); displayModeProperty(). Constructor Details",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:15812,Modifiability,inherit,inherited,15812,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. hideIfEmpty; public BooleanProperty hideIfEmptyProperty; Property controlling whether the chart should be hidden if there is no data. See Also:. getHideIfEmpty(); setHideIfEmpty(boolean); hideIfEmptyProperty(). countsTransform; public ObjectProperty<HistogramChart.CountsTransformMode> countsTransformProperty; Property to control how counts should be transformed before being; shown in the histogram. See Also:. getCountsTransform(); setCountsTransform(HistogramChart.CountsTransformMode); countsTransformProperty(). displayMode; public ObjectProperty<HistogramChart.DisplayMode> displayModeProperty; Property to control how the histogram is displayed, either using areas or bars. See Also:. getDisplayMode(); setDisplayMode(HistogramChart.DisplayMode); displayModeProperty(). Constructor Details. HistogramChart; public HistogramChart(). Method Details. hideIfEmptyProperty; public BooleanProperty hideIfEmptyProperty(); Proper",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:2381,Performance,cache,cacheShape,2381,"perty; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransform. Property to control how counts should be transformed before being; shown in the histogram. ObjectProperty<HistogramChart.DisplayMode>; displayMode. Property to control how the histogram is displayed, either using areas or bars. BooleanProperty; hideIfEmpty. Property controlling whether the chart should be hidden if there is no data. Properties inherited from class javafx.scene.chart.AreaChart; createSymbols. Properties inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisible, alternativeRowFillVisible, data, horizontalGridLinesVisible, horizontalZeroLineVisible, verticalGridLinesVisible, verticalZeroLineVisible. Properties inherited from class javafx.scene.chart.Chart; animated, legend, legendSide, legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:2783,Performance,cache,cacheHint,2783,", legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/inter",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:2794,Performance,cache,cache,2794,", legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/inter",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:8315,Performance,cache,cacheShapeProperty,8315,"Animated, getChartChildren, getLegend, getLegendSide, getTitle, getTitleSide, isLegendVisible, layoutChildren, legendProperty, legendSideProperty, legendVisibleProperty, requestChartLayout, setAnimated, setLegend, setLegendSide, setLegendVisible, setTitle, setTitleSide, shouldAnimate, titleProperty, titleSideProperty. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildren, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestLayout, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:10121,Performance,cache,cacheHintProperty,10121,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:10140,Performance,cache,cacheProperty,10140,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:2666,Security,access,accessibleHelp,2666,", legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/inter",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:2682,Security,access,accessibleRoleDescription,2682,", legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/inter",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:2709,Security,access,accessibleRole,2709,", legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/inter",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:2725,Security,access,accessibleText,2725,", legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/inter",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:9870,Security,access,accessibleHelpProperty,9870,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:9894,Security,access,accessibleRoleDescriptionProperty,9894,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:9929,Security,access,accessibleRoleProperty,9929,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:9953,Security,access,accessibleTextProperty,9953,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:15757,Security,hash,hashCode,15757,"ouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. hideIfEmpty; public BooleanProperty hideIfEmptyProperty; Property controlling whether the chart should be hidden if there is no data. See Also:. getHideIfEmpty(); setHideIfEmpty(boolean); hideIfEmptyProperty(). countsTransform; public ObjectProperty<HistogramChart.CountsTransformMode> countsTransformProperty; Property to control how counts should be transformed before being; shown in the histogram. See Also:. getCountsTransform(); setCountsTransform(HistogramChart.CountsTransformMode); countsTransformProperty(). displayMode; public ObjectProperty<HistogramChart.DisplayMode> displayModeProperty; Property to control how the histogram is displayed, either using areas or bars. See Also:. getDisplayMode(); setDisplayMode(HistogramChart.DisplayMode); displayModeProperty(). Constructor Details. HistogramChart; public HistogramChart(). Method Details. hideIfEm",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html:1400,Availability,avail,available,1400,"upath.lib.gui.charts.HistogramDisplay. All Implemented Interfaces:; ParameterChangeListener. public class HistogramDisplay; extends Object; implements ParameterChangeListener; Wrapper close to enable the generation and display of histograms relating to a data table.; Other UI controls are provided to enable selection of specific data columns for display in the histogram. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HistogramDisplay(PathTableData<?> model,; boolean showTable). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getNumBins(). Get the requested number of bins used for the histogram. Pane; getPane(). Get the pane containing the histogram and associated UI components, for addition to a scene. void; parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. void; refreshCombo(). Refresh the available measurements. void; refreshHistogram(). Refresh the currently-displayed histogram (e.g. void; setNumBins(int nBins). Set the number of bins for the histogram. void; showHistogram(String column). Show the histogram for a specified data column. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramDisplay; public HistogramDisplay(PathTableData<?> model,; boolean showTable); Constructor. Parameters:; model - the table data for histogramming; showTable - if true, include a measurement summary table along with the histogram. Method Details. refreshCombo; public void refreshCombo(); Refresh the available measurements. setNumBins; public void setNumBins(int nBins); Set the number of bins for the histogram. Parameters:; nBins - the number of bins to use. getNumBins; public int getNumBins(); Get the requested number of bins used for the histogram. Returns:. getPane; public Pan",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html:2121,Availability,avail,available,2121,"histogram. Pane; getPane(). Get the pane containing the histogram and associated UI components, for addition to a scene. void; parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. void; refreshCombo(). Refresh the available measurements. void; refreshHistogram(). Refresh the currently-displayed histogram (e.g. void; setNumBins(int nBins). Set the number of bins for the histogram. void; showHistogram(String column). Show the histogram for a specified data column. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramDisplay; public HistogramDisplay(PathTableData<?> model,; boolean showTable); Constructor. Parameters:; model - the table data for histogramming; showTable - if true, include a measurement summary table along with the histogram. Method Details. refreshCombo; public void refreshCombo(); Refresh the available measurements. setNumBins; public void setNumBins(int nBins); Set the number of bins for the histogram. Parameters:; nBins - the number of bins to use. getNumBins; public int getNumBins(); Get the requested number of bins used for the histogram. Returns:. getPane; public Pane getPane(); Get the pane containing the histogram and associated UI components, for addition to a scene. Returns:. refreshHistogram; public void refreshHistogram(); Refresh the currently-displayed histogram (e.g. because underlying data has changed). showHistogram; public void showHistogram(String column); Show the histogram for a specified data column. Parameters:; column - the name of the column to show. parameterChanged; public void parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting); Description copied from interface: ParameterChangeListener; Notify listener that a parameter value has changed. Specified by:; parameterChanged in interface ParameterChangeListe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html:2952,Integrability,interface,interface,2952,"st,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. void; refreshCombo(). Refresh the available measurements. void; refreshHistogram(). Refresh the currently-displayed histogram (e.g. void; setNumBins(int nBins). Set the number of bins for the histogram. void; showHistogram(String column). Show the histogram for a specified data column. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramDisplay; public HistogramDisplay(PathTableData<?> model,; boolean showTable); Constructor. Parameters:; model - the table data for histogramming; showTable - if true, include a measurement summary table along with the histogram. Method Details. refreshCombo; public void refreshCombo(); Refresh the available measurements. setNumBins; public void setNumBins(int nBins); Set the number of bins for the histogram. Parameters:; nBins - the number of bins to use. getNumBins; public int getNumBins(); Get the requested number of bins used for the histogram. Returns:. getPane; public Pane getPane(); Get the pane containing the histogram and associated UI components, for addition to a scene. Returns:. refreshHistogram; public void refreshHistogram(); Refresh the currently-displayed histogram (e.g. because underlying data has changed). showHistogram; public void showHistogram(String column); Show the histogram for a specified data column. Parameters:; column - the name of the column to show. parameterChanged; public void parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting); Description copied from interface: ParameterChangeListener; Notify listener that a parameter value has changed. Specified by:; parameterChanged in interface ParameterChangeListener; Parameters:; parameterList - list containing the parameter; key - key to identify the parameter; isAdjusting - if the parameter is in the process of being changed. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html:3075,Integrability,interface,interface,3075,"st,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. void; refreshCombo(). Refresh the available measurements. void; refreshHistogram(). Refresh the currently-displayed histogram (e.g. void; setNumBins(int nBins). Set the number of bins for the histogram. void; showHistogram(String column). Show the histogram for a specified data column. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramDisplay; public HistogramDisplay(PathTableData<?> model,; boolean showTable); Constructor. Parameters:; model - the table data for histogramming; showTable - if true, include a measurement summary table along with the histogram. Method Details. refreshCombo; public void refreshCombo(); Refresh the available measurements. setNumBins; public void setNumBins(int nBins); Set the number of bins for the histogram. Parameters:; nBins - the number of bins to use. getNumBins; public int getNumBins(); Get the requested number of bins used for the histogram. Returns:. getPane; public Pane getPane(); Get the pane containing the histogram and associated UI components, for addition to a scene. Returns:. refreshHistogram; public void refreshHistogram(); Refresh the currently-displayed histogram (e.g. because underlying data has changed). showHistogram; public void showHistogram(String column); Show the histogram for a specified data column. Parameters:; column - the name of the column to show. parameterChanged; public void parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting); Description copied from interface: ParameterChangeListener; Notify listener that a parameter value has changed. Specified by:; parameterChanged in interface ParameterChangeListener; Parameters:; parameterList - list containing the parameter; key - key to identify the parameter; isAdjusting - if the parameter is in the process of being changed. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html:529,Modifiability,extend,extends,529,". HistogramDisplay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class HistogramDisplay. java.lang.Object; qupath.lib.gui.charts.HistogramDisplay. All Implemented Interfaces:; ParameterChangeListener. public class HistogramDisplay; extends Object; implements ParameterChangeListener; Wrapper close to enable the generation and display of histograms relating to a data table.; Other UI controls are provided to enable selection of specific data columns for display in the histogram. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HistogramDisplay(PathTableData<?> model,; boolean showTable). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getNumBins(). Get the requested number of bins used for the histogram. Pane; getPane(). Get the pane containing the histogram and associated UI components, for addition to a scene. void; parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. void; refreshCombo(). Refresh the available measurements. void; refreshHistogram(). Refresh the currently-displayed histogram (e.g. void; setNumBins(int nBins). Set the number of bins for the histogram. void; showHistogram(String column). Show the histogram for a specified data column. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramDisplay; public HistogramDisplay(PathTableData<?> model,; boolean showTable); Constructor. Parameters:; model - the table data for histogramming; showTable - if true, include a me",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html:1661,Modifiability,inherit,inherited,1661,"e.; Other UI controls are provided to enable selection of specific data columns for display in the histogram. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HistogramDisplay(PathTableData<?> model,; boolean showTable). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getNumBins(). Get the requested number of bins used for the histogram. Pane; getPane(). Get the pane containing the histogram and associated UI components, for addition to a scene. void; parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. void; refreshCombo(). Refresh the available measurements. void; refreshHistogram(). Refresh the currently-displayed histogram (e.g. void; setNumBins(int nBins). Set the number of bins for the histogram. void; showHistogram(String column). Show the histogram for a specified data column. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramDisplay; public HistogramDisplay(PathTableData<?> model,; boolean showTable); Constructor. Parameters:; model - the table data for histogramming; showTable - if true, include a measurement summary table along with the histogram. Method Details. refreshCombo; public void refreshCombo(); Refresh the available measurements. setNumBins; public void setNumBins(int nBins); Set the number of bins for the histogram. Parameters:; nBins - the number of bins to use. getNumBins; public int getNumBins(); Get the requested number of bins used for the histogram. Returns:. getPane; public Pane getPane(); Get the pane containing the histogram and associated UI components, for addition to a scene. Returns:. refreshHistogram; public void refreshHistogram(); Refresh the currently-displayed histogram (e.g. because underlying data has changed). showHistogram",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html:1735,Security,hash,hashCode,1735,"columns for display in the histogram. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HistogramDisplay(PathTableData<?> model,; boolean showTable). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getNumBins(). Get the requested number of bins used for the histogram. Pane; getPane(). Get the pane containing the histogram and associated UI components, for addition to a scene. void; parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. void; refreshCombo(). Refresh the available measurements. void; refreshHistogram(). Refresh the currently-displayed histogram (e.g. void; setNumBins(int nBins). Set the number of bins for the histogram. void; showHistogram(String column). Show the histogram for a specified data column. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramDisplay; public HistogramDisplay(PathTableData<?> model,; boolean showTable); Constructor. Parameters:; model - the table data for histogramming; showTable - if true, include a measurement summary table along with the histogram. Method Details. refreshCombo; public void refreshCombo(); Refresh the available measurements. setNumBins; public void setNumBins(int nBins); Set the number of bins for the histogram. Parameters:; nBins - the number of bins to use. getNumBins; public int getNumBins(); Get the requested number of bins used for the histogram. Returns:. getPane; public Pane getPane(); Get the pane containing the histogram and associated UI components, for addition to a scene. Returns:. refreshHistogram; public void refreshHistogram(); Refresh the currently-displayed histogram (e.g. because underlying data has changed). showHistogram; public void showHistogram(String column); Show the histogram for a spe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/package-summary.html:1000,Energy Efficiency,adapt,adapting,1000,". qupath.lib.gui.charts (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.charts. package qupath.lib.gui.charts. Classes for plotting and charting. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; Charts. Helper class for generating interactive charts. Charts.BarChartBuilder. Builder for creating scatter charts. Charts.PieChartBuilder. Builder for creating pie charts. Charts.ScatterChartBuilder. Builder for creating scatter charts. ChartThresholdPane. Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. ChartTools. Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display mode for the histogram. HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. HistogramDisplay. Wrapper close to enable the generation and display of histograms relating to a data table. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/package-summary.html:484,Integrability,interface,interface,484,". qupath.lib.gui.charts (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.charts. package qupath.lib.gui.charts. Classes for plotting and charting. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; Charts. Helper class for generating interactive charts. Charts.BarChartBuilder. Builder for creating scatter charts. Charts.PieChartBuilder. Builder for creating pie charts. Charts.ScatterChartBuilder. Builder for creating scatter charts. ChartThresholdPane. Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. ChartTools. Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display mode for the histogram. HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. HistogramDisplay. Wrapper close to enable the generation and display of histograms relating to a data table. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/package-summary.html:1000,Modifiability,adapt,adapting,1000,". qupath.lib.gui.charts (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.charts. package qupath.lib.gui.charts. Classes for plotting and charting. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; Charts. Helper class for generating interactive charts. Charts.BarChartBuilder. Builder for creating scatter charts. Charts.PieChartBuilder. Builder for creating pie charts. Charts.ScatterChartBuilder. Builder for creating scatter charts. ChartThresholdPane. Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. ChartTools. Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display mode for the histogram. HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. HistogramDisplay. Wrapper close to enable the generation and display of histograms relating to a data table. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/package-tree.html:625,Modifiability,plugin,plugins,625,". qupath.lib.gui.charts Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui.charts. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.gui.charts.Charts; qupath.lib.gui.charts.Charts.BarChartBuilder; qupath.lib.gui.charts.Charts.PieChartBuilder; qupath.lib.gui.charts.Charts.ScatterChartBuilder; qupath.lib.gui.charts.ChartTools; qupath.lib.gui.charts.HistogramChart.HistogramData; qupath.lib.gui.charts.HistogramDisplay (implements qupath.lib.plugins.parameters.ParameterChangeListener); javafx.scene.Node (implements javafx.event.EventTarget, javafx.css.Styleable). javafx.scene.Parent. javafx.scene.layout.Region. javafx.scene.chart.Chart. javafx.scene.chart.XYChart<X,Y>. javafx.scene.chart.AreaChart<X,Y>. qupath.lib.gui.charts.HistogramChart. javafx.scene.layout.Pane. javafx.scene.layout.BorderPane. qupath.lib.gui.charts.ChartThresholdPane. Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.gui.charts.HistogramChart.CountsTransformMode; qupath.lib.gui.charts.HistogramChart.DisplayMode. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/charts/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html:1376,Integrability,interface,interface,1376,". BrightnessContrastCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class BrightnessContrastCommand. java.lang.Object; qupath.lib.gui.commands.BrightnessContrastCommand. All Implemented Interfaces:; Runnable. public class BrightnessContrastCommand; extends Object; implements Runnable; Command to show a Brightness/Contrast dialog to adjust the image display. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression; infoMessage(). Get a string expression to draw attention to any warnings associated with the current display settings. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BrightnessContrastCommand; public BrightnessContrastCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. infoMessage; public ObjectExpression infoMessage(); Get a string expression to draw attention to any warnings associated with the current display settings.; This can be used to notify the user that something is amiss, even if the dialog is not open. Returns:; a string expression that evaluates to the warning text, or null if there are no warnings. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html:554,Modifiability,extend,extends,554,". BrightnessContrastCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class BrightnessContrastCommand. java.lang.Object; qupath.lib.gui.commands.BrightnessContrastCommand. All Implemented Interfaces:; Runnable. public class BrightnessContrastCommand; extends Object; implements Runnable; Command to show a Brightness/Contrast dialog to adjust the image display. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression; infoMessage(). Get a string expression to draw attention to any warnings associated with the current display settings. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BrightnessContrastCommand; public BrightnessContrastCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. infoMessage; public ObjectExpression infoMessage(); Get a string expression to draw attention to any warnings associated with the current display settings.; This can be used to notify the user that something is amiss, even if the dialog is not open. Returns:; a string expression that evaluates to the warning text, or null if there are no warnings. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html:1046,Modifiability,inherit,inherited,1046,". BrightnessContrastCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class BrightnessContrastCommand. java.lang.Object; qupath.lib.gui.commands.BrightnessContrastCommand. All Implemented Interfaces:; Runnable. public class BrightnessContrastCommand; extends Object; implements Runnable; Command to show a Brightness/Contrast dialog to adjust the image display. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression; infoMessage(). Get a string expression to draw attention to any warnings associated with the current display settings. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BrightnessContrastCommand; public BrightnessContrastCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. infoMessage; public ObjectExpression infoMessage(); Get a string expression to draw attention to any warnings associated with the current display settings.; This can be used to notify the user that something is amiss, even if the dialog is not open. Returns:; a string expression that evaluates to the warning text, or null if there are no warnings. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html:1120,Security,hash,hashCode,1120,". BrightnessContrastCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class BrightnessContrastCommand. java.lang.Object; qupath.lib.gui.commands.BrightnessContrastCommand. All Implemented Interfaces:; Runnable. public class BrightnessContrastCommand; extends Object; implements Runnable; Command to show a Brightness/Contrast dialog to adjust the image display. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression; infoMessage(). Get a string expression to draw attention to any warnings associated with the current display settings. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BrightnessContrastCommand; public BrightnessContrastCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. infoMessage; public ObjectExpression infoMessage(); Get a string expression to draw attention to any warnings associated with the current display settings.; This can be used to notify the user that something is amiss, even if the dialog is not open. Returns:; a string expression that evaluates to the warning text, or null if there are no warnings. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:1301,Availability,avail,available,1301,"Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class Commands. java.lang.Object; qupath.lib.gui.commands.Commands. public class Commands; extends Object; Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Commands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; closeProject(QuPathGUI qupath). Close the current project open in the QuPathGUI. static boolean; combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op). Combine the selected annotations for the specified hierarchy. static void; convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus). Convert detection objects to point annotations based upon their ROI centroids. static void; copyAnnotationsToClipboard(ImageData<BufferedImage> imageData). Attempt to annotation objects to the system clipboard, if available. static void; copySelectedAnnotationsToCurrentPlane(QuPathViewer viewer). Copy the selected objects and add them to the plane currently active in the viewer. static void; copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData). Attempt to copy selected objects to the system clipboard, if available. static void; createFullImageAnnotation(QuPathViewer viewer). Create a full image annotation for the image in the specified viewer. static Stage; createLicensesWindow(QuPathGUI qupath). Create a window summarizing license information for QuPath and its third party dependencies. static Stage; createMeasurementMapDialog(QuPathGUI qupath). Create a dialog for displaying measurement maps. static Stage; createMemoryMonitorDialog(QuPathGUI qupath). Create a dialog to monitor memory usage. static Stage; createObjectDescriptionsDialog(QuPathGUI qupath). Create a stage to display object descriptions. static Stage; createPreferencesDialog(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:1611,Availability,avail,available,1611,"or Summary; Constructors. Constructor; Description; Commands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; closeProject(QuPathGUI qupath). Close the current project open in the QuPathGUI. static boolean; combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op). Combine the selected annotations for the specified hierarchy. static void; convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus). Convert detection objects to point annotations based upon their ROI centroids. static void; copyAnnotationsToClipboard(ImageData<BufferedImage> imageData). Attempt to annotation objects to the system clipboard, if available. static void; copySelectedAnnotationsToCurrentPlane(QuPathViewer viewer). Copy the selected objects and add them to the plane currently active in the viewer. static void; copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData). Attempt to copy selected objects to the system clipboard, if available. static void; createFullImageAnnotation(QuPathViewer viewer). Create a full image annotation for the image in the specified viewer. static Stage; createLicensesWindow(QuPathGUI qupath). Create a window summarizing license information for QuPath and its third party dependencies. static Stage; createMeasurementMapDialog(QuPathGUI qupath). Create a dialog for displaying measurement maps. static Stage; createMemoryMonitorDialog(QuPathGUI qupath). Create a dialog to monitor memory usage. static Stage; createObjectDescriptionsDialog(QuPathGUI qupath). Create a stage to display object descriptions. static Stage; createPreferencesDialog(QuPathGUI qupath). Show a dialog to adjust QuPath preferences. static void; createRotateImageDialog(QuPathGUI qupath). Create a dialog for rotating the image in the current viewer (for display only). static Stage; createShowSystemInfoDialog(QuPathGUI qupath). Create a window summarizing key system information relevant for QuP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:3479,Availability,avail,available,3479,". static Stage; createShowSystemInfoDialog(QuPathGUI qupath). Create a window summarizing key system information relevant for QuPath. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier). Create a command that generates a persistent single dialog on demand. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier,; String name). Create a named command that generates a persistent single dialog on demand. static Stage; createSpecifyAnnotationDialog(QuPathGUI qupath). Create a stage to prompt the user to specify an annotation to add. static Stage; createWorkflowDisplayDialog(QuPathGUI qupath). Create a dialog to show the workflow history for the current image data. static org.controlsfx.control.action.Action; createZoomCommand(QuPathGUI qupath,; int zoomAmount). Create a zoom in/out command action. static void; detectionCentroidDistances2D(ImageData<?> imageData). Compute the distance between the centroids of all detections, for all available classifications. static void; distanceToAnnotations2D(ImageData<?> imageData,; boolean signedDistances). Compute the distance between all detections and the closest annotation, for all annotation classifications. static void; duplicateSelectedAnnotations(ImageData<?> imageData). Duplicate the selected annotations. static void; editSelectedAnnotation(QuPathGUI qupath). Prompt to edit the selected annotation by translation and rotation. static void; insertSelectedObjectsInHierarchy(ImageData<?> imageData). Insert the selected objects in the hierarchy, resolving positions accordingly. static void; launchTMADataViewer(QuPathGUI qupath). Open new window with the TMA data viewer. static void; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation for the selected objects, storing the command in the history workflow. static void; mergeSelectedAnnotations(ImageData<?> imageData). Merge the currently-selected annotations for an image, replacing",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:4648,Availability,avail,available,4648,"tation, for all annotation classifications. static void; duplicateSelectedAnnotations(ImageData<?> imageData). Duplicate the selected annotations. static void; editSelectedAnnotation(QuPathGUI qupath). Prompt to edit the selected annotation by translation and rotation. static void; insertSelectedObjectsInHierarchy(ImageData<?> imageData). Insert the selected objects in the hierarchy, resolving positions accordingly. static void; launchTMADataViewer(QuPathGUI qupath). Open new window with the TMA data viewer. static void; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation for the selected objects, storing the command in the history workflow. static void; mergeSelectedAnnotations(ImageData<?> imageData). Merge the currently-selected annotations for an image, replacing them with a single new annotation. static void; pasteFromClipboard(QuPathGUI qupath,; boolean addToCurrentPlane). Attempt to paste objects from the system clipboard to the current image, if available; ; otherwise, check for text on the clipboard and paste it into a new script editor tab. static void; promptToAddShapeFeatures(QuPathGUI qupath). Prompt to add shape features for selected objects. static boolean; promptToCreateProject(QuPathGUI qupath). Prompt the user to select an empty directory, and use this to create a new project and set it as active. static void; promptToDeleteObjects(ImageData<?> imageData,; Class<? extends PathObject> cls). Prompt to delete objects of a specified type, or all objects. static boolean; promptToEditClass(PathClass pathClass). Prompt to edit the name/color of a class. static void; promptToEstimateStainVectors(ImageData<BufferedImage> imageData). Prompt to estimate stain vectors for the specified image, using any current region of interest. static void; promptToExportImageRegion(QuPathViewer viewer,; boolean renderedImage). Prompt to export the current image region selected in the viewer. static boolean; promptToOpenProject(QuPathGUI qupath). Prompt ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:6840,Availability,avail,available,6840," the user. static void; promptToResolveHierarchy(ImageData<?> imageData). Resolve parent-child relationships within the object hierarchy. static boolean; promptToSaveImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData,; boolean overwriteExisting). Prompt to save the specified ImageData. static void; promptToSelectObjectsByClassification(QuPathGUI qupath,; ImageData<?> imageData). Prompt to select objects according to their classifications. static void; promptToSetGridLineSpacing(OverlayOptions options). Prompt to input the spacing for the grid lines optionally displayed on viewers. static void; promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold). Show a prompt to selected annotations in a hierarchy. static void; refreshObjectIDs(ImageData<?> imageData,; boolean duplicatesOnly). Refresh object IDs to ensure uniqueness. static void; reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Reload the specified image data from a previously saved version,if available. static File; requestUserDirectory(boolean promptIfMissing). Request the current user directory, optionally prompting the user to request a directory if none is available. static void; resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static void; resetSelection(ImageData<?> imageData). Reset the selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the out",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:7011,Availability,avail,available,7011,"promptToSaveImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData,; boolean overwriteExisting). Prompt to save the specified ImageData. static void; promptToSelectObjectsByClassification(QuPathGUI qupath,; ImageData<?> imageData). Prompt to select objects according to their classifications. static void; promptToSetGridLineSpacing(OverlayOptions options). Prompt to input the spacing for the grid lines optionally displayed on viewers. static void; promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold). Show a prompt to selected annotations in a hierarchy. static void; refreshObjectIDs(ImageData<?> imageData,; boolean duplicatesOnly). Refresh object IDs to ensure uniqueness. static void; reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Reload the specified image data from a previously saved version,if available. static File; requestUserDirectory(boolean promptIfMissing). Request the current user directory, optionally prompting the user to request a directory if none is available. static void; resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static void; resetSelection(ImageData<?> imageData). Reset the selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObject",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:7386,Availability,avail,available,7386,"optionally displayed on viewers. static void; promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold). Show a prompt to selected annotations in a hierarchy. static void; refreshObjectIDs(ImageData<?> imageData,; boolean duplicatesOnly). Refresh object IDs to ensure uniqueness. static void; reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Reload the specified image data from a previously saved version,if available. static File; requestUserDirectory(boolean promptIfMissing). Request the current user directory, optionally prompting the user to request a directory if none is available. static void; resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static void; resetSelection(ImageData<?> imageData). Reset the selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:8510,Availability,down,downsample,8510,"ta). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. static void; showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData). Show a simple dialog for viewing (and optionally removing) detection measurements. static void; showDetectionMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all detection objects. static void; showInstalledExtensions(QuPathGUI qupath). Show a dialog displaying",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:8531,Availability,down,downsample,8531," void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. static void; showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData). Show a simple dialog for viewing (and optionally removing) detection measurements. static void; showDetectionMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all detection objects. static void; showInstalledExtensions(QuPathGUI qupath). Show a dialog displaying the extensions installed for a specified QuPath instance. stat",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:14685,Availability,avail,available,14685,"specified image, using any current region of interest. Parameters:; imageData - the image data for which stain vectors should be estimated. promptToExportImageRegion; public static void promptToExportImageRegion(QuPathViewer viewer,; boolean renderedImage); Prompt to export the current image region selected in the viewer. Parameters:; viewer - the viewer containing the image to export; renderedImage - if true, export the rendered (RGB) image rather than original pixel values. showInstalledExtensions; public static void showInstalledExtensions(QuPathGUI qupath); Show a dialog displaying the extensions installed for a specified QuPath instance. Parameters:; qupath - the QuPath instance. showDetectionMeasurementManager; public static void showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData); Show a simple dialog for viewing (and optionally removing) detection measurements. Parameters:; qupath - ; imageData - . resetTMAMetadata; public static boolean resetTMAMetadata(ImageData<?> imageData); Reset TMA metadata, if available. Parameters:; imageData - ; Returns:; true if changes were made, false otherwise. createSingleStageAction; public static org.controlsfx.control.action.Action createSingleStageAction(Supplier<Stage> supplier); Create a command that generates a persistent single dialog on demand.; A reference to the dialog can be retained, so that if the command is called again ; either the original dialog is shown and/or brought to the front. Parameters:; supplier - supplier function to generate the dialog on demand; Returns:; the action. createSingleStageAction; public static org.controlsfx.control.action.Action createSingleStageAction(Supplier<Stage> supplier,; String name); Create a named command that generates a persistent single dialog on demand.; A reference to the dialog can be retained, so that if the command is called again ; either the original dialog is shown and/or brought to the front. Parameters:; supplier - supplier function to gen",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:21232,Availability,down,downsample,21232," public static boolean selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses); Select objects by classification, logging the step (if performed) in the history workflow. Parameters:; imageData - the ImageData containing objects to be selected; pathClasses - classifications that will result in an object being selected; Returns:; true if a selection command was run, false otherwise (e.g. if no pathClasses were specified). promptToDeleteObjects; public static void promptToDeleteObjects(ImageData<?> imageData,; Class<? extends PathObject> cls); Prompt to delete objects of a specified type, or all objects. Parameters:; imageData - ; cls - . promptToResetPreferences; public static boolean promptToResetPreferences(); Reset QuPath's preferences, after confirming with the user.; QuPath needs to be restarted for this to take effect. Returns:; true if the preferences were reset, false otherwise. setViewerDownsample; public static void setViewerDownsample(QuPathViewer viewer,; double downsample); Set the downsample factor for the specified viewer. Parameters:; viewer - ; downsample - . closeProject; public static void closeProject(QuPathGUI qupath); Close the current project open in the QuPathGUI. Parameters:; qupath - . promptToCreateProject; public static boolean promptToCreateProject(QuPathGUI qupath); Prompt the user to select an empty directory, and use this to create a new project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be created.; Returns:; true if a project was created, false otherwise (e.g. the user cancelled). promptToOpenProject; public static boolean promptToOpenProject(QuPathGUI qupath); Prompt the user to open an existing project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be opened.; Returns:; true if a project was opened, false otherwise (e.g. the user cancelled). launchTMADataViewer; public static void launchTMADataViewer(QuPath",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:21253,Availability,down,downsample,21253," public static boolean selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses); Select objects by classification, logging the step (if performed) in the history workflow. Parameters:; imageData - the ImageData containing objects to be selected; pathClasses - classifications that will result in an object being selected; Returns:; true if a selection command was run, false otherwise (e.g. if no pathClasses were specified). promptToDeleteObjects; public static void promptToDeleteObjects(ImageData<?> imageData,; Class<? extends PathObject> cls); Prompt to delete objects of a specified type, or all objects. Parameters:; imageData - ; cls - . promptToResetPreferences; public static boolean promptToResetPreferences(); Reset QuPath's preferences, after confirming with the user.; QuPath needs to be restarted for this to take effect. Returns:; true if the preferences were reset, false otherwise. setViewerDownsample; public static void setViewerDownsample(QuPathViewer viewer,; double downsample); Set the downsample factor for the specified viewer. Parameters:; viewer - ; downsample - . closeProject; public static void closeProject(QuPathGUI qupath); Close the current project open in the QuPathGUI. Parameters:; qupath - . promptToCreateProject; public static boolean promptToCreateProject(QuPathGUI qupath); Prompt the user to select an empty directory, and use this to create a new project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be created.; Returns:; true if a project was created, false otherwise (e.g. the user cancelled). promptToOpenProject; public static boolean promptToOpenProject(QuPathGUI qupath); Prompt the user to open an existing project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be opened.; Returns:; true if a project was opened, false otherwise (e.g. the user cancelled). launchTMADataViewer; public static void launchTMADataViewer(QuPath",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:21321,Availability,down,downsample,21321,"lasses); Select objects by classification, logging the step (if performed) in the history workflow. Parameters:; imageData - the ImageData containing objects to be selected; pathClasses - classifications that will result in an object being selected; Returns:; true if a selection command was run, false otherwise (e.g. if no pathClasses were specified). promptToDeleteObjects; public static void promptToDeleteObjects(ImageData<?> imageData,; Class<? extends PathObject> cls); Prompt to delete objects of a specified type, or all objects. Parameters:; imageData - ; cls - . promptToResetPreferences; public static boolean promptToResetPreferences(); Reset QuPath's preferences, after confirming with the user.; QuPath needs to be restarted for this to take effect. Returns:; true if the preferences were reset, false otherwise. setViewerDownsample; public static void setViewerDownsample(QuPathViewer viewer,; double downsample); Set the downsample factor for the specified viewer. Parameters:; viewer - ; downsample - . closeProject; public static void closeProject(QuPathGUI qupath); Close the current project open in the QuPathGUI. Parameters:; qupath - . promptToCreateProject; public static boolean promptToCreateProject(QuPathGUI qupath); Prompt the user to select an empty directory, and use this to create a new project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be created.; Returns:; true if a project was created, false otherwise (e.g. the user cancelled). promptToOpenProject; public static boolean promptToOpenProject(QuPathGUI qupath); Prompt the user to open an existing project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be opened.; Returns:; true if a project was opened, false otherwise (e.g. the user cancelled). launchTMADataViewer; public static void launchTMADataViewer(QuPathGUI qupath); Open new window with the TMA data viewer. Parameters:; qupath - current QuPathGUI in",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:22839,Availability,avail,available,22839,"e if a project was created, false otherwise (e.g. the user cancelled). promptToOpenProject; public static boolean promptToOpenProject(QuPathGUI qupath); Prompt the user to open an existing project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be opened.; Returns:; true if a project was opened, false otherwise (e.g. the user cancelled). launchTMADataViewer; public static void launchTMADataViewer(QuPathGUI qupath); Open new window with the TMA data viewer. Parameters:; qupath - current QuPathGUI instance (may be null). distanceToAnnotations2D; public static void distanceToAnnotations2D(ImageData<?> imageData,; boolean signedDistances); Compute the distance between all detections and the closest annotation, for all annotation classifications. Parameters:; imageData - the image data to process; signedDistances - if true, use signed distances. detectionCentroidDistances2D; public static void detectionCentroidDistances2D(ImageData<?> imageData); Compute the distance between the centroids of all detections, for all available classifications. Parameters:; imageData - the image data to process. promptToSetGridLineSpacing; public static void promptToSetGridLineSpacing(OverlayOptions options); Prompt to input the spacing for the grid lines optionally displayed on viewers. Parameters:; options - the OverlayOptions that manage the grid lines. requestUserDirectory; public static File requestUserDirectory(boolean promptIfMissing); Request the current user directory, optionally prompting the user to request a directory if none is available. Parameters:; promptIfMissing - ; Returns:; the user directory, or null if none exists and the user did not create one. reloadImageData; public static void reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Reload the specified image data from a previously saved version,if available. Parameters:; qupath - ; imageData - . promptToAddShapeFeatures; public static void promptToAdd",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:23355,Availability,avail,available,23355," viewer. Parameters:; qupath - current QuPathGUI instance (may be null). distanceToAnnotations2D; public static void distanceToAnnotations2D(ImageData<?> imageData,; boolean signedDistances); Compute the distance between all detections and the closest annotation, for all annotation classifications. Parameters:; imageData - the image data to process; signedDistances - if true, use signed distances. detectionCentroidDistances2D; public static void detectionCentroidDistances2D(ImageData<?> imageData); Compute the distance between the centroids of all detections, for all available classifications. Parameters:; imageData - the image data to process. promptToSetGridLineSpacing; public static void promptToSetGridLineSpacing(OverlayOptions options); Prompt to input the spacing for the grid lines optionally displayed on viewers. Parameters:; options - the OverlayOptions that manage the grid lines. requestUserDirectory; public static File requestUserDirectory(boolean promptIfMissing); Request the current user directory, optionally prompting the user to request a directory if none is available. Parameters:; promptIfMissing - ; Returns:; the user directory, or null if none exists and the user did not create one. reloadImageData; public static void reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Reload the specified image data from a previously saved version,if available. Parameters:; qupath - ; imageData - . promptToAddShapeFeatures; public static void promptToAddShapeFeatures(QuPathGUI qupath); Prompt to add shape features for selected objects. Parameters:; qupath - current QuPath instance. convertDetectionsToPoints; public static void convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus); Convert detection objects to point annotations based upon their ROI centroids. Parameters:; imageData - the image data to process; preferNucleus - if true, use a nucleus ROI for cell objects (if available. promptToSimplifySelectedAnnotations; public",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:23660,Availability,avail,available,23660," imageData - the image data to process; signedDistances - if true, use signed distances. detectionCentroidDistances2D; public static void detectionCentroidDistances2D(ImageData<?> imageData); Compute the distance between the centroids of all detections, for all available classifications. Parameters:; imageData - the image data to process. promptToSetGridLineSpacing; public static void promptToSetGridLineSpacing(OverlayOptions options); Prompt to input the spacing for the grid lines optionally displayed on viewers. Parameters:; options - the OverlayOptions that manage the grid lines. requestUserDirectory; public static File requestUserDirectory(boolean promptIfMissing); Request the current user directory, optionally prompting the user to request a directory if none is available. Parameters:; promptIfMissing - ; Returns:; the user directory, or null if none exists and the user did not create one. reloadImageData; public static void reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Reload the specified image data from a previously saved version,if available. Parameters:; qupath - ; imageData - . promptToAddShapeFeatures; public static void promptToAddShapeFeatures(QuPathGUI qupath); Prompt to add shape features for selected objects. Parameters:; qupath - current QuPath instance. convertDetectionsToPoints; public static void convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus); Convert detection objects to point annotations based upon their ROI centroids. Parameters:; imageData - the image data to process; preferNucleus - if true, use a nucleus ROI for cell objects (if available. promptToSimplifySelectedAnnotations; public static void promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold); Show a prompt to selected annotations in a hierarchy. Parameters:; imageData - the current image data; altitudeThreshold - default altitude value for simplification. selectObjectsOnCurrentPlane; public static v",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:24212,Availability,avail,available,24212,"d lines. requestUserDirectory; public static File requestUserDirectory(boolean promptIfMissing); Request the current user directory, optionally prompting the user to request a directory if none is available. Parameters:; promptIfMissing - ; Returns:; the user directory, or null if none exists and the user did not create one. reloadImageData; public static void reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Reload the specified image data from a previously saved version,if available. Parameters:; qupath - ; imageData - . promptToAddShapeFeatures; public static void promptToAddShapeFeatures(QuPathGUI qupath); Prompt to add shape features for selected objects. Parameters:; qupath - current QuPath instance. convertDetectionsToPoints; public static void convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus); Convert detection objects to point annotations based upon their ROI centroids. Parameters:; imageData - the image data to process; preferNucleus - if true, use a nucleus ROI for cell objects (if available. promptToSimplifySelectedAnnotations; public static void promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold); Show a prompt to selected annotations in a hierarchy. Parameters:; imageData - the current image data; altitudeThreshold - default altitude value for simplification. selectObjectsOnCurrentPlane; public static void selectObjectsOnCurrentPlane(QuPathViewer viewer); Select all the objects on the current plane of the viewer. Parameters:; viewer - . selectAllObjects; public static void selectAllObjects(ImageData<?> imageData); Select all objects (excluding the root object) in the imageData. Parameters:; imageData - . selectObjectsByClass; public static void selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . resetSelection;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:27403,Availability,avail,available,27403,"ialog to monitor memory usage. Parameters:; qupath - ; Returns:. showMiniViewer; public static void showMiniViewer(QuPathViewer viewer); Show a mini viewer window associated with a specific viewer. Parameters:; viewer - the viewer with which to associate this window. showChannelViewer; public static void showChannelViewer(QuPathViewer viewer); Show a channel viewer window associated with a specific viewer. Parameters:; viewer - the viewer with which to associate this window. refreshObjectIDs; public static void refreshObjectIDs(ImageData<?> imageData,; boolean duplicatesOnly); Refresh object IDs to ensure uniqueness. Parameters:; imageData - ; duplicatesOnly - only refresh IDs that are duplicates of other IDs. runObjectImport; public static void runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a dialog to import object(s) from a file. Parameters:; qupath - ; imageData - . copySelectedObjectsToClipboard; public static void copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData); Attempt to copy selected objects to the system clipboard, if available. Parameters:; imageData - . copyAnnotationsToClipboard; public static void copyAnnotationsToClipboard(ImageData<BufferedImage> imageData); Attempt to annotation objects to the system clipboard, if available. Parameters:; imageData - . pasteFromClipboard; public static void pasteFromClipboard(QuPathGUI qupath,; boolean addToCurrentPlane); Attempt to paste objects from the system clipboard to the current image, if available; ; otherwise, check for text on the clipboard and paste it into a new script editor tab. Parameters:; qupath - ; addToCurrentPlane - if true, add the objects to the plane currently visible in the viewer ; (and don't show any text if objects can't be found). runGeoJsonObjectExport; public static void runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a dialog to export object(s) to a GeoJSON file. Parameters:; qupath - ; imageData - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:27610,Availability,avail,available,27610,"ialog to monitor memory usage. Parameters:; qupath - ; Returns:. showMiniViewer; public static void showMiniViewer(QuPathViewer viewer); Show a mini viewer window associated with a specific viewer. Parameters:; viewer - the viewer with which to associate this window. showChannelViewer; public static void showChannelViewer(QuPathViewer viewer); Show a channel viewer window associated with a specific viewer. Parameters:; viewer - the viewer with which to associate this window. refreshObjectIDs; public static void refreshObjectIDs(ImageData<?> imageData,; boolean duplicatesOnly); Refresh object IDs to ensure uniqueness. Parameters:; imageData - ; duplicatesOnly - only refresh IDs that are duplicates of other IDs. runObjectImport; public static void runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a dialog to import object(s) from a file. Parameters:; qupath - ; imageData - . copySelectedObjectsToClipboard; public static void copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData); Attempt to copy selected objects to the system clipboard, if available. Parameters:; imageData - . copyAnnotationsToClipboard; public static void copyAnnotationsToClipboard(ImageData<BufferedImage> imageData); Attempt to annotation objects to the system clipboard, if available. Parameters:; imageData - . pasteFromClipboard; public static void pasteFromClipboard(QuPathGUI qupath,; boolean addToCurrentPlane); Attempt to paste objects from the system clipboard to the current image, if available; ; otherwise, check for text on the clipboard and paste it into a new script editor tab. Parameters:; qupath - ; addToCurrentPlane - if true, add the objects to the plane currently visible in the viewer ; (and don't show any text if objects can't be found). runGeoJsonObjectExport; public static void runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a dialog to export object(s) to a GeoJSON file. Parameters:; qupath - ; imageData - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:27829,Availability,avail,available,27829,"ialog to monitor memory usage. Parameters:; qupath - ; Returns:. showMiniViewer; public static void showMiniViewer(QuPathViewer viewer); Show a mini viewer window associated with a specific viewer. Parameters:; viewer - the viewer with which to associate this window. showChannelViewer; public static void showChannelViewer(QuPathViewer viewer); Show a channel viewer window associated with a specific viewer. Parameters:; viewer - the viewer with which to associate this window. refreshObjectIDs; public static void refreshObjectIDs(ImageData<?> imageData,; boolean duplicatesOnly); Refresh object IDs to ensure uniqueness. Parameters:; imageData - ; duplicatesOnly - only refresh IDs that are duplicates of other IDs. runObjectImport; public static void runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a dialog to import object(s) from a file. Parameters:; qupath - ; imageData - . copySelectedObjectsToClipboard; public static void copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData); Attempt to copy selected objects to the system clipboard, if available. Parameters:; imageData - . copyAnnotationsToClipboard; public static void copyAnnotationsToClipboard(ImageData<BufferedImage> imageData); Attempt to annotation objects to the system clipboard, if available. Parameters:; imageData - . pasteFromClipboard; public static void pasteFromClipboard(QuPathGUI qupath,; boolean addToCurrentPlane); Attempt to paste objects from the system clipboard to the current image, if available; ; otherwise, check for text on the clipboard and paste it into a new script editor tab. Parameters:; qupath - ; addToCurrentPlane - if true, add the objects to the plane currently visible in the viewer ; (and don't show any text if objects can't be found). runGeoJsonObjectExport; public static void runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a dialog to export object(s) to a GeoJSON file. Parameters:; qupath - ; imageData - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:9501,Deployability,install,installed,9501,"; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. static void; showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData). Show a simple dialog for viewing (and optionally removing) detection measurements. static void; showDetectionMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all detection objects. static void; showInstalledExtensions(QuPathGUI qupath). Show a dialog displaying the extensions installed for a specified QuPath instance. static void; showMiniViewer(QuPathViewer viewer). Show a mini viewer window associated with a specific viewer. static void; showScriptEditor(QuPathGUI qupath). Show the script editor, or bring the window to the front if it is already open. static void; showScriptInterpreter(QuPathGUI qupath). Show a script interpreter window for a Qupath instance. static void; showTMACoreGridView(QuPathGUI qupath). Show a grid view for TMA core objects. static void; showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all TMA core objects. static void; showViewTracker(QuPathGUI qupath). Show a dialog to track the viewed region of an image. static void; showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData). Show the QuPath script editor with a script corresponding to the command history of a specified image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:14245,Deployability,install,installed,14245,". showTMAMeasurementTable; public static void showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a measurement table for all TMA core objects. Parameters:; qupath - the QuPath instance; imageData - the image data for which to show measurements. promptToEstimateStainVectors; public static void promptToEstimateStainVectors(ImageData<BufferedImage> imageData); Prompt to estimate stain vectors for the specified image, using any current region of interest. Parameters:; imageData - the image data for which stain vectors should be estimated. promptToExportImageRegion; public static void promptToExportImageRegion(QuPathViewer viewer,; boolean renderedImage); Prompt to export the current image region selected in the viewer. Parameters:; viewer - the viewer containing the image to export; renderedImage - if true, export the rendered (RGB) image rather than original pixel values. showInstalledExtensions; public static void showInstalledExtensions(QuPathGUI qupath); Show a dialog displaying the extensions installed for a specified QuPath instance. Parameters:; qupath - the QuPath instance. showDetectionMeasurementManager; public static void showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData); Show a simple dialog for viewing (and optionally removing) detection measurements. Parameters:; qupath - ; imageData - . resetTMAMetadata; public static boolean resetTMAMetadata(ImageData<?> imageData); Reset TMA metadata, if available. Parameters:; imageData - ; Returns:; true if changes were made, false otherwise. createSingleStageAction; public static org.controlsfx.control.action.Action createSingleStageAction(Supplier<Stage> supplier); Create a command that generates a persistent single dialog on demand.; A reference to the dialog can be retained, so that if the command is called again ; either the original dialog is shown and/or brought to the front. Parameters:; supplier - supplier function to generate the dialog on demand; Re",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:2087,Energy Efficiency,monitor,monitor,2087,"Convert detection objects to point annotations based upon their ROI centroids. static void; copyAnnotationsToClipboard(ImageData<BufferedImage> imageData). Attempt to annotation objects to the system clipboard, if available. static void; copySelectedAnnotationsToCurrentPlane(QuPathViewer viewer). Copy the selected objects and add them to the plane currently active in the viewer. static void; copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData). Attempt to copy selected objects to the system clipboard, if available. static void; createFullImageAnnotation(QuPathViewer viewer). Create a full image annotation for the image in the specified viewer. static Stage; createLicensesWindow(QuPathGUI qupath). Create a window summarizing license information for QuPath and its third party dependencies. static Stage; createMeasurementMapDialog(QuPathGUI qupath). Create a dialog for displaying measurement maps. static Stage; createMemoryMonitorDialog(QuPathGUI qupath). Create a dialog to monitor memory usage. static Stage; createObjectDescriptionsDialog(QuPathGUI qupath). Create a stage to display object descriptions. static Stage; createPreferencesDialog(QuPathGUI qupath). Show a dialog to adjust QuPath preferences. static void; createRotateImageDialog(QuPathGUI qupath). Create a dialog for rotating the image in the current viewer (for display only). static Stage; createShowSystemInfoDialog(QuPathGUI qupath). Create a window summarizing key system information relevant for QuPath. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier). Create a command that generates a persistent single dialog on demand. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier,; String name). Create a named command that generates a persistent single dialog on demand. static Stage; createSpecifyAnnotationDialog(QuPathGUI qupath). Create a stage to prompt the user to specify an annotation to add. static Stage; cr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:26319,Energy Efficiency,monitor,monitor,26319,"ta - . resetClassifications; public static void resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . createWorkflowDisplayDialog; public static Stage createWorkflowDisplayDialog(QuPathGUI qupath); Create a dialog to show the workflow history for the current image data. Parameters:; qupath - the QuPath instance; Returns:; a workflow display dialog. showWorkflowScript; public static void showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData); Show the QuPath script editor with a script corresponding to the command history of a specified image. Parameters:; qupath - ; imageData - . showScriptEditor; public static void showScriptEditor(QuPathGUI qupath); Show the script editor, or bring the window to the front if it is already open. Parameters:; qupath - . createMemoryMonitorDialog; public static Stage createMemoryMonitorDialog(QuPathGUI qupath); Create a dialog to monitor memory usage. Parameters:; qupath - ; Returns:. showMiniViewer; public static void showMiniViewer(QuPathViewer viewer); Show a mini viewer window associated with a specific viewer. Parameters:; viewer - the viewer with which to associate this window. showChannelViewer; public static void showChannelViewer(QuPathViewer viewer); Show a channel viewer window associated with a specific viewer. Parameters:; viewer - the viewer with which to associate this window. refreshObjectIDs; public static void refreshObjectIDs(ImageData<?> imageData,; boolean duplicatesOnly); Refresh object IDs to ensure uniqueness. Parameters:; imageData - ; duplicatesOnly - only refresh IDs that are duplicates of other IDs. runObjectImport; public static void runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a dialog to import object(s) from a file. Parameters:; qupath - ; imageData - . copySelectedObjectsToClipboard; public static void ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:1886,Integrability,depend,dependencies,1886,"boolean; combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op). Combine the selected annotations for the specified hierarchy. static void; convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus). Convert detection objects to point annotations based upon their ROI centroids. static void; copyAnnotationsToClipboard(ImageData<BufferedImage> imageData). Attempt to annotation objects to the system clipboard, if available. static void; copySelectedAnnotationsToCurrentPlane(QuPathViewer viewer). Copy the selected objects and add them to the plane currently active in the viewer. static void; copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData). Attempt to copy selected objects to the system clipboard, if available. static void; createFullImageAnnotation(QuPathViewer viewer). Create a full image annotation for the image in the specified viewer. static Stage; createLicensesWindow(QuPathGUI qupath). Create a window summarizing license information for QuPath and its third party dependencies. static Stage; createMeasurementMapDialog(QuPathGUI qupath). Create a dialog for displaying measurement maps. static Stage; createMemoryMonitorDialog(QuPathGUI qupath). Create a dialog to monitor memory usage. static Stage; createObjectDescriptionsDialog(QuPathGUI qupath). Create a stage to display object descriptions. static Stage; createPreferencesDialog(QuPathGUI qupath). Show a dialog to adjust QuPath preferences. static void; createRotateImageDialog(QuPathGUI qupath). Create a dialog for rotating the image in the current viewer (for display only). static Stage; createShowSystemInfoDialog(QuPathGUI qupath). Create a window summarizing key system information relevant for QuPath. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier). Create a command that generates a persistent single dialog on demand. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier,; S",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:16288,Integrability,depend,dependencies,16288," action. createSingleStageAction; public static org.controlsfx.control.action.Action createSingleStageAction(Supplier<Stage> supplier,; String name); Create a named command that generates a persistent single dialog on demand.; A reference to the dialog can be retained, so that if the command is called again ; either the original dialog is shown and/or brought to the front. Parameters:; supplier - supplier function to generate the dialog on demand; name - ; Returns:; the action. createMeasurementMapDialog; public static Stage createMeasurementMapDialog(QuPathGUI qupath); Create a dialog for displaying measurement maps. Parameters:; qupath - the QuPathGUI instance to which the maps refer; Returns:; a measurement map dialog. showScriptInterpreter; public static void showScriptInterpreter(QuPathGUI qupath); Show a script interpreter window for a Qupath instance. Parameters:; qupath - the QuPath instance. createLicensesWindow; public static Stage createLicensesWindow(QuPathGUI qupath); Create a window summarizing license information for QuPath and its third party dependencies. Parameters:; qupath - the current QuPath instance; Returns:; a window to display license information. createShowSystemInfoDialog; public static Stage createShowSystemInfoDialog(QuPathGUI qupath); Create a window summarizing key system information relevant for QuPath. Parameters:; qupath - the current QuPath instance; Returns:; a window to display license information. createPreferencesDialog; public static Stage createPreferencesDialog(QuPathGUI qupath); Show a dialog to adjust QuPath preferences. Parameters:; qupath - the QuPath instance; Returns:; window to use to display preferences. createRotateImageDialog; public static void createRotateImageDialog(QuPathGUI qupath); Create a dialog for rotating the image in the current viewer (for display only). Parameters:; qupath - the QuPathGUI instance. createZoomCommand; public static org.controlsfx.control.action.Action createZoomCommand(QuPathGUI qupath,",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:447,Modifiability,extend,extends,447,". Commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class Commands. java.lang.Object; qupath.lib.gui.commands.Commands. public class Commands; extends Object; Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Commands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; closeProject(QuPathGUI qupath). Close the current project open in the QuPathGUI. static boolean; combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op). Combine the selected annotations for the specified hierarchy. static void; convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus). Convert detection objects to point annotations based upon their ROI centroids. static void; copyAnnotationsToClipboard(ImageData<BufferedImage> imageData). Attempt to annotation objects to the system clipboard, if available. static void; copySelectedAnnotationsToCurrentPlane(QuPathViewer viewer). Copy the selected objects and add them to the plane currently active in the viewer. static void; copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData). Attempt to copy selected objects to the system clipboard, if available. static void; createFullImageAnnotation(QuPathViewer viewer). Create a full image annotation for the image in the specified viewer. static Stage; createLicensesWindow(QuPathGUI qupath). Create a window summarizing license information for QuPath and its third party dependencies. static Stage; createMeasurementMapDialog(QuPathGUI qupath). Create a dialog for displaying measuremen",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:5085,Modifiability,extend,extends,5085,"s accordingly. static void; launchTMADataViewer(QuPathGUI qupath). Open new window with the TMA data viewer. static void; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation for the selected objects, storing the command in the history workflow. static void; mergeSelectedAnnotations(ImageData<?> imageData). Merge the currently-selected annotations for an image, replacing them with a single new annotation. static void; pasteFromClipboard(QuPathGUI qupath,; boolean addToCurrentPlane). Attempt to paste objects from the system clipboard to the current image, if available; ; otherwise, check for text on the clipboard and paste it into a new script editor tab. static void; promptToAddShapeFeatures(QuPathGUI qupath). Prompt to add shape features for selected objects. static boolean; promptToCreateProject(QuPathGUI qupath). Prompt the user to select an empty directory, and use this to create a new project and set it as active. static void; promptToDeleteObjects(ImageData<?> imageData,; Class<? extends PathObject> cls). Prompt to delete objects of a specified type, or all objects. static boolean; promptToEditClass(PathClass pathClass). Prompt to edit the name/color of a class. static void; promptToEstimateStainVectors(ImageData<BufferedImage> imageData). Prompt to estimate stain vectors for the specified image, using any current region of interest. static void; promptToExportImageRegion(QuPathViewer viewer,; boolean renderedImage). Prompt to export the current image region selected in the viewer. static boolean; promptToOpenProject(QuPathGUI qupath). Prompt the user to open an existing project and set it as active. static boolean; promptToResetPreferences(). Reset QuPath's preferences, after confirming with the user. static void; promptToResolveHierarchy(ImageData<?> imageData). Resolve parent-child relationships within the object hierarchy. static boolean; promptToSaveImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData,; boolean overwriteExi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:7089,Modifiability,extend,extends,7089,"g). Prompt to save the specified ImageData. static void; promptToSelectObjectsByClassification(QuPathGUI qupath,; ImageData<?> imageData). Prompt to select objects according to their classifications. static void; promptToSetGridLineSpacing(OverlayOptions options). Prompt to input the spacing for the grid lines optionally displayed on viewers. static void; promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold). Show a prompt to selected annotations in a hierarchy. static void; refreshObjectIDs(ImageData<?> imageData,; boolean duplicatesOnly). Refresh object IDs to ensure uniqueness. static void; reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Reload the specified image data from a previously saved version,if available. static File; requestUserDirectory(boolean promptIfMissing). Request the current user directory, optionally prompting the user to request a directory if none is available. static void; resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static void; resetSelection(ImageData<?> imageData). Reset the selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:8008,Modifiability,extend,extends,8008,"t a directory if none is available. static void; resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static void; resetSelection(ImageData<?> imageData). Reset the selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChann",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:10418,Modifiability,inherit,inherited,10418,"alledExtensions(QuPathGUI qupath). Show a dialog displaying the extensions installed for a specified QuPath instance. static void; showMiniViewer(QuPathViewer viewer). Show a mini viewer window associated with a specific viewer. static void; showScriptEditor(QuPathGUI qupath). Show the script editor, or bring the window to the front if it is already open. static void; showScriptInterpreter(QuPathGUI qupath). Show a script interpreter window for a Qupath instance. static void; showTMACoreGridView(QuPathGUI qupath). Show a grid view for TMA core objects. static void; showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all TMA core objects. static void; showViewTracker(QuPathGUI qupath). Show a dialog to track the viewed region of an image. static void; showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData). Show the QuPath script editor with a script corresponding to the command history of a specified image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Commands; public Commands(). Method Details. insertSelectedObjectsInHierarchy; public static void insertSelectedObjectsInHierarchy(ImageData<?> imageData); Insert the selected objects in the hierarchy, resolving positions accordingly.; ; This causes smaller 'completely-contained' annotations to be positioned below larger containing annotations, ; and detections to be assigned to other annotations based on centroid location. Parameters:; imageData - the image data containing the hierarchy. promptToResolveHierarchy; public static void promptToResolveHierarchy(ImageData<?> imageData); Resolve parent-child relationships within the object hierarchy.; This means that objects will be arranged hierarchically, rather than as a flat list. Parameters:; imageData - the image data to process. createFullImageAnnotation; public static void createFullImageAnnot",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:20766,Modifiability,extend,extends,20766,"s were made, false otherwise. promptToSelectObjectsByClassification; public static void promptToSelectObjectsByClassification(QuPathGUI qupath,; ImageData<?> imageData); Prompt to select objects according to their classifications. Parameters:; qupath - ; imageData - . promptToEditClass; public static boolean promptToEditClass(PathClass pathClass); Prompt to edit the name/color of a class. Parameters:; pathClass - ; Returns:. selectObjectsByClassification; public static boolean selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses); Select objects by classification, logging the step (if performed) in the history workflow. Parameters:; imageData - the ImageData containing objects to be selected; pathClasses - classifications that will result in an object being selected; Returns:; true if a selection command was run, false otherwise (e.g. if no pathClasses were specified). promptToDeleteObjects; public static void promptToDeleteObjects(ImageData<?> imageData,; Class<? extends PathObject> cls); Prompt to delete objects of a specified type, or all objects. Parameters:; imageData - ; cls - . promptToResetPreferences; public static boolean promptToResetPreferences(); Reset QuPath's preferences, after confirming with the user.; QuPath needs to be restarted for this to take effect. Returns:; true if the preferences were reset, false otherwise. setViewerDownsample; public static void setViewerDownsample(QuPathViewer viewer,; double downsample); Set the downsample factor for the specified viewer. Parameters:; viewer - ; downsample - . closeProject; public static void closeProject(QuPathGUI qupath); Close the current project open in the QuPathGUI. Parameters:; qupath - . promptToCreateProject; public static boolean promptToCreateProject(QuPathGUI qupath); Prompt the user to select an empty directory, and use this to create a new project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be created.; Returns:;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:24980,Modifiability,extend,extends,24980,"lean preferNucleus); Convert detection objects to point annotations based upon their ROI centroids. Parameters:; imageData - the image data to process; preferNucleus - if true, use a nucleus ROI for cell objects (if available. promptToSimplifySelectedAnnotations; public static void promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold); Show a prompt to selected annotations in a hierarchy. Parameters:; imageData - the current image data; altitudeThreshold - default altitude value for simplification. selectObjectsOnCurrentPlane; public static void selectObjectsOnCurrentPlane(QuPathViewer viewer); Select all the objects on the current plane of the viewer. Parameters:; viewer - . selectAllObjects; public static void selectAllObjects(ImageData<?> imageData); Select all objects (excluding the root object) in the imageData. Parameters:; imageData - . selectObjectsByClass; public static void selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . resetSelection; public static void resetSelection(ImageData<?> imageData); Reset the selection for an image. Parameters:; imageData - . resetClassifications; public static void resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . createWorkflowDisplayDialog; public static Stage createWorkflowDisplayDialog(QuPathGUI qupath); Create a dialog to show the workflow history for the current image data. Parameters:; qupath - the QuPath instance; Returns:; a workflow display dialog. showWorkflowScript; public static void showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData); Show the QuPath script editor with a script corresponding to the command history of a specified image. Par",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:25375,Modifiability,extend,extends,25375,"d annotations in a hierarchy. Parameters:; imageData - the current image data; altitudeThreshold - default altitude value for simplification. selectObjectsOnCurrentPlane; public static void selectObjectsOnCurrentPlane(QuPathViewer viewer); Select all the objects on the current plane of the viewer. Parameters:; viewer - . selectAllObjects; public static void selectAllObjects(ImageData<?> imageData); Select all objects (excluding the root object) in the imageData. Parameters:; imageData - . selectObjectsByClass; public static void selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . resetSelection; public static void resetSelection(ImageData<?> imageData); Reset the selection for an image. Parameters:; imageData - . resetClassifications; public static void resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . createWorkflowDisplayDialog; public static Stage createWorkflowDisplayDialog(QuPathGUI qupath); Create a dialog to show the workflow history for the current image data. Parameters:; qupath - the QuPath instance; Returns:; a workflow display dialog. showWorkflowScript; public static void showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData); Show the QuPath script editor with a script corresponding to the command history of a specified image. Parameters:; qupath - ; imageData - . showScriptEditor; public static void showScriptEditor(QuPathGUI qupath); Show the script editor, or bring the window to the front if it is already open. Parameters:; qupath - . createMemoryMonitorDialog; public static Stage createMemoryMonitorDialog(QuPathGUI qupath); Create a dialog to monitor memory usage. Parameters:; qupath - ; Returns:. showMiniViewer; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:8290,Performance,perform,performed,8290,"e selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. static void; showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData). Show a simple dialog for viewing (and optionally removing) detection measurements. static void; showDetection",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:20379,Performance,perform,performed,20379,"qupath); Show a dialog to track the viewed region of an image. Parameters:; qupath - . combineSelectedAnnotations; public static boolean combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op); Combine the selected annotations for the specified hierarchy. Parameters:; imageData - the image data to process; op - the RoiTools.CombineOp operation to apply; Returns:; true if changes were made, false otherwise. promptToSelectObjectsByClassification; public static void promptToSelectObjectsByClassification(QuPathGUI qupath,; ImageData<?> imageData); Prompt to select objects according to their classifications. Parameters:; qupath - ; imageData - . promptToEditClass; public static boolean promptToEditClass(PathClass pathClass); Prompt to edit the name/color of a class. Parameters:; pathClass - ; Returns:. selectObjectsByClassification; public static boolean selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses); Select objects by classification, logging the step (if performed) in the history workflow. Parameters:; imageData - the ImageData containing objects to be selected; pathClasses - classifications that will result in an object being selected; Returns:; true if a selection command was run, false otherwise (e.g. if no pathClasses were specified). promptToDeleteObjects; public static void promptToDeleteObjects(ImageData<?> imageData,; Class<? extends PathObject> cls); Prompt to delete objects of a specified type, or all objects. Parameters:; imageData - ; cls - . promptToResetPreferences; public static boolean promptToResetPreferences(); Reset QuPath's preferences, after confirming with the user.; QuPath needs to be restarted for this to take effect. Returns:; true if the preferences were reset, false otherwise. setViewerDownsample; public static void setViewerDownsample(QuPathViewer viewer,; double downsample); Set the downsample factor for the specified viewer. Parameters:; viewer - ; downsample - . closeProject; public stati",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:1095,Safety,detect,detection,1095,"; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class Commands. java.lang.Object; qupath.lib.gui.commands.Commands. public class Commands; extends Object; Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Commands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; closeProject(QuPathGUI qupath). Close the current project open in the QuPathGUI. static boolean; combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op). Combine the selected annotations for the specified hierarchy. static void; convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus). Convert detection objects to point annotations based upon their ROI centroids. static void; copyAnnotationsToClipboard(ImageData<BufferedImage> imageData). Attempt to annotation objects to the system clipboard, if available. static void; copySelectedAnnotationsToCurrentPlane(QuPathViewer viewer). Copy the selected objects and add them to the plane currently active in the viewer. static void; copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData). Attempt to copy selected objects to the system clipboard, if available. static void; createFullImageAnnotation(QuPathViewer viewer). Create a full image annotation for the image in the specified viewer. static Stage; createLicensesWindow(QuPathGUI qupath). Create a window summarizing license information for QuPath and its third party dependencies. static Stage; createMeasurementMapDialog(QuPathGUI qupath). Create a dialog for displaying measurement maps. static Stage; createMemoryMonitorDialog(QuPathGUI qupath). Create a dialog to monitor memory usage. static Stage; cre",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:3459,Safety,detect,detections,3459,". static Stage; createShowSystemInfoDialog(QuPathGUI qupath). Create a window summarizing key system information relevant for QuPath. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier). Create a command that generates a persistent single dialog on demand. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier,; String name). Create a named command that generates a persistent single dialog on demand. static Stage; createSpecifyAnnotationDialog(QuPathGUI qupath). Create a stage to prompt the user to specify an annotation to add. static Stage; createWorkflowDisplayDialog(QuPathGUI qupath). Create a dialog to show the workflow history for the current image data. static org.controlsfx.control.action.Action; createZoomCommand(QuPathGUI qupath,; int zoomAmount). Create a zoom in/out command action. static void; detectionCentroidDistances2D(ImageData<?> imageData). Compute the distance between the centroids of all detections, for all available classifications. static void; distanceToAnnotations2D(ImageData<?> imageData,; boolean signedDistances). Compute the distance between all detections and the closest annotation, for all annotation classifications. static void; duplicateSelectedAnnotations(ImageData<?> imageData). Duplicate the selected annotations. static void; editSelectedAnnotation(QuPathGUI qupath). Prompt to edit the selected annotation by translation and rotation. static void; insertSelectedObjectsInHierarchy(ImageData<?> imageData). Insert the selected objects in the hierarchy, resolving positions accordingly. static void; launchTMADataViewer(QuPathGUI qupath). Open new window with the TMA data viewer. static void; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation for the selected objects, storing the command in the history workflow. static void; mergeSelectedAnnotations(ImageData<?> imageData). Merge the currently-selected annotations for an image, replacing",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:3627,Safety,detect,detections,3627,"StageAction(Supplier<Stage> supplier). Create a command that generates a persistent single dialog on demand. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier,; String name). Create a named command that generates a persistent single dialog on demand. static Stage; createSpecifyAnnotationDialog(QuPathGUI qupath). Create a stage to prompt the user to specify an annotation to add. static Stage; createWorkflowDisplayDialog(QuPathGUI qupath). Create a dialog to show the workflow history for the current image data. static org.controlsfx.control.action.Action; createZoomCommand(QuPathGUI qupath,; int zoomAmount). Create a zoom in/out command action. static void; detectionCentroidDistances2D(ImageData<?> imageData). Compute the distance between the centroids of all detections, for all available classifications. static void; distanceToAnnotations2D(ImageData<?> imageData,; boolean signedDistances). Compute the distance between all detections and the closest annotation, for all annotation classifications. static void; duplicateSelectedAnnotations(ImageData<?> imageData). Duplicate the selected annotations. static void; editSelectedAnnotation(QuPathGUI qupath). Prompt to edit the selected annotation by translation and rotation. static void; insertSelectedObjectsInHierarchy(ImageData<?> imageData). Insert the selected objects in the hierarchy, resolving positions accordingly. static void; launchTMADataViewer(QuPathGUI qupath). Open new window with the TMA data viewer. static void; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation for the selected objects, storing the command in the history workflow. static void; mergeSelectedAnnotations(ImageData<?> imageData). Merge the currently-selected annotations for an image, replacing them with a single new annotation. static void; pasteFromClipboard(QuPathGUI qupath,; boolean addToCurrentPlane). Attempt to paste objects from the system clipboard to the current image, if",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:9230,Safety,detect,detection,9230,"hClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. static void; showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData). Show a simple dialog for viewing (and optionally removing) detection measurements. static void; showDetectionMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all detection objects. static void; showInstalledExtensions(QuPathGUI qupath). Show a dialog displaying the extensions installed for a specified QuPath instance. static void; showMiniViewer(QuPathViewer viewer). Show a mini viewer window associated with a specific viewer. static void; showScriptEditor(QuPathGUI qupath). Show the script editor, or bring the window to the front if it is already open. static void; showScriptInterpreter(QuPathGUI qupath). Show a script interpreter window for a Qupath instance. static void; showTMACoreGridView(QuPathGUI qupath). Show a grid view for TMA core objects. static void; showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all TMA core objects. static void; showViewTracker(QuPathGUI qupath). Show a dialog to track the viewed r",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:9386,Safety,detect,detection,9386,"r viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. static void; showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData). Show a simple dialog for viewing (and optionally removing) detection measurements. static void; showDetectionMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all detection objects. static void; showInstalledExtensions(QuPathGUI qupath). Show a dialog displaying the extensions installed for a specified QuPath instance. static void; showMiniViewer(QuPathViewer viewer). Show a mini viewer window associated with a specific viewer. static void; showScriptEditor(QuPathGUI qupath). Show the script editor, or bring the window to the front if it is already open. static void; showScriptInterpreter(QuPathGUI qupath). Show a script interpreter window for a Qupath instance. static void; showTMACoreGridView(QuPathGUI qupath). Show a grid view for TMA core objects. static void; showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all TMA core objects. static void; showViewTracker(QuPathGUI qupath). Show a dialog to track the viewed region of an image. static void; showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData). Show the QuPath script editor with a script corresponding to the comman",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:10923,Safety,detect,detections,10923," void; showTMACoreGridView(QuPathGUI qupath). Show a grid view for TMA core objects. static void; showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all TMA core objects. static void; showViewTracker(QuPathGUI qupath). Show a dialog to track the viewed region of an image. static void; showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData). Show the QuPath script editor with a script corresponding to the command history of a specified image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Commands; public Commands(). Method Details. insertSelectedObjectsInHierarchy; public static void insertSelectedObjectsInHierarchy(ImageData<?> imageData); Insert the selected objects in the hierarchy, resolving positions accordingly.; ; This causes smaller 'completely-contained' annotations to be positioned below larger containing annotations, ; and detections to be assigned to other annotations based on centroid location. Parameters:; imageData - the image data containing the hierarchy. promptToResolveHierarchy; public static void promptToResolveHierarchy(ImageData<?> imageData); Resolve parent-child relationships within the object hierarchy.; This means that objects will be arranged hierarchically, rather than as a flat list. Parameters:; imageData - the image data to process. createFullImageAnnotation; public static void createFullImageAnnotation(QuPathViewer viewer); Create a full image annotation for the image in the specified viewer.; The z and t positions of the viewer will be used. Parameters:; viewer - the viewer containing the image to be processed. editSelectedAnnotation; public static void editSelectedAnnotation(QuPathGUI qupath); Prompt to edit the selected annotation by translation and rotation.; ; Note that this method may change in future versions to be tied to a specified image data, ; rather",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:12515,Safety,detect,detection,12515,"Viewer viewer); Create a full image annotation for the image in the specified viewer.; The z and t positions of the viewer will be used. Parameters:; viewer - the viewer containing the image to be processed. editSelectedAnnotation; public static void editSelectedAnnotation(QuPathGUI qupath); Prompt to edit the selected annotation by translation and rotation.; ; Note that this method may change in future versions to be tied to a specified image data, ; rather than a specific QuPath instance. Parameters:; qupath - the QuPath instance for which the object should be edited. showAnnotationGridView; public static void showAnnotationGridView(QuPathGUI qupath); Show a grid view for annotation objects. Parameters:; qupath - the QuPath instance. showTMACoreGridView; public static void showTMACoreGridView(QuPathGUI qupath); Show a grid view for TMA core objects. Parameters:; qupath - the QuPath instance. showDetectionMeasurementTable; public static void showDetectionMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a measurement table for all detection objects. Parameters:; qupath - the QuPath instance; imageData - the image data for which to show measurements. showCellMeasurementTable; public static void showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a measurement table for all cell objects. Parameters:; qupath - the QuPath instance; imageData - the image data for which to show measurements. showAnnotationMeasurementTable; public static void showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a measurement table for all annotation objects. Parameters:; qupath - the QuPath instance; imageData - the image data for which to show measurements. showTMAMeasurementTable; public static void showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a measurement table for all TMA core objects. Parameters:; qupath - the QuPath instance; imageData - the i",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:14518,Safety,detect,detection,14518,"he image data for which to show measurements. promptToEstimateStainVectors; public static void promptToEstimateStainVectors(ImageData<BufferedImage> imageData); Prompt to estimate stain vectors for the specified image, using any current region of interest. Parameters:; imageData - the image data for which stain vectors should be estimated. promptToExportImageRegion; public static void promptToExportImageRegion(QuPathViewer viewer,; boolean renderedImage); Prompt to export the current image region selected in the viewer. Parameters:; viewer - the viewer containing the image to export; renderedImage - if true, export the rendered (RGB) image rather than original pixel values. showInstalledExtensions; public static void showInstalledExtensions(QuPathGUI qupath); Show a dialog displaying the extensions installed for a specified QuPath instance. Parameters:; qupath - the QuPath instance. showDetectionMeasurementManager; public static void showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData); Show a simple dialog for viewing (and optionally removing) detection measurements. Parameters:; qupath - ; imageData - . resetTMAMetadata; public static boolean resetTMAMetadata(ImageData<?> imageData); Reset TMA metadata, if available. Parameters:; imageData - ; Returns:; true if changes were made, false otherwise. createSingleStageAction; public static org.controlsfx.control.action.Action createSingleStageAction(Supplier<Stage> supplier); Create a command that generates a persistent single dialog on demand.; A reference to the dialog can be retained, so that if the command is called again ; either the original dialog is shown and/or brought to the front. Parameters:; supplier - supplier function to generate the dialog on demand; Returns:; the action. createSingleStageAction; public static org.controlsfx.control.action.Action createSingleStageAction(Supplier<Stage> supplier,; String name); Create a named command that generates a persistent single dialog on deman",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:22490,Safety,detect,detections,22490,"Parameters:; qupath - . promptToCreateProject; public static boolean promptToCreateProject(QuPathGUI qupath); Prompt the user to select an empty directory, and use this to create a new project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be created.; Returns:; true if a project was created, false otherwise (e.g. the user cancelled). promptToOpenProject; public static boolean promptToOpenProject(QuPathGUI qupath); Prompt the user to open an existing project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be opened.; Returns:; true if a project was opened, false otherwise (e.g. the user cancelled). launchTMADataViewer; public static void launchTMADataViewer(QuPathGUI qupath); Open new window with the TMA data viewer. Parameters:; qupath - current QuPathGUI instance (may be null). distanceToAnnotations2D; public static void distanceToAnnotations2D(ImageData<?> imageData,; boolean signedDistances); Compute the distance between all detections and the closest annotation, for all annotation classifications. Parameters:; imageData - the image data to process; signedDistances - if true, use signed distances. detectionCentroidDistances2D; public static void detectionCentroidDistances2D(ImageData<?> imageData); Compute the distance between the centroids of all detections, for all available classifications. Parameters:; imageData - the image data to process. promptToSetGridLineSpacing; public static void promptToSetGridLineSpacing(OverlayOptions options); Prompt to input the spacing for the grid lines optionally displayed on viewers. Parameters:; options - the OverlayOptions that manage the grid lines. requestUserDirectory; public static File requestUserDirectory(boolean promptIfMissing); Request the current user directory, optionally prompting the user to request a directory if none is available. Parameters:; promptIfMissing - ; Returns:; the user directory, or null if none exists",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:22819,Safety,detect,detections,22819,"e if a project was created, false otherwise (e.g. the user cancelled). promptToOpenProject; public static boolean promptToOpenProject(QuPathGUI qupath); Prompt the user to open an existing project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be opened.; Returns:; true if a project was opened, false otherwise (e.g. the user cancelled). launchTMADataViewer; public static void launchTMADataViewer(QuPathGUI qupath); Open new window with the TMA data viewer. Parameters:; qupath - current QuPathGUI instance (may be null). distanceToAnnotations2D; public static void distanceToAnnotations2D(ImageData<?> imageData,; boolean signedDistances); Compute the distance between all detections and the closest annotation, for all annotation classifications. Parameters:; imageData - the image data to process; signedDistances - if true, use signed distances. detectionCentroidDistances2D; public static void detectionCentroidDistances2D(ImageData<?> imageData); Compute the distance between the centroids of all detections, for all available classifications. Parameters:; imageData - the image data to process. promptToSetGridLineSpacing; public static void promptToSetGridLineSpacing(OverlayOptions options); Prompt to input the spacing for the grid lines optionally displayed on viewers. Parameters:; options - the OverlayOptions that manage the grid lines. requestUserDirectory; public static File requestUserDirectory(boolean promptIfMissing); Request the current user directory, optionally prompting the user to request a directory if none is available. Parameters:; promptIfMissing - ; Returns:; the user directory, or null if none exists and the user did not create one. reloadImageData; public static void reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Reload the specified image data from a previously saved version,if available. Parameters:; qupath - ; imageData - . promptToAddShapeFeatures; public static void promptToAdd",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:24025,Safety,detect,detection,24025,"rlayOptions options); Prompt to input the spacing for the grid lines optionally displayed on viewers. Parameters:; options - the OverlayOptions that manage the grid lines. requestUserDirectory; public static File requestUserDirectory(boolean promptIfMissing); Request the current user directory, optionally prompting the user to request a directory if none is available. Parameters:; promptIfMissing - ; Returns:; the user directory, or null if none exists and the user did not create one. reloadImageData; public static void reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Reload the specified image data from a previously saved version,if available. Parameters:; qupath - ; imageData - . promptToAddShapeFeatures; public static void promptToAddShapeFeatures(QuPathGUI qupath); Prompt to add shape features for selected objects. Parameters:; qupath - current QuPath instance. convertDetectionsToPoints; public static void convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus); Convert detection objects to point annotations based upon their ROI centroids. Parameters:; imageData - the image data to process; preferNucleus - if true, use a nucleus ROI for cell objects (if available. promptToSimplifySelectedAnnotations; public static void promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold); Show a prompt to selected annotations in a hierarchy. Parameters:; imageData - the current image data; altitudeThreshold - default altitude value for simplification. selectObjectsOnCurrentPlane; public static void selectObjectsOnCurrentPlane(QuPathViewer viewer); Select all the objects on the current plane of the viewer. Parameters:; viewer - . selectAllObjects; public static void selectAllObjects(ImageData<?> imageData); Select all objects (excluding the root object) in the imageData. Parameters:; imageData - . selectObjectsByClass; public static void selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObj",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:10492,Security,hash,hashCode,10492,"ns installed for a specified QuPath instance. static void; showMiniViewer(QuPathViewer viewer). Show a mini viewer window associated with a specific viewer. static void; showScriptEditor(QuPathGUI qupath). Show the script editor, or bring the window to the front if it is already open. static void; showScriptInterpreter(QuPathGUI qupath). Show a script interpreter window for a Qupath instance. static void; showTMACoreGridView(QuPathGUI qupath). Show a grid view for TMA core objects. static void; showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all TMA core objects. static void; showViewTracker(QuPathGUI qupath). Show a dialog to track the viewed region of an image. static void; showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData). Show the QuPath script editor with a script corresponding to the command history of a specified image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Commands; public Commands(). Method Details. insertSelectedObjectsInHierarchy; public static void insertSelectedObjectsInHierarchy(ImageData<?> imageData); Insert the selected objects in the hierarchy, resolving positions accordingly.; ; This causes smaller 'completely-contained' annotations to be positioned below larger containing annotations, ; and detections to be assigned to other annotations based on centroid location. Parameters:; imageData - the image data containing the hierarchy. promptToResolveHierarchy; public static void promptToResolveHierarchy(ImageData<?> imageData); Resolve parent-child relationships within the object hierarchy.; This means that objects will be arranged hierarchically, rather than as a flat list. Parameters:; imageData - the image data to process. createFullImageAnnotation; public static void createFullImageAnnotation(QuPathViewer viewer); Create a full image annotation for the image",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:7171,Testability,log,logging,7171,"athGUI qupath,; ImageData<?> imageData). Prompt to select objects according to their classifications. static void; promptToSetGridLineSpacing(OverlayOptions options). Prompt to input the spacing for the grid lines optionally displayed on viewers. static void; promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold). Show a prompt to selected annotations in a hierarchy. static void; refreshObjectIDs(ImageData<?> imageData,; boolean duplicatesOnly). Refresh object IDs to ensure uniqueness. static void; reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Reload the specified image data from a previously saved version,if available. static File; requestUserDirectory(boolean promptIfMissing). Request the current user directory, optionally prompting the user to request a directory if none is available. static void; resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static void; resetSelection(ImageData<?> imageData). Reset the selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjects",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:8090,Testability,log,logging,8090,"ss<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static void; resetSelection(ImageData<?> imageData). Reset the selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. sta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:8269,Testability,log,logging,8269,"e selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. static void; showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData). Show a simple dialog for viewing (and optionally removing) detection measurements. static void; showDetection",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:20358,Testability,log,logging,20358,"qupath); Show a dialog to track the viewed region of an image. Parameters:; qupath - . combineSelectedAnnotations; public static boolean combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op); Combine the selected annotations for the specified hierarchy. Parameters:; imageData - the image data to process; op - the RoiTools.CombineOp operation to apply; Returns:; true if changes were made, false otherwise. promptToSelectObjectsByClassification; public static void promptToSelectObjectsByClassification(QuPathGUI qupath,; ImageData<?> imageData); Prompt to select objects according to their classifications. Parameters:; qupath - ; imageData - . promptToEditClass; public static boolean promptToEditClass(PathClass pathClass); Prompt to edit the name/color of a class. Parameters:; pathClass - ; Returns:. selectObjectsByClassification; public static boolean selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses); Select objects by classification, logging the step (if performed) in the history workflow. Parameters:; imageData - the ImageData containing objects to be selected; pathClasses - classifications that will result in an object being selected; Returns:; true if a selection command was run, false otherwise (e.g. if no pathClasses were specified). promptToDeleteObjects; public static void promptToDeleteObjects(ImageData<?> imageData,; Class<? extends PathObject> cls); Prompt to delete objects of a specified type, or all objects. Parameters:; imageData - ; cls - . promptToResetPreferences; public static boolean promptToResetPreferences(); Reset QuPath's preferences, after confirming with the user.; QuPath needs to be restarted for this to take effect. Returns:; true if the preferences were reset, false otherwise. setViewerDownsample; public static void setViewerDownsample(QuPathViewer viewer,; double downsample); Set the downsample factor for the specified viewer. Parameters:; viewer - ; downsample - . closeProject; public stati",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:25062,Testability,log,logging,25062,"lean preferNucleus); Convert detection objects to point annotations based upon their ROI centroids. Parameters:; imageData - the image data to process; preferNucleus - if true, use a nucleus ROI for cell objects (if available. promptToSimplifySelectedAnnotations; public static void promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold); Show a prompt to selected annotations in a hierarchy. Parameters:; imageData - the current image data; altitudeThreshold - default altitude value for simplification. selectObjectsOnCurrentPlane; public static void selectObjectsOnCurrentPlane(QuPathViewer viewer); Select all the objects on the current plane of the viewer. Parameters:; viewer - . selectAllObjects; public static void selectAllObjects(ImageData<?> imageData); Select all objects (excluding the root object) in the imageData. Parameters:; imageData - . selectObjectsByClass; public static void selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . resetSelection; public static void resetSelection(ImageData<?> imageData); Reset the selection for an image. Parameters:; imageData - . resetClassifications; public static void resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . createWorkflowDisplayDialog; public static Stage createWorkflowDisplayDialog(QuPathGUI qupath); Create a dialog to show the workflow history for the current image data. Parameters:; qupath - the QuPath instance; Returns:; a workflow display dialog. showWorkflowScript; public static void showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData); Show the QuPath script editor with a script corresponding to the command history of a specified image. Par",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:25457,Testability,log,logging,25457,"d annotations in a hierarchy. Parameters:; imageData - the current image data; altitudeThreshold - default altitude value for simplification. selectObjectsOnCurrentPlane; public static void selectObjectsOnCurrentPlane(QuPathViewer viewer); Select all the objects on the current plane of the viewer. Parameters:; viewer - . selectAllObjects; public static void selectAllObjects(ImageData<?> imageData); Select all objects (excluding the root object) in the imageData. Parameters:; imageData - . selectObjectsByClass; public static void selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . resetSelection; public static void resetSelection(ImageData<?> imageData); Reset the selection for an image. Parameters:; imageData - . resetClassifications; public static void resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . createWorkflowDisplayDialog; public static Stage createWorkflowDisplayDialog(QuPathGUI qupath); Create a dialog to show the workflow history for the current image data. Parameters:; qupath - the QuPath instance; Returns:; a workflow display dialog. showWorkflowScript; public static void showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData); Show the QuPath script editor with a script corresponding to the command history of a specified image. Parameters:; qupath - ; imageData - . showScriptEditor; public static void showScriptEditor(QuPathGUI qupath); Show the script editor, or bring the window to the front if it is already open. Parameters:; qupath - . createMemoryMonitorDialog; public static Stage createMemoryMonitorDialog(QuPathGUI qupath); Create a dialog to monitor memory usage. Parameters:; qupath - ; Returns:. showMiniViewer; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:489,Usability,simpl,simple,489,". Commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class Commands. java.lang.Object; qupath.lib.gui.commands.Commands. public class Commands; extends Object; Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Commands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; closeProject(QuPathGUI qupath). Close the current project open in the QuPathGUI. static boolean; combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op). Combine the selected annotations for the specified hierarchy. static void; convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus). Convert detection objects to point annotations based upon their ROI centroids. static void; copyAnnotationsToClipboard(ImageData<BufferedImage> imageData). Attempt to annotation objects to the system clipboard, if available. static void; copySelectedAnnotationsToCurrentPlane(QuPathViewer viewer). Copy the selected objects and add them to the plane currently active in the viewer. static void; copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData). Attempt to copy selected objects to the system clipboard, if available. static void; createFullImageAnnotation(QuPathViewer viewer). Create a full image annotation for the image in the specified viewer. static Stage; createLicensesWindow(QuPathGUI qupath). Create a window summarizing license information for QuPath and its third party dependencies. static Stage; createMeasurementMapDialog(QuPathGUI qupath). Create a dialog for displaying measuremen",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:9178,Usability,simpl,simple,9178,"hClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. static void; showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData). Show a simple dialog for viewing (and optionally removing) detection measurements. static void; showDetectionMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all detection objects. static void; showInstalledExtensions(QuPathGUI qupath). Show a dialog displaying the extensions installed for a specified QuPath instance. static void; showMiniViewer(QuPathViewer viewer). Show a mini viewer window associated with a specific viewer. static void; showScriptEditor(QuPathGUI qupath). Show the script editor, or bring the window to the front if it is already open. static void; showScriptInterpreter(QuPathGUI qupath). Show a script interpreter window for a Qupath instance. static void; showTMACoreGridView(QuPathGUI qupath). Show a grid view for TMA core objects. static void; showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all TMA core objects. static void; showViewTracker(QuPathGUI qupath). Show a dialog to track the viewed r",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:14466,Usability,simpl,simple,14466,"he image data for which to show measurements. promptToEstimateStainVectors; public static void promptToEstimateStainVectors(ImageData<BufferedImage> imageData); Prompt to estimate stain vectors for the specified image, using any current region of interest. Parameters:; imageData - the image data for which stain vectors should be estimated. promptToExportImageRegion; public static void promptToExportImageRegion(QuPathViewer viewer,; boolean renderedImage); Prompt to export the current image region selected in the viewer. Parameters:; viewer - the viewer containing the image to export; renderedImage - if true, export the rendered (RGB) image rather than original pixel values. showInstalledExtensions; public static void showInstalledExtensions(QuPathGUI qupath); Show a dialog displaying the extensions installed for a specified QuPath instance. Parameters:; qupath - the QuPath instance. showDetectionMeasurementManager; public static void showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData); Show a simple dialog for viewing (and optionally removing) detection measurements. Parameters:; qupath - ; imageData - . resetTMAMetadata; public static boolean resetTMAMetadata(ImageData<?> imageData); Reset TMA metadata, if available. Parameters:; imageData - ; Returns:; true if changes were made, false otherwise. createSingleStageAction; public static org.controlsfx.control.action.Action createSingleStageAction(Supplier<Stage> supplier); Create a command that generates a persistent single dialog on demand.; A reference to the dialog can be retained, so that if the command is called again ; either the original dialog is shown and/or brought to the front. Parameters:; supplier - supplier function to generate the dialog on demand; Returns:; the action. createSingleStageAction; public static org.controlsfx.control.action.Action createSingleStageAction(Supplier<Stage> supplier,; String name); Create a named command that generates a persistent single dialog on deman",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:24517,Usability,simpl,simplification,24517,"ate one. reloadImageData; public static void reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Reload the specified image data from a previously saved version,if available. Parameters:; qupath - ; imageData - . promptToAddShapeFeatures; public static void promptToAddShapeFeatures(QuPathGUI qupath); Prompt to add shape features for selected objects. Parameters:; qupath - current QuPath instance. convertDetectionsToPoints; public static void convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus); Convert detection objects to point annotations based upon their ROI centroids. Parameters:; imageData - the image data to process; preferNucleus - if true, use a nucleus ROI for cell objects (if available. promptToSimplifySelectedAnnotations; public static void promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold); Show a prompt to selected annotations in a hierarchy. Parameters:; imageData - the current image data; altitudeThreshold - default altitude value for simplification. selectObjectsOnCurrentPlane; public static void selectObjectsOnCurrentPlane(QuPathViewer viewer); Select all the objects on the current plane of the viewer. Parameters:; viewer - . selectAllObjects; public static void selectAllObjects(ImageData<?> imageData); Select all objects (excluding the root object) in the imageData. Parameters:; imageData - . selectObjectsByClass; public static void selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . resetSelection; public static void resetSelection(ImageData<?> imageData); Reset the selection for an image. Parameters:; imageData - . resetClassifications; public static void resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropri",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/Commands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html:828,Availability,avail,available,828,". ContextHelpViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ContextHelpViewer. java.lang.Object; qupath.lib.gui.commands.ContextHelpViewer. public class ContextHelpViewer; extends Object; Help window providing context-dependent help. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a message that may be used to create a badge indicating that info or warning messages; are available. static ContextHelpViewer; getInstance(QuPathGUI qupath). Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Stage; getStage(). Get the help viewer stage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a message that may be used to create a badge indicating that info or warning messages; are available. Returns:. getInstance; public static ContextHelpViewer getInstance(QuPathGUI qupath); Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the help viewer stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html:1351,Availability,avail,available,1351,". ContextHelpViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ContextHelpViewer. java.lang.Object; qupath.lib.gui.commands.ContextHelpViewer. public class ContextHelpViewer; extends Object; Help window providing context-dependent help. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a message that may be used to create a badge indicating that info or warning messages; are available. static ContextHelpViewer; getInstance(QuPathGUI qupath). Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Stage; getStage(). Get the help viewer stage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a message that may be used to create a badge indicating that info or warning messages; are available. Returns:. getInstance; public static ContextHelpViewer getInstance(QuPathGUI qupath); Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the help viewer stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html:529,Integrability,depend,dependent,529,". ContextHelpViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ContextHelpViewer. java.lang.Object; qupath.lib.gui.commands.ContextHelpViewer. public class ContextHelpViewer; extends Object; Help window providing context-dependent help. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a message that may be used to create a badge indicating that info or warning messages; are available. static ContextHelpViewer; getInstance(QuPathGUI qupath). Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Stage; getStage(). Get the help viewer stage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a message that may be used to create a badge indicating that info or warning messages; are available. Returns:. getInstance; public static ContextHelpViewer getInstance(QuPathGUI qupath); Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the help viewer stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html:739,Integrability,message,message,739,". ContextHelpViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ContextHelpViewer. java.lang.Object; qupath.lib.gui.commands.ContextHelpViewer. public class ContextHelpViewer; extends Object; Help window providing context-dependent help. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a message that may be used to create a badge indicating that info or warning messages; are available. static ContextHelpViewer; getInstance(QuPathGUI qupath). Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Stage; getStage(). Get the help viewer stage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a message that may be used to create a badge indicating that info or warning messages; are available. Returns:. getInstance; public static ContextHelpViewer getInstance(QuPathGUI qupath); Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the help viewer stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html:814,Integrability,message,messages,814,". ContextHelpViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ContextHelpViewer. java.lang.Object; qupath.lib.gui.commands.ContextHelpViewer. public class ContextHelpViewer; extends Object; Help window providing context-dependent help. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a message that may be used to create a badge indicating that info or warning messages; are available. static ContextHelpViewer; getInstance(QuPathGUI qupath). Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Stage; getStage(). Get the help viewer stage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a message that may be used to create a badge indicating that info or warning messages; are available. Returns:. getInstance; public static ContextHelpViewer getInstance(QuPathGUI qupath); Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the help viewer stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html:1262,Integrability,message,message,1262,". ContextHelpViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ContextHelpViewer. java.lang.Object; qupath.lib.gui.commands.ContextHelpViewer. public class ContextHelpViewer; extends Object; Help window providing context-dependent help. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a message that may be used to create a badge indicating that info or warning messages; are available. static ContextHelpViewer; getInstance(QuPathGUI qupath). Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Stage; getStage(). Get the help viewer stage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a message that may be used to create a badge indicating that info or warning messages; are available. Returns:. getInstance; public static ContextHelpViewer getInstance(QuPathGUI qupath); Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the help viewer stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html:1337,Integrability,message,messages,1337,". ContextHelpViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ContextHelpViewer. java.lang.Object; qupath.lib.gui.commands.ContextHelpViewer. public class ContextHelpViewer; extends Object; Help window providing context-dependent help. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a message that may be used to create a badge indicating that info or warning messages; are available. static ContextHelpViewer; getInstance(QuPathGUI qupath). Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Stage; getStage(). Get the help viewer stage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a message that may be used to create a badge indicating that info or warning messages; are available. Returns:. getInstance; public static ContextHelpViewer getInstance(QuPathGUI qupath); Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the help viewer stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html:483,Modifiability,extend,extends,483,". ContextHelpViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ContextHelpViewer. java.lang.Object; qupath.lib.gui.commands.ContextHelpViewer. public class ContextHelpViewer; extends Object; Help window providing context-dependent help. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a message that may be used to create a badge indicating that info or warning messages; are available. static ContextHelpViewer; getInstance(QuPathGUI qupath). Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Stage; getStage(). Get the help viewer stage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a message that may be used to create a badge indicating that info or warning messages; are available. Returns:. getInstance; public static ContextHelpViewer getInstance(QuPathGUI qupath); Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the help viewer stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html:1038,Modifiability,inherit,inherited,1038,". ContextHelpViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ContextHelpViewer. java.lang.Object; qupath.lib.gui.commands.ContextHelpViewer. public class ContextHelpViewer; extends Object; Help window providing context-dependent help. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a message that may be used to create a badge indicating that info or warning messages; are available. static ContextHelpViewer; getInstance(QuPathGUI qupath). Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Stage; getStage(). Get the help viewer stage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a message that may be used to create a badge indicating that info or warning messages; are available. Returns:. getInstance; public static ContextHelpViewer getInstance(QuPathGUI qupath); Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the help viewer stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html:1112,Security,hash,hashCode,1112,". ContextHelpViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ContextHelpViewer. java.lang.Object; qupath.lib.gui.commands.ContextHelpViewer. public class ContextHelpViewer; extends Object; Help window providing context-dependent help. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a message that may be used to create a badge indicating that info or warning messages; are available. static ContextHelpViewer; getInstance(QuPathGUI qupath). Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Stage; getStage(). Get the help viewer stage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a message that may be used to create a badge indicating that info or warning messages; are available. Returns:. getInstance; public static ContextHelpViewer getInstance(QuPathGUI qupath); Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the help viewer stage. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html:1507,Integrability,interface,interface,1507,". CountingDialogCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class CountingDialogCommand. java.lang.Object; qupath.lib.gui.commands.CountingDialogCommand. All Implemented Interfaces:; Runnable, ChangeListener<ImageData<BufferedImage>>. public class CountingDialogCommand; extends Object; implements Runnable, ChangeListener<ImageData<BufferedImage>>; Command to open up a counting panel to aid with creating Point annotations. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CountingDialogCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CountingDialogCommand; public CountingDialogCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html:1724,Integrability,interface,interface,1724,". CountingDialogCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class CountingDialogCommand. java.lang.Object; qupath.lib.gui.commands.CountingDialogCommand. All Implemented Interfaces:; Runnable, ChangeListener<ImageData<BufferedImage>>. public class CountingDialogCommand; extends Object; implements Runnable, ChangeListener<ImageData<BufferedImage>>; Command to open up a counting panel to aid with creating Point annotations. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CountingDialogCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CountingDialogCommand; public CountingDialogCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html:580,Modifiability,extend,extends,580,". CountingDialogCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class CountingDialogCommand. java.lang.Object; qupath.lib.gui.commands.CountingDialogCommand. All Implemented Interfaces:; Runnable, ChangeListener<ImageData<BufferedImage>>. public class CountingDialogCommand; extends Object; implements Runnable, ChangeListener<ImageData<BufferedImage>>; Command to open up a counting panel to aid with creating Point annotations. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CountingDialogCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CountingDialogCommand; public CountingDialogCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html:1007,Modifiability,extend,extends,1007,". CountingDialogCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class CountingDialogCommand. java.lang.Object; qupath.lib.gui.commands.CountingDialogCommand. All Implemented Interfaces:; Runnable, ChangeListener<ImageData<BufferedImage>>. public class CountingDialogCommand; extends Object; implements Runnable, ChangeListener<ImageData<BufferedImage>>; Command to open up a counting panel to aid with creating Point annotations. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CountingDialogCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CountingDialogCommand; public CountingDialogCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html:1158,Modifiability,inherit,inherited,1158,". CountingDialogCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class CountingDialogCommand. java.lang.Object; qupath.lib.gui.commands.CountingDialogCommand. All Implemented Interfaces:; Runnable, ChangeListener<ImageData<BufferedImage>>. public class CountingDialogCommand; extends Object; implements Runnable, ChangeListener<ImageData<BufferedImage>>; Command to open up a counting panel to aid with creating Point annotations. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CountingDialogCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CountingDialogCommand; public CountingDialogCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html:1574,Modifiability,extend,extends,1574,". CountingDialogCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class CountingDialogCommand. java.lang.Object; qupath.lib.gui.commands.CountingDialogCommand. All Implemented Interfaces:; Runnable, ChangeListener<ImageData<BufferedImage>>. public class CountingDialogCommand; extends Object; implements Runnable, ChangeListener<ImageData<BufferedImage>>; Command to open up a counting panel to aid with creating Point annotations. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CountingDialogCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CountingDialogCommand; public CountingDialogCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html:1232,Security,hash,hashCode,1232,". CountingDialogCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class CountingDialogCommand. java.lang.Object; qupath.lib.gui.commands.CountingDialogCommand. All Implemented Interfaces:; Runnable, ChangeListener<ImageData<BufferedImage>>. public class CountingDialogCommand; extends Object; implements Runnable, ChangeListener<ImageData<BufferedImage>>; Command to open up a counting panel to aid with creating Point annotations. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CountingDialogCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CountingDialogCommand; public CountingDialogCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ExportObjectsCommand.html:501,Modifiability,extend,extends,501,". ExportObjectsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ExportObjectsCommand. java.lang.Object; qupath.lib.gui.commands.ExportObjectsCommand. public final class ExportObjectsCommand; extends Object; Command to export object(s) in GeoJSON format to an output file. Author:; Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; runGeoJsonExport(QuPathGUI qupath). Run the path object GeoJSON export command. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. runGeoJsonExport; public static boolean runGeoJsonExport(QuPathGUI qupath); throws IOException; Run the path object GeoJSON export command. Parameters:; qupath - ; Returns:; success; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ExportObjectsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ExportObjectsCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ExportObjectsCommand.html:825,Modifiability,inherit,inherited,825,". ExportObjectsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ExportObjectsCommand. java.lang.Object; qupath.lib.gui.commands.ExportObjectsCommand. public final class ExportObjectsCommand; extends Object; Command to export object(s) in GeoJSON format to an output file. Author:; Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; runGeoJsonExport(QuPathGUI qupath). Run the path object GeoJSON export command. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. runGeoJsonExport; public static boolean runGeoJsonExport(QuPathGUI qupath); throws IOException; Run the path object GeoJSON export command. Parameters:; qupath - ; Returns:; success; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ExportObjectsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ExportObjectsCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ExportObjectsCommand.html:899,Security,hash,hashCode,899,". ExportObjectsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ExportObjectsCommand. java.lang.Object; qupath.lib.gui.commands.ExportObjectsCommand. public final class ExportObjectsCommand; extends Object; Command to export object(s) in GeoJSON format to an output file. Author:; Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; runGeoJsonExport(QuPathGUI qupath). Run the path object GeoJSON export command. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. runGeoJsonExport; public static boolean runGeoJsonExport(QuPathGUI qupath); throws IOException; Run the path object GeoJSON export command. Parameters:; qupath - ; Returns:; success; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ExportObjectsCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ExportObjectsCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html:1185,Deployability,update,update,1185,"e; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class InteractiveObjectImporter. java.lang.Object; qupath.lib.gui.commands.InteractiveObjectImporter. public final class InteractiveObjectImporter; extends Object; Static methods to import object(s) from different sources. Author:; Melvin Gelbard, Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; MIME_TYPE_GEOJSON. Mime type for GeoJson. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DataFormat; getGeoJsonDataFormat(). Get a DataFormat suitable for storing GeoJSON data on a clipboard. static boolean; promptToImportObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Import a collection of objects to an object hierarchy, prompting to confirm and asking whether to update IDs. static boolean; promptToImportObjectsFromFile(ImageData<BufferedImage> imageData,; File file). Prompt to import objects read from a file. static boolean; promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry). Prompt to import objects from a project entry. static boolean; promptToPasteObjectsFromClipboard(ImageData<BufferedImage> imageData). Prompt to paste objects from the system clipboard, if possible. static List<PathObject>; readObjectsFromClipboard(ImageData<BufferedImage> imageData). Try to read objects from the system clipboard. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MIME_TYPE_GEOJSON; public static final String MIME_TYPE_GEOJSON; Mime type for GeoJson. See Also:. Constant Field Values. Method Details. getGeoJsonDataFormat; public static DataFormat getGeoJsonDataForma",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html:3996,Deployability,update,update,3996,"rd. Returns:. promptToImportObjectsProjectEntry; public static boolean promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry); Prompt to import objects from a project entry. Parameters:; imageData - the image to which the objects should be added; entry - the entry containing the objects to add; Returns:; true if objects were added, false otherwise. readObjectsFromClipboard; public static List<PathObject> readObjectsFromClipboard(ImageData<BufferedImage> imageData); throws IOException,; JsonSyntaxException,; JsonParseException; Try to read objects from the system clipboard. Parameters:; imageData - the image to which the objects should be added; Returns:; true a list of objects read from the system clipboard, or empty list if none could be found; Throws:; IOException; JsonSyntaxException; JsonParseException. promptToPasteObjectsFromClipboard; public static boolean promptToPasteObjectsFromClipboard(ImageData<BufferedImage> imageData); Prompt to paste objects from the system clipboard, if possible. Parameters:; imageData - the image to which the objects should be added; Returns:; true if objects were added, false otherwise. promptToImportObjectsFromFile; public static boolean promptToImportObjectsFromFile(ImageData<BufferedImage> imageData,; File file); Prompt to import objects read from a file. Parameters:; imageData - the image to add the objects to; file - the file to read objects from; if null, a chooser will be shown; Returns:; true if objects were added, false otherwise. promptToImportObjects; public static boolean promptToImportObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects); Import a collection of objects to an object hierarchy, prompting to confirm and asking whether to update IDs. Parameters:; hierarchy - the object hierarchy; pathObjects - the new objects to add; Returns:; true if objects were added to the hierarchy, false otherwise (including if the pathobject list is empty). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html:521,Modifiability,extend,extends,521,". InteractiveObjectImporter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class InteractiveObjectImporter. java.lang.Object; qupath.lib.gui.commands.InteractiveObjectImporter. public final class InteractiveObjectImporter; extends Object; Static methods to import object(s) from different sources. Author:; Melvin Gelbard, Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; MIME_TYPE_GEOJSON. Mime type for GeoJson. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DataFormat; getGeoJsonDataFormat(). Get a DataFormat suitable for storing GeoJSON data on a clipboard. static boolean; promptToImportObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Import a collection of objects to an object hierarchy, prompting to confirm and asking whether to update IDs. static boolean; promptToImportObjectsFromFile(ImageData<BufferedImage> imageData,; File file). Prompt to import objects read from a file. static boolean; promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry). Prompt to import objects from a project entry. static boolean; promptToPasteObjectsFromClipboard(ImageData<BufferedImage> imageData). Prompt to paste objects from the system clipboard, if possible. static List<PathObject>; readObjectsFromClipboard(ImageData<BufferedImage> imageData). Try to read objects from the system clipboard. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MIME_TYPE_GEOJSON; public static final String MIME_TYPE_GEOJSON;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html:1053,Modifiability,extend,extends,1053," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class InteractiveObjectImporter. java.lang.Object; qupath.lib.gui.commands.InteractiveObjectImporter. public final class InteractiveObjectImporter; extends Object; Static methods to import object(s) from different sources. Author:; Melvin Gelbard, Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; MIME_TYPE_GEOJSON. Mime type for GeoJson. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DataFormat; getGeoJsonDataFormat(). Get a DataFormat suitable for storing GeoJSON data on a clipboard. static boolean; promptToImportObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Import a collection of objects to an object hierarchy, prompting to confirm and asking whether to update IDs. static boolean; promptToImportObjectsFromFile(ImageData<BufferedImage> imageData,; File file). Prompt to import objects read from a file. static boolean; promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry). Prompt to import objects from a project entry. static boolean; promptToPasteObjectsFromClipboard(ImageData<BufferedImage> imageData). Prompt to paste objects from the system clipboard, if possible. static List<PathObject>; readObjectsFromClipboard(ImageData<BufferedImage> imageData). Try to read objects from the system clipboard. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MIME_TYPE_GEOJSON; public static final String MIME_TYPE_GEOJSON; Mime type for GeoJson. See",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html:1791,Modifiability,inherit,inherited,1791,"odsConcrete Methods. Modifier and Type; Method; Description; static DataFormat; getGeoJsonDataFormat(). Get a DataFormat suitable for storing GeoJSON data on a clipboard. static boolean; promptToImportObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Import a collection of objects to an object hierarchy, prompting to confirm and asking whether to update IDs. static boolean; promptToImportObjectsFromFile(ImageData<BufferedImage> imageData,; File file). Prompt to import objects read from a file. static boolean; promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry). Prompt to import objects from a project entry. static boolean; promptToPasteObjectsFromClipboard(ImageData<BufferedImage> imageData). Prompt to paste objects from the system clipboard, if possible. static List<PathObject>; readObjectsFromClipboard(ImageData<BufferedImage> imageData). Try to read objects from the system clipboard. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MIME_TYPE_GEOJSON; public static final String MIME_TYPE_GEOJSON; Mime type for GeoJson. See Also:. Constant Field Values. Method Details. getGeoJsonDataFormat; public static DataFormat getGeoJsonDataFormat(); Get a DataFormat suitable for storing GeoJSON data on a clipboard. Returns:. promptToImportObjectsProjectEntry; public static boolean promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry); Prompt to import objects from a project entry. Parameters:; imageData - the image to which the objects should be added; entry - the entry containing the objects to add; Returns:; true if objects were added, false otherwise. readObjectsFromClipboard; public static List<PathObject> readObjectsFromClipboard(ImageData<BufferedImage> imageData); throws IOException,; JsonSyntaxException,; JsonParseException; Try to read ob",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html:3864,Modifiability,extend,extends,3864,"rd. Returns:. promptToImportObjectsProjectEntry; public static boolean promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry); Prompt to import objects from a project entry. Parameters:; imageData - the image to which the objects should be added; entry - the entry containing the objects to add; Returns:; true if objects were added, false otherwise. readObjectsFromClipboard; public static List<PathObject> readObjectsFromClipboard(ImageData<BufferedImage> imageData); throws IOException,; JsonSyntaxException,; JsonParseException; Try to read objects from the system clipboard. Parameters:; imageData - the image to which the objects should be added; Returns:; true a list of objects read from the system clipboard, or empty list if none could be found; Throws:; IOException; JsonSyntaxException; JsonParseException. promptToPasteObjectsFromClipboard; public static boolean promptToPasteObjectsFromClipboard(ImageData<BufferedImage> imageData); Prompt to paste objects from the system clipboard, if possible. Parameters:; imageData - the image to which the objects should be added; Returns:; true if objects were added, false otherwise. promptToImportObjectsFromFile; public static boolean promptToImportObjectsFromFile(ImageData<BufferedImage> imageData,; File file); Prompt to import objects read from a file. Parameters:; imageData - the image to add the objects to; file - the file to read objects from; if null, a chooser will be shown; Returns:; true if objects were added, false otherwise. promptToImportObjects; public static boolean promptToImportObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects); Import a collection of objects to an object hierarchy, prompting to confirm and asking whether to update IDs. Parameters:; hierarchy - the object hierarchy; pathObjects - the new objects to add; Returns:; true if objects were added to the hierarchy, false otherwise (including if the pathobject list is empty). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html:1865,Security,hash,hashCode,1865,"Format; getGeoJsonDataFormat(). Get a DataFormat suitable for storing GeoJSON data on a clipboard. static boolean; promptToImportObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Import a collection of objects to an object hierarchy, prompting to confirm and asking whether to update IDs. static boolean; promptToImportObjectsFromFile(ImageData<BufferedImage> imageData,; File file). Prompt to import objects read from a file. static boolean; promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry). Prompt to import objects from a project entry. static boolean; promptToPasteObjectsFromClipboard(ImageData<BufferedImage> imageData). Prompt to paste objects from the system clipboard, if possible. static List<PathObject>; readObjectsFromClipboard(ImageData<BufferedImage> imageData). Try to read objects from the system clipboard. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MIME_TYPE_GEOJSON; public static final String MIME_TYPE_GEOJSON; Mime type for GeoJson. See Also:. Constant Field Values. Method Details. getGeoJsonDataFormat; public static DataFormat getGeoJsonDataFormat(); Get a DataFormat suitable for storing GeoJSON data on a clipboard. Returns:. promptToImportObjectsProjectEntry; public static boolean promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry); Prompt to import objects from a project entry. Parameters:; imageData - the image to which the objects should be added; entry - the entry containing the objects to add; Returns:; true if objects were added, false otherwise. readObjectsFromClipboard; public static List<PathObject> readObjectsFromClipboard(ImageData<BufferedImage> imageData); throws IOException,; JsonSyntaxException,; JsonParseException; Try to read objects from the system clipboard. Parameters:; imageData - the image to w",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:848,Availability,error,error,848,". LogViewerCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if ther",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1089,Availability,error,errors,1089," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1696,Availability,error,errors,1696," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1725,Availability,error,errors,1725," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1903,Availability,error,error,1903," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1971,Availability,error,error,1971," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:2010,Availability,error,errors,2010," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:512,Integrability,message,messages,512,". LogViewerCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if ther",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:854,Integrability,message,messages,854,". LogViewerCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if ther",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:955,Integrability,message,messages,955,". LogViewerCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if ther",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1529,Integrability,message,messages,1529," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1909,Integrability,message,messages,1909," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1977,Integrability,message,message,1977," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:479,Modifiability,extend,extends,479,". LogViewerCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if ther",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1122,Modifiability,inherit,inherited,1122," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1196,Security,hash,hashCode,1196," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:508,Testability,log,log,508,". LogViewerCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if ther",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:874,Testability,log,logviewer,874,". LogViewerCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if ther",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:964,Testability,log,logged,964,". LogViewerCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if ther",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:978,Testability,log,log,978,". LogViewerCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if ther",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1449,Testability,log,logviewer,1449," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1538,Testability,log,logged,1538," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1552,Testability,log,log,1552," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1753,Testability,log,log,1753," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html:1284,Integrability,interface,interface,1284,". MeasurementExportCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MeasurementExportCommand. java.lang.Object; qupath.lib.gui.commands.MeasurementExportCommand. All Implemented Interfaces:; Runnable. public class MeasurementExportCommand; extends Object; implements Runnable; Dialog box to export measurements. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; MeasurementExportCommand(QuPathGUI qupath). Creates a simple GUI for MeasurementExporter. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExportCommand; public MeasurementExportCommand(QuPathGUI qupath); Creates a simple GUI for MeasurementExporter. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html:550,Modifiability,extend,extends,550,". MeasurementExportCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MeasurementExportCommand. java.lang.Object; qupath.lib.gui.commands.MeasurementExportCommand. All Implemented Interfaces:; Runnable. public class MeasurementExportCommand; extends Object; implements Runnable; Dialog box to export measurements. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; MeasurementExportCommand(QuPathGUI qupath). Creates a simple GUI for MeasurementExporter. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExportCommand; public MeasurementExportCommand(QuPathGUI qupath); Creates a simple GUI for MeasurementExporter. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html:923,Modifiability,inherit,inherited,923,". MeasurementExportCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MeasurementExportCommand. java.lang.Object; qupath.lib.gui.commands.MeasurementExportCommand. All Implemented Interfaces:; Runnable. public class MeasurementExportCommand; extends Object; implements Runnable; Dialog box to export measurements. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; MeasurementExportCommand(QuPathGUI qupath). Creates a simple GUI for MeasurementExporter. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExportCommand; public MeasurementExportCommand(QuPathGUI qupath); Creates a simple GUI for MeasurementExporter. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html:997,Security,hash,hashCode,997,". MeasurementExportCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MeasurementExportCommand. java.lang.Object; qupath.lib.gui.commands.MeasurementExportCommand. All Implemented Interfaces:; Runnable. public class MeasurementExportCommand; extends Object; implements Runnable; Dialog box to export measurements. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; MeasurementExportCommand(QuPathGUI qupath). Creates a simple GUI for MeasurementExporter. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExportCommand; public MeasurementExportCommand(QuPathGUI qupath); Creates a simple GUI for MeasurementExporter. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html:762,Usability,simpl,simple,762,". MeasurementExportCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MeasurementExportCommand. java.lang.Object; qupath.lib.gui.commands.MeasurementExportCommand. All Implemented Interfaces:; Runnable. public class MeasurementExportCommand; extends Object; implements Runnable; Dialog box to export measurements. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; MeasurementExportCommand(QuPathGUI qupath). Creates a simple GUI for MeasurementExporter. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExportCommand; public MeasurementExportCommand(QuPathGUI qupath); Creates a simple GUI for MeasurementExporter. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html:1162,Usability,simpl,simple,1162,". MeasurementExportCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MeasurementExportCommand. java.lang.Object; qupath.lib.gui.commands.MeasurementExportCommand. All Implemented Interfaces:; Runnable. public class MeasurementExportCommand; extends Object; implements Runnable; Dialog box to export measurements. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; MeasurementExportCommand(QuPathGUI qupath). Creates a simple GUI for MeasurementExporter. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExportCommand; public MeasurementExportCommand(QuPathGUI qupath); Creates a simple GUI for MeasurementExporter. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html:673,Deployability,update,updated,673,". MiniViewers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MiniViewers. java.lang.Object; qupath.lib.gui.commands.MiniViewers. public class MiniViewers; extends Object; Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image.; ; In QuPath <= v0.1.2, this gave a single QuPathViewer that updated its display ; based on a main viewer. Now, it has been rewritten to provide a more efficient paintable ; canvas (not a full QuPathViewer) and is capable of showing separated color channels. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer). Create a MiniViewers.MiniViewerManager associated with a specified viewer. static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels). Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewers; public MiniViewers(). Method Details. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer); Create a MiniViewers",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html:764,Energy Efficiency,efficient,efficient,764,". MiniViewers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MiniViewers. java.lang.Object; qupath.lib.gui.commands.MiniViewers. public class MiniViewers; extends Object; Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image.; ; In QuPath <= v0.1.2, this gave a single QuPathViewer that updated its display ; based on a main viewer. Now, it has been rewritten to provide a more efficient paintable ; canvas (not a full QuPathViewer) and is capable of showing separated color channels. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer). Create a MiniViewers.MiniViewerManager associated with a specified viewer. static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels). Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewers; public MiniViewers(). Method Details. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer); Create a MiniViewers",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html:563,Integrability,depend,depending,563,". MiniViewers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MiniViewers. java.lang.Object; qupath.lib.gui.commands.MiniViewers. public class MiniViewers; extends Object; Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image.; ; In QuPath <= v0.1.2, this gave a single QuPathViewer that updated its display ; based on a main viewer. Now, it has been rewritten to provide a more efficient paintable ; canvas (not a full QuPathViewer) and is capable of showing separated color channels. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer). Create a MiniViewers.MiniViewerManager associated with a specified viewer. static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels). Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewers; public MiniViewers(). Method Details. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer); Create a MiniViewers",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html:459,Modifiability,extend,extends,459,". MiniViewers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MiniViewers. java.lang.Object; qupath.lib.gui.commands.MiniViewers. public class MiniViewers; extends Object; Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image.; ; In QuPath <= v0.1.2, this gave a single QuPathViewer that updated its display ; based on a main viewer. Now, it has been rewritten to provide a more efficient paintable ; canvas (not a full QuPathViewer) and is capable of showing separated color channels. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer). Create a MiniViewers.MiniViewerManager associated with a specified viewer. static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels). Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewers; public MiniViewers(). Method Details. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer); Create a MiniViewers",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html:1526,Modifiability,extend,extends,1526,"ewers. public class MiniViewers; extends Object; Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image.; ; In QuPath <= v0.1.2, this gave a single QuPathViewer that updated its display ; based on a main viewer. Now, it has been rewritten to provide a more efficient paintable ; canvas (not a full QuPathViewer) and is capable of showing separated color channels. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer). Create a MiniViewers.MiniViewerManager associated with a specified viewer. static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels). Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewers; public MiniViewers(). Method Details. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer); Create a MiniViewers.MiniViewerManager associated with a specified viewer. Parameters:; viewer - ; Returns:; Since:; v0.4.0. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels); Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Parameters:; viewer - ; channels - ; Returns:; Since:; v0.4.0. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html:1683,Modifiability,inherit,inherited,1683,"ewers. public class MiniViewers; extends Object; Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image.; ; In QuPath <= v0.1.2, this gave a single QuPathViewer that updated its display ; based on a main viewer. Now, it has been rewritten to provide a more efficient paintable ; canvas (not a full QuPathViewer) and is capable of showing separated color channels. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer). Create a MiniViewers.MiniViewerManager associated with a specified viewer. static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels). Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewers; public MiniViewers(). Method Details. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer); Create a MiniViewers.MiniViewerManager associated with a specified viewer. Parameters:; viewer - ; Returns:; Since:; v0.4.0. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels); Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Parameters:; viewer - ; channels - ; Returns:; Since:; v0.4.0. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html:2214,Modifiability,extend,extends,2214,"ewers. public class MiniViewers; extends Object; Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image.; ; In QuPath <= v0.1.2, this gave a single QuPathViewer that updated its display ; based on a main viewer. Now, it has been rewritten to provide a more efficient paintable ; canvas (not a full QuPathViewer) and is capable of showing separated color channels. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer). Create a MiniViewers.MiniViewerManager associated with a specified viewer. static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels). Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewers; public MiniViewers(). Method Details. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer); Create a MiniViewers.MiniViewerManager associated with a specified viewer. Parameters:; viewer - ; Returns:; Since:; v0.4.0. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels); Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Parameters:; viewer - ; channels - ; Returns:; Since:; v0.4.0. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html:1757,Security,hash,hashCode,1757,"ewers. public class MiniViewers; extends Object; Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image.; ; In QuPath <= v0.1.2, this gave a single QuPathViewer that updated its display ; based on a main viewer. Now, it has been rewritten to provide a more efficient paintable ; canvas (not a full QuPathViewer) and is capable of showing separated color channels. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer). Create a MiniViewers.MiniViewerManager associated with a specified viewer. static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels). Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewers; public MiniViewers(). Method Details. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer); Create a MiniViewers.MiniViewerManager associated with a specified viewer. Parameters:; viewer - ; Returns:; Since:; v0.4.0. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels); Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Parameters:; viewer - ; channels - ; Returns:; Since:; v0.4.0. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:1155,Availability,down,downsample,1155,"p. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MiniViewers.MiniViewerManager. java.lang.Object; qupath.lib.gui.commands.MiniViewers.MiniViewerManager. All Implemented Interfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(do",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:1364,Availability,down,downsample,1364,"ARCH. Package qupath.lib.gui.commands; Class MiniViewers.MiniViewerManager. java.lang.Object; qupath.lib.gui.commands.MiniViewers.MiniViewerManager. All Implemented Interfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini vi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:1385,Availability,down,downsample,1385,"ewerManager. java.lang.Object; qupath.lib.gui.commands.MiniViewers.MiniViewerManager. All Implemented Interfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini viewers, which can be added to a scene for display. Returns:. han",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:2077,Availability,down,downsample,2077,"erfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini viewers, which can be added to a scene for display. Returns:. handle; public void handle(MouseEvent event). Specified by:; handle in interface EventHandler<MouseEvent>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:2176,Availability,down,downsample,2176,"erfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini viewers, which can be added to a scene for display. Returns:. handle; public void handle(MouseEvent event). Specified by:; handle in interface EventHandler<MouseEvent>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:2197,Availability,down,downsample,2197,"erfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini viewers, which can be added to a scene for display. Returns:. handle; public void handle(MouseEvent event). Specified by:; handle in interface EventHandler<MouseEvent>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:2253,Availability,down,downsample,2253,"erfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini viewers, which can be added to a scene for display. Returns:. handle; public void handle(MouseEvent event). Specified by:; handle in interface EventHandler<MouseEvent>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:2470,Integrability,interface,interface,2470,"erfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini viewers, which can be added to a scene for display. Returns:. handle; public void handle(MouseEvent event). Specified by:; handle in interface EventHandler<MouseEvent>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:639,Modifiability,extend,extends,639,". MiniViewers.MiniViewerManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MiniViewers.MiniViewerManager. java.lang.Object; qupath.lib.gui.commands.MiniViewers.MiniViewerManager. All Implemented Interfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to inc",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:904,Modifiability,extend,extends,904,". MiniViewers.MiniViewerManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MiniViewers.MiniViewerManager. java.lang.Object; qupath.lib.gui.commands.MiniViewers.MiniViewerManager. All Implemented Interfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to inc",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:1436,Modifiability,inherit,inherited,1436,"ui.commands.MiniViewers.MiniViewerManager. All Implemented Interfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini viewers, which can be added to a scene for display. Returns:. handle; public void handle(MouseEvent event). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:1684,Modifiability,extend,extends,1684,"erfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini viewers, which can be added to a scene for display. Returns:. handle; public void handle(MouseEvent event). Specified by:; handle in interface EventHandler<MouseEvent>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:1510,Security,hash,hashCode,1510,"erfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini viewers, which can be added to a scene for display. Returns:. handle; public void handle(MouseEvent event). Specified by:; handle in interface EventHandler<MouseEvent>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:416,Integrability,interface,interface,416,". qupath.lib.gui.commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simpl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:504,Integrability,interface,interface,504,". qupath.lib.gui.commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simpl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:982,Integrability,depend,dependent,982,". qupath.lib.gui.commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simpl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:1305,Integrability,message,messages,1305,"asses and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. UpdateUrisCommand<T extends UriResource>. Fix broken URIs by using relative paths or prompting the user to select files. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:1477,Integrability,depend,depending,1477,"asses and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. UpdateUrisCommand<T extends UriResource>. Fix broken URIs by using relative paths or prompting the user to select files. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:2109,Modifiability,extend,extends,2109,"asses and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. UpdateUrisCommand<T extends UriResource>. Fix broken URIs by using relative paths or prompting the user to select files. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:1932,Safety,detect,detection,1932,"asses and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. UpdateUrisCommand<T extends UriResource>. Fix broken URIs by using relative paths or prompting the user to select files. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:1301,Testability,log,log,1301,"asses and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. UpdateUrisCommand<T extends UriResource>. Fix broken URIs by using relative paths or prompting the user to select files. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:870,Usability,simpl,simple,870,". qupath.lib.gui.commands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simpl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:1778,Usability,simpl,simple,1778,"asses and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. UpdateUrisCommand<T extends UriResource>. Fix broken URIs by using relative paths or prompting the user to select files. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:1996,Usability,simpl,simple,1996,"asses and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. UpdateUrisCommand<T extends UriResource>. Fix broken URIs by using relative paths or prompting the user to select files. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html:873,Integrability,interface,interfaces,873,". PathObjectGridView.GridDisplaySize (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.commands; Enum Class PathObjectGridView.GridDisplaySize. java.lang.Object; java.lang.Enum<PathObjectGridView.GridDisplaySize>; qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize. All Implemented Interfaces:; Serializable, Comparable<PathObjectGridView.GridDisplaySize>, Constable. Enclosing class:; PathObjectGridView. public static enum PathObjectGridView.GridDisplaySize; extends Enum<PathObjectGridView.GridDisplaySize>. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getSize();  ; String; toString();  ; static PathObjectGridView.GridDisplaySize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectGridView.GridDisplaySize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathObjectGridView.GridDisplaySize TINY. SMALL; public static final PathObjectGridView.GridDisplaySize SMALL. MEDIUM; public static final PathObjectGridView.GridDisplaySize MEDIUM. LARGE; public static fina",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html:786,Modifiability,extend,extends,786,". PathObjectGridView.GridDisplaySize (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.commands; Enum Class PathObjectGridView.GridDisplaySize. java.lang.Object; java.lang.Enum<PathObjectGridView.GridDisplaySize>; qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize. All Implemented Interfaces:; Serializable, Comparable<PathObjectGridView.GridDisplaySize>, Constable. Enclosing class:; PathObjectGridView. public static enum PathObjectGridView.GridDisplaySize; extends Enum<PathObjectGridView.GridDisplaySize>. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getSize();  ; String; toString();  ; static PathObjectGridView.GridDisplaySize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectGridView.GridDisplaySize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathObjectGridView.GridDisplaySize TINY. SMALL; public static final PathObjectGridView.GridDisplaySize SMALL. MEDIUM; public static final PathObjectGridView.GridDisplaySize MEDIUM. LARGE; public static fina",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html:884,Modifiability,inherit,inherited,884,". PathObjectGridView.GridDisplaySize (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.commands; Enum Class PathObjectGridView.GridDisplaySize. java.lang.Object; java.lang.Enum<PathObjectGridView.GridDisplaySize>; qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize. All Implemented Interfaces:; Serializable, Comparable<PathObjectGridView.GridDisplaySize>, Constable. Enclosing class:; PathObjectGridView. public static enum PathObjectGridView.GridDisplaySize; extends Enum<PathObjectGridView.GridDisplaySize>. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getSize();  ; String; toString();  ; static PathObjectGridView.GridDisplaySize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectGridView.GridDisplaySize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathObjectGridView.GridDisplaySize TINY. SMALL; public static final PathObjectGridView.GridDisplaySize SMALL. MEDIUM; public static final PathObjectGridView.GridDisplaySize MEDIUM. LARGE; public static fina",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html:937,Modifiability,extend,extends,937,". PathObjectGridView.GridDisplaySize (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.commands; Enum Class PathObjectGridView.GridDisplaySize. java.lang.Object; java.lang.Enum<PathObjectGridView.GridDisplaySize>; qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize. All Implemented Interfaces:; Serializable, Comparable<PathObjectGridView.GridDisplaySize>, Constable. Enclosing class:; PathObjectGridView. public static enum PathObjectGridView.GridDisplaySize; extends Enum<PathObjectGridView.GridDisplaySize>. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getSize();  ; String; toString();  ; static PathObjectGridView.GridDisplaySize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectGridView.GridDisplaySize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathObjectGridView.GridDisplaySize TINY. SMALL; public static final PathObjectGridView.GridDisplaySize SMALL. MEDIUM; public static final PathObjectGridView.GridDisplaySize MEDIUM. LARGE; public static fina",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html:1507,Modifiability,inherit,inherited,1507,"idDisplaySize>; qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize. All Implemented Interfaces:; Serializable, Comparable<PathObjectGridView.GridDisplaySize>, Constable. Enclosing class:; PathObjectGridView. public static enum PathObjectGridView.GridDisplaySize; extends Enum<PathObjectGridView.GridDisplaySize>. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getSize();  ; String; toString();  ; static PathObjectGridView.GridDisplaySize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectGridView.GridDisplaySize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathObjectGridView.GridDisplaySize TINY. SMALL; public static final PathObjectGridView.GridDisplaySize SMALL. MEDIUM; public static final PathObjectGridView.GridDisplaySize MEDIUM. LARGE; public static final PathObjectGridView.GridDisplaySize LARGE. Method Details. values; public static PathObjectGridView.GridDisplaySize[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathObjectGridView.GridDisplaySize valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html:1660,Modifiability,inherit,inherited,1660,"DisplaySize>, Constable. Enclosing class:; PathObjectGridView. public static enum PathObjectGridView.GridDisplaySize; extends Enum<PathObjectGridView.GridDisplaySize>. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getSize();  ; String; toString();  ; static PathObjectGridView.GridDisplaySize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectGridView.GridDisplaySize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathObjectGridView.GridDisplaySize TINY. SMALL; public static final PathObjectGridView.GridDisplaySize SMALL. MEDIUM; public static final PathObjectGridView.GridDisplaySize MEDIUM. LARGE; public static final PathObjectGridView.GridDisplaySize LARGE. Method Details. values; public static PathObjectGridView.GridDisplaySize[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathObjectGridView.GridDisplaySize valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html:1618,Security,hash,hashCode,1618," Implemented Interfaces:; Serializable, Comparable<PathObjectGridView.GridDisplaySize>, Constable. Enclosing class:; PathObjectGridView. public static enum PathObjectGridView.GridDisplaySize; extends Enum<PathObjectGridView.GridDisplaySize>. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getSize();  ; String; toString();  ; static PathObjectGridView.GridDisplaySize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectGridView.GridDisplaySize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathObjectGridView.GridDisplaySize TINY. SMALL; public static final PathObjectGridView.GridDisplaySize SMALL. MEDIUM; public static final PathObjectGridView.GridDisplaySize MEDIUM. LARGE; public static final PathObjectGridView.GridDisplaySize LARGE. Method Details. values; public static PathObjectGridView.GridDisplaySize[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathObjectGridView.GridDisplaySize valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters a",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html:3715,Integrability,interface,interface,3715,"ectProperty<ImageData<BufferedImage>>; imageDataProperty();  ; void; refresh(). Refresh the data in the grid view. void; show(). Create the stage and show the grid view. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. imageData; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty. See Also:. imageDataProperty(). Method Details. createGridView; public static PathObjectGridView createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor); Create a grid view for a custom object extractor. Parameters:; qupath - QuPath instance; objectExtractor - function to select the objects to display; Returns:. createTmaCoreView; public static PathObjectGridView createTmaCoreView(QuPathGUI qupath); Create a grid view for TMA core objects. Parameters:; qupath - ; Returns:. createAnnotationView; public static PathObjectGridView createAnnotationView(QuPathGUI qupath); Create a grid view for annotations. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the stage used to show the grid view. Returns:. show; public void show(); Create the stage and show the grid view. refresh; public void refresh(); Refresh the data in the grid view. imageDataProperty; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty(). Returns:; the imageData property. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html:3871,Integrability,interface,interface,3871,"ectProperty<ImageData<BufferedImage>>; imageDataProperty();  ; void; refresh(). Refresh the data in the grid view. void; show(). Create the stage and show the grid view. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. imageData; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty. See Also:. imageDataProperty(). Method Details. createGridView; public static PathObjectGridView createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor); Create a grid view for a custom object extractor. Parameters:; qupath - QuPath instance; objectExtractor - function to select the objects to display; Returns:. createTmaCoreView; public static PathObjectGridView createTmaCoreView(QuPathGUI qupath); Create a grid view for TMA core objects. Parameters:; qupath - ; Returns:. createAnnotationView; public static PathObjectGridView createAnnotationView(QuPathGUI qupath); Create a grid view for annotations. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the stage used to show the grid view. Returns:. show; public void show(); Create the stage and show the grid view. refresh; public void refresh(); Refresh the data in the grid view. imageDataProperty; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty(). Returns:; the imageData property. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html:4008,Integrability,interface,interface,4008,"ectProperty<ImageData<BufferedImage>>; imageDataProperty();  ; void; refresh(). Refresh the data in the grid view. void; show(). Create the stage and show the grid view. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. imageData; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty. See Also:. imageDataProperty(). Method Details. createGridView; public static PathObjectGridView createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor); Create a grid view for a custom object extractor. Parameters:; qupath - QuPath instance; objectExtractor - function to select the objects to display; Returns:. createTmaCoreView; public static PathObjectGridView createTmaCoreView(QuPathGUI qupath); Create a grid view for TMA core objects. Parameters:; qupath - ; Returns:. createAnnotationView; public static PathObjectGridView createAnnotationView(QuPathGUI qupath); Create a grid view for annotations. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the stage used to show the grid view. Returns:. show; public void show(); Create the stage and show the grid view. refresh; public void refresh(); Refresh the data in the grid view. imageDataProperty; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty(). Returns:; the imageData property. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html:602,Modifiability,extend,extends,602,". PathObjectGridView (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class PathObjectGridView. java.lang.Object; qupath.lib.gui.commands.PathObjectGridView. All Implemented Interfaces:; EventListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener. public class PathObjectGridView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener; Grid display of objects.; ; Previously this was TMAGridView, but it was generalized for v0.4.0 to support other kinds of object.; ; This requires cores in memory, so does not scale wonderfully... but it can be quite useful for individual slides. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageData<BufferedImage>>; imageData;  . Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathObjectGridView.GridDisplaySize;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; static PathObjectGridView; createAnnotationView(QuPathGUI qupath). Create a grid view for annotations. static PathObjectGridView; createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor). Create a grid view for a custom object extractor. static PathObjectGridView; createTmaCoreView(QuPathGUI qupath). Create a grid view for TMA core objects. Stage; getStage(). Get the stage used to show the grid view. void; hierarchyChanged(PathObjectHierarchyEvent even",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html:1362,Modifiability,extend,extends,1362,"gui.commands.PathObjectGridView. All Implemented Interfaces:; EventListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener. public class PathObjectGridView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener; Grid display of objects.; ; Previously this was TMAGridView, but it was generalized for v0.4.0 to support other kinds of object.; ; This requires cores in memory, so does not scale wonderfully... but it can be quite useful for individual slides. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageData<BufferedImage>>; imageData;  . Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathObjectGridView.GridDisplaySize;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; static PathObjectGridView; createAnnotationView(QuPathGUI qupath). Create a grid view for annotations. static PathObjectGridView; createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor). Create a grid view for a custom object extractor. static PathObjectGridView; createTmaCoreView(QuPathGUI qupath). Create a grid view for TMA core objects. Stage; getStage(). Get the stage used to show the grid view. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. ObjectProperty<ImageData<BufferedImage>>; imageDataProperty();  ; void; refresh(). Refresh the data in the grid view. void; show(). Create the stage and show the grid view. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. imageData; public ObjectP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html:1694,Modifiability,extend,extends,1694,"dImage>>, PathObjectHierarchyListener; Grid display of objects.; ; Previously this was TMAGridView, but it was generalized for v0.4.0 to support other kinds of object.; ; This requires cores in memory, so does not scale wonderfully... but it can be quite useful for individual slides. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageData<BufferedImage>>; imageData;  . Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathObjectGridView.GridDisplaySize;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; static PathObjectGridView; createAnnotationView(QuPathGUI qupath). Create a grid view for annotations. static PathObjectGridView; createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor). Create a grid view for a custom object extractor. static PathObjectGridView; createTmaCoreView(QuPathGUI qupath). Create a grid view for TMA core objects. Stage; getStage(). Get the stage used to show the grid view. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. ObjectProperty<ImageData<BufferedImage>>; imageDataProperty();  ; void; refresh(). Refresh the data in the grid view. void; show(). Create the stage and show the grid view. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. imageData; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty. See Also:. imageDataProperty(). Method Details. createGridView; public static PathObjectGridView createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathO",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html:2248,Modifiability,inherit,inherited,2248,"Instance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; static PathObjectGridView; createAnnotationView(QuPathGUI qupath). Create a grid view for annotations. static PathObjectGridView; createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor). Create a grid view for a custom object extractor. static PathObjectGridView; createTmaCoreView(QuPathGUI qupath). Create a grid view for TMA core objects. Stage; getStage(). Get the stage used to show the grid view. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. ObjectProperty<ImageData<BufferedImage>>; imageDataProperty();  ; void; refresh(). Refresh the data in the grid view. void; show(). Create the stage and show the grid view. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. imageData; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty. See Also:. imageDataProperty(). Method Details. createGridView; public static PathObjectGridView createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor); Create a grid view for a custom object extractor. Parameters:; qupath - QuPath instance; objectExtractor - function to select the objects to display; Returns:. createTmaCoreView; public static PathObjectGridView createTmaCoreView(QuPathGUI qupath); Create a grid view for TMA core objects. Parameters:; qupath - ; Returns:. createAnnotationView; public static PathObjectGridView createAnnotationView(QuPathGUI qupath); Create a grid view for annotations. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the stage used to show the grid view. Retu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html:2648,Modifiability,extend,extends,2648,"iew(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor). Create a grid view for a custom object extractor. static PathObjectGridView; createTmaCoreView(QuPathGUI qupath). Create a grid view for TMA core objects. Stage; getStage(). Get the stage used to show the grid view. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. ObjectProperty<ImageData<BufferedImage>>; imageDataProperty();  ; void; refresh(). Refresh the data in the grid view. void; show(). Create the stage and show the grid view. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. imageData; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty. See Also:. imageDataProperty(). Method Details. createGridView; public static PathObjectGridView createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor); Create a grid view for a custom object extractor. Parameters:; qupath - QuPath instance; objectExtractor - function to select the objects to display; Returns:. createTmaCoreView; public static PathObjectGridView createTmaCoreView(QuPathGUI qupath); Create a grid view for TMA core objects. Parameters:; qupath - ; Returns:. createAnnotationView; public static PathObjectGridView createAnnotationView(QuPathGUI qupath); Create a grid view for annotations. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the stage used to show the grid view. Returns:. show; public void show(); Create the stage and show the grid view. refresh; public void refresh(); Refresh the data in the grid view. imageDataProperty; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty(). Returns:; the imageData property. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedIm",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html:3566,Modifiability,extend,extends,3566,"ectProperty<ImageData<BufferedImage>>; imageDataProperty();  ; void; refresh(). Refresh the data in the grid view. void; show(). Create the stage and show the grid view. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. imageData; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty. See Also:. imageDataProperty(). Method Details. createGridView; public static PathObjectGridView createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor); Create a grid view for a custom object extractor. Parameters:; qupath - QuPath instance; objectExtractor - function to select the objects to display; Returns:. createTmaCoreView; public static PathObjectGridView createTmaCoreView(QuPathGUI qupath); Create a grid view for TMA core objects. Parameters:; qupath - ; Returns:. createAnnotationView; public static PathObjectGridView createAnnotationView(QuPathGUI qupath); Create a grid view for annotations. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the stage used to show the grid view. Returns:. show; public void show(); Create the stage and show the grid view. refresh; public void refresh(); Refresh the data in the grid view. imageDataProperty; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty(). Returns:; the imageData property. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html:2322,Security,hash,hashCode,2322,"; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; static PathObjectGridView; createAnnotationView(QuPathGUI qupath). Create a grid view for annotations. static PathObjectGridView; createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor). Create a grid view for a custom object extractor. static PathObjectGridView; createTmaCoreView(QuPathGUI qupath). Create a grid view for TMA core objects. Stage; getStage(). Get the stage used to show the grid view. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. ObjectProperty<ImageData<BufferedImage>>; imageDataProperty();  ; void; refresh(). Refresh the data in the grid view. void; show(). Create the stage and show the grid view. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. imageData; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty. See Also:. imageDataProperty(). Method Details. createGridView; public static PathObjectGridView createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor); Create a grid view for a custom object extractor. Parameters:; qupath - QuPath instance; objectExtractor - function to select the objects to display; Returns:. createTmaCoreView; public static PathObjectGridView createTmaCoreView(QuPathGUI qupath); Create a grid view for TMA core objects. Parameters:; qupath - ; Returns:. createAnnotationView; public static PathObjectGridView createAnnotationView(QuPathGUI qupath); Create a grid view for annotations. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the stage used to show the grid view. Returns:. show; public void show(); Create the stage and show the grid view.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html:3845,Deployability,install,installed,3845,"lly, false if it was cancelled; Throws:; IOException. promptToImportImages; public static List<ProjectImageEntry<BufferedImage>> promptToImportImages(QuPathGUI qupath,; String... defaultPaths); Show prompt for the user to select images to import into the current project in QuPath, choosing a suitable ImageServerBuilder. Parameters:; qupath - the QuPath instance; defaultPaths - image paths to include when the dialog is shown (useful when the dialog is shown with some paths already known); Returns:; a list of project entries for all images that were successfully added to the project. promptToImportImages; public static List<ProjectImageEntry<BufferedImage>> promptToImportImages(QuPathGUI qupath,; ImageServerBuilder<BufferedImage> builder,; String... defaultPaths); Show prompt for the user to select images to import into the current project in QuPath. Parameters:; qupath - the QuPath instance; builder - if not null, this will be used to create the servers. If null, a combobox will be shown to choose an installed builder.; defaultPaths - image paths to include when the dialog is shown (useful when the dialog is shown with some paths already known); Returns:; a list of project entries for all images that were successfully added to the project. addSingleImageToProject; public static ProjectImageEntry<BufferedImage> addSingleImageToProject(Project<BufferedImage> project,; ImageServer<BufferedImage> server,; ImageData.ImageType type); Add a single image to a project. Parameters:; project - the project; server - the image to add; type - optional image type, if known; Returns:; an entry corresponding to the image that was added. getThumbnailRGB; public static BufferedImage getThumbnailRGB(ImageServer<BufferedImage> server); throws IOException; Get an RGB thumbnail for an image server, suitable for showing as a project thumbnail. Parameters:; server - ; Returns:; an RGB thumbnail for server; Throws:; IOException. showProjectMetadataEditor; public static void showProjectMetadat",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html:475,Modifiability,extend,extends,475,". ProjectCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ProjectCommands. java.lang.Object; qupath.lib.gui.commands.ProjectCommands. public class ProjectCommands; extends Object; Helper class implementing simple 'single-method' commands related to projects. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProjectCommands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ProjectImageEntry<BufferedImage>; addSingleImageToProject(Project<BufferedImage> project,; ImageServer<BufferedImage> server,; ImageData.ImageType type). Add a single image to a project. static BufferedImage; getThumbnailRGB(ImageServer<BufferedImage> server). Get an RGB thumbnail for an image server, suitable for showing as a project thumbnail. static boolean; promptToCheckURIs(Project<?> project,; boolean onlyIfMissing). Check the URIs within a project, prompting the user to correct any broken links if required. static void; promptToExportImageList(Project<?> project). Prompt to export a text file containing a list of image paths for a project. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath, choosing a suitable ImageServerBuilder. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; ImageServerBuilder<BufferedImage> builder,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath. static boolean; promptToImportLegacyProject(QuPathGUI qupath). Prompt the user ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html:2209,Modifiability,inherit,inherited,2209,"he URIs within a project, prompting the user to correct any broken links if required. static void; promptToExportImageList(Project<?> project). Prompt to export a text file containing a list of image paths for a project. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath, choosing a suitable ImageServerBuilder. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; ImageServerBuilder<BufferedImage> builder,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath. static boolean; promptToImportLegacyProject(QuPathGUI qupath). Prompt the user to select a legacy project file, and then import the images into ; the current project. static void; showProjectMetadataEditor(Project<?> project). Show the metadata editor for the specified project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectCommands; public ProjectCommands(). Method Details. promptToCheckURIs; public static boolean promptToCheckURIs(Project<?> project,; boolean onlyIfMissing); throws IOException; Check the URIs within a project, prompting the user to correct any broken links if required. Parameters:; project - the project containing URIs to check; onlyIfMissing - if true, only display a prompt if some links are broken; Returns:; true if the dialog was shown and closed successfully, false if it was cancelled; Throws:; IOException. promptToImportImages; public static List<ProjectImageEntry<BufferedImage>> promptToImportImages(QuPathGUI qupath,; String... defaultPaths); Show prompt for the user to select images to import into the current project in QuPath, choosing a suitable ImageServerBuilder. Parameters:; qupath - the QuPath instance; defaultPaths - image pa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html:2283,Security,hash,hashCode,2283," if required. static void; promptToExportImageList(Project<?> project). Prompt to export a text file containing a list of image paths for a project. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath, choosing a suitable ImageServerBuilder. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; ImageServerBuilder<BufferedImage> builder,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath. static boolean; promptToImportLegacyProject(QuPathGUI qupath). Prompt the user to select a legacy project file, and then import the images into ; the current project. static void; showProjectMetadataEditor(Project<?> project). Show the metadata editor for the specified project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectCommands; public ProjectCommands(). Method Details. promptToCheckURIs; public static boolean promptToCheckURIs(Project<?> project,; boolean onlyIfMissing); throws IOException; Check the URIs within a project, prompting the user to correct any broken links if required. Parameters:; project - the project containing URIs to check; onlyIfMissing - if true, only display a prompt if some links are broken; Returns:; true if the dialog was shown and closed successfully, false if it was cancelled; Throws:; IOException. promptToImportImages; public static List<ProjectImageEntry<BufferedImage>> promptToImportImages(QuPathGUI qupath,; String... defaultPaths); Show prompt for the user to select images to import into the current project in QuPath, choosing a suitable ImageServerBuilder. Parameters:; qupath - the QuPath instance; defaultPaths - image paths to include when the dialog is shown (useful when the dialog is shown",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html:517,Usability,simpl,simple,517,". ProjectCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ProjectCommands. java.lang.Object; qupath.lib.gui.commands.ProjectCommands. public class ProjectCommands; extends Object; Helper class implementing simple 'single-method' commands related to projects. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProjectCommands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ProjectImageEntry<BufferedImage>; addSingleImageToProject(Project<BufferedImage> project,; ImageServer<BufferedImage> server,; ImageData.ImageType type). Add a single image to a project. static BufferedImage; getThumbnailRGB(ImageServer<BufferedImage> server). Get an RGB thumbnail for an image server, suitable for showing as a project thumbnail. static boolean; promptToCheckURIs(Project<?> project,; boolean onlyIfMissing). Check the URIs within a project, prompting the user to correct any broken links if required. static void; promptToExportImageList(Project<?> project). Prompt to export a text file containing a list of image paths for a project. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath, choosing a suitable ImageServerBuilder. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; ImageServerBuilder<BufferedImage> builder,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath. static boolean; promptToImportLegacyProject(QuPathGUI qupath). Prompt the user ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html:535,Modifiability,extend,extends,535,". SummaryMeasurementTableCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class SummaryMeasurementTableCommand. java.lang.Object; qupath.lib.gui.commands.SummaryMeasurementTableCommand. public class SummaryMeasurementTableCommand; extends Object; Show a summary table for an object of a particular type (annotation, detection, TMA core...). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SummaryMeasurementTableCommand(QuPathGUI qupath). Command to show a summary measurement table, for PathObjects of a specified type (e.g. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static void; copyTableContentsToClipboard(PathTableData<?> model,; Collection<String> excludeColumns). Get a single String representing the data in a table and copy it to the clipboard. static <T> String; getTableModelString(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a single String representing the data in a table. static <T> List<String>; getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a list of Strings representing table data. static boolean; saveTableModel(PathTableData<?> tableModel,; File fileOutput,; Collection<String> excludeColumns). Save the data from a table to a text file, using the default delimiter from PathPrefs. void; showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type). Show a measurement table for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html:1769,Modifiability,extend,extends,1769,"leCommand(QuPathGUI qupath). Command to show a summary measurement table, for PathObjects of a specified type (e.g. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static void; copyTableContentsToClipboard(PathTableData<?> model,; Collection<String> excludeColumns). Get a single String representing the data in a table and copy it to the clipboard. static <T> String; getTableModelString(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a single String representing the data in a table. static <T> List<String>; getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a list of Strings representing table data. static boolean; saveTableModel(PathTableData<?> tableModel,; File fileOutput,; Collection<String> excludeColumns). Save the data from a table to a text file, using the default delimiter from PathPrefs. void; showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type). Show a measurement table for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SummaryMeasurementTableCommand; public SummaryMeasurementTableCommand(QuPathGUI qupath); Command to show a summary measurement table, for PathObjects of a specified type (e.g. annotation, detection). Parameters:; qupath - . Method Details. showTable; public void showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type); Show a measurement table for the specified image data. Parameters:; imageData - the image data; type - the object type to show. getTableModelStrings; public static <T> List<String> getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns); Get a list of Strings representing table data.; ; Each entry in the list corresponds to a row. Type Parameters:; T - ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html:1859,Modifiability,inherit,inherited,1859,"Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static void; copyTableContentsToClipboard(PathTableData<?> model,; Collection<String> excludeColumns). Get a single String representing the data in a table and copy it to the clipboard. static <T> String; getTableModelString(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a single String representing the data in a table. static <T> List<String>; getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a list of Strings representing table data. static boolean; saveTableModel(PathTableData<?> tableModel,; File fileOutput,; Collection<String> excludeColumns). Save the data from a table to a text file, using the default delimiter from PathPrefs. void; showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type). Show a measurement table for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SummaryMeasurementTableCommand; public SummaryMeasurementTableCommand(QuPathGUI qupath); Command to show a summary measurement table, for PathObjects of a specified type (e.g. annotation, detection). Parameters:; qupath - . Method Details. showTable; public void showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type); Show a measurement table for the specified image data. Parameters:; imageData - the image data; type - the object type to show. getTableModelStrings; public static <T> List<String> getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns); Get a list of Strings representing table data.; ; Each entry in the list corresponds to a row. Type Parameters:; T - the data type for the table; Parameters:; model - ; delim - ; excludeColumns - ; Returns:. getTableModelString; publi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html:2329,Modifiability,extend,extends,2329,"table. static <T> List<String>; getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a list of Strings representing table data. static boolean; saveTableModel(PathTableData<?> tableModel,; File fileOutput,; Collection<String> excludeColumns). Save the data from a table to a text file, using the default delimiter from PathPrefs. void; showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type). Show a measurement table for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SummaryMeasurementTableCommand; public SummaryMeasurementTableCommand(QuPathGUI qupath); Command to show a summary measurement table, for PathObjects of a specified type (e.g. annotation, detection). Parameters:; qupath - . Method Details. showTable; public void showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type); Show a measurement table for the specified image data. Parameters:; imageData - the image data; type - the object type to show. getTableModelStrings; public static <T> List<String> getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns); Get a list of Strings representing table data.; ; Each entry in the list corresponds to a row. Type Parameters:; T - the data type for the table; Parameters:; model - ; delim - ; excludeColumns - ; Returns:. getTableModelString; public static <T> String getTableModelString(PathTableData<T> model,; String delim,; Collection<String> excludeColumns); throws IllegalArgumentException; Get a single String representing the data in a table.; ; Note: if the required String is too long (approximately Integer.MAX_VALUE characters), this will throw an IllegalArgumentException. Type Parameters:; T - the data type for the items in the table; Parameters:; model - ; delim - ; excludeColumns - ; Returns:",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html:620,Safety,detect,detection,620,". SummaryMeasurementTableCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class SummaryMeasurementTableCommand. java.lang.Object; qupath.lib.gui.commands.SummaryMeasurementTableCommand. public class SummaryMeasurementTableCommand; extends Object; Show a summary table for an object of a particular type (annotation, detection, TMA core...). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SummaryMeasurementTableCommand(QuPathGUI qupath). Command to show a summary measurement table, for PathObjects of a specified type (e.g. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static void; copyTableContentsToClipboard(PathTableData<?> model,; Collection<String> excludeColumns). Get a single String representing the data in a table and copy it to the clipboard. static <T> String; getTableModelString(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a single String representing the data in a table. static <T> List<String>; getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a list of Strings representing table data. static boolean; saveTableModel(PathTableData<?> tableModel,; File fileOutput,; Collection<String> excludeColumns). Save the data from a table to a text file, using the default delimiter from PathPrefs. void; showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type). Show a measurement table for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html:2199,Safety,detect,detection,2199,"elString(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a single String representing the data in a table. static <T> List<String>; getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a list of Strings representing table data. static boolean; saveTableModel(PathTableData<?> tableModel,; File fileOutput,; Collection<String> excludeColumns). Save the data from a table to a text file, using the default delimiter from PathPrefs. void; showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type). Show a measurement table for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SummaryMeasurementTableCommand; public SummaryMeasurementTableCommand(QuPathGUI qupath); Command to show a summary measurement table, for PathObjects of a specified type (e.g. annotation, detection). Parameters:; qupath - . Method Details. showTable; public void showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type); Show a measurement table for the specified image data. Parameters:; imageData - the image data; type - the object type to show. getTableModelStrings; public static <T> List<String> getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns); Get a list of Strings representing table data.; ; Each entry in the list corresponds to a row. Type Parameters:; T - the data type for the table; Parameters:; model - ; delim - ; excludeColumns - ; Returns:. getTableModelString; public static <T> String getTableModelString(PathTableData<T> model,; String delim,; Collection<String> excludeColumns); throws IllegalArgumentException; Get a single String representing the data in a table.; ; Note: if the required String is too long (approximately Integer.MAX_VALUE characters), this will throw an IllegalArgumentExc",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html:1933,Security,hash,hashCode,1933,"s. Modifier and Type; Method; Description; static void; copyTableContentsToClipboard(PathTableData<?> model,; Collection<String> excludeColumns). Get a single String representing the data in a table and copy it to the clipboard. static <T> String; getTableModelString(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a single String representing the data in a table. static <T> List<String>; getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a list of Strings representing table data. static boolean; saveTableModel(PathTableData<?> tableModel,; File fileOutput,; Collection<String> excludeColumns). Save the data from a table to a text file, using the default delimiter from PathPrefs. void; showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type). Show a measurement table for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SummaryMeasurementTableCommand; public SummaryMeasurementTableCommand(QuPathGUI qupath); Command to show a summary measurement table, for PathObjects of a specified type (e.g. annotation, detection). Parameters:; qupath - . Method Details. showTable; public void showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type); Show a measurement table for the specified image data. Parameters:; imageData - the image data; type - the object type to show. getTableModelStrings; public static <T> List<String> getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns); Get a list of Strings representing table data.; ; Each entry in the list corresponds to a row. Type Parameters:; T - the data type for the table; Parameters:; model - ; delim - ; excludeColumns - ; Returns:. getTableModelString; public static <T> String getTableModelString(PathTableData<T> model,; String ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html:809,Deployability,install,installDragAndDropHandler,809,. TMACommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class TMACommands. java.lang.Object; qupath.lib.gui.commands.TMACommands. public class TMACommands; extends Object; Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMACommands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; installDragAndDropHandler(QuPathGUI qupath). Command to install a drag and drop file handler for exported TMA data. static boolean; promptToAddColumnAfterSelected(ImageData<?> imageData). Prompt to add a column to a TMA grid after the column containing the currently-selected object. static boolean; promptToAddColumnBeforeSelected(ImageData<?> imageData). Prompt to add a column to a TMA grid before the column containing the currently-selected object. static void; promptToAddNoteToSelectedCores(ImageData<?> imageData). Prompt to type a node to associate with the selected TMA cores. static boolean; promptToAddRowAfterSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid after the row containing the currently-selected object. static boolean; promptToAddRowBeforeSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid before the row containing the currently-selected object. static boolean; promptToCreateTMAGrid(ImageData<?> imageData). Prompt the user to manually create a new TMA grid. static boolean; promptToDeleteTMAGridColumn(ImageData<?> imageData). Prompt to delete a column from a TMA grid. static boolean; promptToDeleteTMAGridRow(ImageData<?> image,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/TMACommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html:865,Deployability,install,install,865,. TMACommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class TMACommands. java.lang.Object; qupath.lib.gui.commands.TMACommands. public class TMACommands; extends Object; Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMACommands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; installDragAndDropHandler(QuPathGUI qupath). Command to install a drag and drop file handler for exported TMA data. static boolean; promptToAddColumnAfterSelected(ImageData<?> imageData). Prompt to add a column to a TMA grid after the column containing the currently-selected object. static boolean; promptToAddColumnBeforeSelected(ImageData<?> imageData). Prompt to add a column to a TMA grid before the column containing the currently-selected object. static void; promptToAddNoteToSelectedCores(ImageData<?> imageData). Prompt to type a node to associate with the selected TMA cores. static boolean; promptToAddRowAfterSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid after the row containing the currently-selected object. static boolean; promptToAddRowBeforeSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid before the row containing the currently-selected object. static boolean; promptToCreateTMAGrid(ImageData<?> imageData). Prompt the user to manually create a new TMA grid. static boolean; promptToDeleteTMAGridColumn(ImageData<?> imageData). Prompt to delete a column from a TMA grid. static boolean; promptToDeleteTMAGridRow(ImageData<?> image,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/TMACommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html:3077,Deployability,install,installDragAndDropHandler,3077,"ummary TMA data for a specific image to a directory. static void; promptToImportTMAData(ImageData<?> imageData). Prompt to import TMA data for the specified image data. static void; promptToRelabelTMAGrid(ImageData<?> imageData). Prompt to relabel the core names within a TMA grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMACommands; public TMACommands(). Method Details. promptToAddNoteToSelectedCores; public static void promptToAddNoteToSelectedCores(ImageData<?> imageData); Prompt to type a node to associate with the selected TMA cores. Parameters:; imageData - . promptToExportTMAData; public static void promptToExportTMAData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Prompt to export summary TMA data for a specific image to a directory. Parameters:; qupath - ; imageData - . installDragAndDropHandler; public static void installDragAndDropHandler(QuPathGUI qupath); Command to install a drag and drop file handler for exported TMA data. Parameters:; qupath - QuPath instance to which the handler should be installed. promptToImportTMAData; public static void promptToImportTMAData(ImageData<?> imageData); Prompt to import TMA data for the specified image data. Parameters:; imageData - the image data for which the TMA data should be imported. promptToRelabelTMAGrid; public static void promptToRelabelTMAGrid(ImageData<?> imageData); Prompt to relabel the core names within a TMA grid. Parameters:; imageData - image containing the TMA grid. promptToDeleteTMAGridRow; public static boolean promptToDeleteTMAGridRow(ImageData<?> imageData); Prompt to delete a row from a TMA grid.; The row is identified as being the one that contains the current selected TMA core, ; or the core that contains the selected object.; ; After this command is run, the user will be prompted to relabel the TMA grid. Parameters:; imageData - the image data containing the TMA",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/TMACommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html:3123,Deployability,install,installDragAndDropHandler,3123,"ummary TMA data for a specific image to a directory. static void; promptToImportTMAData(ImageData<?> imageData). Prompt to import TMA data for the specified image data. static void; promptToRelabelTMAGrid(ImageData<?> imageData). Prompt to relabel the core names within a TMA grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMACommands; public TMACommands(). Method Details. promptToAddNoteToSelectedCores; public static void promptToAddNoteToSelectedCores(ImageData<?> imageData); Prompt to type a node to associate with the selected TMA cores. Parameters:; imageData - . promptToExportTMAData; public static void promptToExportTMAData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Prompt to export summary TMA data for a specific image to a directory. Parameters:; qupath - ; imageData - . installDragAndDropHandler; public static void installDragAndDropHandler(QuPathGUI qupath); Command to install a drag and drop file handler for exported TMA data. Parameters:; qupath - QuPath instance to which the handler should be installed. promptToImportTMAData; public static void promptToImportTMAData(ImageData<?> imageData); Prompt to import TMA data for the specified image data. Parameters:; imageData - the image data for which the TMA data should be imported. promptToRelabelTMAGrid; public static void promptToRelabelTMAGrid(ImageData<?> imageData); Prompt to relabel the core names within a TMA grid. Parameters:; imageData - image containing the TMA grid. promptToDeleteTMAGridRow; public static boolean promptToDeleteTMAGridRow(ImageData<?> imageData); Prompt to delete a row from a TMA grid.; The row is identified as being the one that contains the current selected TMA core, ; or the core that contains the selected object.; ; After this command is run, the user will be prompted to relabel the TMA grid. Parameters:; imageData - the image data containing the TMA",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/TMACommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html:3179,Deployability,install,install,3179,"ummary TMA data for a specific image to a directory. static void; promptToImportTMAData(ImageData<?> imageData). Prompt to import TMA data for the specified image data. static void; promptToRelabelTMAGrid(ImageData<?> imageData). Prompt to relabel the core names within a TMA grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMACommands; public TMACommands(). Method Details. promptToAddNoteToSelectedCores; public static void promptToAddNoteToSelectedCores(ImageData<?> imageData); Prompt to type a node to associate with the selected TMA cores. Parameters:; imageData - . promptToExportTMAData; public static void promptToExportTMAData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Prompt to export summary TMA data for a specific image to a directory. Parameters:; qupath - ; imageData - . installDragAndDropHandler; public static void installDragAndDropHandler(QuPathGUI qupath); Command to install a drag and drop file handler for exported TMA data. Parameters:; qupath - QuPath instance to which the handler should be installed. promptToImportTMAData; public static void promptToImportTMAData(ImageData<?> imageData); Prompt to import TMA data for the specified image data. Parameters:; imageData - the image data for which the TMA data should be imported. promptToRelabelTMAGrid; public static void promptToRelabelTMAGrid(ImageData<?> imageData); Prompt to relabel the core names within a TMA grid. Parameters:; imageData - image containing the TMA grid. promptToDeleteTMAGridRow; public static boolean promptToDeleteTMAGridRow(ImageData<?> imageData); Prompt to delete a row from a TMA grid.; The row is identified as being the one that contains the current selected TMA core, ; or the core that contains the selected object.; ; After this command is run, the user will be prompted to relabel the TMA grid. Parameters:; imageData - the image data containing the TMA",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/TMACommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html:3308,Deployability,install,installed,3308,"o import TMA data for the specified image data. static void; promptToRelabelTMAGrid(ImageData<?> imageData). Prompt to relabel the core names within a TMA grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMACommands; public TMACommands(). Method Details. promptToAddNoteToSelectedCores; public static void promptToAddNoteToSelectedCores(ImageData<?> imageData); Prompt to type a node to associate with the selected TMA cores. Parameters:; imageData - . promptToExportTMAData; public static void promptToExportTMAData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Prompt to export summary TMA data for a specific image to a directory. Parameters:; qupath - ; imageData - . installDragAndDropHandler; public static void installDragAndDropHandler(QuPathGUI qupath); Command to install a drag and drop file handler for exported TMA data. Parameters:; qupath - QuPath instance to which the handler should be installed. promptToImportTMAData; public static void promptToImportTMAData(ImageData<?> imageData); Prompt to import TMA data for the specified image data. Parameters:; imageData - the image data for which the TMA data should be imported. promptToRelabelTMAGrid; public static void promptToRelabelTMAGrid(ImageData<?> imageData); Prompt to relabel the core names within a TMA grid. Parameters:; imageData - image containing the TMA grid. promptToDeleteTMAGridRow; public static boolean promptToDeleteTMAGridRow(ImageData<?> imageData); Prompt to delete a row from a TMA grid.; The row is identified as being the one that contains the current selected TMA core, ; or the core that contains the selected object.; ; After this command is run, the user will be prompted to relabel the TMA grid. Parameters:; imageData - the image data containing the TMA grid; Returns:; true if the TMA grid was modified, false otherwise (e.g. if the user cancelled). promptToDeleteTMAGridCo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/TMACommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html:459,Modifiability,extend,extends,459,. TMACommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class TMACommands. java.lang.Object; qupath.lib.gui.commands.TMACommands. public class TMACommands; extends Object; Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMACommands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; installDragAndDropHandler(QuPathGUI qupath). Command to install a drag and drop file handler for exported TMA data. static boolean; promptToAddColumnAfterSelected(ImageData<?> imageData). Prompt to add a column to a TMA grid after the column containing the currently-selected object. static boolean; promptToAddColumnBeforeSelected(ImageData<?> imageData). Prompt to add a column to a TMA grid before the column containing the currently-selected object. static void; promptToAddNoteToSelectedCores(ImageData<?> imageData). Prompt to type a node to associate with the selected TMA cores. static boolean; promptToAddRowAfterSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid after the row containing the currently-selected object. static boolean; promptToAddRowBeforeSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid before the row containing the currently-selected object. static boolean; promptToCreateTMAGrid(ImageData<?> imageData). Prompt the user to manually create a new TMA grid. static boolean; promptToDeleteTMAGridColumn(ImageData<?> imageData). Prompt to delete a column from a TMA grid. static boolean; promptToDeleteTMAGridRow(ImageData<?> image,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/TMACommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html:2447,Modifiability,inherit,inherited,2447,"ageData). Prompt to add a row to a TMA grid after the row containing the currently-selected object. static boolean; promptToAddRowBeforeSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid before the row containing the currently-selected object. static boolean; promptToCreateTMAGrid(ImageData<?> imageData). Prompt the user to manually create a new TMA grid. static boolean; promptToDeleteTMAGridColumn(ImageData<?> imageData). Prompt to delete a column from a TMA grid. static boolean; promptToDeleteTMAGridRow(ImageData<?> imageData). Prompt to delete a row from a TMA grid. static void; promptToExportTMAData(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Prompt to export summary TMA data for a specific image to a directory. static void; promptToImportTMAData(ImageData<?> imageData). Prompt to import TMA data for the specified image data. static void; promptToRelabelTMAGrid(ImageData<?> imageData). Prompt to relabel the core names within a TMA grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMACommands; public TMACommands(). Method Details. promptToAddNoteToSelectedCores; public static void promptToAddNoteToSelectedCores(ImageData<?> imageData); Prompt to type a node to associate with the selected TMA cores. Parameters:; imageData - . promptToExportTMAData; public static void promptToExportTMAData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Prompt to export summary TMA data for a specific image to a directory. Parameters:; qupath - ; imageData - . installDragAndDropHandler; public static void installDragAndDropHandler(QuPathGUI qupath); Command to install a drag and drop file handler for exported TMA data. Parameters:; qupath - QuPath instance to which the handler should be installed. promptToImportTMAData; public static void promptToImportTMAData(ImageData<?> imageData); Prompt to import TMA data for the specified imag",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/TMACommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html:2521,Security,hash,hashCode,2521," currently-selected object. static boolean; promptToAddRowBeforeSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid before the row containing the currently-selected object. static boolean; promptToCreateTMAGrid(ImageData<?> imageData). Prompt the user to manually create a new TMA grid. static boolean; promptToDeleteTMAGridColumn(ImageData<?> imageData). Prompt to delete a column from a TMA grid. static boolean; promptToDeleteTMAGridRow(ImageData<?> imageData). Prompt to delete a row from a TMA grid. static void; promptToExportTMAData(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Prompt to export summary TMA data for a specific image to a directory. static void; promptToImportTMAData(ImageData<?> imageData). Prompt to import TMA data for the specified image data. static void; promptToRelabelTMAGrid(ImageData<?> imageData). Prompt to relabel the core names within a TMA grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMACommands; public TMACommands(). Method Details. promptToAddNoteToSelectedCores; public static void promptToAddNoteToSelectedCores(ImageData<?> imageData); Prompt to type a node to associate with the selected TMA cores. Parameters:; imageData - . promptToExportTMAData; public static void promptToExportTMAData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Prompt to export summary TMA data for a specific image to a directory. Parameters:; qupath - ; imageData - . installDragAndDropHandler; public static void installDragAndDropHandler(QuPathGUI qupath); Command to install a drag and drop file handler for exported TMA data. Parameters:; qupath - QuPath instance to which the handler should be installed. promptToImportTMAData; public static void promptToImportTMAData(ImageData<?> imageData); Prompt to import TMA data for the specified image data. Parameters:; imageData - the image data for which the TMA data s",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/TMACommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html:501,Usability,simpl,simple,501,. TMACommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class TMACommands. java.lang.Object; qupath.lib.gui.commands.TMACommands. public class TMACommands; extends Object; Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMACommands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; installDragAndDropHandler(QuPathGUI qupath). Command to install a drag and drop file handler for exported TMA data. static boolean; promptToAddColumnAfterSelected(ImageData<?> imageData). Prompt to add a column to a TMA grid after the column containing the currently-selected object. static boolean; promptToAddColumnBeforeSelected(ImageData<?> imageData). Prompt to add a column to a TMA grid before the column containing the currently-selected object. static void; promptToAddNoteToSelectedCores(ImageData<?> imageData). Prompt to type a node to associate with the selected TMA cores. static boolean; promptToAddRowAfterSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid after the row containing the currently-selected object. static boolean; promptToAddRowBeforeSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid before the row containing the currently-selected object. static boolean; promptToCreateTMAGrid(ImageData<?> imageData). Prompt the user to manually create a new TMA grid. static boolean; promptToDeleteTMAGridColumn(ImageData<?> imageData). Prompt to delete a column from a TMA grid. static boolean; promptToDeleteTMAGridRow(ImageData<?> image,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/TMACommands.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html:757,Deployability,update,updated,757,". UpdateUrisCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class UpdateUrisCommand<T extends UriResource>. java.lang.Object; qupath.lib.gui.commands.UpdateUrisCommand<T>. Type Parameters:; T - . public class UpdateUrisCommand<T extends UriResource>; extends Object; Fix broken URIs by using relative paths or prompting the user to select files.; This is intended to handle cases where files or projects have changed location, so that links need to be updated. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T extends UriResource>int; promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing). Show dialog prompting the user to update URIs for missing files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. promptToUpdateUris; public static <T extends UriResource> int promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing); throws IOException; Show dialog prompting the user to update URIs for missing files.; Optionally provide previous and current base URIs. If not null, these will be used to relativize paths when searching for potential replacements URIs.; Usually, these correspond to the current and previous paths for a project. Type Parameters:; T - ; Parameters:; items - the items containing URIs to check; basePrevious - optional previous base path; baseCurrent - optional current base path; onlyPromptIfMissing - only show a dialog if any URIs correspond to missing files; Returns:; the num",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html:1066,Deployability,update,update,1066,"our browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class UpdateUrisCommand<T extends UriResource>. java.lang.Object; qupath.lib.gui.commands.UpdateUrisCommand<T>. Type Parameters:; T - . public class UpdateUrisCommand<T extends UriResource>; extends Object; Fix broken URIs by using relative paths or prompting the user to select files.; This is intended to handle cases where files or projects have changed location, so that links need to be updated. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T extends UriResource>int; promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing). Show dialog prompting the user to update URIs for missing files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. promptToUpdateUris; public static <T extends UriResource> int promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing); throws IOException; Show dialog prompting the user to update URIs for missing files.; Optionally provide previous and current base URIs. If not null, these will be used to relativize paths when searching for potential replacements URIs.; Usually, these correspond to the current and previous paths for a project. Type Parameters:; T - ; Parameters:; items - the items containing URIs to check; basePrevious - optional previous base path; baseCurrent - optional current base path; onlyPromptIfMissing - only show a dialog if any URIs correspond to missing files; Returns:; the number of changes made, or -1 if the user cancelled the dialog.; T",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html:1476,Deployability,update,update,1476," Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class UpdateUrisCommand<T extends UriResource>. java.lang.Object; qupath.lib.gui.commands.UpdateUrisCommand<T>. Type Parameters:; T - . public class UpdateUrisCommand<T extends UriResource>; extends Object; Fix broken URIs by using relative paths or prompting the user to select files.; This is intended to handle cases where files or projects have changed location, so that links need to be updated. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T extends UriResource>int; promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing). Show dialog prompting the user to update URIs for missing files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. promptToUpdateUris; public static <T extends UriResource> int promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing); throws IOException; Show dialog prompting the user to update URIs for missing files.; Optionally provide previous and current base URIs. If not null, these will be used to relativize paths when searching for potential replacements URIs.; Usually, these correspond to the current and previous paths for a project. Type Parameters:; T - ; Parameters:; items - the items containing URIs to check; basePrevious - optional previous base path; baseCurrent - optional current base path; onlyPromptIfMissing - only show a dialog if any URIs correspond to missing files; Returns:; the number of changes made, or -1 if the user cancelled the dialog.; Throws:; IOException - if there was a problem accessing the URIs. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html:391,Modifiability,extend,extends,391,". UpdateUrisCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class UpdateUrisCommand<T extends UriResource>. java.lang.Object; qupath.lib.gui.commands.UpdateUrisCommand<T>. Type Parameters:; T - . public class UpdateUrisCommand<T extends UriResource>; extends Object; Fix broken URIs by using relative paths or prompting the user to select files.; This is intended to handle cases where files or projects have changed location, so that links need to be updated. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T extends UriResource>int; promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing). Show dialog prompting the user to update URIs for missing files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. promptToUpdateUris; public static <T extends UriResource> int promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing); throws IOException; Show dialog prompting the user to update URIs for missing files.; Optionally provide previous and current base URIs. If not null, these will be used to relativize paths when searching for potential replacements URIs.; Usually, these correspond to the current and previous paths for a project. Type Parameters:; T - ; Parameters:; items - the items containing URIs to check; basePrevious - optional previous base path; baseCurrent - optional current base path; onlyPromptIfMissing - only show a dialog if any URIs correspond to missing files; Returns:; the num",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html:534,Modifiability,extend,extends,534,". UpdateUrisCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class UpdateUrisCommand<T extends UriResource>. java.lang.Object; qupath.lib.gui.commands.UpdateUrisCommand<T>. Type Parameters:; T - . public class UpdateUrisCommand<T extends UriResource>; extends Object; Fix broken URIs by using relative paths or prompting the user to select files.; This is intended to handle cases where files or projects have changed location, so that links need to be updated. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T extends UriResource>int; promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing). Show dialog prompting the user to update URIs for missing files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. promptToUpdateUris; public static <T extends UriResource> int promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing); throws IOException; Show dialog prompting the user to update URIs for missing files.; Optionally provide previous and current base URIs. If not null, these will be used to relativize paths when searching for potential replacements URIs.; Usually, these correspond to the current and previous paths for a project. Type Parameters:; T - ; Parameters:; items - the items containing URIs to check; basePrevious - optional previous base path; baseCurrent - optional current base path; onlyPromptIfMissing - only show a dialog if any URIs correspond to missing files; Returns:; the num",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html:556,Modifiability,extend,extends,556,". UpdateUrisCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class UpdateUrisCommand<T extends UriResource>. java.lang.Object; qupath.lib.gui.commands.UpdateUrisCommand<T>. Type Parameters:; T - . public class UpdateUrisCommand<T extends UriResource>; extends Object; Fix broken URIs by using relative paths or prompting the user to select files.; This is intended to handle cases where files or projects have changed location, so that links need to be updated. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T extends UriResource>int; promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing). Show dialog prompting the user to update URIs for missing files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. promptToUpdateUris; public static <T extends UriResource> int promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing); throws IOException; Show dialog prompting the user to update URIs for missing files.; Optionally provide previous and current base URIs. If not null, these will be used to relativize paths when searching for potential replacements URIs.; Usually, these correspond to the current and previous paths for a project. Type Parameters:; T - ; Parameters:; items - the items containing URIs to check; basePrevious - optional previous base path; baseCurrent - optional current base path; onlyPromptIfMissing - only show a dialog if any URIs correspond to missing files; Returns:; the num",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html:899,Modifiability,extend,extends,899,". UpdateUrisCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class UpdateUrisCommand<T extends UriResource>. java.lang.Object; qupath.lib.gui.commands.UpdateUrisCommand<T>. Type Parameters:; T - . public class UpdateUrisCommand<T extends UriResource>; extends Object; Fix broken URIs by using relative paths or prompting the user to select files.; This is intended to handle cases where files or projects have changed location, so that links need to be updated. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T extends UriResource>int; promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing). Show dialog prompting the user to update URIs for missing files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. promptToUpdateUris; public static <T extends UriResource> int promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing); throws IOException; Show dialog prompting the user to update URIs for missing files.; Optionally provide previous and current base URIs. If not null, these will be used to relativize paths when searching for potential replacements URIs.; Usually, these correspond to the current and previous paths for a project. Type Parameters:; T - ; Parameters:; items - the items containing URIs to check; basePrevious - optional previous base path; baseCurrent - optional current base path; onlyPromptIfMissing - only show a dialog if any URIs correspond to missing files; Returns:; the num",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html:1105,Modifiability,inherit,inherited,1105," Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class UpdateUrisCommand<T extends UriResource>. java.lang.Object; qupath.lib.gui.commands.UpdateUrisCommand<T>. Type Parameters:; T - . public class UpdateUrisCommand<T extends UriResource>; extends Object; Fix broken URIs by using relative paths or prompting the user to select files.; This is intended to handle cases where files or projects have changed location, so that links need to be updated. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T extends UriResource>int; promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing). Show dialog prompting the user to update URIs for missing files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. promptToUpdateUris; public static <T extends UriResource> int promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing); throws IOException; Show dialog prompting the user to update URIs for missing files.; Optionally provide previous and current base URIs. If not null, these will be used to relativize paths when searching for potential replacements URIs.; Usually, these correspond to the current and previous paths for a project. Type Parameters:; T - ; Parameters:; items - the items containing URIs to check; basePrevious - optional previous base path; baseCurrent - optional current base path; onlyPromptIfMissing - only show a dialog if any URIs correspond to missing files; Returns:; the number of changes made, or -1 if the user cancelled the dialog.; Throws:; IOException - if there was a problem acces",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html:1289,Modifiability,extend,extends,1289," Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class UpdateUrisCommand<T extends UriResource>. java.lang.Object; qupath.lib.gui.commands.UpdateUrisCommand<T>. Type Parameters:; T - . public class UpdateUrisCommand<T extends UriResource>; extends Object; Fix broken URIs by using relative paths or prompting the user to select files.; This is intended to handle cases where files or projects have changed location, so that links need to be updated. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T extends UriResource>int; promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing). Show dialog prompting the user to update URIs for missing files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. promptToUpdateUris; public static <T extends UriResource> int promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing); throws IOException; Show dialog prompting the user to update URIs for missing files.; Optionally provide previous and current base URIs. If not null, these will be used to relativize paths when searching for potential replacements URIs.; Usually, these correspond to the current and previous paths for a project. Type Parameters:; T - ; Parameters:; items - the items containing URIs to check; basePrevious - optional previous base path; baseCurrent - optional current base path; onlyPromptIfMissing - only show a dialog if any URIs correspond to missing files; Returns:; the number of changes made, or -1 if the user cancelled the dialog.; Throws:; IOException - if there was a problem accessing the URIs. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html:1179,Security,hash,hashCode,1179," Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class UpdateUrisCommand<T extends UriResource>. java.lang.Object; qupath.lib.gui.commands.UpdateUrisCommand<T>. Type Parameters:; T - . public class UpdateUrisCommand<T extends UriResource>; extends Object; Fix broken URIs by using relative paths or prompting the user to select files.; This is intended to handle cases where files or projects have changed location, so that links need to be updated. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T extends UriResource>int; promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing). Show dialog prompting the user to update URIs for missing files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. promptToUpdateUris; public static <T extends UriResource> int promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing); throws IOException; Show dialog prompting the user to update URIs for missing files.; Optionally provide previous and current base URIs. If not null, these will be used to relativize paths when searching for potential replacements URIs.; Usually, these correspond to the current and previous paths for a project. Type Parameters:; T - ; Parameters:; items - the items containing URIs to check; basePrevious - optional previous base path; baseCurrent - optional current base path; onlyPromptIfMissing - only show a dialog if any URIs correspond to missing files; Returns:; the number of changes made, or -1 if the user cancelled the dialog.; Throws:; IOException - if there was a problem accessing the URIs. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html:2109,Security,access,accessing,2109," Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class UpdateUrisCommand<T extends UriResource>. java.lang.Object; qupath.lib.gui.commands.UpdateUrisCommand<T>. Type Parameters:; T - . public class UpdateUrisCommand<T extends UriResource>; extends Object; Fix broken URIs by using relative paths or prompting the user to select files.; This is intended to handle cases where files or projects have changed location, so that links need to be updated. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T extends UriResource>int; promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing). Show dialog prompting the user to update URIs for missing files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. promptToUpdateUris; public static <T extends UriResource> int promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing); throws IOException; Show dialog prompting the user to update URIs for missing files.; Optionally provide previous and current base URIs. If not null, these will be used to relativize paths when searching for potential replacements URIs.; Usually, these correspond to the current and previous paths for a project. Type Parameters:; T - ; Parameters:; items - the items containing URIs to check; basePrevious - optional previous base path; baseCurrent - optional current base path; onlyPromptIfMissing - only show a dialog if any URIs correspond to missing files; Returns:; the number of changes made, or -1 if the user cancelled the dialog.; Throws:; IOException - if there was a problem accessing the URIs. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html:1480,Availability,error,error,1480,"ed; public static class Dialogs.Builder; extends Object; Deprecated.; Builder class to create a custom Dialog. Constructor Summary; Constructors. Constructor; Description; Builder(). Deprecated.;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Dialogs.Builder; alertType(Alert.AlertType type). Deprecated.; Create a dialog styled as a specified alert type. Dialog<ButtonType>; build(). Deprecated.; Build the dialog. Dialogs.Builder; buttons(String... buttonNames). Deprecated.; Specify the buttons to display in the dialog. Dialogs.Builder; buttons(ButtonType... buttonTypes). Deprecated.; Specify the buttons to display in the dialog. Dialogs.Builder; confirmation(). Deprecated.; Create an confirmation alert dialog. Dialogs.Builder; content(Node content). Deprecated.; Specify a Node to display within the dialog. Dialogs.Builder; contentText(String content). Deprecated.; Specify the dialog content text. Dialogs.Builder; error(). Deprecated.; Create an error alert dialog. Dialogs.Builder; expandableContent(Node content). Deprecated.; Specify a Node to display within the dialog as expandable content, not initially visible. Dialogs.Builder; headerText(String header). Deprecated.; Specify the dialog header text. Dialogs.Builder; height(double height). Deprecated.; Specify the dialog height. Dialogs.Builder; information(). Deprecated.; Create an information alert dialog. Dialogs.Builder; modality(Modality modality). Deprecated.; Specify the modality of the dialog. Dialogs.Builder; nonModal(). Deprecated.; Specify that the dialog should be non-modal. Dialogs.Builder; owner(Window owner). Deprecated.; Specify the dialog owner. Dialogs.Builder; prefHeight(double prefHeight). Deprecated.; Specify the preferred height of the dialog pane. Dialogs.Builder; prefWidth(double prefWidth). Deprecated.; Specify the preferred width of the dialog pane. Dialogs.Builder; resizable(). Deprecated.; Make the dialog resizable ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html:1512,Availability,error,error,1512,"der; extends Object; Deprecated.; Builder class to create a custom Dialog. Constructor Summary; Constructors. Constructor; Description; Builder(). Deprecated.;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Dialogs.Builder; alertType(Alert.AlertType type). Deprecated.; Create a dialog styled as a specified alert type. Dialog<ButtonType>; build(). Deprecated.; Build the dialog. Dialogs.Builder; buttons(String... buttonNames). Deprecated.; Specify the buttons to display in the dialog. Dialogs.Builder; buttons(ButtonType... buttonTypes). Deprecated.; Specify the buttons to display in the dialog. Dialogs.Builder; confirmation(). Deprecated.; Create an confirmation alert dialog. Dialogs.Builder; content(Node content). Deprecated.; Specify a Node to display within the dialog. Dialogs.Builder; contentText(String content). Deprecated.; Specify the dialog content text. Dialogs.Builder; error(). Deprecated.; Create an error alert dialog. Dialogs.Builder; expandableContent(Node content). Deprecated.; Specify a Node to display within the dialog as expandable content, not initially visible. Dialogs.Builder; headerText(String header). Deprecated.; Specify the dialog header text. Dialogs.Builder; height(double height). Deprecated.; Specify the dialog height. Dialogs.Builder; information(). Deprecated.; Create an information alert dialog. Dialogs.Builder; modality(Modality modality). Deprecated.; Specify the modality of the dialog. Dialogs.Builder; nonModal(). Deprecated.; Specify that the dialog should be non-modal. Dialogs.Builder; owner(Window owner). Deprecated.; Specify the dialog owner. Dialogs.Builder; prefHeight(double prefHeight). Deprecated.; Specify the preferred height of the dialog pane. Dialogs.Builder; prefWidth(double prefWidth). Deprecated.; Specify the preferred width of the dialog pane. Dialogs.Builder; resizable(). Deprecated.; Make the dialog resizable (but default it is not). void; show(",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html:5269,Availability,error,error,5269,"er; See Also:. content(Node). owner; public Dialogs.Builder owner(Window owner); Deprecated.; Specify the dialog owner. Parameters:; owner - dialog title; Returns:; this builder. resizable; public Dialogs.Builder resizable(); Deprecated.; Make the dialog resizable (but default it is not). Returns:; this builder. nonModal; public Dialogs.Builder nonModal(); Deprecated.; Specify that the dialog should be non-modal.; By default, most dialogs are modal (and therefore block clicks to other windows). Returns:; this builder. modality; public Dialogs.Builder modality(Modality modality); Deprecated.; Specify the modality of the dialog. Parameters:; modality - requested modality; Returns:; this builder. alertType; public Dialogs.Builder alertType(Alert.AlertType type); Deprecated.; Create a dialog styled as a specified alert type. Parameters:; type - ; Returns:; this builder. warning; public Dialogs.Builder warning(); Deprecated.; Create a warning alert dialog. Returns:; this builder. error; public Dialogs.Builder error(); Deprecated.; Create an error alert dialog. Returns:; this builder. information; public Dialogs.Builder information(); Deprecated.; Create an information alert dialog. Returns:; this builder. confirmation; public Dialogs.Builder confirmation(); Deprecated.; Create an confirmation alert dialog. Returns:; this builder. buttons; public Dialogs.Builder buttons(ButtonType... buttonTypes); Deprecated.; Specify the buttons to display in the dialog. Parameters:; buttonTypes - buttons to use; Returns:; this builder. buttons; public Dialogs.Builder buttons(String... buttonNames); Deprecated.; Specify the buttons to display in the dialog. Parameters:; buttonNames - names of buttons to use; Returns:; this builder. width; public Dialogs.Builder width(double width); Deprecated.; Specify the dialog width. Parameters:; width - requested width; Returns:; this builder. height; public Dialogs.Builder height(double height); Deprecated.; Specify the dialog height. Parameters:; he",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html:5299,Availability,error,error,5299,"e). owner; public Dialogs.Builder owner(Window owner); Deprecated.; Specify the dialog owner. Parameters:; owner - dialog title; Returns:; this builder. resizable; public Dialogs.Builder resizable(); Deprecated.; Make the dialog resizable (but default it is not). Returns:; this builder. nonModal; public Dialogs.Builder nonModal(); Deprecated.; Specify that the dialog should be non-modal.; By default, most dialogs are modal (and therefore block clicks to other windows). Returns:; this builder. modality; public Dialogs.Builder modality(Modality modality); Deprecated.; Specify the modality of the dialog. Parameters:; modality - requested modality; Returns:; this builder. alertType; public Dialogs.Builder alertType(Alert.AlertType type); Deprecated.; Create a dialog styled as a specified alert type. Parameters:; type - ; Returns:; this builder. warning; public Dialogs.Builder warning(); Deprecated.; Create a warning alert dialog. Returns:; this builder. error; public Dialogs.Builder error(); Deprecated.; Create an error alert dialog. Returns:; this builder. information; public Dialogs.Builder information(); Deprecated.; Create an information alert dialog. Returns:; this builder. confirmation; public Dialogs.Builder confirmation(); Deprecated.; Create an confirmation alert dialog. Returns:; this builder. buttons; public Dialogs.Builder buttons(ButtonType... buttonTypes); Deprecated.; Specify the buttons to display in the dialog. Parameters:; buttonTypes - buttons to use; Returns:; this builder. buttons; public Dialogs.Builder buttons(String... buttonNames); Deprecated.; Specify the buttons to display in the dialog. Parameters:; buttonNames - names of buttons to use; Returns:; this builder. width; public Dialogs.Builder width(double width); Deprecated.; Specify the dialog width. Parameters:; width - requested width; Returns:; this builder. height; public Dialogs.Builder height(double height); Deprecated.; Specify the dialog height. Parameters:; height - requested height; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html:5331,Availability,error,error,5331,"lder owner(Window owner); Deprecated.; Specify the dialog owner. Parameters:; owner - dialog title; Returns:; this builder. resizable; public Dialogs.Builder resizable(); Deprecated.; Make the dialog resizable (but default it is not). Returns:; this builder. nonModal; public Dialogs.Builder nonModal(); Deprecated.; Specify that the dialog should be non-modal.; By default, most dialogs are modal (and therefore block clicks to other windows). Returns:; this builder. modality; public Dialogs.Builder modality(Modality modality); Deprecated.; Specify the modality of the dialog. Parameters:; modality - requested modality; Returns:; this builder. alertType; public Dialogs.Builder alertType(Alert.AlertType type); Deprecated.; Create a dialog styled as a specified alert type. Parameters:; type - ; Returns:; this builder. warning; public Dialogs.Builder warning(); Deprecated.; Create a warning alert dialog. Returns:; this builder. error; public Dialogs.Builder error(); Deprecated.; Create an error alert dialog. Returns:; this builder. information; public Dialogs.Builder information(); Deprecated.; Create an information alert dialog. Returns:; this builder. confirmation; public Dialogs.Builder confirmation(); Deprecated.; Create an confirmation alert dialog. Returns:; this builder. buttons; public Dialogs.Builder buttons(ButtonType... buttonTypes); Deprecated.; Specify the buttons to display in the dialog. Parameters:; buttonTypes - buttons to use; Returns:; this builder. buttons; public Dialogs.Builder buttons(String... buttonNames); Deprecated.; Specify the buttons to display in the dialog. Parameters:; buttonNames - names of buttons to use; Returns:; this builder. width; public Dialogs.Builder width(double width); Deprecated.; Specify the dialog width. Parameters:; width - requested width; Returns:; this builder. height; public Dialogs.Builder height(double height); Deprecated.; Specify the dialog height. Parameters:; height - requested height; Returns:; this builder. prefWi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html:520,Modifiability,extend,extends,520,". Dialogs.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Class Dialogs.Builder. java.lang.Object; qupath.lib.gui.dialogs.Dialogs.Builder. Enclosing class:; Dialogs. @Deprecated; public static class Dialogs.Builder; extends Object; Deprecated.; Builder class to create a custom Dialog. Constructor Summary; Constructors. Constructor; Description; Builder(). Deprecated.;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Dialogs.Builder; alertType(Alert.AlertType type). Deprecated.; Create a dialog styled as a specified alert type. Dialog<ButtonType>; build(). Deprecated.; Build the dialog. Dialogs.Builder; buttons(String... buttonNames). Deprecated.; Specify the buttons to display in the dialog. Dialogs.Builder; buttons(ButtonType... buttonTypes). Deprecated.; Specify the buttons to display in the dialog. Dialogs.Builder; confirmation(). Deprecated.; Create an confirmation alert dialog. Dialogs.Builder; content(Node content). Deprecated.; Specify a Node to display within the dialog. Dialogs.Builder; contentText(String content). Deprecated.; Specify the dialog content text. Dialogs.Builder; error(). Deprecated.; Create an error alert dialog. Dialogs.Builder; expandableContent(Node content). Deprecated.; Specify a Node to display within the dialog as expandable content, not initially visible. Dialogs.Builder; headerText(String header). Deprecated.; Specify the dialog header text. Dialogs.Builder; height(double height). Deprecated.; Specify the dialog height. Dialogs.Builder; information(). Deprecated.; Create an information alert dialog. Dialogs.Builder; modality(Modality modality). Deprecated.; Specify",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html:2943,Modifiability,inherit,inherited,2943," modality(Modality modality). Deprecated.; Specify the modality of the dialog. Dialogs.Builder; nonModal(). Deprecated.; Specify that the dialog should be non-modal. Dialogs.Builder; owner(Window owner). Deprecated.; Specify the dialog owner. Dialogs.Builder; prefHeight(double prefHeight). Deprecated.; Specify the preferred height of the dialog pane. Dialogs.Builder; prefWidth(double prefWidth). Deprecated.; Specify the preferred width of the dialog pane. Dialogs.Builder; resizable(). Deprecated.; Make the dialog resizable (but default it is not). void; show(). Deprecated.; Show the dialog. Optional<ButtonType>; showAndWait(). Deprecated.; Show the dialog. Dialogs.Builder; size(double width,; double height). Deprecated.; Specify the dialog height. Dialogs.Builder; title(String title). Deprecated.; Specify the dialog title. Dialogs.Builder; warning(). Deprecated.; Create a warning alert dialog. Dialogs.Builder; width(double width). Deprecated.; Specify the dialog width. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(); Deprecated. Method Details. title; public Dialogs.Builder title(String title); Deprecated.; Specify the dialog title. Parameters:; title - dialog title; Returns:; this builder. headerText; public Dialogs.Builder headerText(String header); Deprecated.; Specify the dialog header text.; This is text that is displayed prominently within the dialog. Parameters:; header - dialog header; Returns:; this builder; See Also:. contentText(String). contentText; public Dialogs.Builder contentText(String content); Deprecated.; Specify the dialog content text.; This is text that is displayed within the dialog. Parameters:; content - dialog content text; Returns:; this builder; See Also:. headerText(String). content; public Dialogs.Builder content(Node content); Deprecated.; Specify a Node to display within the dialog. Parameters:; con",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html:3017,Security,hash,hashCode,3017,"ialog. Dialogs.Builder; nonModal(). Deprecated.; Specify that the dialog should be non-modal. Dialogs.Builder; owner(Window owner). Deprecated.; Specify the dialog owner. Dialogs.Builder; prefHeight(double prefHeight). Deprecated.; Specify the preferred height of the dialog pane. Dialogs.Builder; prefWidth(double prefWidth). Deprecated.; Specify the preferred width of the dialog pane. Dialogs.Builder; resizable(). Deprecated.; Make the dialog resizable (but default it is not). void; show(). Deprecated.; Show the dialog. Optional<ButtonType>; showAndWait(). Deprecated.; Show the dialog. Dialogs.Builder; size(double width,; double height). Deprecated.; Specify the dialog height. Dialogs.Builder; title(String title). Deprecated.; Specify the dialog title. Dialogs.Builder; warning(). Deprecated.; Create a warning alert dialog. Dialogs.Builder; width(double width). Deprecated.; Specify the dialog width. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(); Deprecated. Method Details. title; public Dialogs.Builder title(String title); Deprecated.; Specify the dialog title. Parameters:; title - dialog title; Returns:; this builder. headerText; public Dialogs.Builder headerText(String header); Deprecated.; Specify the dialog header text.; This is text that is displayed prominently within the dialog. Parameters:; header - dialog header; Returns:; this builder; See Also:. contentText(String). contentText; public Dialogs.Builder contentText(String content); Deprecated.; Specify the dialog content text.; This is text that is displayed within the dialog. Parameters:; content - dialog content text; Returns:; this builder; See Also:. headerText(String). content; public Dialogs.Builder content(Node content); Deprecated.; Specify a Node to display within the dialog. Parameters:; content - dialog content; Returns:; this builder; See Also:. contentText(St",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html:814,Integrability,interface,interfaces,814,". Dialogs.DialogButton (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Enum Class Dialogs.DialogButton. java.lang.Object; java.lang.Enum<Dialogs.DialogButton>; qupath.lib.gui.dialogs.Dialogs.DialogButton. All Implemented Interfaces:; Serializable, Comparable<Dialogs.DialogButton>, Constable. Enclosing class:; Dialogs. public static enum Dialogs.DialogButton; extends Enum<Dialogs.DialogButton>; Possible buttons pressed in a yes/no/cancel dialog. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CANCEL. ""Cancel"" option. NO. ""No"" option. YES. ""Yes"" option. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Dialogs.DialogButton; valueOf(String name). Returns the enum constant of this class with the specified name. static Dialogs.DialogButton[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. YES; public static final Dialogs.DialogButton YES; ""Yes"" option. NO; public static final Dialogs.DialogButton NO; ""No"" option. CANCEL; public static final Dialogs.DialogButton CANCEL; ""Cancel"" option. Method Details. values; public static Dialogs.DialogButton[] values(); Returns an array containing the constants of this enum class, in; the orde",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html:689,Modifiability,extend,extends,689,". Dialogs.DialogButton (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Enum Class Dialogs.DialogButton. java.lang.Object; java.lang.Enum<Dialogs.DialogButton>; qupath.lib.gui.dialogs.Dialogs.DialogButton. All Implemented Interfaces:; Serializable, Comparable<Dialogs.DialogButton>, Constable. Enclosing class:; Dialogs. public static enum Dialogs.DialogButton; extends Enum<Dialogs.DialogButton>; Possible buttons pressed in a yes/no/cancel dialog. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CANCEL. ""Cancel"" option. NO. ""No"" option. YES. ""Yes"" option. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Dialogs.DialogButton; valueOf(String name). Returns the enum constant of this class with the specified name. static Dialogs.DialogButton[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. YES; public static final Dialogs.DialogButton YES; ""Yes"" option. NO; public static final Dialogs.DialogButton NO; ""No"" option. CANCEL; public static final Dialogs.DialogButton CANCEL; ""Cancel"" option. Method Details. values; public static Dialogs.DialogButton[] values(); Returns an array containing the constants of this enum class, in; the orde",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html:825,Modifiability,inherit,inherited,825,". Dialogs.DialogButton (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Enum Class Dialogs.DialogButton. java.lang.Object; java.lang.Enum<Dialogs.DialogButton>; qupath.lib.gui.dialogs.Dialogs.DialogButton. All Implemented Interfaces:; Serializable, Comparable<Dialogs.DialogButton>, Constable. Enclosing class:; Dialogs. public static enum Dialogs.DialogButton; extends Enum<Dialogs.DialogButton>; Possible buttons pressed in a yes/no/cancel dialog. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CANCEL. ""Cancel"" option. NO. ""No"" option. YES. ""Yes"" option. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Dialogs.DialogButton; valueOf(String name). Returns the enum constant of this class with the specified name. static Dialogs.DialogButton[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. YES; public static final Dialogs.DialogButton YES; ""Yes"" option. NO; public static final Dialogs.DialogButton NO; ""No"" option. CANCEL; public static final Dialogs.DialogButton CANCEL; ""Cancel"" option. Method Details. values; public static Dialogs.DialogButton[] values(); Returns an array containing the constants of this enum class, in; the orde",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html:878,Modifiability,extend,extends,878,". Dialogs.DialogButton (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Enum Class Dialogs.DialogButton. java.lang.Object; java.lang.Enum<Dialogs.DialogButton>; qupath.lib.gui.dialogs.Dialogs.DialogButton. All Implemented Interfaces:; Serializable, Comparable<Dialogs.DialogButton>, Constable. Enclosing class:; Dialogs. public static enum Dialogs.DialogButton; extends Enum<Dialogs.DialogButton>; Possible buttons pressed in a yes/no/cancel dialog. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CANCEL. ""Cancel"" option. NO. ""No"" option. YES. ""Yes"" option. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Dialogs.DialogButton; valueOf(String name). Returns the enum constant of this class with the specified name. static Dialogs.DialogButton[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. YES; public static final Dialogs.DialogButton YES; ""Yes"" option. NO; public static final Dialogs.DialogButton NO; ""No"" option. CANCEL; public static final Dialogs.DialogButton CANCEL; ""Cancel"" option. Method Details. values; public static Dialogs.DialogButton[] values(); Returns an array containing the constants of this enum class, in; the orde",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html:1383,Modifiability,inherit,inherited,1383,"ialogs; Enum Class Dialogs.DialogButton. java.lang.Object; java.lang.Enum<Dialogs.DialogButton>; qupath.lib.gui.dialogs.Dialogs.DialogButton. All Implemented Interfaces:; Serializable, Comparable<Dialogs.DialogButton>, Constable. Enclosing class:; Dialogs. public static enum Dialogs.DialogButton; extends Enum<Dialogs.DialogButton>; Possible buttons pressed in a yes/no/cancel dialog. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CANCEL. ""Cancel"" option. NO. ""No"" option. YES. ""Yes"" option. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Dialogs.DialogButton; valueOf(String name). Returns the enum constant of this class with the specified name. static Dialogs.DialogButton[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. YES; public static final Dialogs.DialogButton YES; ""Yes"" option. NO; public static final Dialogs.DialogButton NO; ""No"" option. CANCEL; public static final Dialogs.DialogButton CANCEL; ""Cancel"" option. Method Details. values; public static Dialogs.DialogButton[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static Dialogs.DialogButton valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html:1546,Modifiability,inherit,inherited,1546,"faces:; Serializable, Comparable<Dialogs.DialogButton>, Constable. Enclosing class:; Dialogs. public static enum Dialogs.DialogButton; extends Enum<Dialogs.DialogButton>; Possible buttons pressed in a yes/no/cancel dialog. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CANCEL. ""Cancel"" option. NO. ""No"" option. YES. ""Yes"" option. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Dialogs.DialogButton; valueOf(String name). Returns the enum constant of this class with the specified name. static Dialogs.DialogButton[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. YES; public static final Dialogs.DialogButton YES; ""Yes"" option. NO; public static final Dialogs.DialogButton NO; ""No"" option. CANCEL; public static final Dialogs.DialogButton CANCEL; ""Cancel"" option. Method Details. values; public static Dialogs.DialogButton[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static Dialogs.DialogButton valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException -",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html:1494,Security,hash,hashCode,1494,"alogButton>; qupath.lib.gui.dialogs.Dialogs.DialogButton. All Implemented Interfaces:; Serializable, Comparable<Dialogs.DialogButton>, Constable. Enclosing class:; Dialogs. public static enum Dialogs.DialogButton; extends Enum<Dialogs.DialogButton>; Possible buttons pressed in a yes/no/cancel dialog. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CANCEL. ""Cancel"" option. NO. ""No"" option. YES. ""Yes"" option. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Dialogs.DialogButton; valueOf(String name). Returns the enum constant of this class with the specified name. static Dialogs.DialogButton[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. YES; public static final Dialogs.DialogButton YES; ""Yes"" option. NO; public static final Dialogs.DialogButton NO; ""No"" option. CANCEL; public static final Dialogs.DialogButton CANCEL; ""Cancel"" option. Method Details. values; public static Dialogs.DialogButton[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static Dialogs.DialogButton valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3147,Availability,error,error,3147,"erName,; String ext). Deprecated.; Prompt user to select a file path to save. static File; promptToSaveFile(String title,; File dirBase,; String defaultName,; Map<String,String> filters). Deprecated.; Prompt user to select a file path to save, providing zero or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3242,Availability,error,error,3242,"e,; File dirBase,; String defaultName,; Map<String,String> filters). Deprecated.; Prompt user to select a file path to save, providing zero or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3384,Availability,error,error,3384,"o or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String ti",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3527,Availability,error,error,3527,"; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3632,Availability,error,error,3632,"> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4433,Availability,error,error,4433,"id; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4464,Availability,avail,available,4464,"id; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4543,Availability,error,error,4543," showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, no",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4576,Availability,avail,available,4576," showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, no",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:8119,Availability,avail,available,8119,"rue otherwise. showInputDialog; public static Double showInputDialog(String title,; String message,; Double initialInput); Deprecated.; Show an input dialog requesting a numeric value. Only scientific notation and digits ; with/without a decimal separator (e.g. ""."") are permitted. Parameters:; title - ; message - ; initialInput - ; Returns:; Number input by the user, or NaN if no valid number was entered, or null if cancel was pressed. showInputDialog; public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotificati",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:8576,Availability,avail,available,8576,"public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notifica",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:8805,Availability,error,error,8805," <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static v",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9012,Availability,error,error,9012,"arameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProje",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9227,Availability,error,error,9227," the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9889,Availability,error,error,9889,"rorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9920,Availability,avail,available,9920,"rorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10124,Availability,error,error,10124,"static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10157,Availability,avail,available,10157,"static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10374,Availability,error,error,10374,"age); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts - ; Returns:. promptForDirectory; public static File promptF",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10526,Availability,error,error,10526,"ge); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts - ; Returns:. promptForDirectory; public static File promptForDirectory(File dirBase); Deprecated.; Prompt user to select a directory. Parameters:; dirBase - base directory to display; if null or not an existing directory, the value",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:2499,Integrability,message,message,2499,"ted.; Prompt user to select a file. static File; promptForFile(String title,; File dirBase,; String filterDescription,; String... exts). Deprecated.; Prompt the user for a file with some kind of file dialog. static String; promptForFilePathOrURL(String title,; String defaultPath,; File dirBase,; String filterDescription,; String... exts). Deprecated.; Prompt user to select a file or input a URL. static List<File>; promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts). Deprecated.; Prompt to open a list of files. static File; promptToSaveFile(String title,; File dirBase,; String defaultName,; String filterName,; String ext). Deprecated.; Prompt user to select a file path to save. static File; promptToSaveFile(String title,; File dirBase,; String defaultName,; Map<String,String> filters). Deprecated.; Prompt user to select a file path to save, providing zero or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String me",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:2705,Integrability,message,message,2705,"ialog. static String; promptForFilePathOrURL(String title,; String defaultPath,; File dirBase,; String filterDescription,; String... exts). Deprecated.; Prompt user to select a file or input a URL. static List<File>; promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts). Deprecated.; Prompt to open a list of files. static File; promptToSaveFile(String title,; File dirBase,; String defaultName,; String filterName,; String ext). Deprecated.; Prompt user to select a file path to save. static File; promptToSaveFile(String title,; File dirBase,; String defaultName,; Map<String,String> filters). Deprecated.; Prompt user to select a file path to save, providing zero or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3116,Integrability,message,message,3116,"title,; File dirBase,; String defaultName,; String filterName,; String ext). Deprecated.; Prompt user to select a file path to save. static File; promptToSaveFile(String title,; File dirBase,; String defaultName,; Map<String,String> filters). Deprecated.; Prompt user to select a file path to save, providing zero or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String i",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3153,Integrability,message,message,3153,"erName,; String ext). Deprecated.; Prompt user to select a file path to save. static File; promptToSaveFile(String title,; File dirBase,; String defaultName,; Map<String,String> filters). Deprecated.; Prompt user to select a file path to save, providing zero or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3248,Integrability,message,message,3248,"e,; File dirBase,; String defaultName,; Map<String,String> filters). Deprecated.; Prompt user to select a file path to save, providing zero or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3282,Integrability,message,message,3282,"e,; File dirBase,; String defaultName,; Map<String,String> filters). Deprecated.; Prompt user to select a file path to save, providing zero or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3390,Integrability,message,message,3390,"o or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String ti",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3496,Integrability,message,message,3496,"ialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is availabl",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3677,Integrability,message,message,3677,"> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3757,Integrability,message,message,3757,"faultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3860,Integrability,message,message,3860,"ic boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNot",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4007,Integrability,message,message,4007," title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4156,Integrability,message,message,4156,"ated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. sta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4195,Integrability,message,message,4195,"tring title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String messag",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4292,Integrability,message,message,4292,"rrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Depre",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4439,Integrability,message,message,4439,"id; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4549,Integrability,message,message,4549," showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, no",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4779,Integrability,message,message,4779,"message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String tex",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4815,Integrability,message,message,4815,"ic Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Par",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4881,Integrability,message,message,4881,"ing message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:5188,Integrability,message,message,5188,"e). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message)",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:5957,Integrability,message,message,5957,"String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message); Deprecated.; Show a standard message dialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showYesNoDialog(String title,; String text); Deprecated.; Show a Yes/No dialog. Parameters:; title - ; text - ; Returns:. showYesNoCancelDialog; public static Dialogs.DialogButton showYesNoCancelDialog(String title,; String text); Deprecated.; Show a Yes/No/Cancel dialog. Parameters:; title - dialog box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecat",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:6155,Integrability,message,message,6155,"ies. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message); Deprecated.; Show a standard message dialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showYesNoDialog(String title,; String text); Deprecated.; Show a Yes/No dialog. Parameters:; title - ; text - ; Returns:. showYesNoCancelDialog; public static Dialogs.DialogButton showYesNoCancelDialog(String title,; String text); Deprecated.; Show a Yes/No/Cancel dialog. Parameters:; title - dialog box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:6194,Integrability,message,message,6194,"age). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message); Deprecated.; Show a standard message dialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showYesNoDialog(String title,; String text); Deprecated.; Show a Yes/No dialog. Parameters:; title - ; text - ; Returns:. showYesNoCancelDialog; public static Dialogs.DialogButton showYesNoCancelDialog(String title,; String text); Deprecated.; Show a Yes/No/Cancel dialog. Parameters:; title - dialog box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showInputDialog; public static Double showInputDi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:6233,Integrability,message,message,6233,"ication. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message); Deprecated.; Show a standard message dialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showYesNoDialog(String title,; String text); Deprecated.; Show a Yes/No dialog. Parameters:; title - ; text - ; Returns:. showYesNoCancelDialog; public static Dialogs.DialogButton showYesNoCancelDialog(String title,; String text); Deprecated.; Show a Yes/No/Cancel dialog. Parameters:; title - dialog box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showInputDialog; public static Double showInputDialog(String title,; String message,; Do",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:6796,Integrability,message,message,6796,"nfirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message); Deprecated.; Show a standard message dialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showYesNoDialog(String title,; String text); Deprecated.; Show a Yes/No dialog. Parameters:; title - ; text - ; Returns:. showYesNoCancelDialog; public static Dialogs.DialogButton showYesNoCancelDialog(String title,; String text); Deprecated.; Show a Yes/No/Cancel dialog. Parameters:; title - dialog box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showInputDialog; public static Double showInputDialog(String title,; String message,; Double initialInput); Deprecated.; Show an input dialog requesting a numeric value. Only scientific notation and digits ; with/without a decimal separator (e.g. ""."") are permitted. Parameters:; title - ; message - ; initialInput - ; Returns:; Number input by the user, or NaN if no valid number was entered, or null if cancel was pressed. showInputDialog; public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInpu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:7220,Integrability,message,message,7220,"ialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showYesNoDialog(String title,; String text); Deprecated.; Show a Yes/No dialog. Parameters:; title - ; text - ; Returns:. showYesNoCancelDialog; public static Dialogs.DialogButton showYesNoCancelDialog(String title,; String text); Deprecated.; Show a Yes/No/Cancel dialog. Parameters:; title - dialog box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showInputDialog; public static Double showInputDialog(String title,; String message,; Double initialInput); Deprecated.; Show an input dialog requesting a numeric value. Only scientific notation and digits ; with/without a decimal separator (e.g. ""."") are permitted. Parameters:; title - ; message - ; initialInput - ; Returns:; Number input by the user, or NaN if no valid number was entered, or null if cancel was pressed. showInputDialog; public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option,",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:7434,Integrability,message,message,7434,"ing title,; String text); Deprecated.; Show a Yes/No dialog. Parameters:; title - ; text - ; Returns:. showYesNoCancelDialog; public static Dialogs.DialogButton showYesNoCancelDialog(String title,; String text); Deprecated.; Show a Yes/No/Cancel dialog. Parameters:; title - dialog box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showInputDialog; public static Double showInputDialog(String title,; String message,; Double initialInput); Deprecated.; Show an input dialog requesting a numeric value. Only scientific notation and digits ; with/without a decimal separator (e.g. ""."") are permitted. Parameters:; title - ; message - ; initialInput - ; Returns:; Number input by the user, or NaN if no valid number was entered, or null if cancel was pressed. showInputDialog; public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:7645,Integrability,message,message,7645," Dialogs.DialogButton showYesNoCancelDialog(String title,; String text); Deprecated.; Show a Yes/No/Cancel dialog. Parameters:; title - dialog box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showInputDialog; public static Double showInputDialog(String title,; String message,; Double initialInput); Deprecated.; Show an input dialog requesting a numeric value. Only scientific notation and digits ; with/without a decimal separator (e.g. ""."") are permitted. Parameters:; title - ; message - ; initialInput - ; Returns:; Number input by the user, or NaN if no valid number was entered, or null if cancel was pressed. showInputDialog; public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:7761,Integrability,message,message,7761,"og box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showInputDialog; public static Double showInputDialog(String title,; String message,; Double initialInput); Deprecated.; Show an input dialog requesting a numeric value. Only scientific notation and digits ; with/without a decimal separator (e.g. ""."") are permitted. Parameters:; title - ; message - ; initialInput - ; Returns:; Number input by the user, or NaN if no valid number was entered, or null if cancel was pressed. showInputDialog; public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:7877,Integrability,message,message,7877,"ES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showInputDialog; public static Double showInputDialog(String title,; String message,; Double initialInput); Deprecated.; Show an input dialog requesting a numeric value. Only scientific notation and digits ; with/without a decimal separator (e.g. ""."") are permitted. Parameters:; title - ; message - ; initialInput - ; Returns:; Number input by the user, or NaN if no valid number was entered, or null if cancel was pressed. showInputDialog; public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwab",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:8075,Integrability,message,message,8075,"rue otherwise. showInputDialog; public static Double showInputDialog(String title,; String message,; Double initialInput); Deprecated.; Show an input dialog requesting a numeric value. Only scientific notation and digits ; with/without a decimal separator (e.g. ""."") are permitted. Parameters:; title - ; message - ; initialInput - ; Returns:; Number input by the user, or NaN if no valid number was entered, or null if cancel was pressed. showInputDialog; public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotificati",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:8321,Integrability,message,message,8321," Only scientific notation and digits ; with/without a decimal separator (e.g. ""."") are permitted. Parameters:; title - ; message - ; initialInput - ; Returns:; Number input by the user, or NaN if no valid number was entered, or null if cancel was pressed. showInputDialog; public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:8533,Integrability,message,message,8533,"public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notifica",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:8811,Integrability,message,message,8811," <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static v",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:8845,Integrability,message,message,8845," <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static v",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9057,Integrability,message,message,9057,"arameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProje",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9196,Integrability,message,message,9196,"elected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is availa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9270,Integrability,message,message,9270,"ublic static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title -",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9372,Integrability,message,message,9372,"tion<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; S",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9447,Integrability,message,message,9447,"ection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9543,Integrability,message,message,9543,"title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprec",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9616,Integrability,message,message,9616,"- initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node -",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9714,Integrability,message,message,9714,"cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9787,Integrability,message,message,9787,"e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWind",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9895,Integrability,message,message,9895,"rorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9974,Integrability,message,message,9974," title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the s",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10130,Integrability,message,message,10130,"static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10211,Integrability,message,message,10211," Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... ext",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10343,Integrability,message,message,10343,"tatic void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10380,Integrability,message,message,10380,"age); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts - ; Returns:. promptForDirectory; public static File promptF",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10412,Integrability,message,message,10412,"ning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts - ; Returns:. promptForDirectory; public static File promptForDirectory(File dirBase); Dep",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10532,Integrability,message,message,10532,"ge); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts - ; Returns:. promptForDirectory; public static File promptForDirectory(File dirBase); Deprecated.; Prompt user to select a directory. Parameters:; dirBase - base directory to display; if null or not an existing directory, the value",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10689,Integrability,message,message,10689,"tic void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts - ; Returns:. promptForDirectory; public static File promptForDirectory(File dirBase); Deprecated.; Prompt user to select a directory. Parameters:; dirBase - base directory to display; if null or not an existing directory, the value under getLastDirectory() should be used; Returns:; selected directory, or null if no directory was selected. pro",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10725,Integrability,message,message,10725,"); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts - ; Returns:. promptForDirectory; public static File promptForDirectory(File dirBase); Deprecated.; Prompt user to select a directory. Parameters:; dirBase - base directory to display; if null or not an existing directory, the value under getLastDirectory() should be used; Returns:; selected directory, or null if no directory was selected. promptForDirectory; public static File promptForDirectory(String",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10757,Integrability,message,message,10757,"notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts - ; Returns:. promptForDirectory; public static File promptForDirectory(File dirBase); Deprecated.; Prompt user to select a directory. Parameters:; dirBase - base directory to display; if null or not an existing directory, the value under getLastDirectory() should be used; Returns:; selected directory, or null if no directory was selected. promptForDirectory; public static File promptForDirectory(String title,; File dirBase); Depre",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:454,Modifiability,extend,extends,454,". Dialogs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Class Dialogs. java.lang.Object; qupath.lib.gui.dialogs.Dialogs. @Deprecated; public class Dialogs; extends Object; Deprecated.; since v0.5.0. Legacy class, deprecated since v0.5.0.; Replaced by Dialogs and FileChoosers. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Dialogs.Builder. Deprecated. static enum ; Dialogs.DialogButton. Deprecated.; Possible buttons pressed in a yes/no/cancel dialog. Constructor Summary; Constructors. Constructor; Description; Dialogs(). Deprecated.;  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static Dialogs.Builder; builder(). Deprecated.; Create a new builder to generate a custom dialog. static qupath.lib.gui.dialogs.QuPathChooser; getChooser(Window window). Deprecated.; Get a QuPathChooser instance linked to a specific window. static File; promptForDirectory(File dirBase). Deprecated.; Prompt user to select a directory. static File; promptForDirectory(String title,; File dirBase). Deprecated.; Prompt user to select a directory. static File; promptForFile(File dirBase). Deprecated.; Prompt user to select a file. static File; promptForFile(String title,; File dirBase,; String filterDescription,; String... exts). Deprecated.; Prompt the user for a file with some kind of file dialog. static String; promptForFilePathOrURL(String title,; String defaultPath,; File dirBase,; String filterDescription,; String... exts). Deprecated.; Prompt user to select a file or input a URL. static List<File>; promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:5466,Modifiability,inherit,inherited,5466," static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message); Deprecated.; Show a standard message dialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showY",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:5540,Security,hash,hashCode,5540,"or message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message); Deprecated.; Show a standard message dialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showYesNoDialog(String title,; String text); Deprecated.; Show a Yes/No dialo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/package-summary.html:530,Integrability,interface,interface,530,". qupath.lib.gui.dialogs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.dialogs. package qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; Dialogs; Deprecated.; since v0.5.0. Dialogs.Builder; Deprecated.; Dialogs.DialogButton. Possible buttons pressed in a yes/no/cancel dialog. ParameterPanelFX. A panel for displaying a list of parameters suitably to aid with creating JavaFX GUIs. ProjectDialogs. Dialogs specifically related to managing projects. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html:4469,Deployability,update,updated,4469,"listener - ; See Also:. removeParameterChangeListener(ParameterChangeListener). removeParameterChangeListener; public void removeParameterChangeListener(ParameterChangeListener listener); Remove a ParameterChangeListener. Parameters:; listener - ; See Also:. addParameterChangeListener(ParameterChangeListener). setTextFieldFromNumber; protected static void setTextFieldFromNumber(TextField text,; Number value,; String unit). getTextField; protected TextField getTextField(Parameter<?> param,; int cols). getParameterEnabled; public boolean getParameterEnabled(String key); Returns true if a parameter exists with the given key and is enabled (and is therefore editable). Parameters:; key - ; Returns:. getParameterEnabled; public boolean getParameterEnabled(Parameter<?> param); Returns true if a parameter is enabled (and is therefore editable). Parameters:; param - ; Returns:. setParameterEnabled; public void setParameterEnabled(String key,; boolean enabled); Set the enabled status of a parameter by key, to determine if it can be edited. Parameters:; key - ; enabled - . setParameterEnabled; public void setParameterEnabled(Parameter<?> param,; boolean enabled); Set the enabled status of a parameter, to determine if it can be edited. Parameters:; param - ; enabled - . setNumericParameterValue; public boolean setNumericParameterValue(String key,; Number value); Set a numeric parameter value (either int or double).; ; The reason for using this method rather than setting the parameter value directly is that it ensures that; any displayed components (text fields, sliders...) are updated accordingly. Parameters:; key - ; value - ; Returns:. setNumericParameterValueRange; public boolean setNumericParameterValueRange(String key,; double minValue,; double maxValue); Set the minimum and maximum value for a numeric parameter.; ; If the parameter is being displayed with a slider, the slider range will also be updated accordingly. Parameters:; key - ; minValue - ; maxValue - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html:4799,Deployability,update,updated,4799,"listener - ; See Also:. removeParameterChangeListener(ParameterChangeListener). removeParameterChangeListener; public void removeParameterChangeListener(ParameterChangeListener listener); Remove a ParameterChangeListener. Parameters:; listener - ; See Also:. addParameterChangeListener(ParameterChangeListener). setTextFieldFromNumber; protected static void setTextFieldFromNumber(TextField text,; Number value,; String unit). getTextField; protected TextField getTextField(Parameter<?> param,; int cols). getParameterEnabled; public boolean getParameterEnabled(String key); Returns true if a parameter exists with the given key and is enabled (and is therefore editable). Parameters:; key - ; Returns:. getParameterEnabled; public boolean getParameterEnabled(Parameter<?> param); Returns true if a parameter is enabled (and is therefore editable). Parameters:; param - ; Returns:. setParameterEnabled; public void setParameterEnabled(String key,; boolean enabled); Set the enabled status of a parameter by key, to determine if it can be edited. Parameters:; key - ; enabled - . setParameterEnabled; public void setParameterEnabled(Parameter<?> param,; boolean enabled); Set the enabled status of a parameter, to determine if it can be edited. Parameters:; param - ; enabled - . setNumericParameterValue; public boolean setNumericParameterValue(String key,; Number value); Set a numeric parameter value (either int or double).; ; The reason for using this method rather than setting the parameter value directly is that it ensures that; any displayed components (text fields, sliders...) are updated accordingly. Parameters:; key - ; value - ; Returns:. setNumericParameterValueRange; public boolean setNumericParameterValueRange(String key,; double minValue,; double maxValue); Set the minimum and maximum value for a numeric parameter.; ; If the parameter is being displayed with a slider, the slider range will also be updated accordingly. Parameters:; key - ; minValue - ; maxValue - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html:477,Modifiability,extend,extends,477,". ParameterPanelFX (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Class ParameterPanelFX. java.lang.Object; qupath.lib.gui.dialogs.ParameterPanelFX. public class ParameterPanelFX; extends Object; A panel for displaying a list of parameters suitably to aid with creating JavaFX GUIs. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ParameterPanelFX(ParameterList params). Create a ParameterPanelFX. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addParameterChangeListener(ParameterChangeListener listener). Add a ParameterChangeListener to be notified as parameters are modified by the user. Pane; getPane(). Get the Pane that can be displayed. boolean; getParameterEnabled(String key). Returns true if a parameter exists with the given key and is enabled (and is therefore editable). boolean; getParameterEnabled(Parameter<?> param). Returns true if a parameter is enabled (and is therefore editable). ParameterList; getParameters(). Get the ParameterList displayed in this panel. protected TextField; getTextField(Parameter<?> param,; int cols);  ; void; removeParameterChangeListener(ParameterChangeListener listener). Remove a ParameterChangeListener. boolean; setNumericParameterValue(String key,; Number value). Set a numeric parameter value (either int or double). boolean; setNumericParameterValueRange(String key,; double minValue,; double maxValue). Set the minimum and maximum value for a numeric parameter. void; setParameterEnabled(String key,; boolean enabled). Set the enabled status of a parameter by key, to determine if it can be edited. void; setParameterEnabled(Parameter<?",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html:2205,Modifiability,inherit,inherited,2205,"rEnabled(Parameter<?> param). Returns true if a parameter is enabled (and is therefore editable). ParameterList; getParameters(). Get the ParameterList displayed in this panel. protected TextField; getTextField(Parameter<?> param,; int cols);  ; void; removeParameterChangeListener(ParameterChangeListener listener). Remove a ParameterChangeListener. boolean; setNumericParameterValue(String key,; Number value). Set a numeric parameter value (either int or double). boolean; setNumericParameterValueRange(String key,; double minValue,; double maxValue). Set the minimum and maximum value for a numeric parameter. void; setParameterEnabled(String key,; boolean enabled). Set the enabled status of a parameter by key, to determine if it can be edited. void; setParameterEnabled(Parameter<?> param,; boolean enabled). Set the enabled status of a parameter, to determine if it can be edited. protected static void; setTextFieldFromNumber(TextField text,; Number value,; String unit);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ParameterPanelFX; public ParameterPanelFX(ParameterList params); Create a ParameterPanelFX. Parameters:; params - . Method Details. getParameters; public ParameterList getParameters(); Get the ParameterList displayed in this panel. Returns:. getPane; public Pane getPane(); Get the Pane that can be displayed. Returns:. addParameterChangeListener; public void addParameterChangeListener(ParameterChangeListener listener); Add a ParameterChangeListener to be notified as parameters are modified by the user. Parameters:; listener - ; See Also:. removeParameterChangeListener(ParameterChangeListener). removeParameterChangeListener; public void removeParameterChangeListener(ParameterChangeListener listener); Remove a ParameterChangeListener. Parameters:; listener - ; See Also:. addParameterChangeListener(ParameterChangeListener). setTextFieldFromNumber; p",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html:2279,Security,hash,hashCode,2279,"d is therefore editable). ParameterList; getParameters(). Get the ParameterList displayed in this panel. protected TextField; getTextField(Parameter<?> param,; int cols);  ; void; removeParameterChangeListener(ParameterChangeListener listener). Remove a ParameterChangeListener. boolean; setNumericParameterValue(String key,; Number value). Set a numeric parameter value (either int or double). boolean; setNumericParameterValueRange(String key,; double minValue,; double maxValue). Set the minimum and maximum value for a numeric parameter. void; setParameterEnabled(String key,; boolean enabled). Set the enabled status of a parameter by key, to determine if it can be edited. void; setParameterEnabled(Parameter<?> param,; boolean enabled). Set the enabled status of a parameter, to determine if it can be edited. protected static void; setTextFieldFromNumber(TextField text,; Number value,; String unit);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ParameterPanelFX; public ParameterPanelFX(ParameterList params); Create a ParameterPanelFX. Parameters:; params - . Method Details. getParameters; public ParameterList getParameters(); Get the ParameterList displayed in this panel. Returns:. getPane; public Pane getPane(); Get the Pane that can be displayed. Returns:. addParameterChangeListener; public void addParameterChangeListener(ParameterChangeListener listener); Add a ParameterChangeListener to be notified as parameters are modified by the user. Parameters:; listener - ; See Also:. removeParameterChangeListener(ParameterChangeListener). removeParameterChangeListener; public void removeParameterChangeListener(ParameterChangeListener listener); Remove a ParameterChangeListener. Parameters:; listener - ; See Also:. addParameterChangeListener(ParameterChangeListener). setTextFieldFromNumber; protected static void setTextFieldFromNumber(TextField text,; Number valu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html:880,Availability,avail,availableImages,880,". ProjectDialogs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Class ProjectDialogs. java.lang.Object; qupath.lib.gui.dialogs.ProjectDialogs. public class ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; c",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html:1211,Availability,avail,available,1211,"ield; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Class ProjectDialogs. java.lang.Object; qupath.lib.gui.dialogs.ProjectDialogs. public class ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; can be null); openImageWarning - warning shown if image(s) to process is/are currently opened in viewer(s).; Returns:; a ListSelectionView suitable for selecting entries. getCurr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html:1631,Availability,avail,availableImages,1631,"ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; can be null); openImageWarning - warning shown if image(s) to process is/are currently opened in viewer(s).; Returns:; a ListSelectionView suitable for selecting entries. getCurrentImages; public static Collection<ProjectImageEntry<BufferedImage>> getCurrentImages(QuPathGUI qupath); Get the ProjectImageEntry for each of the current images open in QuPath, if available. Parameters:; qupath - ; Returns:; a collection of currently-open project entries. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html:1891,Availability,avail,availableImages,1891,"ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; can be null); openImageWarning - warning shown if image(s) to process is/are currently opened in viewer(s).; Returns:; a ListSelectionView suitable for selecting entries. getCurrentImages; public static Collection<ProjectImageEntry<BufferedImage>> getCurrentImages(QuPathGUI qupath); Get the ProjectImageEntry for each of the current images open in QuPath, if available. Parameters:; qupath - ; Returns:; a collection of currently-open project entries. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html:1913,Availability,avail,available,1913,"ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; can be null); openImageWarning - warning shown if image(s) to process is/are currently opened in viewer(s).; Returns:; a ListSelectionView suitable for selecting entries. getCurrentImages; public static Collection<ProjectImageEntry<BufferedImage>> getCurrentImages(QuPathGUI qupath); Get the ProjectImageEntry for each of the current images open in QuPath, if available. Parameters:; qupath - ; Returns:; a collection of currently-open project entries. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html:2360,Availability,avail,available,2360,"ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; can be null); openImageWarning - warning shown if image(s) to process is/are currently opened in viewer(s).; Returns:; a ListSelectionView suitable for selecting entries. getCurrentImages; public static Collection<ProjectImageEntry<BufferedImage>> getCurrentImages(QuPathGUI qupath); Get the ProjectImageEntry for each of the current images open in QuPath, if available. Parameters:; qupath - ; Returns:; a collection of currently-open project entries. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html:469,Modifiability,extend,extends,469,". ProjectDialogs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Class ProjectDialogs. java.lang.Object; qupath.lib.gui.dialogs.ProjectDialogs. public class ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; c",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html:1230,Modifiability,inherit,inherited,1230,": ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Class ProjectDialogs. java.lang.Object; qupath.lib.gui.dialogs.ProjectDialogs. public class ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; can be null); openImageWarning - warning shown if image(s) to process is/are currently opened in viewer(s).; Returns:; a ListSelectionView suitable for selecting entries. getCurrentImages; public static Collection<ProjectImageEntry<Buffere",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html:1819,Modifiability,variab,variable,1819,"ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; can be null); openImageWarning - warning shown if image(s) to process is/are currently opened in viewer(s).; Returns:; a ListSelectionView suitable for selecting entries. getCurrentImages; public static Collection<ProjectImageEntry<BufferedImage>> getCurrentImages(QuPathGUI qupath); Get the ProjectImageEntry for each of the current images open in QuPath, if available. Parameters:; qupath - ; Returns:; a collection of currently-open project entries. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html:1304,Security,hash,hashCode,1304," ; Method. SEARCH. Package qupath.lib.gui.dialogs; Class ProjectDialogs. java.lang.Object; qupath.lib.gui.dialogs.ProjectDialogs. public class ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; can be null); openImageWarning - warning shown if image(s) to process is/are currently opened in viewer(s).; Returns:; a ListSelectionView suitable for selecting entries. getCurrentImages; public static Collection<ProjectImageEntry<BufferedImage>> getCurrentImages(QuPathGUI qupath); Get the ProjectImageEntry f",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html:486,Integrability,interface,interface,486,". GitHubProject.GitHubRepo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class GitHubProject.GitHubRepo. java.lang.Object; qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Enclosing interface:; GitHubProject. public static class GitHubProject.GitHubRepo; extends Object; Helper class to represent a GitHub repository. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static GitHubProject.GitHubRepo; create(String name,; String owner,; String repo). Create a new GitHubProject. boolean; equals(Object obj);  ; String; getName(). Get the name. String; getOwner(). Get the owner. String; getRepo(). Get the repo. String; getUrlString(). Get the URL for the main repo. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getOwner; public String getOwner(); Get the owner. Returns:. getRepo; public String getRepo(); Get the repo. Returns:. getName; public String getName(); Get the name. This can be used to identify the overall project, but is not part of the source code URL. Returns:. getUrlString; public String getUrlString(); Get the URL for the main repo. Returns:. toString; public String toString(). Overrides:; toString in class Object. create; public static GitHubProject.GitHubRepo create(String name,; String owner,; String repo); Create a new GitHubProject. Parameters:; name - a user-friendly name; owner - the owner, used as the first part in the GitHub URL; repo - the repo, used as the second part in the GitHub URL; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html:559,Modifiability,extend,extends,559,". GitHubProject.GitHubRepo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class GitHubProject.GitHubRepo. java.lang.Object; qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Enclosing interface:; GitHubProject. public static class GitHubProject.GitHubRepo; extends Object; Helper class to represent a GitHub repository. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static GitHubProject.GitHubRepo; create(String name,; String owner,; String repo). Create a new GitHubProject. boolean; equals(Object obj);  ; String; getName(). Get the name. String; getOwner(). Get the owner. String; getRepo(). Get the repo. String; getUrlString(). Get the URL for the main repo. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getOwner; public String getOwner(); Get the owner. Returns:. getRepo; public String getRepo(); Get the repo. Returns:. getName; public String getName(); Get the name. This can be used to identify the overall project, but is not part of the source code URL. Returns:. getUrlString; public String getUrlString(); Get the URL for the main repo. Returns:. toString; public String toString(). Overrides:; toString in class Object. create; public static GitHubProject.GitHubRepo create(String name,; String owner,; String repo); Create a new GitHubProject. Parameters:; name - a user-friendly name; owner - the owner, used as the first part in the GitHub URL; repo - the repo, used as the second part in the GitHub URL; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html:1087,Modifiability,inherit,inherited,1087,"r.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class GitHubProject.GitHubRepo. java.lang.Object; qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Enclosing interface:; GitHubProject. public static class GitHubProject.GitHubRepo; extends Object; Helper class to represent a GitHub repository. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static GitHubProject.GitHubRepo; create(String name,; String owner,; String repo). Create a new GitHubProject. boolean; equals(Object obj);  ; String; getName(). Get the name. String; getOwner(). Get the owner. String; getRepo(). Get the repo. String; getUrlString(). Get the URL for the main repo. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getOwner; public String getOwner(); Get the owner. Returns:. getRepo; public String getRepo(); Get the repo. Returns:. getName; public String getName(); Get the name. This can be used to identify the overall project, but is not part of the source code URL. Returns:. getUrlString; public String getUrlString(); Get the URL for the main repo. Returns:. toString; public String toString(). Overrides:; toString in class Object. create; public static GitHubProject.GitHubRepo create(String name,; String owner,; String repo); Create a new GitHubProject. Parameters:; name - a user-friendly name; owner - the owner, used as the first part in the GitHub URL; repo - the repo, used as the second part in the GitHub URL; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html:1041,Security,hash,hashCode,1041," disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class GitHubProject.GitHubRepo. java.lang.Object; qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Enclosing interface:; GitHubProject. public static class GitHubProject.GitHubRepo; extends Object; Helper class to represent a GitHub repository. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static GitHubProject.GitHubRepo; create(String name,; String owner,; String repo). Create a new GitHubProject. boolean; equals(Object obj);  ; String; getName(). Get the name. String; getOwner(). Get the owner. String; getRepo(). Get the repo. String; getUrlString(). Get the URL for the main repo. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getOwner; public String getOwner(); Get the owner. Returns:. getRepo; public String getRepo(); Get the repo. Returns:. getName; public String getName(); Get the name. This can be used to identify the overall project, but is not part of the source code URL. Returns:. getUrlString; public String getUrlString(); Get the URL for the main repo. Returns:. toString; public String toString(). Overrides:; toString in class Object. create; public static GitHubProject.GitHubRepo create(String name,; String owner,; String repo); Create a new GitHubProject. Parameters:; name - a user-friendly name; owner - the owner, used as the first part in the GitHub URL; repo - the repo, used as the second part in the GitHub URL; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; e",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html:1930,Security,hash,hashCode,1930,"r.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class GitHubProject.GitHubRepo. java.lang.Object; qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Enclosing interface:; GitHubProject. public static class GitHubProject.GitHubRepo; extends Object; Helper class to represent a GitHub repository. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static GitHubProject.GitHubRepo; create(String name,; String owner,; String repo). Create a new GitHubProject. boolean; equals(Object obj);  ; String; getName(). Get the name. String; getOwner(). Get the owner. String; getRepo(). Get the repo. String; getUrlString(). Get the URL for the main repo. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getOwner; public String getOwner(); Get the owner. Returns:. getRepo; public String getRepo(); Get the repo. Returns:. getName; public String getName(); Get the name. This can be used to identify the overall project, but is not part of the source code URL. Returns:. getUrlString; public String getUrlString(); Get the URL for the main repo. Returns:. toString; public String toString(). Overrides:; toString in class Object. create; public static GitHubProject.GitHubRepo create(String name,; String owner,; String repo); Create a new GitHubProject. Parameters:; name - a user-friendly name; owner - the owner, used as the first part in the GitHub URL; repo - the repo, used as the second part in the GitHub URL; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html:1951,Security,hash,hashCode,1951,"r.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class GitHubProject.GitHubRepo. java.lang.Object; qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Enclosing interface:; GitHubProject. public static class GitHubProject.GitHubRepo; extends Object; Helper class to represent a GitHub repository. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static GitHubProject.GitHubRepo; create(String name,; String owner,; String repo). Create a new GitHubProject. boolean; equals(Object obj);  ; String; getName(). Get the name. String; getOwner(). Get the owner. String; getRepo(). Get the repo. String; getUrlString(). Get the URL for the main repo. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getOwner; public String getOwner(); Get the owner. Returns:. getRepo; public String getRepo(); Get the repo. Returns:. getName; public String getName(); Get the name. This can be used to identify the overall project, but is not part of the source code URL. Returns:. getUrlString; public String getUrlString(); Get the URL for the main repo. Returns:. toString; public String toString(). Overrides:; toString in class Object. create; public static GitHubProject.GitHubRepo create(String name,; String owner,; String repo); Create a new GitHubProject. Parameters:; name - a user-friendly name; owner - the owner, used as the first part in the GitHub URL; repo - the repo, used as the second part in the GitHub URL; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html:1975,Security,hash,hashCode,1975,"r.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class GitHubProject.GitHubRepo. java.lang.Object; qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Enclosing interface:; GitHubProject. public static class GitHubProject.GitHubRepo; extends Object; Helper class to represent a GitHub repository. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static GitHubProject.GitHubRepo; create(String name,; String owner,; String repo). Create a new GitHubProject. boolean; equals(Object obj);  ; String; getName(). Get the name. String; getOwner(). Get the owner. String; getRepo(). Get the repo. String; getUrlString(). Get the URL for the main repo. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getOwner; public String getOwner(); Get the owner. Returns:. getRepo; public String getRepo(); Get the repo. Returns:. getName; public String getName(); Get the name. This can be used to identify the overall project, but is not part of the source code URL. Returns:. getUrlString; public String getUrlString(); Get the URL for the main repo. Returns:. toString; public String toString(). Overrides:; toString in class Object. create; public static GitHubProject.GitHubRepo create(String name,; String owner,; String repo); Create a new GitHubProject. Parameters:; name - a user-friendly name; owner - the owner, used as the first part in the GitHub URL; repo - the repo, used as the second part in the GitHub URL; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html:1779,Usability,user-friendly,user-friendly,1779,"r.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class GitHubProject.GitHubRepo. java.lang.Object; qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Enclosing interface:; GitHubProject. public static class GitHubProject.GitHubRepo; extends Object; Helper class to represent a GitHub repository. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static GitHubProject.GitHubRepo; create(String name,; String owner,; String repo). Create a new GitHubProject. boolean; equals(Object obj);  ; String; getName(). Get the name. String; getOwner(). Get the owner. String; getRepo(). Get the repo. String; getUrlString(). Get the URL for the main repo. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getOwner; public String getOwner(); Get the owner. Returns:. getRepo; public String getRepo(); Get the repo. Returns:. getName; public String getName(); Get the name. This can be used to identify the overall project, but is not part of the source code URL. Returns:. getUrlString; public String getUrlString(); Get the URL for the main repo. Returns:. toString; public String toString(). Overrides:; toString in class Object. create; public static GitHubProject.GitHubRepo create(String name,; String owner,; String repo); Create a new GitHubProject. Parameters:; name - a user-friendly name; owner - the owner, used as the first part in the GitHub URL; repo - the repo, used as the second part in the GitHub URL; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.html:534,Deployability,release,releases,534,. GitHubProject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Interface GitHubProject. public interface GitHubProject; Helper class to represent a project hosted on GitHub.; May be used in combination with UpdateChecker to query new releases. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; GitHubProject.GitHubRepo; getRepository(). Get the GitHub repository associated with the project. Method Details. getRepository; GitHubProject.GitHubRepo getRepository(); Get the GitHub repository associated with the project. Returns:. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.html:395,Integrability,interface,interface,395,. GitHubProject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Interface GitHubProject. public interface GitHubProject; Helper class to represent a project hosted on GitHub.; May be used in combination with UpdateChecker to query new releases. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; GitHubProject.GitHubRepo; getRepository(). Get the GitHub repository associated with the project. Method Details. getRepository; GitHubProject.GitHubRepo getRepository(); Get the GitHub repository associated with the project. Returns:. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/package-summary.html:873,Deployability,update,updates,873,. qupath.lib.gui.extensions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.extensions. package qupath.lib.gui.extensions. Interface to define QuPath extensions. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClasses. Class; Description; GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. QuPathExtension. Simple interface for QuPath extensions. Subcommand. A subcommand for the command line interface. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/package-summary.html:956,Deployability,release,release,956,. qupath.lib.gui.extensions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.extensions. package qupath.lib.gui.extensions. Interface to define QuPath extensions. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClasses. Class; Description; GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. QuPathExtension. Simple interface for QuPath extensions. Subcommand. A subcommand for the command line interface. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/package-summary.html:500,Integrability,interface,interface,500,. qupath.lib.gui.extensions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.extensions. package qupath.lib.gui.extensions. Interface to define QuPath extensions. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClasses. Class; Description; GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. QuPathExtension. Simple interface for QuPath extensions. Subcommand. A subcommand for the command line interface. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/package-summary.html:742,Integrability,interface,interface,742,. qupath.lib.gui.extensions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.extensions. package qupath.lib.gui.extensions. Interface to define QuPath extensions. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClasses. Class; Description; GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. QuPathExtension. Simple interface for QuPath extensions. Subcommand. A subcommand for the command line interface. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/package-summary.html:821,Integrability,interface,interface,821,. qupath.lib.gui.extensions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.extensions. package qupath.lib.gui.extensions. Interface to define QuPath extensions. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesInterfacesClasses. Class; Description; GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. QuPathExtension. Simple interface for QuPath extensions. Subcommand. A subcommand for the command line interface. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html:1138,Deployability,install,installExtension,1138," Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Interface QuPathExtension. All Known Implementing Classes:; BioFormatsOptionsExtension, IJExtension, OpenSlideExtension, ProcessingExtension, RichScriptEditorExtension, SvgExtension. public interface QuPathExtension; Simple interface for QuPath extensions.; ; This allows dynamic discovery of new extensions. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. default Version; getQuPathVersion(). Get a QuPath version for which this extension was written. default Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Method Details. installExtension; void installExtension(QuPathGUI qupath); Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; String getName(); A readable name for the extension. Returns:. getDescription; String getDescription(); A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Returns:. getQuPathVersion; default Version getQuPathVersion(); Get a QuPath version for which this extension was written.; ; This is used to provide an explanation if the extension could not be loaded.; It has a default implementation that returns Version.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html:1238,Deployability,install,installExtension,1238," ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Interface QuPathExtension. All Known Implementing Classes:; BioFormatsOptionsExtension, IJExtension, OpenSlideExtension, ProcessingExtension, RichScriptEditorExtension, SvgExtension. public interface QuPathExtension; Simple interface for QuPath extensions.; ; This allows dynamic discovery of new extensions. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. default Version; getQuPathVersion(). Get a QuPath version for which this extension was written. default Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Method Details. installExtension; void installExtension(QuPathGUI qupath); Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; String getName(); A readable name for the extension. Returns:. getDescription; String getDescription(); A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Returns:. getQuPathVersion; default Version getQuPathVersion(); Get a QuPath version for which this extension was written.; ; This is used to provide an explanation if the extension could not be loaded.; It has a default implementation that returns Version.UNKNOWN to allow backwards compatibility, ; however it strongly recommended to return the actual QuPath version against which ; the extensi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html:1261,Deployability,install,installExtension,1261," ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Interface QuPathExtension. All Known Implementing Classes:; BioFormatsOptionsExtension, IJExtension, OpenSlideExtension, ProcessingExtension, RichScriptEditorExtension, SvgExtension. public interface QuPathExtension; Simple interface for QuPath extensions.; ; This allows dynamic discovery of new extensions. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. default Version; getQuPathVersion(). Get a QuPath version for which this extension was written. default Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Method Details. installExtension; void installExtension(QuPathGUI qupath); Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; String getName(); A readable name for the extension. Returns:. getDescription; String getDescription(); A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Returns:. getQuPathVersion; default Version getQuPathVersion(); Get a QuPath version for which this extension was written.; ; This is used to provide an explanation if the extension could not be loaded.; It has a default implementation that returns Version.UNKNOWN to allow backwards compatibility, ; however it strongly recommended to return the actual QuPath version against which ; the extensi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html:555,Integrability,interface,interface,555,". QuPathExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Interface QuPathExtension. All Known Implementing Classes:; BioFormatsOptionsExtension, IJExtension, OpenSlideExtension, ProcessingExtension, RichScriptEditorExtension, SvgExtension. public interface QuPathExtension; Simple interface for QuPath extensions.; ; This allows dynamic discovery of new extensions. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. default Version; getQuPathVersion(). Get a QuPath version for which this extension was written. default Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Method Details. installExtension; void installExtension(QuPathGUI qupath); Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; String getName(); A readable name for the extension. Returns:. getDescription; String getDescription(); A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Returns:. getQuPathVersion; default Version getQuPathVersion(); Get a QuPath version for which this extens",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html:589,Integrability,interface,interface,589,". QuPathExtension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Interface QuPathExtension. All Known Implementing Classes:; BioFormatsOptionsExtension, IJExtension, OpenSlideExtension, ProcessingExtension, RichScriptEditorExtension, SvgExtension. public interface QuPathExtension; Simple interface for QuPath extensions.; ; This allows dynamic discovery of new extensions. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. default Version; getQuPathVersion(). Get a QuPath version for which this extension was written. default Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Method Details. installExtension; void installExtension(QuPathGUI qupath); Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; String getName(); A readable name for the extension. Returns:. getDescription; String getDescription(); A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Returns:. getQuPathVersion; default Version getQuPathVersion(); Get a QuPath version for which this extens",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html:2090,Performance,load,loaded,2090,"e QuPathExtension; Simple interface for QuPath extensions.; ; This allows dynamic discovery of new extensions. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. default Version; getQuPathVersion(). Get a QuPath version for which this extension was written. default Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Method Details. installExtension; void installExtension(QuPathGUI qupath); Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; String getName(); A readable name for the extension. Returns:. getDescription; String getDescription(); A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Returns:. getQuPathVersion; default Version getQuPathVersion(); Get a QuPath version for which this extension was written.; ; This is used to provide an explanation if the extension could not be loaded.; It has a default implementation that returns Version.UNKNOWN to allow backwards compatibility, ; however it strongly recommended to return the actual QuPath version against which ; the extension was developed and tested. Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. getVersion; default Version getVersion(); Get the version of the current extension. Returns:; See Also:. GeneralTools.getPackageVersion(Class). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html:1550,Testability,test,test,1550,"ichScriptEditorExtension, SvgExtension. public interface QuPathExtension; Simple interface for QuPath extensions.; ; This allows dynamic discovery of new extensions. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. default Version; getQuPathVersion(). Get a QuPath version for which this extension was written. default Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Method Details. installExtension; void installExtension(QuPathGUI qupath); Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; String getName(); A readable name for the extension. Returns:. getDescription; String getDescription(); A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Returns:. getQuPathVersion; default Version getQuPathVersion(); Get a QuPath version for which this extension was written.; ; This is used to provide an explanation if the extension could not be loaded.; It has a default implementation that returns Version.UNKNOWN to allow backwards compatibility, ; however it strongly recommended to return the actual QuPath version against which ; the extension was developed and tested. Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. getVersion; default Version getVersion(); Get the version of the current extension. Retur",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html:2312,Testability,test,tested,2312,"e QuPathExtension; Simple interface for QuPath extensions.; ; This allows dynamic discovery of new extensions. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. default Version; getQuPathVersion(). Get a QuPath version for which this extension was written. default Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Method Details. installExtension; void installExtension(QuPathGUI qupath); Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; String getName(); A readable name for the extension. Returns:. getDescription; String getDescription(); A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Returns:. getQuPathVersion; default Version getQuPathVersion(); Get a QuPath version for which this extension was written.; ; This is used to provide an explanation if the extension could not be loaded.; It has a default implementation that returns Version.UNKNOWN to allow backwards compatibility, ; however it strongly recommended to return the actual QuPath version against which ; the extension was developed and tested. Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. getVersion; default Version getVersion(); Get the version of the current extension. Returns:; See Also:. GeneralTools.getPackageVersion(Class). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/QuPathExtension.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/Subcommand.html:438,Integrability,interface,interface,438,". Subcommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Interface Subcommand. All Known Implementing Classes:; ConvertCommand. public interface Subcommand; A subcommand for the command line interface.; This should further implement either Runnable or Callable, ; and be annotated according to the expectations of picocli. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/Subcommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/Subcommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/Subcommand.html:494,Integrability,interface,interface,494,". Subcommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Interface Subcommand. All Known Implementing Classes:; ConvertCommand. public interface Subcommand; A subcommand for the command line interface.; This should further implement either Runnable or Callable, ; and be annotated according to the expectations of picocli. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/Subcommand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/Subcommand.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html:513,Deployability,update,updates,513,". UpdateChecker (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker. public class UpdateChecker; extends Object; Helper class to query for updates using GitHub's web API. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UpdateChecker.ReleaseVersion. Class to represent a release version. Constructor Summary; Constructors. Constructor; Description; UpdateChecker();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; checkForUpdate(). Query the most recent QuPath release on GitHub. static UpdateChecker.ReleaseVersion; checkForUpdate(GitHubProject.GitHubRepo repository). Query the latest release from a GitHub repo. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. UpdateChecker; public UpdateChecker(). Method Details. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(); throws URISyntaxException,; IOException,; InterruptedException; Query the most recent QuPath release on GitHub. Returns:; the latest release version, or null if this could not be determined; Throws:; URISyntaxException; IOException; InterruptedException. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(GitHubProject.GitHubRepo repository); throws URISyntaxException,; IOException,; InterruptedException; Query the latest release from a GitHub repo. Parameters:; repository - ; Returns:; Throws:; URISyntaxException; IOException; InterruptedException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html:688,Deployability,release,release,688,". UpdateChecker (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker. public class UpdateChecker; extends Object; Helper class to query for updates using GitHub's web API. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UpdateChecker.ReleaseVersion. Class to represent a release version. Constructor Summary; Constructors. Constructor; Description; UpdateChecker();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; checkForUpdate(). Query the most recent QuPath release on GitHub. static UpdateChecker.ReleaseVersion; checkForUpdate(GitHubProject.GitHubRepo repository). Query the latest release from a GitHub repo. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. UpdateChecker; public UpdateChecker(). Method Details. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(); throws URISyntaxException,; IOException,; InterruptedException; Query the most recent QuPath release on GitHub. Returns:; the latest release version, or null if this could not be determined; Throws:; URISyntaxException; IOException; InterruptedException. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(GitHubProject.GitHubRepo repository); throws URISyntaxException,; IOException,; InterruptedException; Query the latest release from a GitHub repo. Parameters:; repository - ; Returns:; Throws:; URISyntaxException; IOException; InterruptedException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html:969,Deployability,release,release,969,". UpdateChecker (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker. public class UpdateChecker; extends Object; Helper class to query for updates using GitHub's web API. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UpdateChecker.ReleaseVersion. Class to represent a release version. Constructor Summary; Constructors. Constructor; Description; UpdateChecker();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; checkForUpdate(). Query the most recent QuPath release on GitHub. static UpdateChecker.ReleaseVersion; checkForUpdate(GitHubProject.GitHubRepo repository). Query the latest release from a GitHub repo. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. UpdateChecker; public UpdateChecker(). Method Details. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(); throws URISyntaxException,; IOException,; InterruptedException; Query the most recent QuPath release on GitHub. Returns:; the latest release version, or null if this could not be determined; Throws:; URISyntaxException; IOException; InterruptedException. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(GitHubProject.GitHubRepo repository); throws URISyntaxException,; IOException,; InterruptedException; Query the latest release from a GitHub repo. Parameters:; repository - ; Returns:; Throws:; URISyntaxException; IOException; InterruptedException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html:1095,Deployability,release,release,1095,". UpdateChecker (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker. public class UpdateChecker; extends Object; Helper class to query for updates using GitHub's web API. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UpdateChecker.ReleaseVersion. Class to represent a release version. Constructor Summary; Constructors. Constructor; Description; UpdateChecker();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; checkForUpdate(). Query the most recent QuPath release on GitHub. static UpdateChecker.ReleaseVersion; checkForUpdate(GitHubProject.GitHubRepo repository). Query the latest release from a GitHub repo. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. UpdateChecker; public UpdateChecker(). Method Details. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(); throws URISyntaxException,; IOException,; InterruptedException; Query the most recent QuPath release on GitHub. Returns:; the latest release version, or null if this could not be determined; Throws:; URISyntaxException; IOException; InterruptedException. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(GitHubProject.GitHubRepo repository); throws URISyntaxException,; IOException,; InterruptedException; Query the latest release from a GitHub repo. Parameters:; repository - ; Returns:; Throws:; URISyntaxException; IOException; InterruptedException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html:1508,Deployability,release,release,1508,". UpdateChecker (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker. public class UpdateChecker; extends Object; Helper class to query for updates using GitHub's web API. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UpdateChecker.ReleaseVersion. Class to represent a release version. Constructor Summary; Constructors. Constructor; Description; UpdateChecker();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; checkForUpdate(). Query the most recent QuPath release on GitHub. static UpdateChecker.ReleaseVersion; checkForUpdate(GitHubProject.GitHubRepo repository). Query the latest release from a GitHub repo. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. UpdateChecker; public UpdateChecker(). Method Details. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(); throws URISyntaxException,; IOException,; InterruptedException; Query the most recent QuPath release on GitHub. Returns:; the latest release version, or null if this could not be determined; Throws:; URISyntaxException; IOException; InterruptedException. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(GitHubProject.GitHubRepo repository); throws URISyntaxException,; IOException,; InterruptedException; Query the latest release from a GitHub repo. Parameters:; repository - ; Returns:; Throws:; URISyntaxException; IOException; InterruptedException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html:1548,Deployability,release,release,1548,". UpdateChecker (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker. public class UpdateChecker; extends Object; Helper class to query for updates using GitHub's web API. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UpdateChecker.ReleaseVersion. Class to represent a release version. Constructor Summary; Constructors. Constructor; Description; UpdateChecker();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; checkForUpdate(). Query the most recent QuPath release on GitHub. static UpdateChecker.ReleaseVersion; checkForUpdate(GitHubProject.GitHubRepo repository). Query the latest release from a GitHub repo. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. UpdateChecker; public UpdateChecker(). Method Details. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(); throws URISyntaxException,; IOException,; InterruptedException; Query the most recent QuPath release on GitHub. Returns:; the latest release version, or null if this could not be determined; Throws:; URISyntaxException; IOException; InterruptedException. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(GitHubProject.GitHubRepo repository); throws URISyntaxException,; IOException,; InterruptedException; Query the latest release from a GitHub repo. Parameters:; repository - ; Returns:; Throws:; URISyntaxException; IOException; InterruptedException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html:1863,Deployability,release,release,1863,". UpdateChecker (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker. public class UpdateChecker; extends Object; Helper class to query for updates using GitHub's web API. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UpdateChecker.ReleaseVersion. Class to represent a release version. Constructor Summary; Constructors. Constructor; Description; UpdateChecker();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; checkForUpdate(). Query the most recent QuPath release on GitHub. static UpdateChecker.ReleaseVersion; checkForUpdate(GitHubProject.GitHubRepo repository). Query the latest release from a GitHub repo. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. UpdateChecker; public UpdateChecker(). Method Details. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(); throws URISyntaxException,; IOException,; InterruptedException; Query the most recent QuPath release on GitHub. Returns:; the latest release version, or null if this could not be determined; Throws:; URISyntaxException; IOException; InterruptedException. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(GitHubProject.GitHubRepo repository); throws URISyntaxException,; IOException,; InterruptedException; Query the latest release from a GitHub repo. Parameters:; repository - ; Returns:; Throws:; URISyntaxException; IOException; InterruptedException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html:471,Modifiability,extend,extends,471,". UpdateChecker (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker. public class UpdateChecker; extends Object; Helper class to query for updates using GitHub's web API. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UpdateChecker.ReleaseVersion. Class to represent a release version. Constructor Summary; Constructors. Constructor; Description; UpdateChecker();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; checkForUpdate(). Query the most recent QuPath release on GitHub. static UpdateChecker.ReleaseVersion; checkForUpdate(GitHubProject.GitHubRepo repository). Query the latest release from a GitHub repo. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. UpdateChecker; public UpdateChecker(). Method Details. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(); throws URISyntaxException,; IOException,; InterruptedException; Query the most recent QuPath release on GitHub. Returns:; the latest release version, or null if this could not be determined; Throws:; URISyntaxException; IOException; InterruptedException. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(GitHubProject.GitHubRepo repository); throws URISyntaxException,; IOException,; InterruptedException; Query the latest release from a GitHub repo. Parameters:; repository - ; Returns:; Throws:; URISyntaxException; IOException; InterruptedException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html:1131,Modifiability,inherit,inherited,1131,". UpdateChecker (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker. public class UpdateChecker; extends Object; Helper class to query for updates using GitHub's web API. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UpdateChecker.ReleaseVersion. Class to represent a release version. Constructor Summary; Constructors. Constructor; Description; UpdateChecker();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; checkForUpdate(). Query the most recent QuPath release on GitHub. static UpdateChecker.ReleaseVersion; checkForUpdate(GitHubProject.GitHubRepo repository). Query the latest release from a GitHub repo. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. UpdateChecker; public UpdateChecker(). Method Details. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(); throws URISyntaxException,; IOException,; InterruptedException; Query the most recent QuPath release on GitHub. Returns:; the latest release version, or null if this could not be determined; Throws:; URISyntaxException; IOException; InterruptedException. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(GitHubProject.GitHubRepo repository); throws URISyntaxException,; IOException,; InterruptedException; Query the latest release from a GitHub repo. Parameters:; repository - ; Returns:; Throws:; URISyntaxException; IOException; InterruptedException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html:1205,Security,hash,hashCode,1205,". UpdateChecker (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker. public class UpdateChecker; extends Object; Helper class to query for updates using GitHub's web API. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UpdateChecker.ReleaseVersion. Class to represent a release version. Constructor Summary; Constructors. Constructor; Description; UpdateChecker();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; checkForUpdate(). Query the most recent QuPath release on GitHub. static UpdateChecker.ReleaseVersion; checkForUpdate(GitHubProject.GitHubRepo repository). Query the latest release from a GitHub repo. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. UpdateChecker; public UpdateChecker(). Method Details. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(); throws URISyntaxException,; IOException,; InterruptedException; Query the most recent QuPath release on GitHub. Returns:; the latest release version, or null if this could not be determined; Throws:; URISyntaxException; IOException; InterruptedException. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(GitHubProject.GitHubRepo repository); throws URISyntaxException,; IOException,; InterruptedException; Query the latest release from a GitHub repo. Parameters:; repository - ; Returns:; Throws:; URISyntaxException; IOException; InterruptedException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:660,Availability,avail,available,660,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:995,Availability,down,download,995,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:1042,Availability,avail,available,1042,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:1467,Availability,down,download,1467,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:1514,Availability,avail,available,1514,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:1779,Availability,down,downloading,1779,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:608,Deployability,release,release,608,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:644,Deployability,update,update,644,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:942,Deployability,release,release,942,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:1008,Deployability,release,release,1008,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:1313,Deployability,release,release,1313,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:1480,Deployability,release,release,1480,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:1795,Deployability,release,release,1795,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:571,Modifiability,extend,extends,571,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:1134,Modifiability,inherit,inherited,1134,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:1208,Security,hash,hashCode,1208,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:1701,Usability,user-friendly,user-friendly,1701,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/package-summary.html:467,Integrability,interface,interface,467,. qupath.lib.gui.localization (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.localization. package qupath.lib.gui.localization. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; QuPathResources. Load strings from the default resource bundle. ,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/localization/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html:941,Deployability,update,update,941,". QuPathResources (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.localization; Class QuPathResources. java.lang.Object; qupath.lib.gui.localization.QuPathResources. public class QuPathResources; extends Object; Load strings from the default resource bundle. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle us",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html:990,Deployability,update,updated,990,". QuPathResources (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.localization; Class QuPathResources. java.lang.Object; qupath.lib.gui.localization.QuPathResources. public class QuPathResources; extends Object; Load strings from the default resource bundle. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle us",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html:1834,Deployability,update,update,1834,"ion; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle used for the QuPath user interface.; ; This helps separate user interface strings from the main Java code, so they can be ; maintained more easily - and potentially could be translated into different languages ; if required. Parameters:; key - ; Returns:. getString; public static String getString(String bundle,; String key). hasString; public static boolean hasString(String key). hasString; public static boolean hasString(String bundleName,; String key). hasBundleForLocale; public static boolean hasBundleForLocale(String bundle,; Locale locale). hasDefaultBundleForLocale; public static boolean hasDefaultBundleForLocale(Locale locale). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html:1883,Deployability,update,updated,1883,"ion; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle used for the QuPath user interface.; ; This helps separate user interface strings from the main Java code, so they can be ; maintained more easily - and potentially could be translated into different languages ; if required. Parameters:; key - ; Returns:. getString; public static String getString(String bundle,; String key). hasString; public static boolean hasString(String key). hasString; public static boolean hasString(String bundleName,; String key). hasBundleForLocale; public static boolean hasBundleForLocale(String bundle,; Locale locale). hasDefaultBundleForLocale; public static boolean hasDefaultBundleForLocale(Locale locale). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html:1104,Integrability,interface,interface,1104,"  ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.localization; Class QuPathResources. java.lang.Object; qupath.lib.gui.localization.QuPathResources. public class QuPathResources; extends Object; Load strings from the default resource bundle. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle used for the QuPath user interface.; ; This helps separate user interface st",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html:2024,Integrability,interface,interface,2024,"ion; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle used for the QuPath user interface.; ; This helps separate user interface strings from the main Java code, so they can be ; maintained more easily - and potentially could be translated into different languages ; if required. Parameters:; key - ; Returns:. getString; public static String getString(String bundle,; String key). hasString; public static boolean hasString(String key). hasString; public static boolean hasString(String bundleName,; String key). hasBundleForLocale; public static boolean hasBundleForLocale(String bundle,; Locale locale). hasDefaultBundleForLocale; public static boolean hasDefaultBundleForLocale(Locale locale). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html:2063,Integrability,interface,interface,2063,"ion; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle used for the QuPath user interface.; ; This helps separate user interface strings from the main Java code, so they can be ; maintained more easily - and potentially could be translated into different languages ; if required. Parameters:; key - ; Returns:. getString; public static String getString(String bundle,; String key). hasString; public static boolean hasString(String key). hasString; public static boolean hasString(String bundleName,; String key). hasBundleForLocale; public static boolean hasBundleForLocale(String bundle,; Locale locale). hasDefaultBundleForLocale; public static boolean hasDefaultBundleForLocale(Locale locale). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html:483,Modifiability,extend,extends,483,". QuPathResources (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.localization; Class QuPathResources. java.lang.Object; qupath.lib.gui.localization.QuPathResources. public class QuPathResources; extends Object; Load strings from the default resource bundle. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle us",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html:1415,Modifiability,inherit,inherited,1415,"localization.QuPathResources. public class QuPathResources; extends Object; Load strings from the default resource bundle. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle used for the QuPath user interface.; ; This helps separate user interface strings from the main Java code, so they can be ; maintained more easily - and potentially could be translated into different languages ; if required. Parameters:; key - ; Returns:. getString; public static String getString(String bundle,; String key). hasString; public static boolean hasString(String key). hasString; public static boolean hasString",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html:1489,Security,hash,hashCode,1489,"ct; Load strings from the default resource bundle. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle used for the QuPath user interface.; ; This helps separate user interface strings from the main Java code, so they can be ; maintained more easily - and potentially could be translated into different languages ; if required. Parameters:; key - ; Returns:. getString; public static String getString(String bundle,; String key). hasString; public static boolean hasString(String key). hasString; public static boolean hasString(String bundleName,; String key). hasBundleForLocale; public static bool",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1132,Deployability,update,updated,1132,"ass; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log le",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:4003,Deployability,update,updated,4003,"ic ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. Parameters:; component - the appendable to add. removeTextAppendableFX; public static void removeTextAppendableFX(TextAppendable component); Deregister a TextAppendable so that it will no longer be informed of logging events. Parameters:; component - the appendable to remove. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:453,Modifiability,extend,extends,453,". LogManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2148,Modifiability,inherit,inherited,2148,"plication thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelPrope",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2222,Security,hash,hashCode,2222," root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Retur",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:348,Testability,log,logging,348,". LogManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:408,Testability,log,logging,408,". LogManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:476,Testability,log,logging,476,". LogManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:682,Testability,log,log,682,". LogManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:815,Testability,log,log,815,". LogManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1110,Testability,log,logging,1110,"ass; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log le",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1234,Testability,log,log,1234," | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, noti",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1282,Testability,log,logToFile,1282," ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Propert",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1312,Testability,log,logging,1312,"H. Package qupath.lib.gui.logging; Class LogManager. java.lang.Object; qupath.lib.gui.logging.LogManager. public class LogManager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public stati",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1475,Testability,log,logging,1475,"ager; extends Object; Manage logging levels. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See A",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1608,Testability,log,log,1608,"Property<LogManager.LogLevel>; rootLogLevel. Property representing the current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager().",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1655,Testability,log,log,1655,"current requested root log level. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Re",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1720,Testability,log,log,1720,"Classes. Modifier and Type; Class; Description; static enum ; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1778,Testability,log,log,1778,"; LogManager.LogLevel. Available log levels. Constructor Summary; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.L",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1844,Testability,log,log,1844,"; Constructors. Constructor; Description; LogManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1900,Testability,log,log,1900," Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootL",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:1997,Testability,log,log,1997,"ription; static void; addTextAppendableFX(TextAppendable component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2046,Testability,log,log,2046,"e component). Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set els",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2112,Testability,log,log,2112,"g events and be updated on the JavaFX Application thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProper",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2432,Testability,log,log,2432,"mponent). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public stati",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2605,Testability,log,logToFile,2605," root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace()",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2635,Testability,log,logToFile,2635," root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace()",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2665,Testability,log,logging,2665," root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace()",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2811,Testability,log,log,2811,"RROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void set",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2928,Testability,log,log,2928,"F. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable co",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:3012,Testability,log,log,3012,"tatic void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:3213,Testability,log,log,3213,"ng.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. Parameters:; component - the appendable to add. removeTextAppendableFX; public static void removeTextAppendableFX(TextAppendable com",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:3356,Testability,log,log,3356,"ic ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. Parameters:; component - the appendable to add. removeTextAppendableFX; public static void removeTextAppendableFX(TextAppendable component); Deregister a TextAppendable so that it will no longer be informed of logging events. Parameters:; component - the appendable to remove. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:3428,Testability,log,log,3428,"ic ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. Parameters:; component - the appendable to add. removeTextAppendableFX; public static void removeTextAppendableFX(TextAppendable component); Deregister a TextAppendable so that it will no longer be informed of logging events. Parameters:; component - the appendable to remove. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:3500,Testability,log,log,3500,"ic ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. Parameters:; component - the appendable to add. removeTextAppendableFX; public static void removeTextAppendableFX(TextAppendable component); Deregister a TextAppendable so that it will no longer be informed of logging events. Parameters:; component - the appendable to remove. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:3582,Testability,log,log,3582,"ic ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. Parameters:; component - the appendable to add. removeTextAppendableFX; public static void removeTextAppendableFX(TextAppendable component); Deregister a TextAppendable so that it will no longer be informed of logging events. Parameters:; component - the appendable to remove. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:3665,Testability,log,log,3665,"ic ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. Parameters:; component - the appendable to add. removeTextAppendableFX; public static void removeTextAppendableFX(TextAppendable component); Deregister a TextAppendable so that it will no longer be informed of logging events. Parameters:; component - the appendable to remove. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:3744,Testability,log,log,3744,"ic ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. Parameters:; component - the appendable to add. removeTextAppendableFX; public static void removeTextAppendableFX(TextAppendable component); Deregister a TextAppendable so that it will no longer be informed of logging events. Parameters:; component - the appendable to remove. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:3821,Testability,log,log,3821,"ic ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. Parameters:; component - the appendable to add. removeTextAppendableFX; public static void removeTextAppendableFX(TextAppendable component); Deregister a TextAppendable so that it will no longer be informed of logging events. Parameters:; component - the appendable to remove. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:3981,Testability,log,logging,3981,"ic ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. Parameters:; component - the appendable to add. removeTextAppendableFX; public static void removeTextAppendableFX(TextAppendable component); Deregister a TextAppendable so that it will no longer be informed of logging events. Parameters:; component - the appendable to remove. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:4255,Testability,log,logging,4255,"ic ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Returns:; See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel). setDebug; public static void setDebug(); Set the root log level to DEBUG. setInfo; public static void setInfo(); Set the root log level to DEBUG. setWarn; public static void setWarn(); Set the root log level to LogLevel.WARN. setError; public static void setError(); Set the root log level to LogLevel.ERROR. setTrace; public static void setTrace(); Set the root log level to LogLevel.TRACE. setAll; public static void setAll(); Set the root log level to LogLevel.ALL. setOff; public static void setOff(); Set the root log level to LogLevel.OFF. addTextAppendableFX; public static void addTextAppendableFX(TextAppendable component); Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. Parameters:; component - the appendable to add. removeTextAppendableFX; public static void removeTextAppendableFX(TextAppendable component); Deregister a TextAppendable so that it will no longer be informed of logging events. Parameters:; component - the appendable to remove. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:780,Integrability,interface,interfaces,780,". LogManager.LogLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEB",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:942,Integrability,message,messages,942,". LogManager.LogLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEB",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:983,Integrability,message,messages,983,". LogManager.LogLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEB",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html
